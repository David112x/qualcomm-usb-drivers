// 72b5592106362f46c1c36ef27c2d5fca Generated file. Do not edit.
// File created by WPP compiler version 10.0.15063-Wed Feb 18 19:04:42 2037
// from template km-default.tpl

//
// Define anything which is needed but missing from 
// older versions of the DDK.
//
#include <evntrace.h>
#include <stddef.h>
#include <stdarg.h>
#include <wmistr.h>

#if !defined(TRACE_LEVEL_NONE)
  #define TRACE_LEVEL_NONE        0  
  #define TRACE_LEVEL_CRITICAL    1  
  #define TRACE_LEVEL_FATAL       1  
  #define TRACE_LEVEL_ERROR       2  
  #define TRACE_LEVEL_WARNING     3  
  #define TRACE_LEVEL_INFORMATION 4  
  #define TRACE_LEVEL_VERBOSE     5  
  #define TRACE_LEVEL_RESERVED6   6
  #define TRACE_LEVEL_RESERVED7   7
  #define TRACE_LEVEL_RESERVED8   8
  #define TRACE_LEVEL_RESERVED9   9
#endif
    
#if !defined(TRACE_INFORMATION_CLASS_DEFINE)
typedef enum _TRACE_INFORMATION_CLASS {
    TraceIdClass,
    TraceHandleClass,
    TraceEnableFlagsClass,
    TraceEnableLevelClass,
    GlobalLoggerHandleClass,
    EventLoggerHandleClass,
    AllLoggerHandlesClass,
    TraceHandleByNameClass
} TRACE_INFORMATION_CLASS;
  
#define TRACE_MESSAGE_SEQUENCE               1
#define TRACE_MESSAGE_GUID                   2         
#define TRACE_MESSAGE_COMPONENTID            4           
#define TRACE_MESSAGE_TIMESTAMP              8         
#define TRACE_MESSAGE_PERFORMANCE_TIMESTAMP 16  
#define TRACE_MESSAGE_SYSTEMINFO            32          

#endif // !defined(TRACE_INFORMATION_CLASS_DEFINE)


//
// Advanced tracing APIs (XP and later) will be indirectly called.
//
typedef
LONG
(*PFN_WPPQUERYTRACEINFORMATION) (
    IN  TRACE_INFORMATION_CLASS TraceInformationClass,
    OUT PVOID  TraceInformation,
    IN  ULONG  TraceInformationLength,
    OUT PULONG RequiredLength OPTIONAL,
    IN  PVOID  Buffer OPTIONAL
    );

typedef
LONG
(*PFN_WPPTRACEMESSAGE)(
    IN ULONG64  LoggerHandle,
    IN ULONG   MessageFlags,
    IN LPCGUID MessageGuid,
    IN USHORT  MessageNumber,
    IN ...
    );

// template km-header.tpl

#ifdef  WPP_THIS_FILE
// included twice
#       define  WPP_ALREADY_INCLUDED
#       undef   WPP_THIS_FILE
#endif  // #ifdef WPP_THIS_FILE

#define WPP_THIS_FILE USBMRD_c

#ifndef WPP_ALREADY_INCLUDED

#define WPP_KERNEL_MODE 
#define WPP_THIS_FILE USBMRD_c

#if defined(__cplusplus)
extern "C" {
#endif


typedef enum _WPP_TRACE_API_SUITE {
    WppTraceDisabledSuite,
    WppTraceWin2K,
    WppTraceWinXP,
    WppTraceTraceLH,
    WppTraceServer08,
    WppTraceMaxSuite
} WPP_TRACE_API_SUITE;

_IRQL_requires_same_
typedef
VOID
(NTAPI *PETW_CLASSIC_CALLBACK)(
    _In_ LPCGUID Guid,
    _In_ UCHAR ControlCode,
    _In_ PVOID EnableContext, 
    _In_opt_ PVOID CallbackContext
    );

_IRQL_requires_same_
typedef
NTSTATUS
NTKERNELAPI
(FN_ETWREGISTERCLASSICPROVIDER)(
    _In_ LPCGUID ProviderGuid,
    _In_ ULONG Type,
    _In_ PETW_CLASSIC_CALLBACK EnableCallback,
    _In_opt_ PVOID CallbackContext,
    _Out_ PREGHANDLE RegHandle
    );

typedef FN_ETWREGISTERCLASSICPROVIDER *PFN_ETWREGISTERCLASSICPROVIDER;

typedef
BOOLEAN
NTKERNELAPI
(FN_WPPGETVERSION)(
    _Out_opt_ PULONG MajorVersion,
    _Out_opt_ PULONG MinorVersion,
    _Out_opt_ PULONG BuildNumber,
    _Out_opt_ PUNICODE_STRING CSDVersion
    );

typedef FN_WPPGETVERSION *PFN_WPPGETVERSION;

typedef
NTSTATUS
NTKERNELAPI
(FN_ETWUNREGISTER)(
    _In_ REGHANDLE RegHandle
    );

typedef FN_ETWUNREGISTER *PFN_ETWUNREGISTER;

#pragma prefast(suppress:__WARNING_ENCODE_GLOBAL_FUNCTION_POINTER, "this pointer can not be encoded");
__declspec(selectany) PFN_WPPQUERYTRACEINFORMATION   pfnWppQueryTraceInformation = NULL;

#pragma prefast(suppress:__WARNING_ENCODE_GLOBAL_FUNCTION_POINTER, "this pointer can not be encoded");
__declspec(selectany) PFN_WPPTRACEMESSAGE            pfnWppTraceMessage = NULL;

#pragma prefast(suppress:__WARNING_ENCODE_GLOBAL_FUNCTION_POINTER, "this pointer can not be encoded");
__declspec(selectany) PFN_ETWUNREGISTER              pfnEtwUnregister = NULL;

#pragma prefast(suppress:__WARNING_ENCODE_GLOBAL_FUNCTION_POINTER, "this pointer can not be encoded");
__declspec(selectany) PFN_ETWREGISTERCLASSICPROVIDER pfnEtwRegisterClassicProvider = NULL;

#pragma prefast(suppress:__WARNING_ENCODE_GLOBAL_FUNCTION_POINTER, "this pointer can not be encoded");
__declspec(selectany) PFN_WPPGETVERSION              pfnWppGetVersion = NULL;


__declspec(selectany) WPP_TRACE_API_SUITE            WPPTraceSuite = WppTraceDisabledSuite;


#if !defined(_NTRTL_)
#if !defined(_NTHAL_) 
      // fake RTL_TIME_ZONE_INFORMATION //
    typedef int RTL_TIME_ZONE_INFORMATION;
#endif
#   define _WMIKM_  
#endif
#ifndef WPP_TRACE
#define WPP_TRACE pfnWppTraceMessage
#endif

#if ENABLE_WPP_RECORDER

#define _ENABLE_WPP_RECORDER TRUE

#ifndef WPP_RECORDER
#define WPP_RECORDER WppAutoLogTrace
#endif

#if !defined(WPP_RECORDER_LEVEL_FLAGS_ARGS)
#define WPP_RECORDER_LEVEL_FLAGS_ARGS(lvl, flags) WPP_CONTROL(WPP_BIT_ ## flags).AutoLogContext, lvl, WPP_BIT_ ## flags
#define WPP_RECORDER_LEVEL_FLAGS_FILTER(lvl,flags) (lvl < TRACE_LEVEL_VERBOSE || WPP_CONTROL(WPP_BIT_ ## flags).AutoLogVerboseEnabled)
#endif


#if !defined(WPP_RECORDER_LEVEL_ARGS)
#define WPP_RECORDER_LEVEL_ARGS(lvl) WPP_CONTROL(WPP_BIT_ ## lvl).AutoLogContext, 0, WPP_BIT_ ## lvl
#define WPP_RECORDER_LEVEL_FILTER(lvl) (WPP_CONTROL(WPP_BIT_ ## lvl).AutoLogVerboseEnabled)
#endif

NTSTATUS
WppAutoLogTrace(
    IN PVOID              AutoLogContext,
    IN UCHAR              MessageLevel,
    IN ULONG              MessageFlags,
    IN LPGUID             MessageGuid,
    IN USHORT             MessageNumber,
    IN ...
    );

#else
#define _ENABLE_WPP_RECORDER FALSE
#endif

VOID
WppLoadTracingSupport(
    VOID
    );

NTSTATUS
WppTraceCallback(
    _In_ UCHAR MinorFunction,
    _In_opt_ PVOID DataPath,
    _In_ ULONG BufferLength,
    _Inout_updates_bytes_(BufferLength) PVOID Buffer,
    _Inout_ PVOID Context,
    _Out_ PULONG Size
    );
#if !defined(WPP_TRACE_CONTROL_NULL_GUID)
DEFINE_GUID(WPP_TRACE_CONTROL_NULL_GUID, 0x00000000L, 0x0000, 0x0000, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00);
#endif
#define WPP_TRACE_CONTROL(Function,Buffer,BufferSize,ReturnSize) WppTraceCallback(Function,NULL,BufferSize,Buffer,&WPP_CB[0],&ReturnSize);
    

__inline ULONG64 WppQueryLogger(_In_opt_ PCWSTR LoggerName)
{

    if (WppTraceWinXP == WPPTraceSuite) {

        ULONG ReturnLength ;
        LONG Status ;
        ULONG64 TraceHandle ;
        UNICODE_STRING  Buffer  ;
           
        RtlInitUnicodeString(&Buffer, LoggerName ? LoggerName : L"stdout");

        Status = pfnWppQueryTraceInformation(
                                            TraceHandleByNameClass,
                                            (PVOID)&TraceHandle,
                                            sizeof(TraceHandle),
                                            &ReturnLength,
                                            (PVOID)&Buffer
                                            );
        if (Status != STATUS_SUCCESS) {
           return (ULONG64)0 ;
        }
        
        return TraceHandle ;
    } else {
        return (ULONG64) 0 ;
    }
}

typedef LONG (*WMIENTRY_NEW)(
    _In_ UCHAR MinorFunction,
    _In_opt_ PVOID DataPath,
    _In_ ULONG BufferLength,
    _Inout_updates_bytes_(BufferLength) PVOID Buffer,
    _In_ PVOID Context,
    _Out_ PULONG Size
    );

typedef struct _WPP_TRACE_CONTROL_BLOCK
{
    WMIENTRY_NEW                        Callback;
    LPCGUID                             ControlGuid;
    struct _WPP_TRACE_CONTROL_BLOCK    *Next;
    __int64                             Logger;
    PUNICODE_STRING                     RegistryPath;
    UCHAR                               FlagsLen; 
    UCHAR                               Level; 
    USHORT                              Reserved;
    ULONG                               Flags[1];
    ULONG                               ReservedFlags;
    REGHANDLE                           RegHandle;
#if ENABLE_WPP_RECORDER    
    PVOID                               AutoLogContext;
    USHORT                              AutoLogVerboseEnabled;
    USHORT                              AutoLogAttachToMiniDump;
#endif    
} WPP_TRACE_CONTROL_BLOCK, *PWPP_TRACE_CONTROL_BLOCK;

VOID WppCleanupKm(_When_(_ENABLE_WPP_RECORDER, _In_) _When_(!_ENABLE_WPP_RECORDER, _In_opt_) PDRIVER_OBJECT DriverObject);

#define WPP_CLEANUP(DriverObject) WppCleanupKm((PDRIVER_OBJECT)DriverObject)

#define WPP_IsValidSid RtlValidSid
#define WPP_GetLengthSid RtlLengthSid

//
// Callback routine to be defined by the driver, which will be called from WPP callback
// WPP will pass current valued of : GUID, Logger, Enable, Flags, and Level
// 
// To activate driver must define WPP_PRIVATE_ENABLE_CALLBACK in their code, sample below 
// #define WPP_PRIVATE_ENABLE_CALLBACK MyPrivateCallback;
//
typedef
VOID
(*PFN_WPP_PRIVATE_ENABLE_CALLBACK)(
    _In_ LPCGUID Guid,   
    _In_ __int64 Logger, 
    _In_ BOOLEAN Enable, 
    _In_ ULONG Flags,    
    _In_ UCHAR Level);   

#if defined(__cplusplus)
};
#endif

#endif  // #ifndef WPP_ALREADY_INCLUDED


 
// template control.tpl

//
//     Defines a set of macro that expand control model specified
//     with WPP_CONTROL_GUIDS (example shown below)
//     into an enum of trace levels and required structures that
//     contain the mask of levels, logger handle and some information
//     required for registration.
//

#ifndef WPP_ALREADY_INCLUDED

#define WPP_EVAL(x) x
#define WPP_STR(x)  #x
#define WPP_STRINGIZE(x) WPP_STR(x)
#define WPP_GLUE(a, b)  a ## b
#define WPP_GLUE3(a, b, c)  a ## b ## c
#define WPP_GLUE4(a, b, c, d)  a ## b ## c ## d
#define WPP_XGLUE(a, b) WPP_GLUE(a, b)
#define WPP_XGLUE3(a, b, c) WPP_GLUE3(a, b, c)
#define WPP_XGLUE4(a, b, c, d) WPP_GLUE4(a, b, c, d)

///////////////////////////////////////////////////////////////////////////////////
//
// #define WPP_CONTROL_GUIDS \
//     WPP_DEFINE_CONTROL_GUID(Regular,(81b20fea,73a8,4b62,95bc,354477c97a6f), \
//       WPP_DEFINE_BIT(Error)      \
//       WPP_DEFINE_BIT(Unusual)    \
//       WPP_DEFINE_BIT(Noise)      \
//    )        \
//    WPP_DEFINE_CONTROL_GUID(HiFreq,(91b20fea,73a8,4b62,95bc,354477c97a6f), \
//       WPP_DEFINE_BIT(Entry)      \
//       WPP_DEFINE_BIT(Exit)       \
//       WPP_DEFINE_BIT(ApiCalls)   \
//       WPP_DEFINE_BIT(RandomJunk) \
//       WPP_DEFINE_BIT(LovePoem)   \
//    )        

#if defined(__cplusplus)
extern "C" {
#endif

#if !defined(WPP_CONTROL_GUIDS)  && defined(WPP_ETW_PROVIDER)
#define WPP_NO_CONTROL_GUIDS
#endif

#if !defined(WPP_NO_CONTROL_GUIDS)

#if defined(WPP_DEFAULT_CONTROL_GUID)
#  if defined(WPP_CONTROL_GUIDS)
#     pragma message(__FILE__ " : error : WPP_DEFAULT_CONTROL_GUID cannot be used together with WPP_CONTROL_GUIDS")
#     stop
#  else
#     define WPP_CONTROL_GUIDS \
         WPP_DEFINE_CONTROL_GUID(Default,(WPP_DEFAULT_CONTROL_GUID), \
         WPP_DEFINE_BIT(Error)   \
         WPP_DEFINE_BIT(Unusual) \
         WPP_DEFINE_BIT(Noise)   \
      )
#  endif      
#endif

#if !defined(WPP_CONTROL_GUIDS)
#  pragma message(__FILE__ " : error : Please define control model via WPP_CONTROL_GUIDS or WPP_DEFAULT_CONTROL_GUID macros")
#  pragma message(__FILE__ " : error : don't forget to call WPP_INIT_TRACING and WPP_CLEANUP in your main, DriverEntry or DllInit")
#  pragma message(__FILE__ " : error : see tracewpp.doc for further information")
stop.
#endif
// a set of macro to convert a guid in a form x(81b20fea,73a8,4b62,95bc,354477c97a6f)
// into either a a struct or text string

#define _WPPW(x) WPP_GLUE(L, x)

#define WPP_GUID_NORM(l,w1,w2,w3,ll) l ## w1 ## w2 ## w3 ## ll
#define WPP_GUID_TEXT(l,w1,w2,w3,ll) #l "-" #w1 "-" #w2 "-" #w3 "-" #ll
#define WPP_GUID_WTEXT(l,w1,w2,w3,ll) _WPPW(#l) L"-" _WPPW(#w1) L"-" _WPPW(#w2) L"-" _WPPW(#w3) L"-" _WPPW(#ll)
#define WPP_EXTRACT_BYTE(val,n) (((ULONGLONG)(0x ## val) >> (8 * n)) & 0xFF)
#define WPP_GUID_STRUCT(l,w1,w2,w3,ll) {0x ## l, 0x ## w1, 0x ## w2,\
     {WPP_EXTRACT_BYTE(w3, 1), WPP_EXTRACT_BYTE(w3, 0),\
      WPP_EXTRACT_BYTE(ll, 5), WPP_EXTRACT_BYTE(ll, 4),\
      WPP_EXTRACT_BYTE(ll, 3), WPP_EXTRACT_BYTE(ll, 2),\
      WPP_EXTRACT_BYTE(ll, 1), WPP_EXTRACT_BYTE(ll, 0)} }

#ifndef WPP_FORCEINLINE
#if !defined(WPP_OLDCC)
#define WPP_FORCEINLINE __forceinline
#else
#define WPP_FORCEINLINE __inline
#endif
#endif


// define an enum of control block names
//////
#define WPP_DEFINE_CONTROL_GUID(Name,Guid,Bits) WPP_XGLUE(WPP_CTL_, WPP_EVAL(Name)),
enum WPP_CTL_NAMES { WPP_CONTROL_GUIDS WPP_LAST_CTL};
#undef WPP_DEFINE_CONTROL_GUID

// define control guids
//////
#define WPP_DEFINE_CONTROL_GUID(Name,Guid,Bits) \
extern __declspec(selectany) const GUID WPP_XGLUE4(WPP_, ThisDir, _CTLGUID_, WPP_EVAL(Name)) = WPP_GUID_STRUCT Guid;
WPP_CONTROL_GUIDS
#undef WPP_DEFINE_CONTROL_GUID

// define enums of individual bits
/////
#define WPP_DEFINE_CONTROL_GUID(Name,Guid,Bits) \
    WPP_XGLUE(WPP_BLOCK_START_, WPP_EVAL(Name)) = WPP_XGLUE(WPP_CTL_, WPP_EVAL(Name)) * 0x10000, Bits WPP_XGLUE(WPP_BLOCK_END_, WPP_EVAL(Name)), 
# define WPP_DEFINE_BIT(Name) WPP_BIT_ ## Name,
enum WPP_DEFINE_BIT_NAMES { WPP_CONTROL_GUIDS };
# undef WPP_DEFINE_BIT
#undef WPP_DEFINE_CONTROL_GUID

#define WPP_MASK(CTL)    (1 << ( ((CTL)-1) & 31 ))
#define WPP_FLAG_NO(CTL) ( (0xFFFF & ((CTL)-1) ) / 32)
#define WPP_CTRL_NO(CTL) ((CTL) >> 16)

// calculate how many DWORDs we need to get the required number of bits
// upper estimate. Sometimes will be off by one
#define WPP_DEFINE_CONTROL_GUID(Name,Guid,Bits) | WPP_XGLUE(WPP_BLOCK_END_, WPP_EVAL(Name))
enum _WPP_FLAG_LEN_ENUM { WPP_FLAG_LEN = 1 | ((0 WPP_CONTROL_GUIDS) & 0xFFFF) / 32 };
#undef WPP_DEFINE_CONTROL_GUID

//
// Check that maximum number of flags does not exceed 32
//
#ifndef C_ASSERT
#define C_ASSERT(e) typedef char __C_ASSERT__[(e)?1:-1]
#endif

#define MAX_NUMBER_OF_ETW_FLAGS 34 // 32 flags plus 2 separators
#define WPP_DEFINE_CONTROL_GUID(Name,Guid,Bits) && ((WPP_XGLUE(WPP_BLOCK_END_, WPP_EVAL(Name) & 0xFFFF)) < MAX_NUMBER_OF_ETW_FLAGS)
enum _WPP_FLAG_LEN_ENUM_MAX { WPP_MAX_FLAG_LEN_CHECK = (1 WPP_CONTROL_GUIDS) }; 
#undef WPP_DEFINE_CONTROL_GUID

#ifndef WPP_CB
#  define WPP_CB      WPP_GLOBAL_Control
#endif
#ifndef WPP_CB_TYPE
#define WPP_CB_TYPE WPP_PROJECT_CONTROL_BLOCK
#endif

typedef union {
    WPP_TRACE_CONTROL_BLOCK Control;      
    UCHAR ReserveSpace[ sizeof(WPP_TRACE_CONTROL_BLOCK) + sizeof(ULONG) * (WPP_FLAG_LEN - 1) ];
} WPP_CB_TYPE ;

 
extern __declspec(selectany) WPP_CB_TYPE *WPP_CB = (WPP_CB_TYPE*)&WPP_CB;

#define WPP_CONTROL(CTL) (WPP_CB[WPP_CTRL_NO(CTL)].Control)

#ifndef WPP_USE_TRACE_LEVELS
// For historical reasons the use of LEVEL could imply flags, this was a bad choice but very difficult
// to undo.
#if !defined(WPP_LEVEL_LOGGER)
#  define WPP_LEVEL_LOGGER(CTL)  (WPP_CONTROL(WPP_BIT_ ## CTL).Logger), 
#endif

#if !defined(WPP_LEVEL_ENABLED)
#  define WPP_LEVEL_ENABLED(CTL) (WPP_CONTROL(WPP_BIT_ ## CTL).Flags[WPP_FLAG_NO(WPP_BIT_ ## CTL)] & WPP_MASK(WPP_BIT_ ## CTL)) 
#endif
#else  //  #ifndef WPP_USE_TRACE_LEVELS
#if !defined(WPP_LEVEL_LOGGER)
#define WPP_LEVEL_LOGGER(lvl) (WPP_CONTROL(WPP_BIT_ ## DUMMY).Logger),
#endif

#if !defined(WPP_LEVEL_ENABLED)
#define WPP_LEVEL_ENABLED(lvl) (WPP_CONTROL(WPP_BIT_ ## DUMMY).Level >= lvl)
#endif
#endif  // #ifndef WPP_USE_TRACE_LEVELS

#if !defined(WPP_FLAG_LOGGER)
#  define WPP_FLAG_LOGGER(CTL)  (WPP_CONTROL(WPP_BIT_ ## CTL).Logger), 
#endif


#if !defined(WPP_FLAG_ENABLED)
#  define WPP_FLAG_ENABLED(CTL) (WPP_CONTROL(WPP_BIT_ ## CTL).Flags[WPP_FLAG_NO(WPP_BIT_ ## CTL)] & WPP_MASK(WPP_BIT_ ## CTL)) 
#endif


#ifndef WPP_ENABLED
#  define WPP_ENABLED() 1
#endif
#ifndef WPP_LOGGER
#  define WPP_LOGGER() (WPP_CB[0].Control.Logger),
#endif

#endif // WPP_NO_CONTROL_GUIDS

#if !defined(WPP_GET_LOGGER)
#  define WPP_GET_LOGGER Logger
#endif

#if !defined(WPP_LOGGER_ARG)
#  define WPP_LOGGER_ARG TRACEHANDLE Logger,
#endif

#if defined(__cplusplus)
};
#endif

#endif  // #ifndef WPP_ALREADY_INCLUDED


#if ENABLE_WPP_RECORDER
// template tracemacro-ifr.tpl

// This template expects:
//      WPP_THIS_FILE defined (see header.tpl)
//      WPP_LOGGER_ARG  defined
//      WPP_GET_LOGGER  defined
//      WPP_ENABLED() defined

#if defined(__cplusplus)
extern "C" {
#endif

#ifndef WPP_ALREADY_INCLUDED

#ifndef NO_CHECK_FOR_NULL_STRING
#ifndef WPP_CHECK_FOR_NULL_STRING
#define WPP_CHECK_FOR_NULL_STRING 1
#endif
#endif

#define WPP_EVAL(_value_) _value_
#define WPP_(Id) WPP_EVAL(WPP_) ## WPP_EVAL(Id) ## WPP_EVAL(_) ## WPP_EVAL(WPP_THIS_FILE) ## WPP_EVAL(__LINE__)

#if !defined(WPP_INLINE)
#define WPP_INLINE DECLSPEC_NOINLINE __inline
#endif

#else   // #ifndef WPP_ALREADY_INCLUDED

#undef WPP_LOCAL_TraceGuids

#endif  // #ifndef WPP_ALREADY_INCLUDED

#if !defined(WPP_NO_ANNOTATIONS)

#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBMRD_c1008
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBMRD_c1022
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBMRD_c1037
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBMRD_c1060
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBMRD_c1082
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBMRD_c1090
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBMRD_c1105
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBMRD_c1128
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBMRD_c1182
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBMRD_c1193
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBMRD_c1218
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBMRD_c1253
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBMRD_c1298
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBMRD_c1354
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBMRD_c1425
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBMRD_c1439
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBMRD_c145
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBMRD_c1456
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBMRD_c1466
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBMRD_c1541
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBMRD_c1551
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBMRD_c1582
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBMRD_c1622
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBMRD_c1649
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBMRD_c1697
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBMRD_c1715
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBMRD_c1739
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBMRD_c174
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBMRD_c1744
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBMRD_c1763
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBMRD_c1772
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBMRD_c1793
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBMRD_c1811
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBMRD_c1851
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBMRD_c186
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBMRD_c1862
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBMRD_c1889
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBMRD_c1891
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBMRD_c1907
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBMRD_c1933
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBMRD_c201
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBMRD_c2043
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBMRD_c2060
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBMRD_c2064
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBMRD_c2067
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBMRD_c2132
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBMRD_c2146
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBMRD_c2170
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBMRD_c2194
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBMRD_c2218
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBMRD_c2242
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBMRD_c2265
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBMRD_c2279
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBMRD_c2306
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBMRD_c2348
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBMRD_c2362
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBMRD_c2382
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBMRD_c243
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBMRD_c2500
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBMRD_c2524
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBMRD_c2541
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBMRD_c2556
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBMRD_c2614
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBMRD_c2639
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBMRD_c2698
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBMRD_c271
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBMRD_c2711
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBMRD_c2725
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBMRD_c2751
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBMRD_c2762
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBMRD_c2841
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBMRD_c2849
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBMRD_c2861
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBMRD_c2920
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBMRD_c2937
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBMRD_c2948
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBMRD_c2966
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBMRD_c2994
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBMRD_c301
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBMRD_c3023
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBMRD_c3024
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBMRD_c3035
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBMRD_c325
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBMRD_c352
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBMRD_c398
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBMRD_c410
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBMRD_c423
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBMRD_c462
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBMRD_c491
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBMRD_c520
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBMRD_c544
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBMRD_c561
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBMRD_c575
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBMRD_c585
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBMRD_c623
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBMRD_c652
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBMRD_c68
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBMRD_c702
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBMRD_c722
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBMRD_c751
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBMRD_c831
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBMRD_c845
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBMRD_c860
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBMRD_c871
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBMRD_c893
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBMRD_c924
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBMRD_c934
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBMRD_c947
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBMRD_c956
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBMRD_c995
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBMRD_c1008_FINAL(P, File, Name, ...)    __annotation(L ## P, L"c545fe3d-9b98-385c-84e8-450beb16428c ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 45 \"%0<%10!s!> ML2 ERR: COMPLETION_EVENT\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_CRITICAL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBMRD_c1008_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 45 \"%0<%10!s!> ML2 ERR: COMPLETION_EVENT\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_CRITICAL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBMRD_c1008
    #define WPP_ANNOTATE_USBMRD_c1008 WPP_ANNOTATE_USBMRD_c1008_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBMRD_c1008 WPP_ANNOTATE_USBMRD_c1008_FINAL("TMF:", "USBMRD.c", "USBMRD_c1008", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBMRD_c1022_FINAL(P, File, Name, ...)    __annotation(L ## P, L"c545fe3d-9b98-385c-84e8-450beb16428c ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 46 \"%0<%10!s!> ML2 R kicked, act=%11!d!\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBMRD_c1022_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 46 \"%0<%10!s!> ML2 R kicked, act=%11!d!\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBMRD_c1022
    #define WPP_ANNOTATE_USBMRD_c1022 WPP_ANNOTATE_USBMRD_c1022_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBMRD_c1022 WPP_ANNOTATE_USBMRD_c1022_FINAL("TMF:", "USBMRD.c", "USBMRD_c1022", L"{", L"pDevExt->PortName, ItemString -- 10" , L"pDevExt->bL2ReadActive, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBMRD_c1037_FINAL(P, File, Name, ...)    __annotation(L ## P, L"c545fe3d-9b98-385c-84e8-450beb16428c ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 47 \"%0<%10!s!> L2_CANCEL Rml[0]=%11!u!\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBMRD_c1037_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 47 \"%0<%10!s!> L2_CANCEL Rml[0]=%11!u!\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBMRD_c1037
    #define WPP_ANNOTATE_USBMRD_c1037 WPP_ANNOTATE_USBMRD_c1037_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBMRD_c1037 WPP_ANNOTATE_USBMRD_c1037_FINAL("TMF:", "USBMRD.c", "USBMRD_c1037", L"{", L"pDevExt->PortName, ItemString -- 10" , L"pDevExt->Sts.lRmlCount[0], ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBMRD_c1060_FINAL(P, File, Name, ...)    __annotation(L ## P, L"c545fe3d-9b98-385c-84e8-450beb16428c ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 48 \"%0<%10!s!> L2 CANCEL - IRP[%11!u!]\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_INFO", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBMRD_c1060_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 48 \"%0<%10!s!> L2 CANCEL - IRP[%11!u!]\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_INFO", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBMRD_c1060
    #define WPP_ANNOTATE_USBMRD_c1060 WPP_ANNOTATE_USBMRD_c1060_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBMRD_c1060 WPP_ANNOTATE_USBMRD_c1060_FINAL("TMF:", "USBMRD.c", "USBMRD_c1060", L"{", L"pDevExt->PortName, ItemString -- 10" , L"pActiveL2Buf->Index, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBMRD_c1082_FINAL(P, File, Name, ...)    __annotation(L ## P, L"c545fe3d-9b98-385c-84e8-450beb16428c ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 49 \"%0<%10!s!> L2_STOP_EVENT\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBMRD_c1082_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 49 \"%0<%10!s!> L2_STOP_EVENT\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBMRD_c1082
    #define WPP_ANNOTATE_USBMRD_c1082 WPP_ANNOTATE_USBMRD_c1082_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBMRD_c1082 WPP_ANNOTATE_USBMRD_c1082_FINAL("TMF:", "USBMRD.c", "USBMRD_c1082", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBMRD_c1090_FINAL(P, File, Name, ...)    __annotation(L ## P, L"c545fe3d-9b98-385c-84e8-450beb16428c ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 50 \"%0<%10!s!> L2_STOP_EVENT: superceded by CANCELLATION\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBMRD_c1090_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 50 \"%0<%10!s!> L2_STOP_EVENT: superceded by CANCELLATION\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBMRD_c1090
    #define WPP_ANNOTATE_USBMRD_c1090 WPP_ANNOTATE_USBMRD_c1090_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBMRD_c1090 WPP_ANNOTATE_USBMRD_c1090_FINAL("TMF:", "USBMRD.c", "USBMRD_c1090", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBMRD_c1105_FINAL(P, File, Name, ...)    __annotation(L ## P, L"c545fe3d-9b98-385c-84e8-450beb16428c ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 51 \"%0<%10!s!> L2 STOP: Cancel Irp[%11!u!]\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_INFO", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBMRD_c1105_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 51 \"%0<%10!s!> L2 STOP: Cancel Irp[%11!u!]\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_INFO", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBMRD_c1105
    #define WPP_ANNOTATE_USBMRD_c1105 WPP_ANNOTATE_USBMRD_c1105_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBMRD_c1105 WPP_ANNOTATE_USBMRD_c1105_FINAL("TMF:", "USBMRD.c", "USBMRD_c1105", L"{", L"pDevExt->PortName, ItemString -- 10" , L"pActiveL2Buf->Index, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBMRD_c1128_FINAL(P, File, Name, ...)    __annotation(L ## P, L"c545fe3d-9b98-385c-84e8-450beb16428c ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 52 \"%0<%10!s!> L2_RESUME_EVENT rm %11!d! ss %12!d!\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBMRD_c1128_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 52 \"%0<%10!s!> L2_RESUME_EVENT rm %11!d! ss %12!d!\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBMRD_c1128
    #define WPP_ANNOTATE_USBMRD_c1128 WPP_ANNOTATE_USBMRD_c1128_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemLong -- 12" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBMRD_c1128 WPP_ANNOTATE_USBMRD_c1128_FINAL("TMF:", "USBMRD.c", "USBMRD_c1128", L"{", L"pDevExt->PortName, ItemString -- 10" , L"pDevExt->bDeviceRemoved, ItemLong -- 11" , L"pDevExt->PowerSuspended, ItemLong -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBMRD_c1182_FINAL(P, File, Name, ...)    __annotation(L ## P, L"c545fe3d-9b98-385c-84e8-450beb16428c ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 53 \"%0<%10!s!> ML2 err: comp Q empty - %11!u!\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBMRD_c1182_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 53 \"%0<%10!s!> ML2 err: comp Q empty - %11!u!\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBMRD_c1182
    #define WPP_ANNOTATE_USBMRD_c1182 WPP_ANNOTATE_USBMRD_c1182_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBMRD_c1182 WPP_ANNOTATE_USBMRD_c1182_FINAL("TMF:", "USBMRD.c", "USBMRD_c1182", L"{", L"pDevExt->PortName, ItemString -- 10" , L"ntStatus, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBMRD_c1193_FINAL(P, File, Name, ...)    __annotation(L ## P, L"c545fe3d-9b98-385c-84e8-450beb16428c ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 54 \"%0<%10!s!> L2 completion [%11!u!]=wait rtn[%12!u!]\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBMRD_c1193_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 54 \"%0<%10!s!> L2 completion [%11!u!]=wait rtn[%12!u!]\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBMRD_c1193
    #define WPP_ANNOTATE_USBMRD_c1193 WPP_ANNOTATE_USBMRD_c1193_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemLong -- 12" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBMRD_c1193 WPP_ANNOTATE_USBMRD_c1193_FINAL("TMF:", "USBMRD.c", "USBMRD_c1193", L"{", L"pDevExt->PortName, ItemString -- 10" , L"l2BufIdx, ItemLong -- 11" , L"(ntStatus-L2_READ_EVENT_COUNT), ItemLong -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBMRD_c1218_FINAL(P, File, Name, ...)    __annotation(L ## P, L"c545fe3d-9b98-385c-84e8-450beb16428c ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 55 \"%0<%10!s!> L2R[%11!d!]=%12!ld!B\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBMRD_c1218_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 55 \"%0<%10!s!> L2R[%11!d!]=%12!ld!B\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBMRD_c1218
    #define WPP_ANNOTATE_USBMRD_c1218 WPP_ANNOTATE_USBMRD_c1218_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemLong -- 12" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBMRD_c1218 WPP_ANNOTATE_USBMRD_c1218_FINAL("TMF:", "USBMRD.c", "USBMRD_c1218", L"{", L"pDevExt->PortName, ItemString -- 10" , L"l2BufIdx, ItemLong -- 11" , L"pUrb->UrbBulkOrInterruptTransfer.TransferBufferLength, ItemLong -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBMRD_c1253_FINAL(P, File, Name, ...)    __annotation(L ## P, L"c545fe3d-9b98-385c-84e8-450beb16428c ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 56 \"%0<%10!s!> L2 RX failed - 0x%11!x!\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_CRITICAL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBMRD_c1253_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 56 \"%0<%10!s!> L2 RX failed - 0x%11!x!\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_CRITICAL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBMRD_c1253
    #define WPP_ANNOTATE_USBMRD_c1253 WPP_ANNOTATE_USBMRD_c1253_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBMRD_c1253 WPP_ANNOTATE_USBMRD_c1253_FINAL("TMF:", "USBMRD.c", "USBMRD_c1253", L"{", L"pDevExt->PortName, ItemString -- 10" , L"pIrp->IoStatus.Status, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBMRD_c1298_FINAL(P, File, Name, ...)    __annotation(L ## P, L"c545fe3d-9b98-385c-84e8-450beb16428c ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 57 \"%0<%10!s!> L2 cont failure, stopped...\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_CRITICAL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBMRD_c1298_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 57 \"%0<%10!s!> L2 cont failure, stopped...\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_CRITICAL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBMRD_c1298
    #define WPP_ANNOTATE_USBMRD_c1298 WPP_ANNOTATE_USBMRD_c1298_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBMRD_c1298 WPP_ANNOTATE_USBMRD_c1298_FINAL("TMF:", "USBMRD.c", "USBMRD_c1298", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBMRD_c1354_FINAL(P, File, Name, ...)    __annotation(L ## P, L"c545fe3d-9b98-385c-84e8-450beb16428c ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 58 \"%0<%10!s!> Sig L2 STOP\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBMRD_c1354_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 58 \"%0<%10!s!> Sig L2 STOP\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBMRD_c1354
    #define WPP_ANNOTATE_USBMRD_c1354 WPP_ANNOTATE_USBMRD_c1354_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBMRD_c1354 WPP_ANNOTATE_USBMRD_c1354_FINAL("TMF:", "USBMRD.c", "USBMRD_c1354", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBMRD_c1425_FINAL(P, File, Name, ...)    __annotation(L ## P, L"c545fe3d-9b98-385c-84e8-450beb16428c ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 59 \"%0<%10!s!> L2: OUT 0x%11!x! RmlCount[0]=%12!u!\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBMRD_c1425_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 59 \"%0<%10!s!> L2: OUT 0x%11!x! RmlCount[0]=%12!u!\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBMRD_c1425
    #define WPP_ANNOTATE_USBMRD_c1425 WPP_ANNOTATE_USBMRD_c1425_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemLong -- 12" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBMRD_c1425 WPP_ANNOTATE_USBMRD_c1425_FINAL("TMF:", "USBMRD.c", "USBMRD_c1425", L"{", L"pDevExt->PortName, ItemString -- 10" , L"ntStatus, ItemLong -- 11" , L"pDevExt->Sts.lRmlCount[0], ItemLong -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBMRD_c1439_FINAL(P, File, Name, ...)    __annotation(L ## P, L"c545fe3d-9b98-385c-84e8-450beb16428c ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 60 \"%0<%10!s!> -->USBMRD_ResetL2Buffers: Rml[0]=%11!u!\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBMRD_c1439_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 60 \"%0<%10!s!> -->USBMRD_ResetL2Buffers: Rml[0]=%11!u!\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBMRD_c1439
    #define WPP_ANNOTATE_USBMRD_c1439 WPP_ANNOTATE_USBMRD_c1439_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBMRD_c1439 WPP_ANNOTATE_USBMRD_c1439_FINAL("TMF:", "USBMRD.c", "USBMRD_c1439", L"{", L"pDevExt->PortName, ItemString -- 10" , L"pDevExt->Sts.lRmlCount[0], ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBMRD_c145_FINAL(P, File, Name, ...)    __annotation(L ## P, L"c545fe3d-9b98-385c-84e8-450beb16428c ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 11 \"%0<%10!s!> L1: L2 th failure\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_CRITICAL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBMRD_c145_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 11 \"%0<%10!s!> L1: L2 th failure\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_CRITICAL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBMRD_c145
    #define WPP_ANNOTATE_USBMRD_c145 WPP_ANNOTATE_USBMRD_c145_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBMRD_c145 WPP_ANNOTATE_USBMRD_c145_FINAL("TMF:", "USBMRD.c", "USBMRD_c145", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBMRD_c1456_FINAL(P, File, Name, ...)    __annotation(L ## P, L"c545fe3d-9b98-385c-84e8-450beb16428c ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 61 \"%0<%10!s!> USBMRD_ResetL2Buffers: ReuseIRP Index[%11!d!], IRP %12!p!\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBMRD_c1456_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 61 \"%0<%10!s!> USBMRD_ResetL2Buffers: ReuseIRP Index[%11!d!], IRP %12!p!\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBMRD_c1456
    #define WPP_ANNOTATE_USBMRD_c1456 WPP_ANNOTATE_USBMRD_c1456_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemPtr -- 12" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBMRD_c1456 WPP_ANNOTATE_USBMRD_c1456_FINAL("TMF:", "USBMRD.c", "USBMRD_c1456", L"{", L"pDevExt->PortName, ItemString -- 10" , L"i, ItemLong -- 11" , L"pDevExt->pL2ReadBuffer[i].Irp, ItemPtr -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBMRD_c1466_FINAL(P, File, Name, ...)    __annotation(L ## P, L"c545fe3d-9b98-385c-84e8-450beb16428c ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 62 \"%0<%10!s!> <--USBMRD_ResetL2Buffers: Rml[0]=%11!u!\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBMRD_c1466_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 62 \"%0<%10!s!> <--USBMRD_ResetL2Buffers: Rml[0]=%11!u!\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBMRD_c1466
    #define WPP_ANNOTATE_USBMRD_c1466 WPP_ANNOTATE_USBMRD_c1466_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBMRD_c1466 WPP_ANNOTATE_USBMRD_c1466_FINAL("TMF:", "USBMRD.c", "USBMRD_c1466", L"{", L"pDevExt->PortName, ItemString -- 10" , L"pDevExt->Sts.lRmlCount[0], ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBMRD_c1541_FINAL(P, File, Name, ...)    __annotation(L ## P, L"c545fe3d-9b98-385c-84e8-450beb16428c ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 63 \"%0<%10!s!> -->USBMRD_FillReadRequest[%11!d!] %12!d!\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBMRD_c1541_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 63 \"%0<%10!s!> -->USBMRD_FillReadRequest[%11!d!] %12!d!\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBMRD_c1541
    #define WPP_ANNOTATE_USBMRD_c1541 WPP_ANNOTATE_USBMRD_c1541_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemLong -- 12" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBMRD_c1541 WPP_ANNOTATE_USBMRD_c1541_FINAL("TMF:", "USBMRD.c", "USBMRD_c1541", L"{", L"pDevExt->PortName, ItemString -- 10" , L"pDevExt->L2FillIdx, ItemLong -- 11" , L"Cookie, ItemLong -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBMRD_c1551_FINAL(P, File, Name, ...)    __annotation(L ## P, L"c545fe3d-9b98-385c-84e8-450beb16428c ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 64 \"%0<%10!s!> L1: no buf for filling the index is %11!d! and state %12!x!\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBMRD_c1551_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 64 \"%0<%10!s!> L1: no buf for filling the index is %11!d! and state %12!x!\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBMRD_c1551
    #define WPP_ANNOTATE_USBMRD_c1551 WPP_ANNOTATE_USBMRD_c1551_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemLong -- 12" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBMRD_c1551 WPP_ANNOTATE_USBMRD_c1551_FINAL("TMF:", "USBMRD.c", "USBMRD_c1551", L"{", L"pDevExt->PortName, ItemString -- 10" , L"currentFillIdx, ItemLong -- 11" , L"pDevExt->pL2ReadBuffer[currentFillIdx].State, ItemLong -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBMRD_c1582_FINAL(P, File, Name, ...)    __annotation(L ## P, L"c545fe3d-9b98-385c-84e8-450beb16428c ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 65 \"%0<%10!s!> L1_Fill: got 0-len pkt, recycle L2\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBMRD_c1582_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 65 \"%0<%10!s!> L1_Fill: got 0-len pkt, recycle L2\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBMRD_c1582
    #define WPP_ANNOTATE_USBMRD_c1582 WPP_ANNOTATE_USBMRD_c1582_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBMRD_c1582 WPP_ANNOTATE_USBMRD_c1582_FINAL("TMF:", "USBMRD.c", "USBMRD_c1582", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBMRD_c1622_FINAL(P, File, Name, ...)    __annotation(L ## P, L"c545fe3d-9b98-385c-84e8-450beb16428c ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 66 \"%0<%10!s!> L1_Fill: pkt too big %11!u!B/%12!d!, recycle L2\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_CRITICAL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBMRD_c1622_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 66 \"%0<%10!s!> L1_Fill: pkt too big %11!u!B/%12!d!, recycle L2\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_CRITICAL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBMRD_c1622
    #define WPP_ANNOTATE_USBMRD_c1622 WPP_ANNOTATE_USBMRD_c1622_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemLong -- 12" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBMRD_c1622 WPP_ANNOTATE_USBMRD_c1622_FINAL("TMF:", "USBMRD.c", "USBMRD_c1622", L"{", L"pDevExt->PortName, ItemString -- 10" , L"pDevExt->pL2ReadBuffer[currentFillIdx].Length, ItemLong -- 11" , L"pDevExt->MTU, ItemLong -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBMRD_c1649_FINAL(P, File, Name, ...)    __annotation(L ## P, L"c545fe3d-9b98-385c-84e8-450beb16428c ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 67 \"%0<%10!s!> L1_Fill: oversized pkt %11!u!B/%12!d!, recycle L2\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_CRITICAL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBMRD_c1649_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 67 \"%0<%10!s!> L1_Fill: oversized pkt %11!u!B/%12!d!, recycle L2\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_CRITICAL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBMRD_c1649
    #define WPP_ANNOTATE_USBMRD_c1649 WPP_ANNOTATE_USBMRD_c1649_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemLong -- 12" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBMRD_c1649 WPP_ANNOTATE_USBMRD_c1649_FINAL("TMF:", "USBMRD.c", "USBMRD_c1649", L"{", L"pDevExt->PortName, ItemString -- 10" , L"pDevExt->pL2ReadBuffer[currentFillIdx].Length, ItemLong -- 11" , L"ETH_MAX_DATA_SIZE, ItemLong -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBMRD_c1697_FINAL(P, File, Name, ...)    __annotation(L ## P, L"c545fe3d-9b98-385c-84e8-450beb16428c ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 68 \"%0<%10!s!> L1: L2 buf available, kick L2\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBMRD_c1697_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 68 \"%0<%10!s!> L1: L2 buf available, kick L2\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBMRD_c1697
    #define WPP_ANNOTATE_USBMRD_c1697 WPP_ANNOTATE_USBMRD_c1697_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBMRD_c1697 WPP_ANNOTATE_USBMRD_c1697_FINAL("TMF:", "USBMRD.c", "USBMRD_c1697", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBMRD_c1715_FINAL(P, File, Name, ...)    __annotation(L ## P, L"c545fe3d-9b98-385c-84e8-450beb16428c ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 69 \"%0<%10!s!> USBMRD_FillReadRequest[%11!d!/%12!d!] %13!d!: error 0x%14!x!, retry next time\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBMRD_c1715_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 69 \"%0<%10!s!> USBMRD_FillReadRequest[%11!d!/%12!d!] %13!d!: error 0x%14!x!, retry next time\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBMRD_c1715
    #define WPP_ANNOTATE_USBMRD_c1715 WPP_ANNOTATE_USBMRD_c1715_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemLong -- 12" , L"Arg, ItemLong -- 13" , L"Arg, ItemLong -- 14" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBMRD_c1715 WPP_ANNOTATE_USBMRD_c1715_FINAL("TMF:", "USBMRD.c", "USBMRD_c1715", L"{", L"pDevExt->PortName, ItemString -- 10" , L"pDevExt->L2FillIdx, ItemLong -- 11" , L"currentFillIdx, ItemLong -- 12" , L"Cookie, ItemLong -- 13" , L"ntStatus, ItemLong -- 14" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBMRD_c1739_FINAL(P, File, Name, ...)    __annotation(L ## P, L"c545fe3d-9b98-385c-84e8-450beb16428c ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 70 \"%0<%10!s!> <--USBMRD_FillReadRequest[%11!d!/%12!d!] %13!d!\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBMRD_c1739_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 70 \"%0<%10!s!> <--USBMRD_FillReadRequest[%11!d!/%12!d!] %13!d!\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBMRD_c1739
    #define WPP_ANNOTATE_USBMRD_c1739 WPP_ANNOTATE_USBMRD_c1739_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemLong -- 12" , L"Arg, ItemLong -- 13" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBMRD_c1739 WPP_ANNOTATE_USBMRD_c1739_FINAL("TMF:", "USBMRD.c", "USBMRD_c1739", L"{", L"pDevExt->PortName, ItemString -- 10" , L"pDevExt->L2FillIdx, ItemLong -- 11" , L"currentFillIdx, ItemLong -- 12" , L"Cookie, ItemLong -- 13" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBMRD_c174_FINAL(P, File, Name, ...)    __annotation(L ## P, L"c545fe3d-9b98-385c-84e8-450beb16428c ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 12 \"%0<%10!s!> L2: ObReferenceObjectByHandle failed 0x%11!x!\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_CRITICAL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBMRD_c174_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 12 \"%0<%10!s!> L2: ObReferenceObjectByHandle failed 0x%11!x!\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_CRITICAL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBMRD_c174
    #define WPP_ANNOTATE_USBMRD_c174 WPP_ANNOTATE_USBMRD_c174_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBMRD_c174 WPP_ANNOTATE_USBMRD_c174_FINAL("TMF:", "USBMRD.c", "USBMRD_c174", L"{", L"pDevExt->PortName, ItemString -- 10" , L"ntStatus, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBMRD_c1744_FINAL(P, File, Name, ...)    __annotation(L ## P, L"c545fe3d-9b98-385c-84e8-450beb16428c ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 71 \"%0<%10!s!> NDIS COUNT ZERO SO DELAY for 1 MS\" //  ", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBMRD_c1744_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 71 \"%0<%10!s!> NDIS COUNT ZERO SO DELAY for 1 MS\" //  ", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBMRD_c1744
    #define WPP_ANNOTATE_USBMRD_c1744 WPP_ANNOTATE_USBMRD_c1744_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBMRD_c1744 WPP_ANNOTATE_USBMRD_c1744_FINAL("TMF:", "USBMRD.c", "USBMRD_c1744", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBMRD_c1763_FINAL(P, File, Name, ...)    __annotation(L ## P, L"c545fe3d-9b98-385c-84e8-450beb16428c ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 72 \"%0<%10!s!> RecycleL2FillBuffer[%11!d!/%12!d!]<%13!d!>\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_TRACE", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBMRD_c1763_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 72 \"%0<%10!s!> RecycleL2FillBuffer[%11!d!/%12!d!]<%13!d!>\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_TRACE", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBMRD_c1763
    #define WPP_ANNOTATE_USBMRD_c1763 WPP_ANNOTATE_USBMRD_c1763_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemLong -- 12" , L"Arg, ItemLong -- 13" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBMRD_c1763 WPP_ANNOTATE_USBMRD_c1763_FINAL("TMF:", "USBMRD.c", "USBMRD_c1763", L"{", L"pDevExt->PortName, ItemString -- 10" , L"FillIdx, ItemLong -- 11" , L"pDevExt->L2FillIdx, ItemLong -- 12" , L"Cookie, ItemLong -- 13" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBMRD_c1772_FINAL(P, File, Name, ...)    __annotation(L ## P, L"c545fe3d-9b98-385c-84e8-450beb16428c ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 73 \"%0<%10!s!> RecycleL2FillBuffer[%11!d!/%12!d!]-idx not match<%13!d!>\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBMRD_c1772_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 73 \"%0<%10!s!> RecycleL2FillBuffer[%11!d!/%12!d!]-idx not match<%13!d!>\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBMRD_c1772
    #define WPP_ANNOTATE_USBMRD_c1772 WPP_ANNOTATE_USBMRD_c1772_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemLong -- 12" , L"Arg, ItemLong -- 13" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBMRD_c1772 WPP_ANNOTATE_USBMRD_c1772_FINAL("TMF:", "USBMRD.c", "USBMRD_c1772", L"{", L"pDevExt->PortName, ItemString -- 10" , L"FillIdx, ItemLong -- 11" , L"pDevExt->L2FillIdx, ItemLong -- 12" , L"Cookie, ItemLong -- 13" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBMRD_c1793_FINAL(P, File, Name, ...)    __annotation(L ## P, L"c545fe3d-9b98-385c-84e8-450beb16428c ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 74 \"%0<%10!s!> L1: L2 buf available, kick L2\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBMRD_c1793_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 74 \"%0<%10!s!> L1: L2 buf available, kick L2\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBMRD_c1793
    #define WPP_ANNOTATE_USBMRD_c1793 WPP_ANNOTATE_USBMRD_c1793_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBMRD_c1793 WPP_ANNOTATE_USBMRD_c1793_FINAL("TMF:", "USBMRD.c", "USBMRD_c1793", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBMRD_c1811_FINAL(P, File, Name, ...)    __annotation(L ## P, L"c545fe3d-9b98-385c-84e8-450beb16428c ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 75 \"%0<%10!s!> RecycleFrameBuffer\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_TRACE", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBMRD_c1811_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 75 \"%0<%10!s!> RecycleFrameBuffer\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_TRACE", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBMRD_c1811
    #define WPP_ANNOTATE_USBMRD_c1811 WPP_ANNOTATE_USBMRD_c1811_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBMRD_c1811 WPP_ANNOTATE_USBMRD_c1811_FINAL("TMF:", "USBMRD.c", "USBMRD_c1811", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBMRD_c1851_FINAL(P, File, Name, ...)    __annotation(L ## P, L"c545fe3d-9b98-385c-84e8-450beb16428c ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 76 \"%0<%10!s!> MRIC - error: device err %11!d! <%12!u!>\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBMRD_c1851_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 76 \"%0<%10!s!> MRIC - error: device err %11!d! <%12!u!>\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBMRD_c1851
    #define WPP_ANNOTATE_USBMRD_c1851 WPP_ANNOTATE_USBMRD_c1851_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemLong -- 12" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBMRD_c1851 WPP_ANNOTATE_USBMRD_c1851_FINAL("TMF:", "USBMRD.c", "USBMRD_c1851", L"{", L"pDevExt->PortName, ItemString -- 10" , L"pDevExt->RdErrorCount, ItemLong -- 11" , L"Cookie, ItemLong -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBMRD_c186_FINAL(P, File, Name, ...)    __annotation(L ## P, L"c545fe3d-9b98-385c-84e8-450beb16428c ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 13 \"%0<%10!s!> L2 ZwClose failed - 0x%11!x!\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBMRD_c186_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 13 \"%0<%10!s!> L2 ZwClose failed - 0x%11!x!\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBMRD_c186
    #define WPP_ANNOTATE_USBMRD_c186 WPP_ANNOTATE_USBMRD_c186_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBMRD_c186 WPP_ANNOTATE_USBMRD_c186_FINAL("TMF:", "USBMRD.c", "USBMRD_c186", L"{", L"pDevExt->PortName, ItemString -- 10" , L"ntStatus, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBMRD_c1862_FINAL(P, File, Name, ...)    __annotation(L ## P, L"c545fe3d-9b98-385c-84e8-450beb16428c ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 77 \"%0<%10!s!> MRIC - error %11!d! - dev removed\n\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBMRD_c1862_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 77 \"%0<%10!s!> MRIC - error %11!d! - dev removed\n\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBMRD_c1862
    #define WPP_ANNOTATE_USBMRD_c1862 WPP_ANNOTATE_USBMRD_c1862_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBMRD_c1862 WPP_ANNOTATE_USBMRD_c1862_FINAL("TMF:", "USBMRD.c", "USBMRD_c1862", L"{", L"pDevExt->PortName, ItemString -- 10" , L"pDevExt->RdErrorCount, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBMRD_c1889_FINAL(P, File, Name, ...)    __annotation(L ## P, L"c545fe3d-9b98-385c-84e8-450beb16428c ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 78 \"%0<%10!s!> MRIC RIRP=0x%11!p! (L2: %12!ld!B) st 0x%13!x! <%14!d!>\" //   FLAG=(QCUSB_DBG_MASK_RIRP | QCUSB_DBG_MASK_READ) LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBMRD_c1889_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 78 \"%0<%10!s!> MRIC RIRP=0x%11!p! (L2: %12!ld!B) st 0x%13!x! <%14!d!>\" //   FLAG=(QCUSB_DBG_MASK_RIRP | QCUSB_DBG_MASK_READ) LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBMRD_c1889
    #define WPP_ANNOTATE_USBMRD_c1889 WPP_ANNOTATE_USBMRD_c1889_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemPtr -- 11" , L"Arg, ItemLong -- 12" , L"Arg, ItemLong -- 13" , L"Arg, ItemLong -- 14" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBMRD_c1889 WPP_ANNOTATE_USBMRD_c1889_FINAL("TMF:", "USBMRD.c", "USBMRD_c1889", L"{", L"pDevExt->PortName, ItemString -- 10" , L"pIrp, ItemPtr -- 11" , L"ulL2Length, ItemLong -- 12" , L"ntStatus, ItemLong -- 13" , L"Cookie, ItemLong -- 14" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBMRD_c1891_FINAL(P, File, Name, ...)    __annotation(L ## P, L"c545fe3d-9b98-385c-84e8-450beb16428c ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 79 \"%0<%10!s!> FRAME DROPPED Count : %11!ld! and Total Size : 0x%12!ld!B FC : %13!ld!\" //  ", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBMRD_c1891_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 79 \"%0<%10!s!> FRAME DROPPED Count : %11!ld! and Total Size : 0x%12!ld!B FC : %13!ld!\" //  ", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBMRD_c1891
    #define WPP_ANNOTATE_USBMRD_c1891 WPP_ANNOTATE_USBMRD_c1891_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemLong -- 12" , L"Arg, ItemLong -- 13" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBMRD_c1891 WPP_ANNOTATE_USBMRD_c1891_FINAL("TMF:", "USBMRD.c", "USBMRD_c1891", L"{", L"pDevExt->PortName, ItemString -- 10" , L"pDevExt->FrameDropCount, ItemLong -- 11" , L"pDevExt->FrameDropBytes, ItemLong -- 12" , L"pDevExt->FlowControlEnabledCount, ItemLong -- 13" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBMRD_c1907_FINAL(P, File, Name, ...)    __annotation(L ## P, L"c545fe3d-9b98-385c-84e8-450beb16428c ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 80 \"%0<%10!s!> ERROR: Mdl translation 0x%11!p!\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_CRITICAL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBMRD_c1907_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 80 \"%0<%10!s!> ERROR: Mdl translation 0x%11!p!\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_CRITICAL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBMRD_c1907
    #define WPP_ANNOTATE_USBMRD_c1907 WPP_ANNOTATE_USBMRD_c1907_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemPtr -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBMRD_c1907 WPP_ANNOTATE_USBMRD_c1907_FINAL("TMF:", "USBMRD.c", "USBMRD_c1907", L"{", L"pDevExt->PortName, ItemString -- 10" , L"pIrp->MdlAddress, ItemPtr -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBMRD_c1933_FINAL(P, File, Name, ...)    __annotation(L ## P, L"c545fe3d-9b98-385c-84e8-450beb16428c ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 81 \"%0<%10!s!> MRIC - error: pIrp 1 - is NULL\" //   FLAG=QCUSB_DBG_MASK_RIRP LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBMRD_c1933_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 81 \"%0<%10!s!> MRIC - error: pIrp 1 - is NULL\" //   FLAG=QCUSB_DBG_MASK_RIRP LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBMRD_c1933
    #define WPP_ANNOTATE_USBMRD_c1933 WPP_ANNOTATE_USBMRD_c1933_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBMRD_c1933 WPP_ANNOTATE_USBMRD_c1933_FINAL("TMF:", "USBMRD.c", "USBMRD_c1933", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBMRD_c201_FINAL(P, File, Name, ...)    __annotation(L ## P, L"c545fe3d-9b98-385c-84e8-450beb16428c ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 14 \"%0<%10!s!> L2 handle=0x%11!p! thOb=0x%12!p!\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBMRD_c201_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 14 \"%0<%10!s!> L2 handle=0x%11!p! thOb=0x%12!p!\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBMRD_c201
    #define WPP_ANNOTATE_USBMRD_c201 WPP_ANNOTATE_USBMRD_c201_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemPtr -- 11" , L"Arg, ItemPtr -- 12" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBMRD_c201 WPP_ANNOTATE_USBMRD_c201_FINAL("TMF:", "USBMRD.c", "USBMRD_c201", L"{", L"pDevExt->PortName, ItemString -- 10" , L"pDevExt->hL2ReadThreadHandle, ItemPtr -- 11" , L"pDevExt->pL2ReadThread, ItemPtr -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBMRD_c2043_FINAL(P, File, Name, ...)    __annotation(L ## P, L"c545fe3d-9b98-385c-84e8-450beb16428c ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 82 \"%0<%10!s!> ERROR: Mdl translation 0x%11!p!\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_CRITICAL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBMRD_c2043_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 82 \"%0<%10!s!> ERROR: Mdl translation 0x%11!p!\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_CRITICAL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBMRD_c2043
    #define WPP_ANNOTATE_USBMRD_c2043 WPP_ANNOTATE_USBMRD_c2043_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemPtr -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBMRD_c2043 WPP_ANNOTATE_USBMRD_c2043_FINAL("TMF:", "USBMRD.c", "USBMRD_c2043", L"{", L"pDevExt->PortName, ItemString -- 10" , L"pIrp->MdlAddress, ItemPtr -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBMRD_c2060_FINAL(P, File, Name, ...)    __annotation(L ## P, L"c545fe3d-9b98-385c-84e8-450beb16428c ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 83 \"%0<%10!s!> MRIC - error: pIrp 3 - is NULL\" //   FLAG=QCUSB_DBG_MASK_RIRP LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBMRD_c2060_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 83 \"%0<%10!s!> MRIC - error: pIrp 3 - is NULL\" //   FLAG=QCUSB_DBG_MASK_RIRP LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBMRD_c2060
    #define WPP_ANNOTATE_USBMRD_c2060 WPP_ANNOTATE_USBMRD_c2060_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBMRD_c2060 WPP_ANNOTATE_USBMRD_c2060_FINAL("TMF:", "USBMRD.c", "USBMRD_c2060", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBMRD_c2064_FINAL(P, File, Name, ...)    __annotation(L ## P, L"c545fe3d-9b98-385c-84e8-450beb16428c ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 84 \"%0<%10!s!> FRAME DROPPED : %11!ld!B\" //  ", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBMRD_c2064_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 84 \"%0<%10!s!> FRAME DROPPED : %11!ld!B\" //  ", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBMRD_c2064
    #define WPP_ANNOTATE_USBMRD_c2064 WPP_ANNOTATE_USBMRD_c2064_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBMRD_c2064 WPP_ANNOTATE_USBMRD_c2064_FINAL("TMF:", "USBMRD.c", "USBMRD_c2064", L"{", L"pDevExt->PortName, ItemString -- 10" , L"ulL2Length, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBMRD_c2067_FINAL(P, File, Name, ...)    __annotation(L ## P, L"c545fe3d-9b98-385c-84e8-450beb16428c ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 85 \"%0<%10!s!> FRAME DROPPED Count : %11!ld! and Total Size : 0x%12!ld!B\" //  ", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBMRD_c2067_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 85 \"%0<%10!s!> FRAME DROPPED Count : %11!ld! and Total Size : 0x%12!ld!B\" //  ", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBMRD_c2067
    #define WPP_ANNOTATE_USBMRD_c2067 WPP_ANNOTATE_USBMRD_c2067_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemLong -- 12" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBMRD_c2067 WPP_ANNOTATE_USBMRD_c2067_FINAL("TMF:", "USBMRD.c", "USBMRD_c2067", L"{", L"pDevExt->PortName, ItemString -- 10" , L"++(pDevExt->FrameDropCount), ItemLong -- 11" , L"(pDevExt->FrameDropBytes+= ulL2Length), ItemLong -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBMRD_c2132_FINAL(P, File, Name, ...)    __annotation(L ## P, L"c545fe3d-9b98-385c-84e8-450beb16428c ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 86 \"%0<%10!s!> MRIC - error: invalid data - end of buf\" //   FLAG=QCUSB_DBG_MASK_RIRP LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBMRD_c2132_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 86 \"%0<%10!s!> MRIC - error: invalid data - end of buf\" //   FLAG=QCUSB_DBG_MASK_RIRP LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBMRD_c2132
    #define WPP_ANNOTATE_USBMRD_c2132 WPP_ANNOTATE_USBMRD_c2132_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBMRD_c2132 WPP_ANNOTATE_USBMRD_c2132_FINAL("TMF:", "USBMRD.c", "USBMRD_c2132", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBMRD_c2146_FINAL(P, File, Name, ...)    __annotation(L ## P, L"c545fe3d-9b98-385c-84e8-450beb16428c ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 87 \"%0<%10!s!> MRIC - error: invalid data - end of buf\" //   FLAG=QCUSB_DBG_MASK_RIRP LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBMRD_c2146_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 87 \"%0<%10!s!> MRIC - error: invalid data - end of buf\" //   FLAG=QCUSB_DBG_MASK_RIRP LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBMRD_c2146
    #define WPP_ANNOTATE_USBMRD_c2146 WPP_ANNOTATE_USBMRD_c2146_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBMRD_c2146 WPP_ANNOTATE_USBMRD_c2146_FINAL("TMF:", "USBMRD.c", "USBMRD_c2146", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBMRD_c2170_FINAL(P, File, Name, ...)    __annotation(L ## P, L"c545fe3d-9b98-385c-84e8-450beb16428c ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 88 \"%0<%10!s!> MRIC - TLP_BUF_STATE_HDR_ONLY\" //   FLAG=QCUSB_DBG_MASK_RIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBMRD_c2170_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 88 \"%0<%10!s!> MRIC - TLP_BUF_STATE_HDR_ONLY\" //   FLAG=QCUSB_DBG_MASK_RIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBMRD_c2170
    #define WPP_ANNOTATE_USBMRD_c2170 WPP_ANNOTATE_USBMRD_c2170_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBMRD_c2170 WPP_ANNOTATE_USBMRD_c2170_FINAL("TMF:", "USBMRD.c", "USBMRD_c2170", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBMRD_c2194_FINAL(P, File, Name, ...)    __annotation(L ## P, L"c545fe3d-9b98-385c-84e8-450beb16428c ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 89 \"%0<%10!s!> MRIC - TLP_BUF_STATE_PARTIAL_HDR\" //   FLAG=QCUSB_DBG_MASK_RIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBMRD_c2194_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 89 \"%0<%10!s!> MRIC - TLP_BUF_STATE_PARTIAL_HDR\" //   FLAG=QCUSB_DBG_MASK_RIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBMRD_c2194
    #define WPP_ANNOTATE_USBMRD_c2194 WPP_ANNOTATE_USBMRD_c2194_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBMRD_c2194 WPP_ANNOTATE_USBMRD_c2194_FINAL("TMF:", "USBMRD.c", "USBMRD_c2194", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBMRD_c2218_FINAL(P, File, Name, ...)    __annotation(L ## P, L"c545fe3d-9b98-385c-84e8-450beb16428c ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 90 \"%0<%10!s!> MRIC - error: invalid data - end of buf\" //   FLAG=QCUSB_DBG_MASK_RIRP LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBMRD_c2218_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 90 \"%0<%10!s!> MRIC - error: invalid data - end of buf\" //   FLAG=QCUSB_DBG_MASK_RIRP LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBMRD_c2218
    #define WPP_ANNOTATE_USBMRD_c2218 WPP_ANNOTATE_USBMRD_c2218_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBMRD_c2218 WPP_ANNOTATE_USBMRD_c2218_FINAL("TMF:", "USBMRD.c", "USBMRD_c2218", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBMRD_c2242_FINAL(P, File, Name, ...)    __annotation(L ## P, L"c545fe3d-9b98-385c-84e8-450beb16428c ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 91 \"%0<%10!s!> RIC : Wrong MBIM packet BlockLength : %11!d! and PacketLen : %12!d!\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBMRD_c2242_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 91 \"%0<%10!s!> RIC : Wrong MBIM packet BlockLength : %11!d! and PacketLen : %12!d!\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBMRD_c2242
    #define WPP_ANNOTATE_USBMRD_c2242 WPP_ANNOTATE_USBMRD_c2242_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemLong -- 12" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBMRD_c2242 WPP_ANNOTATE_USBMRD_c2242_FINAL("TMF:", "USBMRD.c", "USBMRD_c2242", L"{", L"pDevExt->PortName, ItemString -- 10" , L"pNTBHrd->wBlockLength, ItemLong -- 11" , L"remBytes, ItemLong -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBMRD_c2265_FINAL(P, File, Name, ...)    __annotation(L ## P, L"c545fe3d-9b98-385c-84e8-450beb16428c ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 92 \"%0<%10!s!> RIC : MBIMDL: Current Datagram Ptr : 0x%11!d! and Datagram len : %12!d!\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBMRD_c2265_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 92 \"%0<%10!s!> RIC : MBIMDL: Current Datagram Ptr : 0x%11!d! and Datagram len : %12!d!\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBMRD_c2265
    #define WPP_ANNOTATE_USBMRD_c2265 WPP_ANNOTATE_USBMRD_c2265_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemLong -- 12" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBMRD_c2265 WPP_ANNOTATE_USBMRD_c2265_FINAL("TMF:", "USBMRD.c", "USBMRD_c2265", L"{", L"pDevExt->PortName, ItemString -- 10" , L"pDatagramPtr->DatagramPtr, ItemLong -- 11" , L"pDatagramPtr->DatagramLen, ItemLong -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBMRD_c2279_FINAL(P, File, Name, ...)    __annotation(L ## P, L"c545fe3d-9b98-385c-84e8-450beb16428c ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 93 \"%0<%10!s!> RIC : MBIMDL: Current Datagram Ptr : 0x%11!d! and Datagram len : %12!d!\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBMRD_c2279_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 93 \"%0<%10!s!> RIC : MBIMDL: Current Datagram Ptr : 0x%11!d! and Datagram len : %12!d!\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBMRD_c2279
    #define WPP_ANNOTATE_USBMRD_c2279 WPP_ANNOTATE_USBMRD_c2279_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemLong -- 12" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBMRD_c2279 WPP_ANNOTATE_USBMRD_c2279_FINAL("TMF:", "USBMRD.c", "USBMRD_c2279", L"{", L"pDevExt->PortName, ItemString -- 10" , L"pDatagramPtr->DatagramPtr, ItemLong -- 11" , L"pDatagramPtr->DatagramLen, ItemLong -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBMRD_c2306_FINAL(P, File, Name, ...)    __annotation(L ## P, L"c545fe3d-9b98-385c-84e8-450beb16428c ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 94 \"%0<%10!s!> MRIC - error invalid TLP hdr 0x%11!x! (%12!u!B/%13!u!B)\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBMRD_c2306_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 94 \"%0<%10!s!> MRIC - error invalid TLP hdr 0x%11!x! (%12!u!B/%13!u!B)\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBMRD_c2306
    #define WPP_ANNOTATE_USBMRD_c2306 WPP_ANNOTATE_USBMRD_c2306_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemLong -- 12" , L"Arg, ItemLong -- 13" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBMRD_c2306 WPP_ANNOTATE_USBMRD_c2306_FINAL("TMF:", "USBMRD.c", "USBMRD_c2306", L"{", L"pDevExt->PortName, ItemString -- 10" , L"tlp->Length, ItemLong -- 11" , L"ulL2Length, ItemLong -- 12" , L"pDevExt->MaxPipeXferSize, ItemLong -- 13" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBMRD_c2348_FINAL(P, File, Name, ...)    __annotation(L ## P, L"c545fe3d-9b98-385c-84e8-450beb16428c ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 95 \"%0<%10!s!> MRIC - Fill RIRP 0x%11!p![%12!u!] %13!u!B\" //   FLAG=QCUSB_DBG_MASK_RIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBMRD_c2348_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 95 \"%0<%10!s!> MRIC - Fill RIRP 0x%11!p![%12!u!] %13!u!B\" //   FLAG=QCUSB_DBG_MASK_RIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBMRD_c2348
    #define WPP_ANNOTATE_USBMRD_c2348 WPP_ANNOTATE_USBMRD_c2348_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemPtr -- 11" , L"Arg, ItemLong -- 12" , L"Arg, ItemLong -- 13" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBMRD_c2348 WPP_ANNOTATE_USBMRD_c2348_FINAL("TMF:", "USBMRD.c", "USBMRD_c2348", L"{", L"pDevExt->PortName, ItemString -- 10" , L"pIrp, ItemPtr -- 11" , L"pDevExt->TLPCount, ItemLong -- 12" , L"pktLen, ItemLong -- 13" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBMRD_c2362_FINAL(P, File, Name, ...)    __annotation(L ## P, L"c545fe3d-9b98-385c-84e8-450beb16428c ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 96 \"%0<%10!s!> MRIC - error, received pkt too big %11!u!/%12!u!/%13!u!/%14!u!, drop\" //   FLAG=QCUSB_DBG_MASK_RIRP LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBMRD_c2362_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 96 \"%0<%10!s!> MRIC - error, received pkt too big %11!u!/%12!u!/%13!u!/%14!u!, drop\" //   FLAG=QCUSB_DBG_MASK_RIRP LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBMRD_c2362
    #define WPP_ANNOTATE_USBMRD_c2362 WPP_ANNOTATE_USBMRD_c2362_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemLong -- 12" , L"Arg, ItemLong -- 13" , L"Arg, ItemLong -- 14" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBMRD_c2362 WPP_ANNOTATE_USBMRD_c2362_FINAL("TMF:", "USBMRD.c", "USBMRD_c2362", L"{", L"pDevExt->PortName, ItemString -- 10" , L"pktLen, ItemLong -- 11" , L"ulReqLength, ItemLong -- 12" , L"ulL2Length, ItemLong -- 13" , L"pDevExt->MaxPipeXferSize, ItemLong -- 14" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBMRD_c2382_FINAL(P, File, Name, ...)    __annotation(L ## P, L"c545fe3d-9b98-385c-84e8-450beb16428c ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 97 \"%0<%10!s!> MRIC - error, IRP buf too small %11!u!/%12!u!/%13!u!\" //   FLAG=QCUSB_DBG_MASK_RIRP LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBMRD_c2382_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 97 \"%0<%10!s!> MRIC - error, IRP buf too small %11!u!/%12!u!/%13!u!\" //   FLAG=QCUSB_DBG_MASK_RIRP LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBMRD_c2382
    #define WPP_ANNOTATE_USBMRD_c2382 WPP_ANNOTATE_USBMRD_c2382_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemLong -- 12" , L"Arg, ItemLong -- 13" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBMRD_c2382 WPP_ANNOTATE_USBMRD_c2382_FINAL("TMF:", "USBMRD.c", "USBMRD_c2382", L"{", L"pDevExt->PortName, ItemString -- 10" , L"pktLen, ItemLong -- 11" , L"ulReqLength, ItemLong -- 12" , L"ulL2Length, ItemLong -- 13" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBMRD_c243_FINAL(P, File, Name, ...)    __annotation(L ## P, L"c545fe3d-9b98-385c-84e8-450beb16428c ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 15 \"%0<%10!s!> L1 direct completion[%11!u!](0x%12!x!)\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_INFO", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBMRD_c243_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 15 \"%0<%10!s!> L1 direct completion[%11!u!](0x%12!x!)\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_INFO", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBMRD_c243
    #define WPP_ANNOTATE_USBMRD_c243 WPP_ANNOTATE_USBMRD_c243_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemLong -- 12" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBMRD_c243 WPP_ANNOTATE_USBMRD_c243_FINAL("TMF:", "USBMRD.c", "USBMRD_c243", L"{", L"pDevExt->PortName, ItemString -- 10" , L"pDevExt->L2FillIdx, ItemLong -- 11" , L"pDevExt->pL2ReadBuffer[pDevExt->L2FillIdx].Status, ItemLong -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBMRD_c2500_FINAL(P, File, Name, ...)    __annotation(L ## P, L"c545fe3d-9b98-385c-84e8-450beb16428c ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 98 \"%0<%10!s!> MRIC - partial fill, first leg %11!u!B/%12!u!B/%13!u!B/%14!u!B\" //   FLAG=QCUSB_DBG_MASK_RIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBMRD_c2500_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 98 \"%0<%10!s!> MRIC - partial fill, first leg %11!u!B/%12!u!B/%13!u!B/%14!u!B\" //   FLAG=QCUSB_DBG_MASK_RIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBMRD_c2500
    #define WPP_ANNOTATE_USBMRD_c2500 WPP_ANNOTATE_USBMRD_c2500_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemLong -- 12" , L"Arg, ItemLong -- 13" , L"Arg, ItemLong -- 14" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBMRD_c2500 WPP_ANNOTATE_USBMRD_c2500_FINAL("TMF:", "USBMRD.c", "USBMRD_c2500", L"{", L"pDevExt->PortName, ItemString -- 10" , L"tmpLen, ItemLong -- 11" , L"pktLen, ItemLong -- 12" , L"ulReqLength, ItemLong -- 13" , L"ulL2Length, ItemLong -- 14" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBMRD_c2524_FINAL(P, File, Name, ...)    __annotation(L ## P, L"c545fe3d-9b98-385c-84e8-450beb16428c ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 99 \"%0<%10!s!> MRIC - error partial fill, rcvd pkt too big %11!u!/%12!u!/%13!u!/%14!u!, drop\" //   FLAG=QCUSB_DBG_MASK_RIRP LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBMRD_c2524_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 99 \"%0<%10!s!> MRIC - error partial fill, rcvd pkt too big %11!u!/%12!u!/%13!u!/%14!u!, drop\" //   FLAG=QCUSB_DBG_MASK_RIRP LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBMRD_c2524
    #define WPP_ANNOTATE_USBMRD_c2524 WPP_ANNOTATE_USBMRD_c2524_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemLong -- 12" , L"Arg, ItemLong -- 13" , L"Arg, ItemLong -- 14" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBMRD_c2524 WPP_ANNOTATE_USBMRD_c2524_FINAL("TMF:", "USBMRD.c", "USBMRD_c2524", L"{", L"pDevExt->PortName, ItemString -- 10" , L"pktLen, ItemLong -- 11" , L"ulReqLength, ItemLong -- 12" , L"ulL2Length, ItemLong -- 13" , L"pDevExt->MaxPipeXferSize, ItemLong -- 14" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBMRD_c2541_FINAL(P, File, Name, ...)    __annotation(L ## P, L"c545fe3d-9b98-385c-84e8-450beb16428c ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 100 \"%0<%10!s!> MRIC - error partial fill, IRP buf too small %11!u!/%12!u!/%13!u!\" //   FLAG=QCUSB_DBG_MASK_RIRP LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBMRD_c2541_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 100 \"%0<%10!s!> MRIC - error partial fill, IRP buf too small %11!u!/%12!u!/%13!u!\" //   FLAG=QCUSB_DBG_MASK_RIRP LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBMRD_c2541
    #define WPP_ANNOTATE_USBMRD_c2541 WPP_ANNOTATE_USBMRD_c2541_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemLong -- 12" , L"Arg, ItemLong -- 13" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBMRD_c2541 WPP_ANNOTATE_USBMRD_c2541_FINAL("TMF:", "USBMRD.c", "USBMRD_c2541", L"{", L"pDevExt->PortName, ItemString -- 10" , L"pktLen, ItemLong -- 11" , L"ulReqLength, ItemLong -- 12" , L"ulL2Length, ItemLong -- 13" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBMRD_c2556_FINAL(P, File, Name, ...)    __annotation(L ## P, L"c545fe3d-9b98-385c-84e8-450beb16428c ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 101 \"%0<%10!s!> MBIM - error bad packet %11!u!/%12!u!/%13!u!/%14!u!, drop\" //   FLAG=QCUSB_DBG_MASK_RIRP LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBMRD_c2556_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 101 \"%0<%10!s!> MBIM - error bad packet %11!u!/%12!u!/%13!u!/%14!u!, drop\" //   FLAG=QCUSB_DBG_MASK_RIRP LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBMRD_c2556
    #define WPP_ANNOTATE_USBMRD_c2556 WPP_ANNOTATE_USBMRD_c2556_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemLong -- 12" , L"Arg, ItemLong -- 13" , L"Arg, ItemLong -- 14" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBMRD_c2556 WPP_ANNOTATE_USBMRD_c2556_FINAL("TMF:", "USBMRD.c", "USBMRD_c2556", L"{", L"pDevExt->PortName, ItemString -- 10" , L"pktLen, ItemLong -- 11" , L"ulReqLength, ItemLong -- 12" , L"ulL2Length, ItemLong -- 13" , L"pDevExt->MaxPipeXferSize, ItemLong -- 14" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBMRD_c2614_FINAL(P, File, Name, ...)    __annotation(L ## P, L"c545fe3d-9b98-385c-84e8-450beb16428c ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 102 \"%0<%10!s!> MRIC - error, frame spans > 2 buffers\" //   FLAG=QCUSB_DBG_MASK_RIRP LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBMRD_c2614_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 102 \"%0<%10!s!> MRIC - error, frame spans > 2 buffers\" //   FLAG=QCUSB_DBG_MASK_RIRP LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBMRD_c2614
    #define WPP_ANNOTATE_USBMRD_c2614 WPP_ANNOTATE_USBMRD_c2614_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBMRD_c2614 WPP_ANNOTATE_USBMRD_c2614_FINAL("TMF:", "USBMRD.c", "USBMRD_c2614", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBMRD_c2639_FINAL(P, File, Name, ...)    __annotation(L ## P, L"c545fe3d-9b98-385c-84e8-450beb16428c ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 103 \"%0<%10!s!> MRIC - M Filling RIRP 0x%11!p![%12!u!] (%13!u!B+%14!u!B)\" //   FLAG=QCUSB_DBG_MASK_RIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBMRD_c2639_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 103 \"%0<%10!s!> MRIC - M Filling RIRP 0x%11!p![%12!u!] (%13!u!B+%14!u!B)\" //   FLAG=QCUSB_DBG_MASK_RIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBMRD_c2639
    #define WPP_ANNOTATE_USBMRD_c2639 WPP_ANNOTATE_USBMRD_c2639_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemPtr -- 11" , L"Arg, ItemLong -- 12" , L"Arg, ItemLong -- 13" , L"Arg, ItemLong -- 14" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBMRD_c2639 WPP_ANNOTATE_USBMRD_c2639_FINAL("TMF:", "USBMRD.c", "USBMRD_c2639", L"{", L"pDevExt->PortName, ItemString -- 10" , L"pIrp, ItemPtr -- 11" , L"pDevExt->TLPCount, ItemLong -- 12" , L"pDevExt->TlpFrameBuffer.PktLength, ItemLong -- 13" , L"pDevExt->TlpFrameBuffer.BytesNeeded, ItemLong -- 14" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBMRD_c2698_FINAL(P, File, Name, ...)    __annotation(L ## P, L"c545fe3d-9b98-385c-84e8-450beb16428c ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 104 \"%0<%10!s!> MRIC - error bad bundle, discard L2[%11!u!] %12!u!B\" //   FLAG=QCUSB_DBG_MASK_RIRP LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBMRD_c2698_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 104 \"%0<%10!s!> MRIC - error bad bundle, discard L2[%11!u!] %12!u!B\" //   FLAG=QCUSB_DBG_MASK_RIRP LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBMRD_c2698
    #define WPP_ANNOTATE_USBMRD_c2698 WPP_ANNOTATE_USBMRD_c2698_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemLong -- 12" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBMRD_c2698 WPP_ANNOTATE_USBMRD_c2698_FINAL("TMF:", "USBMRD.c", "USBMRD_c2698", L"{", L"pDevExt->PortName, ItemString -- 10" , L"pDevExt->L2FillIdx, ItemLong -- 11" , L"ulL2Length, ItemLong -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBMRD_c271_FINAL(P, File, Name, ...)    __annotation(L ## P, L"c545fe3d-9b98-385c-84e8-450beb16428c ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 16 \"%0<%10!s!> L1 direct completion[%11!u!](0x%12!x!)\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_INFO", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBMRD_c271_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 16 \"%0<%10!s!> L1 direct completion[%11!u!](0x%12!x!)\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_INFO", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBMRD_c271
    #define WPP_ANNOTATE_USBMRD_c271 WPP_ANNOTATE_USBMRD_c271_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemLong -- 12" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBMRD_c271 WPP_ANNOTATE_USBMRD_c271_FINAL("TMF:", "USBMRD.c", "USBMRD_c271", L"{", L"pDevExt->PortName, ItemString -- 10" , L"pDevExt->L2FillIdx, ItemLong -- 11" , L"pDevExt->pL2ReadBuffer[pDevExt->L2FillIdx].Status, ItemLong -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBMRD_c2711_FINAL(P, File, Name, ...)    __annotation(L ## P, L"c545fe3d-9b98-385c-84e8-450beb16428c ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 105 \"%0<%10!s!> MRIC - end of bad bundle reached %11!u!B\" //   FLAG=QCUSB_DBG_MASK_RIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBMRD_c2711_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 105 \"%0<%10!s!> MRIC - end of bad bundle reached %11!u!B\" //   FLAG=QCUSB_DBG_MASK_RIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBMRD_c2711
    #define WPP_ANNOTATE_USBMRD_c2711 WPP_ANNOTATE_USBMRD_c2711_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBMRD_c2711 WPP_ANNOTATE_USBMRD_c2711_FINAL("TMF:", "USBMRD.c", "USBMRD_c2711", L"{", L"pDevExt->PortName, ItemString -- 10" , L"ulL2Length, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBMRD_c2725_FINAL(P, File, Name, ...)    __annotation(L ## P, L"c545fe3d-9b98-385c-84e8-450beb16428c ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 106 \"%0<%10!s!> MRIC - error: wrong TLP state\" //   FLAG=QCUSB_DBG_MASK_RIRP LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBMRD_c2725_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 106 \"%0<%10!s!> MRIC - error: wrong TLP state\" //   FLAG=QCUSB_DBG_MASK_RIRP LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBMRD_c2725
    #define WPP_ANNOTATE_USBMRD_c2725 WPP_ANNOTATE_USBMRD_c2725_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBMRD_c2725 WPP_ANNOTATE_USBMRD_c2725_FINAL("TMF:", "USBMRD.c", "USBMRD_c2725", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBMRD_c2751_FINAL(P, File, Name, ...)    __annotation(L ## P, L"c545fe3d-9b98-385c-84e8-450beb16428c ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 107 \"%0<%10!s!> MRIC - error RIRP 0x%11!p! C: in callellation!!\" //   FLAG=QCUSB_DBG_MASK_RIRP LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBMRD_c2751_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 107 \"%0<%10!s!> MRIC - error RIRP 0x%11!p! C: in callellation!!\" //   FLAG=QCUSB_DBG_MASK_RIRP LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBMRD_c2751
    #define WPP_ANNOTATE_USBMRD_c2751 WPP_ANNOTATE_USBMRD_c2751_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemPtr -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBMRD_c2751 WPP_ANNOTATE_USBMRD_c2751_FINAL("TMF:", "USBMRD.c", "USBMRD_c2751", L"{", L"pDevExt->PortName, ItemString -- 10" , L"pIrp, ItemPtr -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBMRD_c2762_FINAL(P, File, Name, ...)    __annotation(L ## P, L"c545fe3d-9b98-385c-84e8-450beb16428c ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 108 \"%0<%10!s!> MRIC - error RIRP 0x%11!p! C: 0\" //   FLAG=QCUSB_DBG_MASK_RIRP LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBMRD_c2762_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 108 \"%0<%10!s!> MRIC - error RIRP 0x%11!p! C: 0\" //   FLAG=QCUSB_DBG_MASK_RIRP LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBMRD_c2762
    #define WPP_ANNOTATE_USBMRD_c2762 WPP_ANNOTATE_USBMRD_c2762_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemPtr -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBMRD_c2762 WPP_ANNOTATE_USBMRD_c2762_FINAL("TMF:", "USBMRD.c", "USBMRD_c2762", L"{", L"pDevExt->PortName, ItemString -- 10" , L"pIrp, ItemPtr -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBMRD_c2841_FINAL(P, File, Name, ...)    __annotation(L ## P, L"c545fe3d-9b98-385c-84e8-450beb16428c ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 109 \"%0<%10!s!> --> USBRD_InPipeOk 0x%11!x!\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_TRACE", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBMRD_c2841_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 109 \"%0<%10!s!> --> USBRD_InPipeOk 0x%11!x!\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_TRACE", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBMRD_c2841
    #define WPP_ANNOTATE_USBMRD_c2841 WPP_ANNOTATE_USBMRD_c2841_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBMRD_c2841 WPP_ANNOTATE_USBMRD_c2841_FINAL("TMF:", "USBMRD.c", "USBMRD_c2841", L"{", L"pDevExt->PortName, ItemString -- 10" , L"pDevExt->BulkPipeInput, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBMRD_c2849_FINAL(P, File, Name, ...)    __annotation(L ## P, L"c545fe3d-9b98-385c-84e8-450beb16428c ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 110 \"%0<%10!s!> _InPipeOk: no IN pipe!\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBMRD_c2849_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 110 \"%0<%10!s!> _InPipeOk: no IN pipe!\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBMRD_c2849
    #define WPP_ANNOTATE_USBMRD_c2849 WPP_ANNOTATE_USBMRD_c2849_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBMRD_c2849 WPP_ANNOTATE_USBMRD_c2849_FINAL("TMF:", "USBMRD.c", "USBMRD_c2849", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBMRD_c2861_FINAL(P, File, Name, ...)    __annotation(L ## P, L"c545fe3d-9b98-385c-84e8-450beb16428c ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 111 \"%0<%10!s!> _InPipeOk: no MEM!\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBMRD_c2861_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 111 \"%0<%10!s!> _InPipeOk: no MEM!\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBMRD_c2861
    #define WPP_ANNOTATE_USBMRD_c2861 WPP_ANNOTATE_USBMRD_c2861_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBMRD_c2861 WPP_ANNOTATE_USBMRD_c2861_FINAL("TMF:", "USBMRD.c", "USBMRD_c2861", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBMRD_c2920_FINAL(P, File, Name, ...)    __annotation(L ## P, L"c545fe3d-9b98-385c-84e8-450beb16428c ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 112 \"%0<%10!s!> _InPipeOk: 1st timeout\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBMRD_c2920_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 112 \"%0<%10!s!> _InPipeOk: 1st timeout\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBMRD_c2920
    #define WPP_ANNOTATE_USBMRD_c2920 WPP_ANNOTATE_USBMRD_c2920_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBMRD_c2920 WPP_ANNOTATE_USBMRD_c2920_FINAL("TMF:", "USBMRD.c", "USBMRD_c2920", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBMRD_c2937_FINAL(P, File, Name, ...)    __annotation(L ## P, L"c545fe3d-9b98-385c-84e8-450beb16428c ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 113 \"%0<%10!s!> _InPipeOk: Cxl timeout!\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_CRITICAL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBMRD_c2937_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 113 \"%0<%10!s!> _InPipeOk: Cxl timeout!\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_CRITICAL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBMRD_c2937
    #define WPP_ANNOTATE_USBMRD_c2937 WPP_ANNOTATE_USBMRD_c2937_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBMRD_c2937 WPP_ANNOTATE_USBMRD_c2937_FINAL("TMF:", "USBMRD.c", "USBMRD_c2937", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBMRD_c2948_FINAL(P, File, Name, ...)    __annotation(L ## P, L"c545fe3d-9b98-385c-84e8-450beb16428c ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 114 \"%0<%10!s!> _InPipeOk: IoCallDriver failed 0x%11!x!\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBMRD_c2948_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 114 \"%0<%10!s!> _InPipeOk: IoCallDriver failed 0x%11!x!\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBMRD_c2948
    #define WPP_ANNOTATE_USBMRD_c2948 WPP_ANNOTATE_USBMRD_c2948_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBMRD_c2948 WPP_ANNOTATE_USBMRD_c2948_FINAL("TMF:", "USBMRD.c", "USBMRD_c2948", L"{", L"pDevExt->PortName, ItemString -- 10" , L"ntStatus, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBMRD_c2966_FINAL(P, File, Name, ...)    __annotation(L ## P, L"c545fe3d-9b98-385c-84e8-450beb16428c ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 115 \"%0<%10!s!> <-- USBRD_InPipeOk 0x%11!x!/0x%12!x!\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_TRACE", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBMRD_c2966_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 115 \"%0<%10!s!> <-- USBRD_InPipeOk 0x%11!x!/0x%12!x!\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_TRACE", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBMRD_c2966
    #define WPP_ANNOTATE_USBMRD_c2966 WPP_ANNOTATE_USBMRD_c2966_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemLong -- 12" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBMRD_c2966 WPP_ANNOTATE_USBMRD_c2966_FINAL("TMF:", "USBMRD.c", "USBMRD_c2966", L"{", L"pDevExt->PortName, ItemString -- 10" , L"pIrp->IoStatus.Status, ItemLong -- 11" , L"STATUS_DEVICE_NOT_CONNECTED, ItemLong -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBMRD_c2994_FINAL(P, File, Name, ...)    __annotation(L ## P, L"c545fe3d-9b98-385c-84e8-450beb16428c ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 116 \"%0<%10!s!> IPO: MRD_FillIrpData: IRP buf too small: %11!d!/%12!d!B\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBMRD_c2994_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 116 \"%0<%10!s!> IPO: MRD_FillIrpData: IRP buf too small: %11!d!/%12!d!B\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBMRD_c2994
    #define WPP_ANNOTATE_USBMRD_c2994 WPP_ANNOTATE_USBMRD_c2994_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemLong -- 12" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBMRD_c2994 WPP_ANNOTATE_USBMRD_c2994_FINAL("TMF:", "USBMRD.c", "USBMRD_c2994", L"{", L"pDevExt->PortName, ItemString -- 10" , L"BufferSize, ItemLong -- 11" , L"DataLength, ItemLong -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBMRD_c301_FINAL(P, File, Name, ...)    __annotation(L ## P, L"c545fe3d-9b98-385c-84e8-450beb16428c ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 17 \"%0<%10!s!> L1: DUMMY_EVENT\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBMRD_c301_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 17 \"%0<%10!s!> L1: DUMMY_EVENT\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBMRD_c301
    #define WPP_ANNOTATE_USBMRD_c301 WPP_ANNOTATE_USBMRD_c301_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBMRD_c301 WPP_ANNOTATE_USBMRD_c301_FINAL("TMF:", "USBMRD.c", "USBMRD_c301", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBMRD_c3023_FINAL(P, File, Name, ...)    __annotation(L ## P, L"c545fe3d-9b98-385c-84e8-450beb16428c ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 117 \"%0<%10!s!> RECEIVED PACKET : seq num (%11!02X! %12!02X!)\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBMRD_c3023_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 117 \"%0<%10!s!> RECEIVED PACKET : seq num (%11!02X! %12!02X!)\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBMRD_c3023
    #define WPP_ANNOTATE_USBMRD_c3023 WPP_ANNOTATE_USBMRD_c3023_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemLong -- 12" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBMRD_c3023 WPP_ANNOTATE_USBMRD_c3023_FINAL("TMF:", "USBMRD.c", "USBMRD_c3023", L"{", L"pDevExt->PortName, ItemString -- 10" , L"(UCHAR)DataBuffer[4], ItemLong -- 11" , L"(UCHAR)DataBuffer[5], ItemLong -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBMRD_c3024_FINAL(P, File, Name, ...)    __annotation(L ## P, L"c545fe3d-9b98-385c-84e8-450beb16428c ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 118 \"%0<%10!s!> RECEIVED PACKET : seq num (%11!02X! %12!02X!)\" //  ", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBMRD_c3024_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 118 \"%0<%10!s!> RECEIVED PACKET : seq num (%11!02X! %12!02X!)\" //  ", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBMRD_c3024
    #define WPP_ANNOTATE_USBMRD_c3024 WPP_ANNOTATE_USBMRD_c3024_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemLong -- 12" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBMRD_c3024 WPP_ANNOTATE_USBMRD_c3024_FINAL("TMF:", "USBMRD.c", "USBMRD_c3024", L"{", L"pDevExt->PortName, ItemString -- 10" , L"(UCHAR)DataBuffer[4], ItemLong -- 11" , L"(UCHAR)DataBuffer[5], ItemLong -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBMRD_c3035_FINAL(P, File, Name, ...)    __annotation(L ## P, L"c545fe3d-9b98-385c-84e8-450beb16428c ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 119 \"%0<%10!s!> RECEIVED PACKET : seq num (%11!02X! %12!02X!)\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBMRD_c3035_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 119 \"%0<%10!s!> RECEIVED PACKET : seq num (%11!02X! %12!02X!)\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBMRD_c3035
    #define WPP_ANNOTATE_USBMRD_c3035 WPP_ANNOTATE_USBMRD_c3035_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemLong -- 12" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBMRD_c3035 WPP_ANNOTATE_USBMRD_c3035_FINAL("TMF:", "USBMRD.c", "USBMRD_c3035", L"{", L"pDevExt->PortName, ItemString -- 10" , L"(UCHAR)DataBuffer[18], ItemLong -- 11" , L"(UCHAR)DataBuffer[19], ItemLong -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBMRD_c325_FINAL(P, File, Name, ...)    __annotation(L ## P, L"c545fe3d-9b98-385c-84e8-450beb16428c ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 18 \"%0<%10!s!> L1 R kicked, active=%11!d!\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBMRD_c325_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 18 \"%0<%10!s!> L1 R kicked, active=%11!d!\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBMRD_c325
    #define WPP_ANNOTATE_USBMRD_c325 WPP_ANNOTATE_USBMRD_c325_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBMRD_c325 WPP_ANNOTATE_USBMRD_c325_FINAL("TMF:", "USBMRD.c", "USBMRD_c325", L"{", L"pDevExt->PortName, ItemString -- 10" , L"pDevExt->bL1ReadActive, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBMRD_c352_FINAL(P, File, Name, ...)    __annotation(L ## P, L"c545fe3d-9b98-385c-84e8-450beb16428c ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 19 \"%0<%10!s!> L1_CANCEL_EVENT_INDEX\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBMRD_c352_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 19 \"%0<%10!s!> L1_CANCEL_EVENT_INDEX\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBMRD_c352
    #define WPP_ANNOTATE_USBMRD_c352 WPP_ANNOTATE_USBMRD_c352_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBMRD_c352 WPP_ANNOTATE_USBMRD_c352_FINAL("TMF:", "USBMRD.c", "USBMRD_c352", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBMRD_c398_FINAL(P, File, Name, ...)    __annotation(L ## P, L"c545fe3d-9b98-385c-84e8-450beb16428c ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 20 \"%0<%10!s!> L1R cxl: L2 OUT\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBMRD_c398_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 20 \"%0<%10!s!> L1R cxl: L2 OUT\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBMRD_c398
    #define WPP_ANNOTATE_USBMRD_c398 WPP_ANNOTATE_USBMRD_c398_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBMRD_c398 WPP_ANNOTATE_USBMRD_c398_FINAL("TMF:", "USBMRD.c", "USBMRD_c398", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBMRD_c410_FINAL(P, File, Name, ...)    __annotation(L ## P, L"c545fe3d-9b98-385c-84e8-450beb16428c ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 21 \"%0<%10!s!> L1_CANCEL_EVENT_INDEX END\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBMRD_c410_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 21 \"%0<%10!s!> L1_CANCEL_EVENT_INDEX END\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBMRD_c410
    #define WPP_ANNOTATE_USBMRD_c410 WPP_ANNOTATE_USBMRD_c410_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBMRD_c410 WPP_ANNOTATE_USBMRD_c410_FINAL("TMF:", "USBMRD.c", "USBMRD_c410", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBMRD_c423_FINAL(P, File, Name, ...)    __annotation(L ## P, L"c545fe3d-9b98-385c-84e8-450beb16428c ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 22 \"%0<%10!s!> L1_READ_PURGE_EVENT\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBMRD_c423_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 22 \"%0<%10!s!> L1_READ_PURGE_EVENT\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBMRD_c423
    #define WPP_ANNOTATE_USBMRD_c423 WPP_ANNOTATE_USBMRD_c423_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBMRD_c423 WPP_ANNOTATE_USBMRD_c423_FINAL("TMF:", "USBMRD.c", "USBMRD_c423", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBMRD_c462_FINAL(P, File, Name, ...)    __annotation(L ## P, L"c545fe3d-9b98-385c-84e8-450beb16428c ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 23 \"%0<%10!s!> L1_STOP_EVENT\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBMRD_c462_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 23 \"%0<%10!s!> L1_STOP_EVENT\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBMRD_c462
    #define WPP_ANNOTATE_USBMRD_c462 WPP_ANNOTATE_USBMRD_c462_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBMRD_c462 WPP_ANNOTATE_USBMRD_c462_FINAL("TMF:", "USBMRD.c", "USBMRD_c462", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBMRD_c491_FINAL(P, File, Name, ...)    __annotation(L ## P, L"c545fe3d-9b98-385c-84e8-450beb16428c ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 24 \"%0<%10!s!> L1_RESUME_EVENT rm %11!d!\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBMRD_c491_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 24 \"%0<%10!s!> L1_RESUME_EVENT rm %11!d!\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBMRD_c491
    #define WPP_ANNOTATE_USBMRD_c491 WPP_ANNOTATE_USBMRD_c491_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBMRD_c491 WPP_ANNOTATE_USBMRD_c491_FINAL("TMF:", "USBMRD.c", "USBMRD_c491", L"{", L"pDevExt->PortName, ItemString -- 10" , L"pDevExt->bDeviceRemoved, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBMRD_c520_FINAL(P, File, Name, ...)    __annotation(L ## P, L"c545fe3d-9b98-385c-84e8-450beb16428c ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 25 \"%0<%10!s!> L1 unsupported st 0x%11!x!\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBMRD_c520_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 25 \"%0<%10!s!> L1 unsupported st 0x%11!x!\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBMRD_c520
    #define WPP_ANNOTATE_USBMRD_c520 WPP_ANNOTATE_USBMRD_c520_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBMRD_c520 WPP_ANNOTATE_USBMRD_c520_FINAL("TMF:", "USBMRD.c", "USBMRD_c520", L"{", L"pDevExt->PortName, ItemString -- 10" , L"ntStatus, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBMRD_c544_FINAL(P, File, Name, ...)    __annotation(L ## P, L"c545fe3d-9b98-385c-84e8-450beb16428c ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 26 \"%0<%10!s!> L1 thread exiting, cancelling L2\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBMRD_c544_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 26 \"%0<%10!s!> L1 thread exiting, cancelling L2\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBMRD_c544
    #define WPP_ANNOTATE_USBMRD_c544 WPP_ANNOTATE_USBMRD_c544_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBMRD_c544 WPP_ANNOTATE_USBMRD_c544_FINAL("TMF:", "USBMRD.c", "USBMRD_c544", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBMRD_c561_FINAL(P, File, Name, ...)    __annotation(L ## P, L"c545fe3d-9b98-385c-84e8-450beb16428c ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 27 \"%0<%10!s!> L1 thread exiting, cancelling L2 - 2 \" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBMRD_c561_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 27 \"%0<%10!s!> L1 thread exiting, cancelling L2 - 2 \" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBMRD_c561
    #define WPP_ANNOTATE_USBMRD_c561 WPP_ANNOTATE_USBMRD_c561_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBMRD_c561 WPP_ANNOTATE_USBMRD_c561_FINAL("TMF:", "USBMRD.c", "USBMRD_c561", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBMRD_c575_FINAL(P, File, Name, ...)    __annotation(L ## P, L"c545fe3d-9b98-385c-84e8-450beb16428c ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 28 \"%0<%10!s!> L1 thread exiting, cancelling L2 - 3 \" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBMRD_c575_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 28 \"%0<%10!s!> L1 thread exiting, cancelling L2 - 3 \" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBMRD_c575
    #define WPP_ANNOTATE_USBMRD_c575 WPP_ANNOTATE_USBMRD_c575_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBMRD_c575 WPP_ANNOTATE_USBMRD_c575_FINAL("TMF:", "USBMRD.c", "USBMRD_c575", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBMRD_c585_FINAL(P, File, Name, ...)    __annotation(L ## P, L"c545fe3d-9b98-385c-84e8-450beb16428c ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 29 \"%0<%10!s!> L1 thread exiting, cancelling L2 - 4 \" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBMRD_c585_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 29 \"%0<%10!s!> L1 thread exiting, cancelling L2 - 4 \" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBMRD_c585
    #define WPP_ANNOTATE_USBMRD_c585 WPP_ANNOTATE_USBMRD_c585_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBMRD_c585 WPP_ANNOTATE_USBMRD_c585_FINAL("TMF:", "USBMRD.c", "USBMRD_c585", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBMRD_c623_FINAL(P, File, Name, ...)    __annotation(L ## P, L"c545fe3d-9b98-385c-84e8-450beb16428c ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 30 \"%0<%10!s!> L1: OUT 0x%11!x! RmlCount[0]=%12!d!\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBMRD_c623_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 30 \"%0<%10!s!> L1: OUT 0x%11!x! RmlCount[0]=%12!d!\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBMRD_c623
    #define WPP_ANNOTATE_USBMRD_c623 WPP_ANNOTATE_USBMRD_c623_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemLong -- 12" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBMRD_c623 WPP_ANNOTATE_USBMRD_c623_FINAL("TMF:", "USBMRD.c", "USBMRD_c623", L"{", L"pDevExt->PortName, ItemString -- 10" , L"ntStatus, ItemLong -- 11" , L"pDevExt->Sts.lRmlCount[0], ItemLong -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBMRD_c652_FINAL(P, File, Name, ...)    __annotation(L ## P, L"c545fe3d-9b98-385c-84e8-450beb16428c ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 31 \"%0<%10!s!> ML2 COMPL: Irp[%11!u!]=0x%12!p!(0x%13!x!)\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_TRACE", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBMRD_c652_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 31 \"%0<%10!s!> ML2 COMPL: Irp[%11!u!]=0x%12!p!(0x%13!x!)\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_TRACE", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBMRD_c652
    #define WPP_ANNOTATE_USBMRD_c652 WPP_ANNOTATE_USBMRD_c652_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemPtr -- 12" , L"Arg, ItemLong -- 13" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBMRD_c652 WPP_ANNOTATE_USBMRD_c652_FINAL("TMF:", "USBMRD.c", "USBMRD_c652", L"{", L"pDevExt->PortName, ItemString -- 10" , L"pL2Ctx->Index, ItemLong -- 11" , L"Irp, ItemPtr -- 12" , L"Irp->IoStatus.Status, ItemLong -- 13" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBMRD_c68_FINAL(P, File, Name, ...)    __annotation(L ## P, L"c545fe3d-9b98-385c-84e8-450beb16428c ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 10 \"%0<%10!s!> L1: STATUS_NO_MEMORY 01\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_CRITICAL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBMRD_c68_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 10 \"%0<%10!s!> L1: STATUS_NO_MEMORY 01\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_CRITICAL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBMRD_c68
    #define WPP_ANNOTATE_USBMRD_c68 WPP_ANNOTATE_USBMRD_c68_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBMRD_c68 WPP_ANNOTATE_USBMRD_c68_FINAL("TMF:", "USBMRD.c", "USBMRD_c68", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBMRD_c702_FINAL(P, File, Name, ...)    __annotation(L ## P, L"c545fe3d-9b98-385c-84e8-450beb16428c ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 32 \"%0<%10!s!> ML2 ERR: wrong IRQL\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_CRITICAL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBMRD_c702_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 32 \"%0<%10!s!> ML2 ERR: wrong IRQL\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_CRITICAL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBMRD_c702
    #define WPP_ANNOTATE_USBMRD_c702 WPP_ANNOTATE_USBMRD_c702_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBMRD_c702 WPP_ANNOTATE_USBMRD_c702_FINAL("TMF:", "USBMRD.c", "USBMRD_c702", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBMRD_c722_FINAL(P, File, Name, ...)    __annotation(L ## P, L"c545fe3d-9b98-385c-84e8-450beb16428c ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 33 \"%0<%10!s!> ML2 - STATUS_NO_MEMORY 1\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_CRITICAL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBMRD_c722_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 33 \"%0<%10!s!> ML2 - STATUS_NO_MEMORY 1\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_CRITICAL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBMRD_c722
    #define WPP_ANNOTATE_USBMRD_c722 WPP_ANNOTATE_USBMRD_c722_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBMRD_c722 WPP_ANNOTATE_USBMRD_c722_FINAL("TMF:", "USBMRD.c", "USBMRD_c722", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBMRD_c751_FINAL(P, File, Name, ...)    __annotation(L ## P, L"c545fe3d-9b98-385c-84e8-450beb16428c ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 34 \"%0<%10!s!> ML2: pri=%11!d!, L2Buf=%12!d!\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_INFO", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBMRD_c751_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 34 \"%0<%10!s!> ML2: pri=%11!d!, L2Buf=%12!d!\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_INFO", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBMRD_c751
    #define WPP_ANNOTATE_USBMRD_c751 WPP_ANNOTATE_USBMRD_c751_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemLong -- 12" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBMRD_c751 WPP_ANNOTATE_USBMRD_c751_FINAL("TMF:", "USBMRD.c", "USBMRD_c751", L"{", L"pDevExt->PortName, ItemString -- 10" , L"KeQueryPriorityThread(KeGetCurrentThread()), ItemLong -- 11" , L"pDevExt->NumberOfL2Buffers, ItemLong -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBMRD_c831_FINAL(P, File, Name, ...)    __annotation(L ## P, L"c545fe3d-9b98-385c-84e8-450beb16428c ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 35 \"%0<%10!s!> ML2: IoCallDriver-IRP[%11!u!]=0x%12!p!, Pending %13!d!\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_FORCE", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBMRD_c831_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 35 \"%0<%10!s!> ML2: IoCallDriver-IRP[%11!u!]=0x%12!p!, Pending %13!d!\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_FORCE", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBMRD_c831
    #define WPP_ANNOTATE_USBMRD_c831 WPP_ANNOTATE_USBMRD_c831_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemPtr -- 12" , L"Arg, ItemLong -- 13" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBMRD_c831 WPP_ANNOTATE_USBMRD_c831_FINAL("TMF:", "USBMRD.c", "USBMRD_c831", L"{", L"pDevExt->PortName, ItemString -- 10" , L"pDevExt->L2IrpEndIdx, ItemLong -- 11" , L"pIrp, ItemPtr -- 12" , L"pDevExt->NumberOfPendingReadIRPs, ItemLong -- 13" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBMRD_c845_FINAL(P, File, Name, ...)    __annotation(L ## P, L"c545fe3d-9b98-385c-84e8-450beb16428c ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 36 \"%0<%10!s!> ML2 PENDING: Index[%11!u!]\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_TRACE", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBMRD_c845_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 36 \"%0<%10!s!> ML2 PENDING: Index[%11!u!]\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_TRACE", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBMRD_c845
    #define WPP_ANNOTATE_USBMRD_c845 WPP_ANNOTATE_USBMRD_c845_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBMRD_c845 WPP_ANNOTATE_USBMRD_c845_FINAL("TMF:", "USBMRD.c", "USBMRD_c845", L"{", L"pDevExt->PortName, ItemString -- 10" , L"pDevExt->pL2ReadBuffer[pDevExt->L2IrpEndIdx].Index, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBMRD_c860_FINAL(P, File, Name, ...)    __annotation(L ## P, L"c545fe3d-9b98-385c-84e8-450beb16428c ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 37 \"%0<%10!s!> ML2: IoCallDriver rtn 0x%11!x!\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_CRITICAL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBMRD_c860_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 37 \"%0<%10!s!> ML2: IoCallDriver rtn 0x%11!x!\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_CRITICAL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBMRD_c860
    #define WPP_ANNOTATE_USBMRD_c860 WPP_ANNOTATE_USBMRD_c860_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBMRD_c860 WPP_ANNOTATE_USBMRD_c860_FINAL("TMF:", "USBMRD.c", "USBMRD_c860", L"{", L"pDevExt->PortName, ItemString -- 10" , L"ntStatus, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBMRD_c871_FINAL(P, File, Name, ...)    __annotation(L ## P, L"c545fe3d-9b98-385c-84e8-450beb16428c ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 38 \"%0<%10!s!> ML2 DELETE: Index[%11!u!]\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_TRACE", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBMRD_c871_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 38 \"%0<%10!s!> ML2 DELETE: Index[%11!u!]\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_TRACE", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBMRD_c871
    #define WPP_ANNOTATE_USBMRD_c871 WPP_ANNOTATE_USBMRD_c871_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBMRD_c871 WPP_ANNOTATE_USBMRD_c871_FINAL("TMF:", "USBMRD.c", "USBMRD_c871", L"{", L"pDevExt->PortName, ItemString -- 10" , L"pDevExt->pL2ReadBuffer[pDevExt->L2IrpEndIdx].Index, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBMRD_c893_FINAL(P, File, Name, ...)    __annotation(L ## P, L"c545fe3d-9b98-385c-84e8-450beb16428c ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 39 \"%0<%10!s!> ML2 err, stopped\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBMRD_c893_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 39 \"%0<%10!s!> ML2 err, stopped\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBMRD_c893
    #define WPP_ANNOTATE_USBMRD_c893 WPP_ANNOTATE_USBMRD_c893_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBMRD_c893 WPP_ANNOTATE_USBMRD_c893_FINAL("TMF:", "USBMRD.c", "USBMRD_c893", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBMRD_c924_FINAL(P, File, Name, ...)    __annotation(L ## P, L"c545fe3d-9b98-385c-84e8-450beb16428c ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 40 \"%0<%10!s!> ML2 ON %11!ld!/%12!u!\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBMRD_c924_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 40 \"%0<%10!s!> ML2 ON %11!ld!/%12!u!\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBMRD_c924
    #define WPP_ANNOTATE_USBMRD_c924 WPP_ANNOTATE_USBMRD_c924_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemLong -- 12" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBMRD_c924 WPP_ANNOTATE_USBMRD_c924_FINAL("TMF:", "USBMRD.c", "USBMRD_c924", L"{", L"pDevExt->PortName, ItemString -- 10" , L"ulReadSize, ItemLong -- 11" , L"CountReadQueue(pDevExt), ItemLong -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBMRD_c934_FINAL(P, File, Name, ...)    __annotation(L ## P, L"c545fe3d-9b98-385c-84e8-450beb16428c ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 41 \"%0<%10!s!> ML2: ERR-ACTorSTOP(L2Stop=%11!u!)\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBMRD_c934_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 41 \"%0<%10!s!> ML2: ERR-ACTorSTOP(L2Stop=%11!u!)\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBMRD_c934
    #define WPP_ANNOTATE_USBMRD_c934 WPP_ANNOTATE_USBMRD_c934_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBMRD_c934 WPP_ANNOTATE_USBMRD_c934_FINAL("TMF:", "USBMRD.c", "USBMRD_c934", L"{", L"pDevExt->PortName, ItemString -- 10" , L"pDevExt->bL2Stopped, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBMRD_c947_FINAL(P, File, Name, ...)    __annotation(L ## P, L"c545fe3d-9b98-385c-84e8-450beb16428c ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 42 \"%0<%10!s!> ML2 buf exhausted or no dev, wait...\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBMRD_c947_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 42 \"%0<%10!s!> ML2 buf exhausted or no dev, wait...\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBMRD_c947
    #define WPP_ANNOTATE_USBMRD_c947 WPP_ANNOTATE_USBMRD_c947_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBMRD_c947 WPP_ANNOTATE_USBMRD_c947_FINAL("TMF:", "USBMRD.c", "USBMRD_c947", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBMRD_c956_FINAL(P, File, Name, ...)    __annotation(L ## P, L"c545fe3d-9b98-385c-84e8-450beb16428c ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 43 \"%0<%10!s!> ML2: %11!d! REQ's sent\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBMRD_c956_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 43 \"%0<%10!s!> ML2: %11!d! REQ's sent\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBMRD_c956
    #define WPP_ANNOTATE_USBMRD_c956 WPP_ANNOTATE_USBMRD_c956_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBMRD_c956 WPP_ANNOTATE_USBMRD_c956_FINAL("TMF:", "USBMRD.c", "USBMRD_c956", L"{", L"pDevExt->PortName, ItemString -- 10" , L"reqSent, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBMRD_c995_FINAL(P, File, Name, ...)    __annotation(L ## P, L"c545fe3d-9b98-385c-84e8-450beb16428c ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 44 \"%0<%10!s!> L2: DUMMY_EVENT\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBMRD_c995_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 44 \"%0<%10!s!> L2: DUMMY_EVENT\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBMRD_c995
    #define WPP_ANNOTATE_USBMRD_c995 WPP_ANNOTATE_USBMRD_c995_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBMRD_c995 WPP_ANNOTATE_USBMRD_c995_FINAL("TMF:", "USBMRD.c", "USBMRD_c995", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
# define WPP_ANNOTATE(x) WPP_ANNOTATE_ ## x,

#else
# define WPP_ANNOTATE(x)
#endif

#define WPP_LOCAL_TraceGuids WPP_c545fe3d9b98385c84e8450beb16428c_Traceguids

#if 1
extern const __declspec(selectany) GUID WPP_LOCAL_TraceGuids[] = { {0xc545fe3d,0x9b98,0x385c,{0x84,0xe8,0x45,0x0b,0xeb,0x16,0x42,0x8c}}, };
#endif

#ifndef WPP_ALREADY_INCLUDED

#if !defined(WPP_TRACE_OPTIONS)
enum {WPP_TRACE_OPTIONS = TRACE_MESSAGE_SEQUENCE   | TRACE_MESSAGE_GUID
                        | TRACE_MESSAGE_SYSTEMINFO | TRACE_MESSAGE_TIMESTAMP };
#endif

#if !defined(WPP_LOGPAIR)
# define WPP_LOGPAIR(_Size, _Addr)     (_Addr),((SIZE_T)(_Size)),
#endif

#define WPP_LOGTYPEVAL(_Type, _Value) WPP_LOGPAIR(sizeof(_Type), &(_Value))
#define WPP_LOGTYPEPTR(_Value)        WPP_LOGPAIR(sizeof(*(_Value)), (_Value))

// Marshalling macros.

#if !defined(WPP_LOGASTR)
# if !defined(WPP_CHECK_FOR_NULL_STRING)
#  define WPP_LOGASTR(_value)  WPP_LOGPAIR(strlen(_value) + 1, _value )
# else
#  define WPP_LOGASTR(_value)  WPP_LOGPAIR( (_value)?strlen(_value) + 1:5, (_value)?(_value):"NULL" )
# endif
#endif

#if !defined(WPP_LOGWSTR)
# if !defined(WPP_CHECK_FOR_NULL_STRING)
#  define WPP_LOGWSTR(_value)  WPP_LOGPAIR( (wcslen(_value)+1) * sizeof(WCHAR), _value)
# else
#  define WPP_LOGWSTR(_value)  WPP_LOGPAIR( ((_value)?wcslen(_value) + 1:5) * sizeof(WCHAR), (_value)?(_value):L"NULL" )
# endif
#endif

#if !defined(WPP_LOGPGUID)
# define WPP_LOGPGUID(_value) WPP_LOGPAIR( sizeof(GUID), (_value) )
#endif


#if !defined(WPP_LOGPSID)
# if !defined(WPP_CHECK_FOR_NULL_STRING)
# define WPP_LOGPSID(_value)  WPP_LOGPAIR( WPP_GetLengthSid(_value), (_value) )
# else
# define WPP_LOGPSID(_value)  WPP_LOGPAIR( (_value)? (WPP_IsValidSid(_value)? \
                                                                        WPP_GetLengthSid(_value):5):5, \
                                                                        (_value)? (WPP_IsValidSid(_value)?\
                                                                        (_value):"NULL"):"NULL")
#endif
#endif

#if !defined(WPP_LOGCSTR)
# define WPP_LOGCSTR(_x) \
    WPP_LOGPAIR( sizeof((_x).Length), &(_x).Length ) WPP_LOGPAIR( (_x).Length, (_x).Buffer )
#endif

#if !defined(WPP_LOGUSTR)
# define WPP_LOGUSTR(_x) \
    WPP_LOGPAIR( sizeof((_x).Length), &(_x).Length ) WPP_LOGPAIR( (_x).Length, (_x).Buffer )
#endif

#if !defined(WPP_LOGPUSTR)
#if !defined(WPP_CHECK_FOR_NULL_STRING)
# define WPP_LOGPUSTR(_x) WPP_LOGUSTR(*(_x))
#else
# define WPP_LOGPUSTR(_x) WPP_LOGPAIR( sizeof(USHORT), (_x)?&(_x)->Length:L"\x08" ) \
                          WPP_LOGPAIR( (_x)?(_x)->Length:0x08, (_x)?(_x)->Buffer:L"NULL" )
#endif
#endif

#if !defined(WPP_LOGPCSTR)
#if !defined(WPP_CHECK_FOR_NULL_STRING)
# define WPP_LOGPCSTR(_x) WPP_LOGCSTR(*(_x))
#else
# define WPP_LOGPCSTR(_x) WPP_LOGPAIR( sizeof(USHORT), (_x)?&(_x)->Length:L"\x04" ) \
                          WPP_LOGPAIR( (_x)?(_x)->Length:0x04, (_x)?(_x)->Buffer:"NULL" )
#endif
#endif

#if !defined(WPP_LOGSTDSTR)
#define WPP_LOGSTDSTR(_value)  WPP_LOGPAIR( (_value).size()+1, (_value).c_str() )
#endif

#endif  //  #ifndef WPP_ALREADY_INCLUDED

#if !defined(WPP_ENABLE_FLAG_BIT)
#define WPP_ENABLE_FLAG_BIT(flag) (WPP_CB[((flag) >> 16)].Control).Flags[( (0xFFFF & ((flag)-1) ) / 32)] & (1 << ( ((flag)-1) & 31 )) 
#endif

#ifndef WPP_SF_s_def
#       define WPP_SF_s_def
WPP_INLINE void WPP_SF_s(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, const char* _a1)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGASTR(_a1)  0); }
#endif  // #ifndef WPP_SF_s_def


//
// Generate the WPP_RECORDER_SP_s function    2
//
#ifndef WPP_RECORDER_SF_s_def
#       define WPP_RECORDER_SF_s_def
WPP_INLINE
VOID
WPP_RECORDER_SF_s(
    PVOID    AutoLogContext,
    UCHAR    level,
    ULONG    flags,
    USHORT   id,
    LPCGUID  traceGuid
    , const char* _a1
    )
{
    if (WPP_ENABLE_FLAG_BIT(flags) && 
       (WPP_CONTROL(flags).Level >= level)) {
        WPP_TRACE( WPP_CONTROL(flags).Logger,
                   WPP_TRACE_OPTIONS,
                   (LPGUID)traceGuid,
                   id,
                   WPP_LOGASTR(_a1)  0);

    }
    
    WPP_RECORDER( AutoLogContext, level, flags, (LPGUID) traceGuid, id, WPP_LOGASTR(_a1)  0);
}
#endif  // #ifndef WPP_RECORDER_SF_s_def


#ifndef WPP_SF_sD_def
#       define WPP_SF_sD_def
WPP_INLINE void WPP_SF_sD(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, const char* _a1, unsigned int _a2)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(unsigned int,_a2)  0); }
#endif  // #ifndef WPP_SF_sD_def


//
// Generate the WPP_RECORDER_SP_sD function    2
//
#ifndef WPP_RECORDER_SF_sD_def
#       define WPP_RECORDER_SF_sD_def
WPP_INLINE
VOID
WPP_RECORDER_SF_sD(
    PVOID    AutoLogContext,
    UCHAR    level,
    ULONG    flags,
    USHORT   id,
    LPCGUID  traceGuid
    , const char* _a1, unsigned int _a2
    )
{
    if (WPP_ENABLE_FLAG_BIT(flags) && 
       (WPP_CONTROL(flags).Level >= level)) {
        WPP_TRACE( WPP_CONTROL(flags).Logger,
                   WPP_TRACE_OPTIONS,
                   (LPGUID)traceGuid,
                   id,
                   WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(unsigned int,_a2)  0);

    }
    
    WPP_RECORDER( AutoLogContext, level, flags, (LPGUID) traceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(unsigned int,_a2)  0);
}
#endif  // #ifndef WPP_RECORDER_SF_sD_def


#ifndef WPP_SF_sDD_def
#       define WPP_SF_sDD_def
WPP_INLINE void WPP_SF_sDD(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, const char* _a1, unsigned int _a2, unsigned int _a3)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(unsigned int,_a2) WPP_LOGTYPEVAL(unsigned int,_a3)  0); }
#endif  // #ifndef WPP_SF_sDD_def


//
// Generate the WPP_RECORDER_SP_sDD function    2
//
#ifndef WPP_RECORDER_SF_sDD_def
#       define WPP_RECORDER_SF_sDD_def
WPP_INLINE
VOID
WPP_RECORDER_SF_sDD(
    PVOID    AutoLogContext,
    UCHAR    level,
    ULONG    flags,
    USHORT   id,
    LPCGUID  traceGuid
    , const char* _a1, unsigned int _a2, unsigned int _a3
    )
{
    if (WPP_ENABLE_FLAG_BIT(flags) && 
       (WPP_CONTROL(flags).Level >= level)) {
        WPP_TRACE( WPP_CONTROL(flags).Logger,
                   WPP_TRACE_OPTIONS,
                   (LPGUID)traceGuid,
                   id,
                   WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(unsigned int,_a2) WPP_LOGTYPEVAL(unsigned int,_a3)  0);

    }
    
    WPP_RECORDER( AutoLogContext, level, flags, (LPGUID) traceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(unsigned int,_a2) WPP_LOGTYPEVAL(unsigned int,_a3)  0);
}
#endif  // #ifndef WPP_RECORDER_SF_sDD_def


#ifndef WPP_SF_sDDD_def
#       define WPP_SF_sDDD_def
WPP_INLINE void WPP_SF_sDDD(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, const char* _a1, unsigned int _a2, unsigned int _a3, unsigned int _a4)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(unsigned int,_a2) WPP_LOGTYPEVAL(unsigned int,_a3) WPP_LOGTYPEVAL(unsigned int,_a4)  0); }
#endif  // #ifndef WPP_SF_sDDD_def


//
// Generate the WPP_RECORDER_SP_sDDD function    2
//
#ifndef WPP_RECORDER_SF_sDDD_def
#       define WPP_RECORDER_SF_sDDD_def
WPP_INLINE
VOID
WPP_RECORDER_SF_sDDD(
    PVOID    AutoLogContext,
    UCHAR    level,
    ULONG    flags,
    USHORT   id,
    LPCGUID  traceGuid
    , const char* _a1, unsigned int _a2, unsigned int _a3, unsigned int _a4
    )
{
    if (WPP_ENABLE_FLAG_BIT(flags) && 
       (WPP_CONTROL(flags).Level >= level)) {
        WPP_TRACE( WPP_CONTROL(flags).Logger,
                   WPP_TRACE_OPTIONS,
                   (LPGUID)traceGuid,
                   id,
                   WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(unsigned int,_a2) WPP_LOGTYPEVAL(unsigned int,_a3) WPP_LOGTYPEVAL(unsigned int,_a4)  0);

    }
    
    WPP_RECORDER( AutoLogContext, level, flags, (LPGUID) traceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(unsigned int,_a2) WPP_LOGTYPEVAL(unsigned int,_a3) WPP_LOGTYPEVAL(unsigned int,_a4)  0);
}
#endif  // #ifndef WPP_RECORDER_SF_sDDD_def


#ifndef WPP_SF_sDDDD_def
#       define WPP_SF_sDDDD_def
WPP_INLINE void WPP_SF_sDDDD(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, const char* _a1, unsigned int _a2, unsigned int _a3, unsigned int _a4, unsigned int _a5)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(unsigned int,_a2) WPP_LOGTYPEVAL(unsigned int,_a3) WPP_LOGTYPEVAL(unsigned int,_a4) WPP_LOGTYPEVAL(unsigned int,_a5)  0); }
#endif  // #ifndef WPP_SF_sDDDD_def


//
// Generate the WPP_RECORDER_SP_sDDDD function    2
//
#ifndef WPP_RECORDER_SF_sDDDD_def
#       define WPP_RECORDER_SF_sDDDD_def
WPP_INLINE
VOID
WPP_RECORDER_SF_sDDDD(
    PVOID    AutoLogContext,
    UCHAR    level,
    ULONG    flags,
    USHORT   id,
    LPCGUID  traceGuid
    , const char* _a1, unsigned int _a2, unsigned int _a3, unsigned int _a4, unsigned int _a5
    )
{
    if (WPP_ENABLE_FLAG_BIT(flags) && 
       (WPP_CONTROL(flags).Level >= level)) {
        WPP_TRACE( WPP_CONTROL(flags).Logger,
                   WPP_TRACE_OPTIONS,
                   (LPGUID)traceGuid,
                   id,
                   WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(unsigned int,_a2) WPP_LOGTYPEVAL(unsigned int,_a3) WPP_LOGTYPEVAL(unsigned int,_a4) WPP_LOGTYPEVAL(unsigned int,_a5)  0);

    }
    
    WPP_RECORDER( AutoLogContext, level, flags, (LPGUID) traceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(unsigned int,_a2) WPP_LOGTYPEVAL(unsigned int,_a3) WPP_LOGTYPEVAL(unsigned int,_a4) WPP_LOGTYPEVAL(unsigned int,_a5)  0);
}
#endif  // #ifndef WPP_RECORDER_SF_sDDDD_def


#ifndef WPP_SF_sDd_def
#       define WPP_SF_sDd_def
WPP_INLINE void WPP_SF_sDd(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, const char* _a1, unsigned int _a2, signed int _a3)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(unsigned int,_a2) WPP_LOGTYPEVAL(signed int,_a3)  0); }
#endif  // #ifndef WPP_SF_sDd_def


//
// Generate the WPP_RECORDER_SP_sDd function    2
//
#ifndef WPP_RECORDER_SF_sDd_def
#       define WPP_RECORDER_SF_sDd_def
WPP_INLINE
VOID
WPP_RECORDER_SF_sDd(
    PVOID    AutoLogContext,
    UCHAR    level,
    ULONG    flags,
    USHORT   id,
    LPCGUID  traceGuid
    , const char* _a1, unsigned int _a2, signed int _a3
    )
{
    if (WPP_ENABLE_FLAG_BIT(flags) && 
       (WPP_CONTROL(flags).Level >= level)) {
        WPP_TRACE( WPP_CONTROL(flags).Logger,
                   WPP_TRACE_OPTIONS,
                   (LPGUID)traceGuid,
                   id,
                   WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(unsigned int,_a2) WPP_LOGTYPEVAL(signed int,_a3)  0);

    }
    
    WPP_RECORDER( AutoLogContext, level, flags, (LPGUID) traceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(unsigned int,_a2) WPP_LOGTYPEVAL(signed int,_a3)  0);
}
#endif  // #ifndef WPP_RECORDER_SF_sDd_def


#ifndef WPP_SF_sDqD_def
#       define WPP_SF_sDqD_def
WPP_INLINE void WPP_SF_sDqD(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, const char* _a1, unsigned int _a2, const void* _a3, unsigned int _a4)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(unsigned int,_a2) WPP_LOGTYPEVAL(const void*,_a3) WPP_LOGTYPEVAL(unsigned int,_a4)  0); }
#endif  // #ifndef WPP_SF_sDqD_def


//
// Generate the WPP_RECORDER_SP_sDqD function    2
//
#ifndef WPP_RECORDER_SF_sDqD_def
#       define WPP_RECORDER_SF_sDqD_def
WPP_INLINE
VOID
WPP_RECORDER_SF_sDqD(
    PVOID    AutoLogContext,
    UCHAR    level,
    ULONG    flags,
    USHORT   id,
    LPCGUID  traceGuid
    , const char* _a1, unsigned int _a2, const void* _a3, unsigned int _a4
    )
{
    if (WPP_ENABLE_FLAG_BIT(flags) && 
       (WPP_CONTROL(flags).Level >= level)) {
        WPP_TRACE( WPP_CONTROL(flags).Logger,
                   WPP_TRACE_OPTIONS,
                   (LPGUID)traceGuid,
                   id,
                   WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(unsigned int,_a2) WPP_LOGTYPEVAL(const void*,_a3) WPP_LOGTYPEVAL(unsigned int,_a4)  0);

    }
    
    WPP_RECORDER( AutoLogContext, level, flags, (LPGUID) traceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(unsigned int,_a2) WPP_LOGTYPEVAL(const void*,_a3) WPP_LOGTYPEVAL(unsigned int,_a4)  0);
}
#endif  // #ifndef WPP_RECORDER_SF_sDqD_def


#ifndef WPP_SF_sDqd_def
#       define WPP_SF_sDqd_def
WPP_INLINE void WPP_SF_sDqd(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, const char* _a1, unsigned int _a2, const void* _a3, signed int _a4)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(unsigned int,_a2) WPP_LOGTYPEVAL(const void*,_a3) WPP_LOGTYPEVAL(signed int,_a4)  0); }
#endif  // #ifndef WPP_SF_sDqd_def


//
// Generate the WPP_RECORDER_SP_sDqd function    2
//
#ifndef WPP_RECORDER_SF_sDqd_def
#       define WPP_RECORDER_SF_sDqd_def
WPP_INLINE
VOID
WPP_RECORDER_SF_sDqd(
    PVOID    AutoLogContext,
    UCHAR    level,
    ULONG    flags,
    USHORT   id,
    LPCGUID  traceGuid
    , const char* _a1, unsigned int _a2, const void* _a3, signed int _a4
    )
{
    if (WPP_ENABLE_FLAG_BIT(flags) && 
       (WPP_CONTROL(flags).Level >= level)) {
        WPP_TRACE( WPP_CONTROL(flags).Logger,
                   WPP_TRACE_OPTIONS,
                   (LPGUID)traceGuid,
                   id,
                   WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(unsigned int,_a2) WPP_LOGTYPEVAL(const void*,_a3) WPP_LOGTYPEVAL(signed int,_a4)  0);

    }
    
    WPP_RECORDER( AutoLogContext, level, flags, (LPGUID) traceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(unsigned int,_a2) WPP_LOGTYPEVAL(const void*,_a3) WPP_LOGTYPEVAL(signed int,_a4)  0);
}
#endif  // #ifndef WPP_RECORDER_SF_sDqd_def


#ifndef WPP_SF_sd_def
#       define WPP_SF_sd_def
WPP_INLINE void WPP_SF_sd(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, const char* _a1, signed int _a2)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(signed int,_a2)  0); }
#endif  // #ifndef WPP_SF_sd_def


//
// Generate the WPP_RECORDER_SP_sd function    2
//
#ifndef WPP_RECORDER_SF_sd_def
#       define WPP_RECORDER_SF_sd_def
WPP_INLINE
VOID
WPP_RECORDER_SF_sd(
    PVOID    AutoLogContext,
    UCHAR    level,
    ULONG    flags,
    USHORT   id,
    LPCGUID  traceGuid
    , const char* _a1, signed int _a2
    )
{
    if (WPP_ENABLE_FLAG_BIT(flags) && 
       (WPP_CONTROL(flags).Level >= level)) {
        WPP_TRACE( WPP_CONTROL(flags).Logger,
                   WPP_TRACE_OPTIONS,
                   (LPGUID)traceGuid,
                   id,
                   WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(signed int,_a2)  0);

    }
    
    WPP_RECORDER( AutoLogContext, level, flags, (LPGUID) traceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(signed int,_a2)  0);
}
#endif  // #ifndef WPP_RECORDER_SF_sd_def


#ifndef WPP_SF_sdD_def
#       define WPP_SF_sdD_def
WPP_INLINE void WPP_SF_sdD(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, const char* _a1, signed int _a2, unsigned int _a3)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(signed int,_a2) WPP_LOGTYPEVAL(unsigned int,_a3)  0); }
#endif  // #ifndef WPP_SF_sdD_def


//
// Generate the WPP_RECORDER_SP_sdD function    2
//
#ifndef WPP_RECORDER_SF_sdD_def
#       define WPP_RECORDER_SF_sdD_def
WPP_INLINE
VOID
WPP_RECORDER_SF_sdD(
    PVOID    AutoLogContext,
    UCHAR    level,
    ULONG    flags,
    USHORT   id,
    LPCGUID  traceGuid
    , const char* _a1, signed int _a2, unsigned int _a3
    )
{
    if (WPP_ENABLE_FLAG_BIT(flags) && 
       (WPP_CONTROL(flags).Level >= level)) {
        WPP_TRACE( WPP_CONTROL(flags).Logger,
                   WPP_TRACE_OPTIONS,
                   (LPGUID)traceGuid,
                   id,
                   WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(signed int,_a2) WPP_LOGTYPEVAL(unsigned int,_a3)  0);

    }
    
    WPP_RECORDER( AutoLogContext, level, flags, (LPGUID) traceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(signed int,_a2) WPP_LOGTYPEVAL(unsigned int,_a3)  0);
}
#endif  // #ifndef WPP_RECORDER_SF_sdD_def


#ifndef WPP_SF_sdd_def
#       define WPP_SF_sdd_def
WPP_INLINE void WPP_SF_sdd(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, const char* _a1, signed int _a2, signed int _a3)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(signed int,_a2) WPP_LOGTYPEVAL(signed int,_a3)  0); }
#endif  // #ifndef WPP_SF_sdd_def


//
// Generate the WPP_RECORDER_SP_sdd function    2
//
#ifndef WPP_RECORDER_SF_sdd_def
#       define WPP_RECORDER_SF_sdd_def
WPP_INLINE
VOID
WPP_RECORDER_SF_sdd(
    PVOID    AutoLogContext,
    UCHAR    level,
    ULONG    flags,
    USHORT   id,
    LPCGUID  traceGuid
    , const char* _a1, signed int _a2, signed int _a3
    )
{
    if (WPP_ENABLE_FLAG_BIT(flags) && 
       (WPP_CONTROL(flags).Level >= level)) {
        WPP_TRACE( WPP_CONTROL(flags).Logger,
                   WPP_TRACE_OPTIONS,
                   (LPGUID)traceGuid,
                   id,
                   WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(signed int,_a2) WPP_LOGTYPEVAL(signed int,_a3)  0);

    }
    
    WPP_RECORDER( AutoLogContext, level, flags, (LPGUID) traceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(signed int,_a2) WPP_LOGTYPEVAL(signed int,_a3)  0);
}
#endif  // #ifndef WPP_RECORDER_SF_sdd_def


#ifndef WPP_SF_sddd_def
#       define WPP_SF_sddd_def
WPP_INLINE void WPP_SF_sddd(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, const char* _a1, signed int _a2, signed int _a3, signed int _a4)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(signed int,_a2) WPP_LOGTYPEVAL(signed int,_a3) WPP_LOGTYPEVAL(signed int,_a4)  0); }
#endif  // #ifndef WPP_SF_sddd_def


//
// Generate the WPP_RECORDER_SP_sddd function    2
//
#ifndef WPP_RECORDER_SF_sddd_def
#       define WPP_RECORDER_SF_sddd_def
WPP_INLINE
VOID
WPP_RECORDER_SF_sddd(
    PVOID    AutoLogContext,
    UCHAR    level,
    ULONG    flags,
    USHORT   id,
    LPCGUID  traceGuid
    , const char* _a1, signed int _a2, signed int _a3, signed int _a4
    )
{
    if (WPP_ENABLE_FLAG_BIT(flags) && 
       (WPP_CONTROL(flags).Level >= level)) {
        WPP_TRACE( WPP_CONTROL(flags).Logger,
                   WPP_TRACE_OPTIONS,
                   (LPGUID)traceGuid,
                   id,
                   WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(signed int,_a2) WPP_LOGTYPEVAL(signed int,_a3) WPP_LOGTYPEVAL(signed int,_a4)  0);

    }
    
    WPP_RECORDER( AutoLogContext, level, flags, (LPGUID) traceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(signed int,_a2) WPP_LOGTYPEVAL(signed int,_a3) WPP_LOGTYPEVAL(signed int,_a4)  0);
}
#endif  // #ifndef WPP_RECORDER_SF_sddd_def


#ifndef WPP_SF_sdddD_def
#       define WPP_SF_sdddD_def
WPP_INLINE void WPP_SF_sdddD(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, const char* _a1, signed int _a2, signed int _a3, signed int _a4, unsigned int _a5)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(signed int,_a2) WPP_LOGTYPEVAL(signed int,_a3) WPP_LOGTYPEVAL(signed int,_a4) WPP_LOGTYPEVAL(unsigned int,_a5)  0); }
#endif  // #ifndef WPP_SF_sdddD_def


//
// Generate the WPP_RECORDER_SP_sdddD function    2
//
#ifndef WPP_RECORDER_SF_sdddD_def
#       define WPP_RECORDER_SF_sdddD_def
WPP_INLINE
VOID
WPP_RECORDER_SF_sdddD(
    PVOID    AutoLogContext,
    UCHAR    level,
    ULONG    flags,
    USHORT   id,
    LPCGUID  traceGuid
    , const char* _a1, signed int _a2, signed int _a3, signed int _a4, unsigned int _a5
    )
{
    if (WPP_ENABLE_FLAG_BIT(flags) && 
       (WPP_CONTROL(flags).Level >= level)) {
        WPP_TRACE( WPP_CONTROL(flags).Logger,
                   WPP_TRACE_OPTIONS,
                   (LPGUID)traceGuid,
                   id,
                   WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(signed int,_a2) WPP_LOGTYPEVAL(signed int,_a3) WPP_LOGTYPEVAL(signed int,_a4) WPP_LOGTYPEVAL(unsigned int,_a5)  0);

    }
    
    WPP_RECORDER( AutoLogContext, level, flags, (LPGUID) traceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(signed int,_a2) WPP_LOGTYPEVAL(signed int,_a3) WPP_LOGTYPEVAL(signed int,_a4) WPP_LOGTYPEVAL(unsigned int,_a5)  0);
}
#endif  // #ifndef WPP_RECORDER_SF_sdddD_def


#ifndef WPP_SF_sdl_def
#       define WPP_SF_sdl_def
WPP_INLINE void WPP_SF_sdl(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, const char* _a1, signed int _a2, signed long _a3)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(signed int,_a2) WPP_LOGTYPEVAL(signed long,_a3)  0); }
#endif  // #ifndef WPP_SF_sdl_def


//
// Generate the WPP_RECORDER_SP_sdl function    2
//
#ifndef WPP_RECORDER_SF_sdl_def
#       define WPP_RECORDER_SF_sdl_def
WPP_INLINE
VOID
WPP_RECORDER_SF_sdl(
    PVOID    AutoLogContext,
    UCHAR    level,
    ULONG    flags,
    USHORT   id,
    LPCGUID  traceGuid
    , const char* _a1, signed int _a2, signed long _a3
    )
{
    if (WPP_ENABLE_FLAG_BIT(flags) && 
       (WPP_CONTROL(flags).Level >= level)) {
        WPP_TRACE( WPP_CONTROL(flags).Logger,
                   WPP_TRACE_OPTIONS,
                   (LPGUID)traceGuid,
                   id,
                   WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(signed int,_a2) WPP_LOGTYPEVAL(signed long,_a3)  0);

    }
    
    WPP_RECORDER( AutoLogContext, level, flags, (LPGUID) traceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(signed int,_a2) WPP_LOGTYPEVAL(signed long,_a3)  0);
}
#endif  // #ifndef WPP_RECORDER_SF_sdl_def


#ifndef WPP_SF_sdq_def
#       define WPP_SF_sdq_def
WPP_INLINE void WPP_SF_sdq(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, const char* _a1, signed int _a2, const void* _a3)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(signed int,_a2) WPP_LOGTYPEVAL(const void*,_a3)  0); }
#endif  // #ifndef WPP_SF_sdq_def


//
// Generate the WPP_RECORDER_SP_sdq function    2
//
#ifndef WPP_RECORDER_SF_sdq_def
#       define WPP_RECORDER_SF_sdq_def
WPP_INLINE
VOID
WPP_RECORDER_SF_sdq(
    PVOID    AutoLogContext,
    UCHAR    level,
    ULONG    flags,
    USHORT   id,
    LPCGUID  traceGuid
    , const char* _a1, signed int _a2, const void* _a3
    )
{
    if (WPP_ENABLE_FLAG_BIT(flags) && 
       (WPP_CONTROL(flags).Level >= level)) {
        WPP_TRACE( WPP_CONTROL(flags).Logger,
                   WPP_TRACE_OPTIONS,
                   (LPGUID)traceGuid,
                   id,
                   WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(signed int,_a2) WPP_LOGTYPEVAL(const void*,_a3)  0);

    }
    
    WPP_RECORDER( AutoLogContext, level, flags, (LPGUID) traceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(signed int,_a2) WPP_LOGTYPEVAL(const void*,_a3)  0);
}
#endif  // #ifndef WPP_RECORDER_SF_sdq_def


#ifndef WPP_SF_sl_def
#       define WPP_SF_sl_def
WPP_INLINE void WPP_SF_sl(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, const char* _a1, signed long _a2)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(signed long,_a2)  0); }
#endif  // #ifndef WPP_SF_sl_def


//
// Generate the WPP_RECORDER_SP_sl function    2
//
#ifndef WPP_RECORDER_SF_sl_def
#       define WPP_RECORDER_SF_sl_def
WPP_INLINE
VOID
WPP_RECORDER_SF_sl(
    PVOID    AutoLogContext,
    UCHAR    level,
    ULONG    flags,
    USHORT   id,
    LPCGUID  traceGuid
    , const char* _a1, signed long _a2
    )
{
    if (WPP_ENABLE_FLAG_BIT(flags) && 
       (WPP_CONTROL(flags).Level >= level)) {
        WPP_TRACE( WPP_CONTROL(flags).Logger,
                   WPP_TRACE_OPTIONS,
                   (LPGUID)traceGuid,
                   id,
                   WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(signed long,_a2)  0);

    }
    
    WPP_RECORDER( AutoLogContext, level, flags, (LPGUID) traceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(signed long,_a2)  0);
}
#endif  // #ifndef WPP_RECORDER_SF_sl_def


#ifndef WPP_SF_slL_def
#       define WPP_SF_slL_def
WPP_INLINE void WPP_SF_slL(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, const char* _a1, signed long _a2, unsigned long _a3)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(signed long,_a2) WPP_LOGTYPEVAL(unsigned long,_a3)  0); }
#endif  // #ifndef WPP_SF_slL_def


//
// Generate the WPP_RECORDER_SP_slL function    2
//
#ifndef WPP_RECORDER_SF_slL_def
#       define WPP_RECORDER_SF_slL_def
WPP_INLINE
VOID
WPP_RECORDER_SF_slL(
    PVOID    AutoLogContext,
    UCHAR    level,
    ULONG    flags,
    USHORT   id,
    LPCGUID  traceGuid
    , const char* _a1, signed long _a2, unsigned long _a3
    )
{
    if (WPP_ENABLE_FLAG_BIT(flags) && 
       (WPP_CONTROL(flags).Level >= level)) {
        WPP_TRACE( WPP_CONTROL(flags).Logger,
                   WPP_TRACE_OPTIONS,
                   (LPGUID)traceGuid,
                   id,
                   WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(signed long,_a2) WPP_LOGTYPEVAL(unsigned long,_a3)  0);

    }
    
    WPP_RECORDER( AutoLogContext, level, flags, (LPGUID) traceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(signed long,_a2) WPP_LOGTYPEVAL(unsigned long,_a3)  0);
}
#endif  // #ifndef WPP_RECORDER_SF_slL_def


#ifndef WPP_SF_sll_def
#       define WPP_SF_sll_def
WPP_INLINE void WPP_SF_sll(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, const char* _a1, signed long _a2, signed long _a3)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(signed long,_a2) WPP_LOGTYPEVAL(signed long,_a3)  0); }
#endif  // #ifndef WPP_SF_sll_def


//
// Generate the WPP_RECORDER_SP_sll function    2
//
#ifndef WPP_RECORDER_SF_sll_def
#       define WPP_RECORDER_SF_sll_def
WPP_INLINE
VOID
WPP_RECORDER_SF_sll(
    PVOID    AutoLogContext,
    UCHAR    level,
    ULONG    flags,
    USHORT   id,
    LPCGUID  traceGuid
    , const char* _a1, signed long _a2, signed long _a3
    )
{
    if (WPP_ENABLE_FLAG_BIT(flags) && 
       (WPP_CONTROL(flags).Level >= level)) {
        WPP_TRACE( WPP_CONTROL(flags).Logger,
                   WPP_TRACE_OPTIONS,
                   (LPGUID)traceGuid,
                   id,
                   WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(signed long,_a2) WPP_LOGTYPEVAL(signed long,_a3)  0);

    }
    
    WPP_RECORDER( AutoLogContext, level, flags, (LPGUID) traceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(signed long,_a2) WPP_LOGTYPEVAL(signed long,_a3)  0);
}
#endif  // #ifndef WPP_RECORDER_SF_sll_def


#ifndef WPP_SF_slll_def
#       define WPP_SF_slll_def
WPP_INLINE void WPP_SF_slll(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, const char* _a1, signed long _a2, signed long _a3, signed long _a4)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(signed long,_a2) WPP_LOGTYPEVAL(signed long,_a3) WPP_LOGTYPEVAL(signed long,_a4)  0); }
#endif  // #ifndef WPP_SF_slll_def


//
// Generate the WPP_RECORDER_SP_slll function    2
//
#ifndef WPP_RECORDER_SF_slll_def
#       define WPP_RECORDER_SF_slll_def
WPP_INLINE
VOID
WPP_RECORDER_SF_slll(
    PVOID    AutoLogContext,
    UCHAR    level,
    ULONG    flags,
    USHORT   id,
    LPCGUID  traceGuid
    , const char* _a1, signed long _a2, signed long _a3, signed long _a4
    )
{
    if (WPP_ENABLE_FLAG_BIT(flags) && 
       (WPP_CONTROL(flags).Level >= level)) {
        WPP_TRACE( WPP_CONTROL(flags).Logger,
                   WPP_TRACE_OPTIONS,
                   (LPGUID)traceGuid,
                   id,
                   WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(signed long,_a2) WPP_LOGTYPEVAL(signed long,_a3) WPP_LOGTYPEVAL(signed long,_a4)  0);

    }
    
    WPP_RECORDER( AutoLogContext, level, flags, (LPGUID) traceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(signed long,_a2) WPP_LOGTYPEVAL(signed long,_a3) WPP_LOGTYPEVAL(signed long,_a4)  0);
}
#endif  // #ifndef WPP_RECORDER_SF_slll_def


#ifndef WPP_SF_sq_def
#       define WPP_SF_sq_def
WPP_INLINE void WPP_SF_sq(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, const char* _a1, const void* _a2)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(const void*,_a2)  0); }
#endif  // #ifndef WPP_SF_sq_def


//
// Generate the WPP_RECORDER_SP_sq function    2
//
#ifndef WPP_RECORDER_SF_sq_def
#       define WPP_RECORDER_SF_sq_def
WPP_INLINE
VOID
WPP_RECORDER_SF_sq(
    PVOID    AutoLogContext,
    UCHAR    level,
    ULONG    flags,
    USHORT   id,
    LPCGUID  traceGuid
    , const char* _a1, const void* _a2
    )
{
    if (WPP_ENABLE_FLAG_BIT(flags) && 
       (WPP_CONTROL(flags).Level >= level)) {
        WPP_TRACE( WPP_CONTROL(flags).Logger,
                   WPP_TRACE_OPTIONS,
                   (LPGUID)traceGuid,
                   id,
                   WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(const void*,_a2)  0);

    }
    
    WPP_RECORDER( AutoLogContext, level, flags, (LPGUID) traceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(const void*,_a2)  0);
}
#endif  // #ifndef WPP_RECORDER_SF_sq_def


#ifndef WPP_SF_sqDD_def
#       define WPP_SF_sqDD_def
WPP_INLINE void WPP_SF_sqDD(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, const char* _a1, const void* _a2, unsigned int _a3, unsigned int _a4)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(const void*,_a2) WPP_LOGTYPEVAL(unsigned int,_a3) WPP_LOGTYPEVAL(unsigned int,_a4)  0); }
#endif  // #ifndef WPP_SF_sqDD_def


//
// Generate the WPP_RECORDER_SP_sqDD function    2
//
#ifndef WPP_RECORDER_SF_sqDD_def
#       define WPP_RECORDER_SF_sqDD_def
WPP_INLINE
VOID
WPP_RECORDER_SF_sqDD(
    PVOID    AutoLogContext,
    UCHAR    level,
    ULONG    flags,
    USHORT   id,
    LPCGUID  traceGuid
    , const char* _a1, const void* _a2, unsigned int _a3, unsigned int _a4
    )
{
    if (WPP_ENABLE_FLAG_BIT(flags) && 
       (WPP_CONTROL(flags).Level >= level)) {
        WPP_TRACE( WPP_CONTROL(flags).Logger,
                   WPP_TRACE_OPTIONS,
                   (LPGUID)traceGuid,
                   id,
                   WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(const void*,_a2) WPP_LOGTYPEVAL(unsigned int,_a3) WPP_LOGTYPEVAL(unsigned int,_a4)  0);

    }
    
    WPP_RECORDER( AutoLogContext, level, flags, (LPGUID) traceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(const void*,_a2) WPP_LOGTYPEVAL(unsigned int,_a3) WPP_LOGTYPEVAL(unsigned int,_a4)  0);
}
#endif  // #ifndef WPP_RECORDER_SF_sqDD_def


#ifndef WPP_SF_sqDDD_def
#       define WPP_SF_sqDDD_def
WPP_INLINE void WPP_SF_sqDDD(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, const char* _a1, const void* _a2, unsigned int _a3, unsigned int _a4, unsigned int _a5)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(const void*,_a2) WPP_LOGTYPEVAL(unsigned int,_a3) WPP_LOGTYPEVAL(unsigned int,_a4) WPP_LOGTYPEVAL(unsigned int,_a5)  0); }
#endif  // #ifndef WPP_SF_sqDDD_def


//
// Generate the WPP_RECORDER_SP_sqDDD function    2
//
#ifndef WPP_RECORDER_SF_sqDDD_def
#       define WPP_RECORDER_SF_sqDDD_def
WPP_INLINE
VOID
WPP_RECORDER_SF_sqDDD(
    PVOID    AutoLogContext,
    UCHAR    level,
    ULONG    flags,
    USHORT   id,
    LPCGUID  traceGuid
    , const char* _a1, const void* _a2, unsigned int _a3, unsigned int _a4, unsigned int _a5
    )
{
    if (WPP_ENABLE_FLAG_BIT(flags) && 
       (WPP_CONTROL(flags).Level >= level)) {
        WPP_TRACE( WPP_CONTROL(flags).Logger,
                   WPP_TRACE_OPTIONS,
                   (LPGUID)traceGuid,
                   id,
                   WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(const void*,_a2) WPP_LOGTYPEVAL(unsigned int,_a3) WPP_LOGTYPEVAL(unsigned int,_a4) WPP_LOGTYPEVAL(unsigned int,_a5)  0);

    }
    
    WPP_RECORDER( AutoLogContext, level, flags, (LPGUID) traceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(const void*,_a2) WPP_LOGTYPEVAL(unsigned int,_a3) WPP_LOGTYPEVAL(unsigned int,_a4) WPP_LOGTYPEVAL(unsigned int,_a5)  0);
}
#endif  // #ifndef WPP_RECORDER_SF_sqDDD_def


#ifndef WPP_SF_sqlDd_def
#       define WPP_SF_sqlDd_def
WPP_INLINE void WPP_SF_sqlDd(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, const char* _a1, const void* _a2, signed long _a3, unsigned int _a4, signed int _a5)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(const void*,_a2) WPP_LOGTYPEVAL(signed long,_a3) WPP_LOGTYPEVAL(unsigned int,_a4) WPP_LOGTYPEVAL(signed int,_a5)  0); }
#endif  // #ifndef WPP_SF_sqlDd_def


//
// Generate the WPP_RECORDER_SP_sqlDd function    2
//
#ifndef WPP_RECORDER_SF_sqlDd_def
#       define WPP_RECORDER_SF_sqlDd_def
WPP_INLINE
VOID
WPP_RECORDER_SF_sqlDd(
    PVOID    AutoLogContext,
    UCHAR    level,
    ULONG    flags,
    USHORT   id,
    LPCGUID  traceGuid
    , const char* _a1, const void* _a2, signed long _a3, unsigned int _a4, signed int _a5
    )
{
    if (WPP_ENABLE_FLAG_BIT(flags) && 
       (WPP_CONTROL(flags).Level >= level)) {
        WPP_TRACE( WPP_CONTROL(flags).Logger,
                   WPP_TRACE_OPTIONS,
                   (LPGUID)traceGuid,
                   id,
                   WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(const void*,_a2) WPP_LOGTYPEVAL(signed long,_a3) WPP_LOGTYPEVAL(unsigned int,_a4) WPP_LOGTYPEVAL(signed int,_a5)  0);

    }
    
    WPP_RECORDER( AutoLogContext, level, flags, (LPGUID) traceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(const void*,_a2) WPP_LOGTYPEVAL(signed long,_a3) WPP_LOGTYPEVAL(unsigned int,_a4) WPP_LOGTYPEVAL(signed int,_a5)  0);
}
#endif  // #ifndef WPP_RECORDER_SF_sqlDd_def


#ifndef WPP_SF_sqq_def
#       define WPP_SF_sqq_def
WPP_INLINE void WPP_SF_sqq(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, const char* _a1, const void* _a2, const void* _a3)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(const void*,_a2) WPP_LOGTYPEVAL(const void*,_a3)  0); }
#endif  // #ifndef WPP_SF_sqq_def


//
// Generate the WPP_RECORDER_SP_sqq function    2
//
#ifndef WPP_RECORDER_SF_sqq_def
#       define WPP_RECORDER_SF_sqq_def
WPP_INLINE
VOID
WPP_RECORDER_SF_sqq(
    PVOID    AutoLogContext,
    UCHAR    level,
    ULONG    flags,
    USHORT   id,
    LPCGUID  traceGuid
    , const char* _a1, const void* _a2, const void* _a3
    )
{
    if (WPP_ENABLE_FLAG_BIT(flags) && 
       (WPP_CONTROL(flags).Level >= level)) {
        WPP_TRACE( WPP_CONTROL(flags).Logger,
                   WPP_TRACE_OPTIONS,
                   (LPGUID)traceGuid,
                   id,
                   WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(const void*,_a2) WPP_LOGTYPEVAL(const void*,_a3)  0);

    }
    
    WPP_RECORDER( AutoLogContext, level, flags, (LPGUID) traceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(const void*,_a2) WPP_LOGTYPEVAL(const void*,_a3)  0);
}
#endif  // #ifndef WPP_RECORDER_SF_sqq_def


#ifndef WPP_POST
#  define WPP_POST()
#endif

#ifndef WPP_PRE
#  define WPP_PRE()
#endif


#ifdef WPP_DEBUG
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBMRD_c1744(MSG,a10) \
     WPP_PRE() \
     WPP_ANNOTATE(USBMRD_c1744) \
     ((\
       WPP_RECORDER_FILTER() ? \
        WPP_RECORDER_SF_s(WPP_RECORDER_ARGS(), \
                             71,WPP_LOCAL_TraceGuids+0, a10), \
          WPP_DEBUG((MSG,a10)), \
          1:0  \
      ))\
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBMRD_c1891(MSG,a10,a11,a12,a13) \
     WPP_PRE() \
     WPP_ANNOTATE(USBMRD_c1891) \
     ((\
       WPP_RECORDER_FILTER() ? \
        WPP_RECORDER_SF_slll(WPP_RECORDER_ARGS(), \
                             79,WPP_LOCAL_TraceGuids+0, a10, a11, a12, a13), \
          WPP_DEBUG((MSG,a10,a11,a12,a13)), \
          1:0  \
      ))\
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBMRD_c2064(MSG,a10,a11) \
     WPP_PRE() \
     WPP_ANNOTATE(USBMRD_c2064) \
     ((\
       WPP_RECORDER_FILTER() ? \
        WPP_RECORDER_SF_sl(WPP_RECORDER_ARGS(), \
                             84,WPP_LOCAL_TraceGuids+0, a10, a11), \
          WPP_DEBUG((MSG,a10,a11)), \
          1:0  \
      ))\
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBMRD_c2067(MSG,a10,a11,a12) \
     WPP_PRE() \
     WPP_ANNOTATE(USBMRD_c2067) \
     ((\
       WPP_RECORDER_FILTER() ? \
        WPP_RECORDER_SF_sll(WPP_RECORDER_ARGS(), \
                             85,WPP_LOCAL_TraceGuids+0, a10, a11, a12), \
          WPP_DEBUG((MSG,a10,a11,a12)), \
          1:0  \
      ))\
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBMRD_c3024(MSG,a10,a11,a12) \
     WPP_PRE() \
     WPP_ANNOTATE(USBMRD_c3024) \
     ((\
       WPP_RECORDER_FILTER() ? \
        WPP_RECORDER_SF_sDD(WPP_RECORDER_ARGS(), \
                             118,WPP_LOCAL_TraceGuids+0, a10, a11, a12), \
          WPP_DEBUG((MSG,a10,a11,a12)), \
          1:0  \
      ))\
     WPP_POST()
#else
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBMRD_c1744(MSG,a10) \
     WPP_PRE() \
     WPP_ANNOTATE(USBMRD_c1744) \
     ((\
       WPP_RECORDER_FILTER() ? \
        WPP_RECORDER_SF_s(WPP_RECORDER_ARGS(), \
                             71,WPP_LOCAL_TraceGuids+0, a10), 1:0\
      ))\
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBMRD_c1891(MSG,a10,a11,a12,a13) \
     WPP_PRE() \
     WPP_ANNOTATE(USBMRD_c1891) \
     ((\
       WPP_RECORDER_FILTER() ? \
        WPP_RECORDER_SF_slll(WPP_RECORDER_ARGS(), \
                             79,WPP_LOCAL_TraceGuids+0, a10, a11, a12, a13), 1:0\
      ))\
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBMRD_c2064(MSG,a10,a11) \
     WPP_PRE() \
     WPP_ANNOTATE(USBMRD_c2064) \
     ((\
       WPP_RECORDER_FILTER() ? \
        WPP_RECORDER_SF_sl(WPP_RECORDER_ARGS(), \
                             84,WPP_LOCAL_TraceGuids+0, a10, a11), 1:0\
      ))\
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBMRD_c2067(MSG,a10,a11,a12) \
     WPP_PRE() \
     WPP_ANNOTATE(USBMRD_c2067) \
     ((\
       WPP_RECORDER_FILTER() ? \
        WPP_RECORDER_SF_sll(WPP_RECORDER_ARGS(), \
                             85,WPP_LOCAL_TraceGuids+0, a10, a11, a12), 1:0\
      ))\
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBMRD_c3024(MSG,a10,a11,a12) \
     WPP_PRE() \
     WPP_ANNOTATE(USBMRD_c3024) \
     ((\
       WPP_RECORDER_FILTER() ? \
        WPP_RECORDER_SF_sDD(WPP_RECORDER_ARGS(), \
                             118,WPP_LOCAL_TraceGuids+0, a10, a11, a12), 1:0\
      ))\
     WPP_POST()
#endif


#ifdef WPP_DEBUG
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c1008(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c1008) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 45,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c1022(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c1022) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sd(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 46,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c1037(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c1037) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 47,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c1060(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c1060) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 48,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c1082(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c1082) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 49,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c1090(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c1090) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 50,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c1105(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c1105) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 51,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c1128(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c1128) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sdd(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 52,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c1182(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c1182) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 53,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c1193(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c1193) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sDD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 54,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c1218(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c1218) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sdl(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 55,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c1253(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c1253) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 56,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c1298(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c1298) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 57,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c1354(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c1354) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 58,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c1425(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c1425) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sDD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 59,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c1439(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c1439) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 60,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c145(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c145) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 11,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c1456(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c1456) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sdq(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 61,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c1466(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c1466) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 62,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c1541(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c1541) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sdd(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 63,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c1551(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c1551) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sdD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 64,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c1582(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c1582) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 65,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c1622(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c1622) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sDd(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 66,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c1649(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c1649) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sDd(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 67,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c1697(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c1697) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 68,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c1715(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c1715) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sdddD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 69,WPP_LOCAL_TraceGuids+0 WPP_R01234 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c1739(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c1739) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sddd(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 70,WPP_LOCAL_TraceGuids+0 WPP_R0123 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c174(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c174) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 12,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c1763(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c1763) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sddd(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 72,WPP_LOCAL_TraceGuids+0 WPP_R0123 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c1772(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c1772) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sddd(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 73,WPP_LOCAL_TraceGuids+0 WPP_R0123 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c1793(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c1793) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 74,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c1811(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c1811) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 75,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c1851(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c1851) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sdD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 76,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c186(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c186) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 13,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c1862(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c1862) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sd(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 77,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c1889(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c1889) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sqlDd(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 78,WPP_LOCAL_TraceGuids+0 WPP_R01234 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c1907(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c1907) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sq(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 80,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c1933(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c1933) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 81,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c201(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c201) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sqq(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 14,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c2043(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c2043) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sq(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 82,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c2060(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c2060) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 83,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c2132(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c2132) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 86,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c2146(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c2146) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 87,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c2170(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c2170) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 88,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c2194(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c2194) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 89,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c2218(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c2218) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 90,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c2242(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c2242) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sdd(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 91,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c2265(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c2265) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sdd(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 92,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c2279(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c2279) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sdd(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 93,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c2306(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c2306) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sDDD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 94,WPP_LOCAL_TraceGuids+0 WPP_R0123 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c2348(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c2348) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sqDD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 95,WPP_LOCAL_TraceGuids+0 WPP_R0123 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c2362(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c2362) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sDDDD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 96,WPP_LOCAL_TraceGuids+0 WPP_R01234 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c2382(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c2382) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sDDD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 97,WPP_LOCAL_TraceGuids+0 WPP_R0123 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c243(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c243) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sDD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 15,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c2500(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c2500) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sDDDD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 98,WPP_LOCAL_TraceGuids+0 WPP_R01234 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c2524(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c2524) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sDDDD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 99,WPP_LOCAL_TraceGuids+0 WPP_R01234 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c2541(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c2541) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sDDD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 100,WPP_LOCAL_TraceGuids+0 WPP_R0123 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c2556(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c2556) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sDDDD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 101,WPP_LOCAL_TraceGuids+0 WPP_R01234 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c2614(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c2614) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 102,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c2639(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c2639) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sqDDD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 103,WPP_LOCAL_TraceGuids+0 WPP_R01234 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c2698(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c2698) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sDD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 104,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c271(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c271) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sDD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 16,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c2711(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c2711) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 105,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c2725(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c2725) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 106,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c2751(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c2751) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sq(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 107,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c2762(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c2762) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sq(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 108,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c2841(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c2841) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 109,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c2849(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c2849) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 110,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c2861(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c2861) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 111,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c2920(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c2920) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 112,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c2937(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c2937) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 113,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c2948(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c2948) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 114,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c2966(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c2966) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sDD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 115,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c2994(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c2994) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sdd(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 116,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c301(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c301) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 17,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c3023(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c3023) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sDD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 117,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c3035(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c3035) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sDD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 119,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c325(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c325) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sd(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 18,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c352(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c352) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 19,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c398(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c398) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 20,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c410(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c410) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 21,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c423(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c423) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 22,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c462(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c462) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 23,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c491(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c491) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sd(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 24,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c520(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c520) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 25,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c544(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c544) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 26,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c561(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c561) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 27,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c575(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c575) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 28,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c585(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c585) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 29,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c623(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c623) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sDd(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 30,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c652(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c652) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sDqD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 31,WPP_LOCAL_TraceGuids+0 WPP_R0123 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c68(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c68) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 10,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c702(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c702) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 32,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c722(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c722) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 33,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c751(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c751) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sdd(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 34,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c831(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c831) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sDqd(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 35,WPP_LOCAL_TraceGuids+0 WPP_R0123 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c845(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c845) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 36,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c860(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c860) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 37,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c871(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c871) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 38,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c893(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c893) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 39,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c924(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c924) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_slL(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 40,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c934(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c934) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 41,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c947(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c947) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 42,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c956(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c956) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sd(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 43,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c995(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c995) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 44,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#else
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c1008(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c1008) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 45,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c1022(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c1022) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sd(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 46,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c1037(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c1037) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 47,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c1060(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c1060) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 48,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c1082(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c1082) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 49,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c1090(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c1090) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 50,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c1105(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c1105) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 51,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c1128(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c1128) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sdd(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 52,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c1182(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c1182) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 53,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c1193(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c1193) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sDD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 54,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c1218(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c1218) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sdl(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 55,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c1253(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c1253) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 56,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c1298(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c1298) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 57,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c1354(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c1354) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 58,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c1425(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c1425) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sDD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 59,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c1439(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c1439) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 60,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c145(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c145) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 11,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c1456(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c1456) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sdq(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 61,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c1466(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c1466) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 62,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c1541(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c1541) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sdd(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 63,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c1551(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c1551) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sdD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 64,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c1582(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c1582) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 65,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c1622(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c1622) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sDd(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 66,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c1649(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c1649) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sDd(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 67,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c1697(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c1697) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 68,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c1715(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c1715) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sdddD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 69,WPP_LOCAL_TraceGuids+0 WPP_R01234 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c1739(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c1739) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sddd(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 70,WPP_LOCAL_TraceGuids+0 WPP_R0123 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c174(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c174) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 12,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c1763(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c1763) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sddd(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 72,WPP_LOCAL_TraceGuids+0 WPP_R0123 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c1772(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c1772) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sddd(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 73,WPP_LOCAL_TraceGuids+0 WPP_R0123 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c1793(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c1793) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 74,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c1811(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c1811) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 75,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c1851(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c1851) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sdD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 76,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c186(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c186) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 13,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c1862(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c1862) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sd(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 77,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c1889(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c1889) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sqlDd(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 78,WPP_LOCAL_TraceGuids+0 WPP_R01234 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c1907(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c1907) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sq(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 80,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c1933(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c1933) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 81,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c201(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c201) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sqq(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 14,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c2043(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c2043) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sq(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 82,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c2060(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c2060) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 83,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c2132(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c2132) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 86,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c2146(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c2146) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 87,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c2170(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c2170) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 88,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c2194(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c2194) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 89,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c2218(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c2218) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 90,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c2242(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c2242) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sdd(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 91,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c2265(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c2265) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sdd(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 92,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c2279(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c2279) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sdd(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 93,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c2306(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c2306) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sDDD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 94,WPP_LOCAL_TraceGuids+0 WPP_R0123 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c2348(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c2348) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sqDD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 95,WPP_LOCAL_TraceGuids+0 WPP_R0123 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c2362(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c2362) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sDDDD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 96,WPP_LOCAL_TraceGuids+0 WPP_R01234 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c2382(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c2382) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sDDD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 97,WPP_LOCAL_TraceGuids+0 WPP_R0123 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c243(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c243) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sDD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 15,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c2500(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c2500) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sDDDD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 98,WPP_LOCAL_TraceGuids+0 WPP_R01234 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c2524(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c2524) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sDDDD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 99,WPP_LOCAL_TraceGuids+0 WPP_R01234 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c2541(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c2541) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sDDD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 100,WPP_LOCAL_TraceGuids+0 WPP_R0123 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c2556(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c2556) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sDDDD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 101,WPP_LOCAL_TraceGuids+0 WPP_R01234 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c2614(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c2614) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 102,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c2639(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c2639) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sqDDD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 103,WPP_LOCAL_TraceGuids+0 WPP_R01234 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c2698(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c2698) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sDD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 104,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c271(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c271) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sDD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 16,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c2711(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c2711) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 105,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c2725(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c2725) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 106,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c2751(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c2751) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sq(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 107,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c2762(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c2762) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sq(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 108,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c2841(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c2841) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 109,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c2849(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c2849) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 110,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c2861(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c2861) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 111,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c2920(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c2920) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 112,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c2937(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c2937) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 113,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c2948(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c2948) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 114,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c2966(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c2966) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sDD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 115,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c2994(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c2994) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sdd(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 116,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c301(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c301) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 17,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c3023(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c3023) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sDD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 117,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c3035(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c3035) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sDD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 119,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c325(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c325) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sd(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 18,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c352(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c352) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 19,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c398(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c398) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 20,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c410(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c410) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 21,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c423(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c423) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 22,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c462(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c462) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 23,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c491(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c491) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sd(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 24,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c520(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c520) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 25,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c544(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c544) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 26,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c561(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c561) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 27,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c575(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c575) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 28,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c585(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c585) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 29,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c623(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c623) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sDd(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 30,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c652(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c652) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sDqD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 31,WPP_LOCAL_TraceGuids+0 WPP_R0123 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c68(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c68) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 10,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c702(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c702) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 32,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c722(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c722) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 33,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c751(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c751) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sdd(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 34,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c831(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c831) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sDqd(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 35,WPP_LOCAL_TraceGuids+0 WPP_R0123 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c845(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c845) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 36,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c860(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c860) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 37,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c871(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c871) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 38,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c893(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c893) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 39,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c924(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c924) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_slL(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 40,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c934(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c934) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 41,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c947(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c947) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 42,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c956(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c956) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sd(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 43,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c995(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c995) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 44,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#endif



#if defined(__cplusplus)
};
#endif


#else
// template tracemacro.tpl

// This template expects:
//      WPP_THIS_FILE defined (see header.tpl)
//      WPP_LOGGER_ARG  defined
//      WPP_GET_LOGGER  defined
//      WPP_ENABLED() defined

#if defined(__cplusplus)
extern "C" {
#endif

#ifndef WPP_ALREADY_INCLUDED

#ifndef NO_CHECK_FOR_NULL_STRING
#ifndef WPP_CHECK_FOR_NULL_STRING
#define WPP_CHECK_FOR_NULL_STRING 1
#endif
#endif

#define WPP_EVAL(_value_) _value_
#define WPP_(Id) WPP_EVAL(WPP_) ## WPP_EVAL(Id) ## WPP_EVAL(_) ## WPP_EVAL(WPP_THIS_FILE) ## WPP_EVAL(__LINE__)

#if !defined(WPP_INLINE)
#define WPP_INLINE DECLSPEC_NOINLINE __inline
#endif

#else   // #ifndef WPP_ALREADY_INCLUDED

#undef WPP_LOCAL_TraceGuids

#endif  // #ifndef WPP_ALREADY_INCLUDED

#if !defined(WPP_NO_ANNOTATIONS)

#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBMRD_c1008
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBMRD_c1022
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBMRD_c1037
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBMRD_c1060
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBMRD_c1082
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBMRD_c1090
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBMRD_c1105
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBMRD_c1128
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBMRD_c1182
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBMRD_c1193
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBMRD_c1218
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBMRD_c1253
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBMRD_c1298
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBMRD_c1354
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBMRD_c1425
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBMRD_c1439
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBMRD_c145
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBMRD_c1456
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBMRD_c1466
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBMRD_c1541
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBMRD_c1551
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBMRD_c1582
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBMRD_c1622
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBMRD_c1649
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBMRD_c1697
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBMRD_c1715
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBMRD_c1739
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBMRD_c174
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBMRD_c1744
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBMRD_c1763
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBMRD_c1772
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBMRD_c1793
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBMRD_c1811
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBMRD_c1851
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBMRD_c186
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBMRD_c1862
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBMRD_c1889
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBMRD_c1891
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBMRD_c1907
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBMRD_c1933
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBMRD_c201
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBMRD_c2043
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBMRD_c2060
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBMRD_c2064
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBMRD_c2067
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBMRD_c2132
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBMRD_c2146
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBMRD_c2170
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBMRD_c2194
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBMRD_c2218
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBMRD_c2242
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBMRD_c2265
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBMRD_c2279
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBMRD_c2306
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBMRD_c2348
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBMRD_c2362
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBMRD_c2382
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBMRD_c243
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBMRD_c2500
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBMRD_c2524
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBMRD_c2541
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBMRD_c2556
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBMRD_c2614
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBMRD_c2639
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBMRD_c2698
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBMRD_c271
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBMRD_c2711
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBMRD_c2725
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBMRD_c2751
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBMRD_c2762
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBMRD_c2841
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBMRD_c2849
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBMRD_c2861
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBMRD_c2920
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBMRD_c2937
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBMRD_c2948
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBMRD_c2966
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBMRD_c2994
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBMRD_c301
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBMRD_c3023
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBMRD_c3024
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBMRD_c3035
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBMRD_c325
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBMRD_c352
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBMRD_c398
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBMRD_c410
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBMRD_c423
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBMRD_c462
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBMRD_c491
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBMRD_c520
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBMRD_c544
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBMRD_c561
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBMRD_c575
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBMRD_c585
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBMRD_c623
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBMRD_c652
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBMRD_c68
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBMRD_c702
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBMRD_c722
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBMRD_c751
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBMRD_c831
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBMRD_c845
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBMRD_c860
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBMRD_c871
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBMRD_c893
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBMRD_c924
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBMRD_c934
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBMRD_c947
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBMRD_c956
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBMRD_c995
#endif
#ifdef WPP_EMIT_FUNC_NAME
#define WPP_FUNC_NAME L" FUNC=" _WPPW(__FUNCTION__)
#else
#define WPP_FUNC_NAME
#endif

#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBMRD_c1008_FINAL(P, File, Name, ...)    __annotation(L ## P, L"c545fe3d-9b98-385c-84e8-450beb16428c ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 45 \"%0<%10!s!> ML2 ERR: COMPLETION_EVENT\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_CRITICAL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBMRD_c1008_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 45 \"%0<%10!s!> ML2 ERR: COMPLETION_EVENT\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_CRITICAL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBMRD_c1008
    #define WPP_ANNOTATE_USBMRD_c1008 WPP_ANNOTATE_USBMRD_c1008_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBMRD_c1008 WPP_ANNOTATE_USBMRD_c1008_FINAL("TMF:", "USBMRD.c", "USBMRD_c1008", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBMRD_c1022_FINAL(P, File, Name, ...)    __annotation(L ## P, L"c545fe3d-9b98-385c-84e8-450beb16428c ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 46 \"%0<%10!s!> ML2 R kicked, act=%11!d!\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBMRD_c1022_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 46 \"%0<%10!s!> ML2 R kicked, act=%11!d!\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBMRD_c1022
    #define WPP_ANNOTATE_USBMRD_c1022 WPP_ANNOTATE_USBMRD_c1022_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBMRD_c1022 WPP_ANNOTATE_USBMRD_c1022_FINAL("TMF:", "USBMRD.c", "USBMRD_c1022", L"{", L"pDevExt->PortName, ItemString -- 10" , L"pDevExt->bL2ReadActive, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBMRD_c1037_FINAL(P, File, Name, ...)    __annotation(L ## P, L"c545fe3d-9b98-385c-84e8-450beb16428c ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 47 \"%0<%10!s!> L2_CANCEL Rml[0]=%11!u!\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBMRD_c1037_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 47 \"%0<%10!s!> L2_CANCEL Rml[0]=%11!u!\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBMRD_c1037
    #define WPP_ANNOTATE_USBMRD_c1037 WPP_ANNOTATE_USBMRD_c1037_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBMRD_c1037 WPP_ANNOTATE_USBMRD_c1037_FINAL("TMF:", "USBMRD.c", "USBMRD_c1037", L"{", L"pDevExt->PortName, ItemString -- 10" , L"pDevExt->Sts.lRmlCount[0], ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBMRD_c1060_FINAL(P, File, Name, ...)    __annotation(L ## P, L"c545fe3d-9b98-385c-84e8-450beb16428c ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 48 \"%0<%10!s!> L2 CANCEL - IRP[%11!u!]\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_INFO" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBMRD_c1060_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 48 \"%0<%10!s!> L2 CANCEL - IRP[%11!u!]\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_INFO" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBMRD_c1060
    #define WPP_ANNOTATE_USBMRD_c1060 WPP_ANNOTATE_USBMRD_c1060_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBMRD_c1060 WPP_ANNOTATE_USBMRD_c1060_FINAL("TMF:", "USBMRD.c", "USBMRD_c1060", L"{", L"pDevExt->PortName, ItemString -- 10" , L"pActiveL2Buf->Index, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBMRD_c1082_FINAL(P, File, Name, ...)    __annotation(L ## P, L"c545fe3d-9b98-385c-84e8-450beb16428c ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 49 \"%0<%10!s!> L2_STOP_EVENT\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBMRD_c1082_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 49 \"%0<%10!s!> L2_STOP_EVENT\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBMRD_c1082
    #define WPP_ANNOTATE_USBMRD_c1082 WPP_ANNOTATE_USBMRD_c1082_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBMRD_c1082 WPP_ANNOTATE_USBMRD_c1082_FINAL("TMF:", "USBMRD.c", "USBMRD_c1082", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBMRD_c1090_FINAL(P, File, Name, ...)    __annotation(L ## P, L"c545fe3d-9b98-385c-84e8-450beb16428c ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 50 \"%0<%10!s!> L2_STOP_EVENT: superceded by CANCELLATION\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBMRD_c1090_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 50 \"%0<%10!s!> L2_STOP_EVENT: superceded by CANCELLATION\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBMRD_c1090
    #define WPP_ANNOTATE_USBMRD_c1090 WPP_ANNOTATE_USBMRD_c1090_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBMRD_c1090 WPP_ANNOTATE_USBMRD_c1090_FINAL("TMF:", "USBMRD.c", "USBMRD_c1090", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBMRD_c1105_FINAL(P, File, Name, ...)    __annotation(L ## P, L"c545fe3d-9b98-385c-84e8-450beb16428c ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 51 \"%0<%10!s!> L2 STOP: Cancel Irp[%11!u!]\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_INFO" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBMRD_c1105_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 51 \"%0<%10!s!> L2 STOP: Cancel Irp[%11!u!]\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_INFO" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBMRD_c1105
    #define WPP_ANNOTATE_USBMRD_c1105 WPP_ANNOTATE_USBMRD_c1105_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBMRD_c1105 WPP_ANNOTATE_USBMRD_c1105_FINAL("TMF:", "USBMRD.c", "USBMRD_c1105", L"{", L"pDevExt->PortName, ItemString -- 10" , L"pActiveL2Buf->Index, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBMRD_c1128_FINAL(P, File, Name, ...)    __annotation(L ## P, L"c545fe3d-9b98-385c-84e8-450beb16428c ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 52 \"%0<%10!s!> L2_RESUME_EVENT rm %11!d! ss %12!d!\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBMRD_c1128_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 52 \"%0<%10!s!> L2_RESUME_EVENT rm %11!d! ss %12!d!\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBMRD_c1128
    #define WPP_ANNOTATE_USBMRD_c1128 WPP_ANNOTATE_USBMRD_c1128_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemLong -- 12" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBMRD_c1128 WPP_ANNOTATE_USBMRD_c1128_FINAL("TMF:", "USBMRD.c", "USBMRD_c1128", L"{", L"pDevExt->PortName, ItemString -- 10" , L"pDevExt->bDeviceRemoved, ItemLong -- 11" , L"pDevExt->PowerSuspended, ItemLong -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBMRD_c1182_FINAL(P, File, Name, ...)    __annotation(L ## P, L"c545fe3d-9b98-385c-84e8-450beb16428c ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 53 \"%0<%10!s!> ML2 err: comp Q empty - %11!u!\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBMRD_c1182_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 53 \"%0<%10!s!> ML2 err: comp Q empty - %11!u!\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBMRD_c1182
    #define WPP_ANNOTATE_USBMRD_c1182 WPP_ANNOTATE_USBMRD_c1182_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBMRD_c1182 WPP_ANNOTATE_USBMRD_c1182_FINAL("TMF:", "USBMRD.c", "USBMRD_c1182", L"{", L"pDevExt->PortName, ItemString -- 10" , L"ntStatus, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBMRD_c1193_FINAL(P, File, Name, ...)    __annotation(L ## P, L"c545fe3d-9b98-385c-84e8-450beb16428c ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 54 \"%0<%10!s!> L2 completion [%11!u!]=wait rtn[%12!u!]\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBMRD_c1193_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 54 \"%0<%10!s!> L2 completion [%11!u!]=wait rtn[%12!u!]\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBMRD_c1193
    #define WPP_ANNOTATE_USBMRD_c1193 WPP_ANNOTATE_USBMRD_c1193_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemLong -- 12" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBMRD_c1193 WPP_ANNOTATE_USBMRD_c1193_FINAL("TMF:", "USBMRD.c", "USBMRD_c1193", L"{", L"pDevExt->PortName, ItemString -- 10" , L"l2BufIdx, ItemLong -- 11" , L"(ntStatus-L2_READ_EVENT_COUNT), ItemLong -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBMRD_c1218_FINAL(P, File, Name, ...)    __annotation(L ## P, L"c545fe3d-9b98-385c-84e8-450beb16428c ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 55 \"%0<%10!s!> L2R[%11!d!]=%12!ld!B\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBMRD_c1218_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 55 \"%0<%10!s!> L2R[%11!d!]=%12!ld!B\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBMRD_c1218
    #define WPP_ANNOTATE_USBMRD_c1218 WPP_ANNOTATE_USBMRD_c1218_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemLong -- 12" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBMRD_c1218 WPP_ANNOTATE_USBMRD_c1218_FINAL("TMF:", "USBMRD.c", "USBMRD_c1218", L"{", L"pDevExt->PortName, ItemString -- 10" , L"l2BufIdx, ItemLong -- 11" , L"pUrb->UrbBulkOrInterruptTransfer.TransferBufferLength, ItemLong -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBMRD_c1253_FINAL(P, File, Name, ...)    __annotation(L ## P, L"c545fe3d-9b98-385c-84e8-450beb16428c ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 56 \"%0<%10!s!> L2 RX failed - 0x%11!x!\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_CRITICAL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBMRD_c1253_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 56 \"%0<%10!s!> L2 RX failed - 0x%11!x!\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_CRITICAL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBMRD_c1253
    #define WPP_ANNOTATE_USBMRD_c1253 WPP_ANNOTATE_USBMRD_c1253_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBMRD_c1253 WPP_ANNOTATE_USBMRD_c1253_FINAL("TMF:", "USBMRD.c", "USBMRD_c1253", L"{", L"pDevExt->PortName, ItemString -- 10" , L"pIrp->IoStatus.Status, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBMRD_c1298_FINAL(P, File, Name, ...)    __annotation(L ## P, L"c545fe3d-9b98-385c-84e8-450beb16428c ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 57 \"%0<%10!s!> L2 cont failure, stopped...\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_CRITICAL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBMRD_c1298_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 57 \"%0<%10!s!> L2 cont failure, stopped...\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_CRITICAL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBMRD_c1298
    #define WPP_ANNOTATE_USBMRD_c1298 WPP_ANNOTATE_USBMRD_c1298_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBMRD_c1298 WPP_ANNOTATE_USBMRD_c1298_FINAL("TMF:", "USBMRD.c", "USBMRD_c1298", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBMRD_c1354_FINAL(P, File, Name, ...)    __annotation(L ## P, L"c545fe3d-9b98-385c-84e8-450beb16428c ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 58 \"%0<%10!s!> Sig L2 STOP\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBMRD_c1354_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 58 \"%0<%10!s!> Sig L2 STOP\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBMRD_c1354
    #define WPP_ANNOTATE_USBMRD_c1354 WPP_ANNOTATE_USBMRD_c1354_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBMRD_c1354 WPP_ANNOTATE_USBMRD_c1354_FINAL("TMF:", "USBMRD.c", "USBMRD_c1354", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBMRD_c1425_FINAL(P, File, Name, ...)    __annotation(L ## P, L"c545fe3d-9b98-385c-84e8-450beb16428c ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 59 \"%0<%10!s!> L2: OUT 0x%11!x! RmlCount[0]=%12!u!\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBMRD_c1425_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 59 \"%0<%10!s!> L2: OUT 0x%11!x! RmlCount[0]=%12!u!\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBMRD_c1425
    #define WPP_ANNOTATE_USBMRD_c1425 WPP_ANNOTATE_USBMRD_c1425_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemLong -- 12" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBMRD_c1425 WPP_ANNOTATE_USBMRD_c1425_FINAL("TMF:", "USBMRD.c", "USBMRD_c1425", L"{", L"pDevExt->PortName, ItemString -- 10" , L"ntStatus, ItemLong -- 11" , L"pDevExt->Sts.lRmlCount[0], ItemLong -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBMRD_c1439_FINAL(P, File, Name, ...)    __annotation(L ## P, L"c545fe3d-9b98-385c-84e8-450beb16428c ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 60 \"%0<%10!s!> -->USBMRD_ResetL2Buffers: Rml[0]=%11!u!\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBMRD_c1439_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 60 \"%0<%10!s!> -->USBMRD_ResetL2Buffers: Rml[0]=%11!u!\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBMRD_c1439
    #define WPP_ANNOTATE_USBMRD_c1439 WPP_ANNOTATE_USBMRD_c1439_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBMRD_c1439 WPP_ANNOTATE_USBMRD_c1439_FINAL("TMF:", "USBMRD.c", "USBMRD_c1439", L"{", L"pDevExt->PortName, ItemString -- 10" , L"pDevExt->Sts.lRmlCount[0], ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBMRD_c145_FINAL(P, File, Name, ...)    __annotation(L ## P, L"c545fe3d-9b98-385c-84e8-450beb16428c ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 11 \"%0<%10!s!> L1: L2 th failure\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_CRITICAL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBMRD_c145_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 11 \"%0<%10!s!> L1: L2 th failure\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_CRITICAL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBMRD_c145
    #define WPP_ANNOTATE_USBMRD_c145 WPP_ANNOTATE_USBMRD_c145_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBMRD_c145 WPP_ANNOTATE_USBMRD_c145_FINAL("TMF:", "USBMRD.c", "USBMRD_c145", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBMRD_c1456_FINAL(P, File, Name, ...)    __annotation(L ## P, L"c545fe3d-9b98-385c-84e8-450beb16428c ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 61 \"%0<%10!s!> USBMRD_ResetL2Buffers: ReuseIRP Index[%11!d!], IRP %12!p!\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBMRD_c1456_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 61 \"%0<%10!s!> USBMRD_ResetL2Buffers: ReuseIRP Index[%11!d!], IRP %12!p!\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBMRD_c1456
    #define WPP_ANNOTATE_USBMRD_c1456 WPP_ANNOTATE_USBMRD_c1456_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemPtr -- 12" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBMRD_c1456 WPP_ANNOTATE_USBMRD_c1456_FINAL("TMF:", "USBMRD.c", "USBMRD_c1456", L"{", L"pDevExt->PortName, ItemString -- 10" , L"i, ItemLong -- 11" , L"pDevExt->pL2ReadBuffer[i].Irp, ItemPtr -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBMRD_c1466_FINAL(P, File, Name, ...)    __annotation(L ## P, L"c545fe3d-9b98-385c-84e8-450beb16428c ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 62 \"%0<%10!s!> <--USBMRD_ResetL2Buffers: Rml[0]=%11!u!\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBMRD_c1466_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 62 \"%0<%10!s!> <--USBMRD_ResetL2Buffers: Rml[0]=%11!u!\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBMRD_c1466
    #define WPP_ANNOTATE_USBMRD_c1466 WPP_ANNOTATE_USBMRD_c1466_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBMRD_c1466 WPP_ANNOTATE_USBMRD_c1466_FINAL("TMF:", "USBMRD.c", "USBMRD_c1466", L"{", L"pDevExt->PortName, ItemString -- 10" , L"pDevExt->Sts.lRmlCount[0], ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBMRD_c1541_FINAL(P, File, Name, ...)    __annotation(L ## P, L"c545fe3d-9b98-385c-84e8-450beb16428c ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 63 \"%0<%10!s!> -->USBMRD_FillReadRequest[%11!d!] %12!d!\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBMRD_c1541_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 63 \"%0<%10!s!> -->USBMRD_FillReadRequest[%11!d!] %12!d!\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBMRD_c1541
    #define WPP_ANNOTATE_USBMRD_c1541 WPP_ANNOTATE_USBMRD_c1541_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemLong -- 12" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBMRD_c1541 WPP_ANNOTATE_USBMRD_c1541_FINAL("TMF:", "USBMRD.c", "USBMRD_c1541", L"{", L"pDevExt->PortName, ItemString -- 10" , L"pDevExt->L2FillIdx, ItemLong -- 11" , L"Cookie, ItemLong -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBMRD_c1551_FINAL(P, File, Name, ...)    __annotation(L ## P, L"c545fe3d-9b98-385c-84e8-450beb16428c ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 64 \"%0<%10!s!> L1: no buf for filling the index is %11!d! and state %12!x!\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBMRD_c1551_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 64 \"%0<%10!s!> L1: no buf for filling the index is %11!d! and state %12!x!\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBMRD_c1551
    #define WPP_ANNOTATE_USBMRD_c1551 WPP_ANNOTATE_USBMRD_c1551_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemLong -- 12" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBMRD_c1551 WPP_ANNOTATE_USBMRD_c1551_FINAL("TMF:", "USBMRD.c", "USBMRD_c1551", L"{", L"pDevExt->PortName, ItemString -- 10" , L"currentFillIdx, ItemLong -- 11" , L"pDevExt->pL2ReadBuffer[currentFillIdx].State, ItemLong -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBMRD_c1582_FINAL(P, File, Name, ...)    __annotation(L ## P, L"c545fe3d-9b98-385c-84e8-450beb16428c ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 65 \"%0<%10!s!> L1_Fill: got 0-len pkt, recycle L2\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBMRD_c1582_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 65 \"%0<%10!s!> L1_Fill: got 0-len pkt, recycle L2\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBMRD_c1582
    #define WPP_ANNOTATE_USBMRD_c1582 WPP_ANNOTATE_USBMRD_c1582_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBMRD_c1582 WPP_ANNOTATE_USBMRD_c1582_FINAL("TMF:", "USBMRD.c", "USBMRD_c1582", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBMRD_c1622_FINAL(P, File, Name, ...)    __annotation(L ## P, L"c545fe3d-9b98-385c-84e8-450beb16428c ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 66 \"%0<%10!s!> L1_Fill: pkt too big %11!u!B/%12!d!, recycle L2\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_CRITICAL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBMRD_c1622_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 66 \"%0<%10!s!> L1_Fill: pkt too big %11!u!B/%12!d!, recycle L2\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_CRITICAL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBMRD_c1622
    #define WPP_ANNOTATE_USBMRD_c1622 WPP_ANNOTATE_USBMRD_c1622_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemLong -- 12" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBMRD_c1622 WPP_ANNOTATE_USBMRD_c1622_FINAL("TMF:", "USBMRD.c", "USBMRD_c1622", L"{", L"pDevExt->PortName, ItemString -- 10" , L"pDevExt->pL2ReadBuffer[currentFillIdx].Length, ItemLong -- 11" , L"pDevExt->MTU, ItemLong -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBMRD_c1649_FINAL(P, File, Name, ...)    __annotation(L ## P, L"c545fe3d-9b98-385c-84e8-450beb16428c ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 67 \"%0<%10!s!> L1_Fill: oversized pkt %11!u!B/%12!d!, recycle L2\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_CRITICAL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBMRD_c1649_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 67 \"%0<%10!s!> L1_Fill: oversized pkt %11!u!B/%12!d!, recycle L2\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_CRITICAL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBMRD_c1649
    #define WPP_ANNOTATE_USBMRD_c1649 WPP_ANNOTATE_USBMRD_c1649_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemLong -- 12" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBMRD_c1649 WPP_ANNOTATE_USBMRD_c1649_FINAL("TMF:", "USBMRD.c", "USBMRD_c1649", L"{", L"pDevExt->PortName, ItemString -- 10" , L"pDevExt->pL2ReadBuffer[currentFillIdx].Length, ItemLong -- 11" , L"ETH_MAX_DATA_SIZE, ItemLong -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBMRD_c1697_FINAL(P, File, Name, ...)    __annotation(L ## P, L"c545fe3d-9b98-385c-84e8-450beb16428c ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 68 \"%0<%10!s!> L1: L2 buf available, kick L2\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBMRD_c1697_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 68 \"%0<%10!s!> L1: L2 buf available, kick L2\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBMRD_c1697
    #define WPP_ANNOTATE_USBMRD_c1697 WPP_ANNOTATE_USBMRD_c1697_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBMRD_c1697 WPP_ANNOTATE_USBMRD_c1697_FINAL("TMF:", "USBMRD.c", "USBMRD_c1697", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBMRD_c1715_FINAL(P, File, Name, ...)    __annotation(L ## P, L"c545fe3d-9b98-385c-84e8-450beb16428c ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 69 \"%0<%10!s!> USBMRD_FillReadRequest[%11!d!/%12!d!] %13!d!: error 0x%14!x!, retry next time\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBMRD_c1715_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 69 \"%0<%10!s!> USBMRD_FillReadRequest[%11!d!/%12!d!] %13!d!: error 0x%14!x!, retry next time\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBMRD_c1715
    #define WPP_ANNOTATE_USBMRD_c1715 WPP_ANNOTATE_USBMRD_c1715_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemLong -- 12" , L"Arg, ItemLong -- 13" , L"Arg, ItemLong -- 14" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBMRD_c1715 WPP_ANNOTATE_USBMRD_c1715_FINAL("TMF:", "USBMRD.c", "USBMRD_c1715", L"{", L"pDevExt->PortName, ItemString -- 10" , L"pDevExt->L2FillIdx, ItemLong -- 11" , L"currentFillIdx, ItemLong -- 12" , L"Cookie, ItemLong -- 13" , L"ntStatus, ItemLong -- 14" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBMRD_c1739_FINAL(P, File, Name, ...)    __annotation(L ## P, L"c545fe3d-9b98-385c-84e8-450beb16428c ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 70 \"%0<%10!s!> <--USBMRD_FillReadRequest[%11!d!/%12!d!] %13!d!\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBMRD_c1739_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 70 \"%0<%10!s!> <--USBMRD_FillReadRequest[%11!d!/%12!d!] %13!d!\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBMRD_c1739
    #define WPP_ANNOTATE_USBMRD_c1739 WPP_ANNOTATE_USBMRD_c1739_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemLong -- 12" , L"Arg, ItemLong -- 13" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBMRD_c1739 WPP_ANNOTATE_USBMRD_c1739_FINAL("TMF:", "USBMRD.c", "USBMRD_c1739", L"{", L"pDevExt->PortName, ItemString -- 10" , L"pDevExt->L2FillIdx, ItemLong -- 11" , L"currentFillIdx, ItemLong -- 12" , L"Cookie, ItemLong -- 13" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBMRD_c174_FINAL(P, File, Name, ...)    __annotation(L ## P, L"c545fe3d-9b98-385c-84e8-450beb16428c ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 12 \"%0<%10!s!> L2: ObReferenceObjectByHandle failed 0x%11!x!\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_CRITICAL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBMRD_c174_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 12 \"%0<%10!s!> L2: ObReferenceObjectByHandle failed 0x%11!x!\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_CRITICAL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBMRD_c174
    #define WPP_ANNOTATE_USBMRD_c174 WPP_ANNOTATE_USBMRD_c174_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBMRD_c174 WPP_ANNOTATE_USBMRD_c174_FINAL("TMF:", "USBMRD.c", "USBMRD_c174", L"{", L"pDevExt->PortName, ItemString -- 10" , L"ntStatus, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBMRD_c1744_FINAL(P, File, Name, ...)    __annotation(L ## P, L"c545fe3d-9b98-385c-84e8-450beb16428c ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 71 \"%0<%10!s!> NDIS COUNT ZERO SO DELAY for 1 MS\" //  " WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBMRD_c1744_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 71 \"%0<%10!s!> NDIS COUNT ZERO SO DELAY for 1 MS\" //  " WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBMRD_c1744
    #define WPP_ANNOTATE_USBMRD_c1744 WPP_ANNOTATE_USBMRD_c1744_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBMRD_c1744 WPP_ANNOTATE_USBMRD_c1744_FINAL("TMF:", "USBMRD.c", "USBMRD_c1744", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBMRD_c1763_FINAL(P, File, Name, ...)    __annotation(L ## P, L"c545fe3d-9b98-385c-84e8-450beb16428c ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 72 \"%0<%10!s!> RecycleL2FillBuffer[%11!d!/%12!d!]<%13!d!>\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_TRACE" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBMRD_c1763_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 72 \"%0<%10!s!> RecycleL2FillBuffer[%11!d!/%12!d!]<%13!d!>\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_TRACE" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBMRD_c1763
    #define WPP_ANNOTATE_USBMRD_c1763 WPP_ANNOTATE_USBMRD_c1763_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemLong -- 12" , L"Arg, ItemLong -- 13" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBMRD_c1763 WPP_ANNOTATE_USBMRD_c1763_FINAL("TMF:", "USBMRD.c", "USBMRD_c1763", L"{", L"pDevExt->PortName, ItemString -- 10" , L"FillIdx, ItemLong -- 11" , L"pDevExt->L2FillIdx, ItemLong -- 12" , L"Cookie, ItemLong -- 13" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBMRD_c1772_FINAL(P, File, Name, ...)    __annotation(L ## P, L"c545fe3d-9b98-385c-84e8-450beb16428c ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 73 \"%0<%10!s!> RecycleL2FillBuffer[%11!d!/%12!d!]-idx not match<%13!d!>\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBMRD_c1772_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 73 \"%0<%10!s!> RecycleL2FillBuffer[%11!d!/%12!d!]-idx not match<%13!d!>\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBMRD_c1772
    #define WPP_ANNOTATE_USBMRD_c1772 WPP_ANNOTATE_USBMRD_c1772_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemLong -- 12" , L"Arg, ItemLong -- 13" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBMRD_c1772 WPP_ANNOTATE_USBMRD_c1772_FINAL("TMF:", "USBMRD.c", "USBMRD_c1772", L"{", L"pDevExt->PortName, ItemString -- 10" , L"FillIdx, ItemLong -- 11" , L"pDevExt->L2FillIdx, ItemLong -- 12" , L"Cookie, ItemLong -- 13" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBMRD_c1793_FINAL(P, File, Name, ...)    __annotation(L ## P, L"c545fe3d-9b98-385c-84e8-450beb16428c ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 74 \"%0<%10!s!> L1: L2 buf available, kick L2\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBMRD_c1793_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 74 \"%0<%10!s!> L1: L2 buf available, kick L2\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBMRD_c1793
    #define WPP_ANNOTATE_USBMRD_c1793 WPP_ANNOTATE_USBMRD_c1793_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBMRD_c1793 WPP_ANNOTATE_USBMRD_c1793_FINAL("TMF:", "USBMRD.c", "USBMRD_c1793", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBMRD_c1811_FINAL(P, File, Name, ...)    __annotation(L ## P, L"c545fe3d-9b98-385c-84e8-450beb16428c ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 75 \"%0<%10!s!> RecycleFrameBuffer\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_TRACE" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBMRD_c1811_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 75 \"%0<%10!s!> RecycleFrameBuffer\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_TRACE" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBMRD_c1811
    #define WPP_ANNOTATE_USBMRD_c1811 WPP_ANNOTATE_USBMRD_c1811_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBMRD_c1811 WPP_ANNOTATE_USBMRD_c1811_FINAL("TMF:", "USBMRD.c", "USBMRD_c1811", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBMRD_c1851_FINAL(P, File, Name, ...)    __annotation(L ## P, L"c545fe3d-9b98-385c-84e8-450beb16428c ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 76 \"%0<%10!s!> MRIC - error: device err %11!d! <%12!u!>\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBMRD_c1851_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 76 \"%0<%10!s!> MRIC - error: device err %11!d! <%12!u!>\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBMRD_c1851
    #define WPP_ANNOTATE_USBMRD_c1851 WPP_ANNOTATE_USBMRD_c1851_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemLong -- 12" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBMRD_c1851 WPP_ANNOTATE_USBMRD_c1851_FINAL("TMF:", "USBMRD.c", "USBMRD_c1851", L"{", L"pDevExt->PortName, ItemString -- 10" , L"pDevExt->RdErrorCount, ItemLong -- 11" , L"Cookie, ItemLong -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBMRD_c186_FINAL(P, File, Name, ...)    __annotation(L ## P, L"c545fe3d-9b98-385c-84e8-450beb16428c ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 13 \"%0<%10!s!> L2 ZwClose failed - 0x%11!x!\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBMRD_c186_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 13 \"%0<%10!s!> L2 ZwClose failed - 0x%11!x!\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBMRD_c186
    #define WPP_ANNOTATE_USBMRD_c186 WPP_ANNOTATE_USBMRD_c186_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBMRD_c186 WPP_ANNOTATE_USBMRD_c186_FINAL("TMF:", "USBMRD.c", "USBMRD_c186", L"{", L"pDevExt->PortName, ItemString -- 10" , L"ntStatus, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBMRD_c1862_FINAL(P, File, Name, ...)    __annotation(L ## P, L"c545fe3d-9b98-385c-84e8-450beb16428c ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 77 \"%0<%10!s!> MRIC - error %11!d! - dev removed\n\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBMRD_c1862_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 77 \"%0<%10!s!> MRIC - error %11!d! - dev removed\n\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBMRD_c1862
    #define WPP_ANNOTATE_USBMRD_c1862 WPP_ANNOTATE_USBMRD_c1862_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBMRD_c1862 WPP_ANNOTATE_USBMRD_c1862_FINAL("TMF:", "USBMRD.c", "USBMRD_c1862", L"{", L"pDevExt->PortName, ItemString -- 10" , L"pDevExt->RdErrorCount, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBMRD_c1889_FINAL(P, File, Name, ...)    __annotation(L ## P, L"c545fe3d-9b98-385c-84e8-450beb16428c ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 78 \"%0<%10!s!> MRIC RIRP=0x%11!p! (L2: %12!ld!B) st 0x%13!x! <%14!d!>\" //   FLAG=(QCUSB_DBG_MASK_RIRP | QCUSB_DBG_MASK_READ) LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBMRD_c1889_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 78 \"%0<%10!s!> MRIC RIRP=0x%11!p! (L2: %12!ld!B) st 0x%13!x! <%14!d!>\" //   FLAG=(QCUSB_DBG_MASK_RIRP | QCUSB_DBG_MASK_READ) LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBMRD_c1889
    #define WPP_ANNOTATE_USBMRD_c1889 WPP_ANNOTATE_USBMRD_c1889_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemPtr -- 11" , L"Arg, ItemLong -- 12" , L"Arg, ItemLong -- 13" , L"Arg, ItemLong -- 14" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBMRD_c1889 WPP_ANNOTATE_USBMRD_c1889_FINAL("TMF:", "USBMRD.c", "USBMRD_c1889", L"{", L"pDevExt->PortName, ItemString -- 10" , L"pIrp, ItemPtr -- 11" , L"ulL2Length, ItemLong -- 12" , L"ntStatus, ItemLong -- 13" , L"Cookie, ItemLong -- 14" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBMRD_c1891_FINAL(P, File, Name, ...)    __annotation(L ## P, L"c545fe3d-9b98-385c-84e8-450beb16428c ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 79 \"%0<%10!s!> FRAME DROPPED Count : %11!ld! and Total Size : 0x%12!ld!B FC : %13!ld!\" //  " WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBMRD_c1891_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 79 \"%0<%10!s!> FRAME DROPPED Count : %11!ld! and Total Size : 0x%12!ld!B FC : %13!ld!\" //  " WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBMRD_c1891
    #define WPP_ANNOTATE_USBMRD_c1891 WPP_ANNOTATE_USBMRD_c1891_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemLong -- 12" , L"Arg, ItemLong -- 13" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBMRD_c1891 WPP_ANNOTATE_USBMRD_c1891_FINAL("TMF:", "USBMRD.c", "USBMRD_c1891", L"{", L"pDevExt->PortName, ItemString -- 10" , L"pDevExt->FrameDropCount, ItemLong -- 11" , L"pDevExt->FrameDropBytes, ItemLong -- 12" , L"pDevExt->FlowControlEnabledCount, ItemLong -- 13" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBMRD_c1907_FINAL(P, File, Name, ...)    __annotation(L ## P, L"c545fe3d-9b98-385c-84e8-450beb16428c ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 80 \"%0<%10!s!> ERROR: Mdl translation 0x%11!p!\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_CRITICAL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBMRD_c1907_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 80 \"%0<%10!s!> ERROR: Mdl translation 0x%11!p!\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_CRITICAL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBMRD_c1907
    #define WPP_ANNOTATE_USBMRD_c1907 WPP_ANNOTATE_USBMRD_c1907_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemPtr -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBMRD_c1907 WPP_ANNOTATE_USBMRD_c1907_FINAL("TMF:", "USBMRD.c", "USBMRD_c1907", L"{", L"pDevExt->PortName, ItemString -- 10" , L"pIrp->MdlAddress, ItemPtr -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBMRD_c1933_FINAL(P, File, Name, ...)    __annotation(L ## P, L"c545fe3d-9b98-385c-84e8-450beb16428c ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 81 \"%0<%10!s!> MRIC - error: pIrp 1 - is NULL\" //   FLAG=QCUSB_DBG_MASK_RIRP LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBMRD_c1933_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 81 \"%0<%10!s!> MRIC - error: pIrp 1 - is NULL\" //   FLAG=QCUSB_DBG_MASK_RIRP LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBMRD_c1933
    #define WPP_ANNOTATE_USBMRD_c1933 WPP_ANNOTATE_USBMRD_c1933_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBMRD_c1933 WPP_ANNOTATE_USBMRD_c1933_FINAL("TMF:", "USBMRD.c", "USBMRD_c1933", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBMRD_c201_FINAL(P, File, Name, ...)    __annotation(L ## P, L"c545fe3d-9b98-385c-84e8-450beb16428c ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 14 \"%0<%10!s!> L2 handle=0x%11!p! thOb=0x%12!p!\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBMRD_c201_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 14 \"%0<%10!s!> L2 handle=0x%11!p! thOb=0x%12!p!\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBMRD_c201
    #define WPP_ANNOTATE_USBMRD_c201 WPP_ANNOTATE_USBMRD_c201_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemPtr -- 11" , L"Arg, ItemPtr -- 12" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBMRD_c201 WPP_ANNOTATE_USBMRD_c201_FINAL("TMF:", "USBMRD.c", "USBMRD_c201", L"{", L"pDevExt->PortName, ItemString -- 10" , L"pDevExt->hL2ReadThreadHandle, ItemPtr -- 11" , L"pDevExt->pL2ReadThread, ItemPtr -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBMRD_c2043_FINAL(P, File, Name, ...)    __annotation(L ## P, L"c545fe3d-9b98-385c-84e8-450beb16428c ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 82 \"%0<%10!s!> ERROR: Mdl translation 0x%11!p!\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_CRITICAL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBMRD_c2043_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 82 \"%0<%10!s!> ERROR: Mdl translation 0x%11!p!\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_CRITICAL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBMRD_c2043
    #define WPP_ANNOTATE_USBMRD_c2043 WPP_ANNOTATE_USBMRD_c2043_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemPtr -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBMRD_c2043 WPP_ANNOTATE_USBMRD_c2043_FINAL("TMF:", "USBMRD.c", "USBMRD_c2043", L"{", L"pDevExt->PortName, ItemString -- 10" , L"pIrp->MdlAddress, ItemPtr -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBMRD_c2060_FINAL(P, File, Name, ...)    __annotation(L ## P, L"c545fe3d-9b98-385c-84e8-450beb16428c ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 83 \"%0<%10!s!> MRIC - error: pIrp 3 - is NULL\" //   FLAG=QCUSB_DBG_MASK_RIRP LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBMRD_c2060_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 83 \"%0<%10!s!> MRIC - error: pIrp 3 - is NULL\" //   FLAG=QCUSB_DBG_MASK_RIRP LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBMRD_c2060
    #define WPP_ANNOTATE_USBMRD_c2060 WPP_ANNOTATE_USBMRD_c2060_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBMRD_c2060 WPP_ANNOTATE_USBMRD_c2060_FINAL("TMF:", "USBMRD.c", "USBMRD_c2060", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBMRD_c2064_FINAL(P, File, Name, ...)    __annotation(L ## P, L"c545fe3d-9b98-385c-84e8-450beb16428c ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 84 \"%0<%10!s!> FRAME DROPPED : %11!ld!B\" //  " WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBMRD_c2064_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 84 \"%0<%10!s!> FRAME DROPPED : %11!ld!B\" //  " WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBMRD_c2064
    #define WPP_ANNOTATE_USBMRD_c2064 WPP_ANNOTATE_USBMRD_c2064_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBMRD_c2064 WPP_ANNOTATE_USBMRD_c2064_FINAL("TMF:", "USBMRD.c", "USBMRD_c2064", L"{", L"pDevExt->PortName, ItemString -- 10" , L"ulL2Length, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBMRD_c2067_FINAL(P, File, Name, ...)    __annotation(L ## P, L"c545fe3d-9b98-385c-84e8-450beb16428c ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 85 \"%0<%10!s!> FRAME DROPPED Count : %11!ld! and Total Size : 0x%12!ld!B\" //  " WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBMRD_c2067_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 85 \"%0<%10!s!> FRAME DROPPED Count : %11!ld! and Total Size : 0x%12!ld!B\" //  " WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBMRD_c2067
    #define WPP_ANNOTATE_USBMRD_c2067 WPP_ANNOTATE_USBMRD_c2067_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemLong -- 12" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBMRD_c2067 WPP_ANNOTATE_USBMRD_c2067_FINAL("TMF:", "USBMRD.c", "USBMRD_c2067", L"{", L"pDevExt->PortName, ItemString -- 10" , L"++(pDevExt->FrameDropCount), ItemLong -- 11" , L"(pDevExt->FrameDropBytes+= ulL2Length), ItemLong -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBMRD_c2132_FINAL(P, File, Name, ...)    __annotation(L ## P, L"c545fe3d-9b98-385c-84e8-450beb16428c ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 86 \"%0<%10!s!> MRIC - error: invalid data - end of buf\" //   FLAG=QCUSB_DBG_MASK_RIRP LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBMRD_c2132_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 86 \"%0<%10!s!> MRIC - error: invalid data - end of buf\" //   FLAG=QCUSB_DBG_MASK_RIRP LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBMRD_c2132
    #define WPP_ANNOTATE_USBMRD_c2132 WPP_ANNOTATE_USBMRD_c2132_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBMRD_c2132 WPP_ANNOTATE_USBMRD_c2132_FINAL("TMF:", "USBMRD.c", "USBMRD_c2132", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBMRD_c2146_FINAL(P, File, Name, ...)    __annotation(L ## P, L"c545fe3d-9b98-385c-84e8-450beb16428c ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 87 \"%0<%10!s!> MRIC - error: invalid data - end of buf\" //   FLAG=QCUSB_DBG_MASK_RIRP LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBMRD_c2146_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 87 \"%0<%10!s!> MRIC - error: invalid data - end of buf\" //   FLAG=QCUSB_DBG_MASK_RIRP LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBMRD_c2146
    #define WPP_ANNOTATE_USBMRD_c2146 WPP_ANNOTATE_USBMRD_c2146_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBMRD_c2146 WPP_ANNOTATE_USBMRD_c2146_FINAL("TMF:", "USBMRD.c", "USBMRD_c2146", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBMRD_c2170_FINAL(P, File, Name, ...)    __annotation(L ## P, L"c545fe3d-9b98-385c-84e8-450beb16428c ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 88 \"%0<%10!s!> MRIC - TLP_BUF_STATE_HDR_ONLY\" //   FLAG=QCUSB_DBG_MASK_RIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBMRD_c2170_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 88 \"%0<%10!s!> MRIC - TLP_BUF_STATE_HDR_ONLY\" //   FLAG=QCUSB_DBG_MASK_RIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBMRD_c2170
    #define WPP_ANNOTATE_USBMRD_c2170 WPP_ANNOTATE_USBMRD_c2170_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBMRD_c2170 WPP_ANNOTATE_USBMRD_c2170_FINAL("TMF:", "USBMRD.c", "USBMRD_c2170", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBMRD_c2194_FINAL(P, File, Name, ...)    __annotation(L ## P, L"c545fe3d-9b98-385c-84e8-450beb16428c ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 89 \"%0<%10!s!> MRIC - TLP_BUF_STATE_PARTIAL_HDR\" //   FLAG=QCUSB_DBG_MASK_RIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBMRD_c2194_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 89 \"%0<%10!s!> MRIC - TLP_BUF_STATE_PARTIAL_HDR\" //   FLAG=QCUSB_DBG_MASK_RIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBMRD_c2194
    #define WPP_ANNOTATE_USBMRD_c2194 WPP_ANNOTATE_USBMRD_c2194_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBMRD_c2194 WPP_ANNOTATE_USBMRD_c2194_FINAL("TMF:", "USBMRD.c", "USBMRD_c2194", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBMRD_c2218_FINAL(P, File, Name, ...)    __annotation(L ## P, L"c545fe3d-9b98-385c-84e8-450beb16428c ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 90 \"%0<%10!s!> MRIC - error: invalid data - end of buf\" //   FLAG=QCUSB_DBG_MASK_RIRP LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBMRD_c2218_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 90 \"%0<%10!s!> MRIC - error: invalid data - end of buf\" //   FLAG=QCUSB_DBG_MASK_RIRP LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBMRD_c2218
    #define WPP_ANNOTATE_USBMRD_c2218 WPP_ANNOTATE_USBMRD_c2218_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBMRD_c2218 WPP_ANNOTATE_USBMRD_c2218_FINAL("TMF:", "USBMRD.c", "USBMRD_c2218", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBMRD_c2242_FINAL(P, File, Name, ...)    __annotation(L ## P, L"c545fe3d-9b98-385c-84e8-450beb16428c ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 91 \"%0<%10!s!> RIC : Wrong MBIM packet BlockLength : %11!d! and PacketLen : %12!d!\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBMRD_c2242_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 91 \"%0<%10!s!> RIC : Wrong MBIM packet BlockLength : %11!d! and PacketLen : %12!d!\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBMRD_c2242
    #define WPP_ANNOTATE_USBMRD_c2242 WPP_ANNOTATE_USBMRD_c2242_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemLong -- 12" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBMRD_c2242 WPP_ANNOTATE_USBMRD_c2242_FINAL("TMF:", "USBMRD.c", "USBMRD_c2242", L"{", L"pDevExt->PortName, ItemString -- 10" , L"pNTBHrd->wBlockLength, ItemLong -- 11" , L"remBytes, ItemLong -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBMRD_c2265_FINAL(P, File, Name, ...)    __annotation(L ## P, L"c545fe3d-9b98-385c-84e8-450beb16428c ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 92 \"%0<%10!s!> RIC : MBIMDL: Current Datagram Ptr : 0x%11!d! and Datagram len : %12!d!\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBMRD_c2265_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 92 \"%0<%10!s!> RIC : MBIMDL: Current Datagram Ptr : 0x%11!d! and Datagram len : %12!d!\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBMRD_c2265
    #define WPP_ANNOTATE_USBMRD_c2265 WPP_ANNOTATE_USBMRD_c2265_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemLong -- 12" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBMRD_c2265 WPP_ANNOTATE_USBMRD_c2265_FINAL("TMF:", "USBMRD.c", "USBMRD_c2265", L"{", L"pDevExt->PortName, ItemString -- 10" , L"pDatagramPtr->DatagramPtr, ItemLong -- 11" , L"pDatagramPtr->DatagramLen, ItemLong -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBMRD_c2279_FINAL(P, File, Name, ...)    __annotation(L ## P, L"c545fe3d-9b98-385c-84e8-450beb16428c ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 93 \"%0<%10!s!> RIC : MBIMDL: Current Datagram Ptr : 0x%11!d! and Datagram len : %12!d!\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBMRD_c2279_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 93 \"%0<%10!s!> RIC : MBIMDL: Current Datagram Ptr : 0x%11!d! and Datagram len : %12!d!\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBMRD_c2279
    #define WPP_ANNOTATE_USBMRD_c2279 WPP_ANNOTATE_USBMRD_c2279_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemLong -- 12" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBMRD_c2279 WPP_ANNOTATE_USBMRD_c2279_FINAL("TMF:", "USBMRD.c", "USBMRD_c2279", L"{", L"pDevExt->PortName, ItemString -- 10" , L"pDatagramPtr->DatagramPtr, ItemLong -- 11" , L"pDatagramPtr->DatagramLen, ItemLong -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBMRD_c2306_FINAL(P, File, Name, ...)    __annotation(L ## P, L"c545fe3d-9b98-385c-84e8-450beb16428c ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 94 \"%0<%10!s!> MRIC - error invalid TLP hdr 0x%11!x! (%12!u!B/%13!u!B)\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBMRD_c2306_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 94 \"%0<%10!s!> MRIC - error invalid TLP hdr 0x%11!x! (%12!u!B/%13!u!B)\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBMRD_c2306
    #define WPP_ANNOTATE_USBMRD_c2306 WPP_ANNOTATE_USBMRD_c2306_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemLong -- 12" , L"Arg, ItemLong -- 13" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBMRD_c2306 WPP_ANNOTATE_USBMRD_c2306_FINAL("TMF:", "USBMRD.c", "USBMRD_c2306", L"{", L"pDevExt->PortName, ItemString -- 10" , L"tlp->Length, ItemLong -- 11" , L"ulL2Length, ItemLong -- 12" , L"pDevExt->MaxPipeXferSize, ItemLong -- 13" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBMRD_c2348_FINAL(P, File, Name, ...)    __annotation(L ## P, L"c545fe3d-9b98-385c-84e8-450beb16428c ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 95 \"%0<%10!s!> MRIC - Fill RIRP 0x%11!p![%12!u!] %13!u!B\" //   FLAG=QCUSB_DBG_MASK_RIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBMRD_c2348_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 95 \"%0<%10!s!> MRIC - Fill RIRP 0x%11!p![%12!u!] %13!u!B\" //   FLAG=QCUSB_DBG_MASK_RIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBMRD_c2348
    #define WPP_ANNOTATE_USBMRD_c2348 WPP_ANNOTATE_USBMRD_c2348_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemPtr -- 11" , L"Arg, ItemLong -- 12" , L"Arg, ItemLong -- 13" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBMRD_c2348 WPP_ANNOTATE_USBMRD_c2348_FINAL("TMF:", "USBMRD.c", "USBMRD_c2348", L"{", L"pDevExt->PortName, ItemString -- 10" , L"pIrp, ItemPtr -- 11" , L"pDevExt->TLPCount, ItemLong -- 12" , L"pktLen, ItemLong -- 13" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBMRD_c2362_FINAL(P, File, Name, ...)    __annotation(L ## P, L"c545fe3d-9b98-385c-84e8-450beb16428c ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 96 \"%0<%10!s!> MRIC - error, received pkt too big %11!u!/%12!u!/%13!u!/%14!u!, drop\" //   FLAG=QCUSB_DBG_MASK_RIRP LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBMRD_c2362_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 96 \"%0<%10!s!> MRIC - error, received pkt too big %11!u!/%12!u!/%13!u!/%14!u!, drop\" //   FLAG=QCUSB_DBG_MASK_RIRP LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBMRD_c2362
    #define WPP_ANNOTATE_USBMRD_c2362 WPP_ANNOTATE_USBMRD_c2362_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemLong -- 12" , L"Arg, ItemLong -- 13" , L"Arg, ItemLong -- 14" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBMRD_c2362 WPP_ANNOTATE_USBMRD_c2362_FINAL("TMF:", "USBMRD.c", "USBMRD_c2362", L"{", L"pDevExt->PortName, ItemString -- 10" , L"pktLen, ItemLong -- 11" , L"ulReqLength, ItemLong -- 12" , L"ulL2Length, ItemLong -- 13" , L"pDevExt->MaxPipeXferSize, ItemLong -- 14" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBMRD_c2382_FINAL(P, File, Name, ...)    __annotation(L ## P, L"c545fe3d-9b98-385c-84e8-450beb16428c ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 97 \"%0<%10!s!> MRIC - error, IRP buf too small %11!u!/%12!u!/%13!u!\" //   FLAG=QCUSB_DBG_MASK_RIRP LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBMRD_c2382_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 97 \"%0<%10!s!> MRIC - error, IRP buf too small %11!u!/%12!u!/%13!u!\" //   FLAG=QCUSB_DBG_MASK_RIRP LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBMRD_c2382
    #define WPP_ANNOTATE_USBMRD_c2382 WPP_ANNOTATE_USBMRD_c2382_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemLong -- 12" , L"Arg, ItemLong -- 13" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBMRD_c2382 WPP_ANNOTATE_USBMRD_c2382_FINAL("TMF:", "USBMRD.c", "USBMRD_c2382", L"{", L"pDevExt->PortName, ItemString -- 10" , L"pktLen, ItemLong -- 11" , L"ulReqLength, ItemLong -- 12" , L"ulL2Length, ItemLong -- 13" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBMRD_c243_FINAL(P, File, Name, ...)    __annotation(L ## P, L"c545fe3d-9b98-385c-84e8-450beb16428c ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 15 \"%0<%10!s!> L1 direct completion[%11!u!](0x%12!x!)\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_INFO" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBMRD_c243_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 15 \"%0<%10!s!> L1 direct completion[%11!u!](0x%12!x!)\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_INFO" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBMRD_c243
    #define WPP_ANNOTATE_USBMRD_c243 WPP_ANNOTATE_USBMRD_c243_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemLong -- 12" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBMRD_c243 WPP_ANNOTATE_USBMRD_c243_FINAL("TMF:", "USBMRD.c", "USBMRD_c243", L"{", L"pDevExt->PortName, ItemString -- 10" , L"pDevExt->L2FillIdx, ItemLong -- 11" , L"pDevExt->pL2ReadBuffer[pDevExt->L2FillIdx].Status, ItemLong -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBMRD_c2500_FINAL(P, File, Name, ...)    __annotation(L ## P, L"c545fe3d-9b98-385c-84e8-450beb16428c ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 98 \"%0<%10!s!> MRIC - partial fill, first leg %11!u!B/%12!u!B/%13!u!B/%14!u!B\" //   FLAG=QCUSB_DBG_MASK_RIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBMRD_c2500_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 98 \"%0<%10!s!> MRIC - partial fill, first leg %11!u!B/%12!u!B/%13!u!B/%14!u!B\" //   FLAG=QCUSB_DBG_MASK_RIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBMRD_c2500
    #define WPP_ANNOTATE_USBMRD_c2500 WPP_ANNOTATE_USBMRD_c2500_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemLong -- 12" , L"Arg, ItemLong -- 13" , L"Arg, ItemLong -- 14" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBMRD_c2500 WPP_ANNOTATE_USBMRD_c2500_FINAL("TMF:", "USBMRD.c", "USBMRD_c2500", L"{", L"pDevExt->PortName, ItemString -- 10" , L"tmpLen, ItemLong -- 11" , L"pktLen, ItemLong -- 12" , L"ulReqLength, ItemLong -- 13" , L"ulL2Length, ItemLong -- 14" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBMRD_c2524_FINAL(P, File, Name, ...)    __annotation(L ## P, L"c545fe3d-9b98-385c-84e8-450beb16428c ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 99 \"%0<%10!s!> MRIC - error partial fill, rcvd pkt too big %11!u!/%12!u!/%13!u!/%14!u!, drop\" //   FLAG=QCUSB_DBG_MASK_RIRP LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBMRD_c2524_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 99 \"%0<%10!s!> MRIC - error partial fill, rcvd pkt too big %11!u!/%12!u!/%13!u!/%14!u!, drop\" //   FLAG=QCUSB_DBG_MASK_RIRP LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBMRD_c2524
    #define WPP_ANNOTATE_USBMRD_c2524 WPP_ANNOTATE_USBMRD_c2524_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemLong -- 12" , L"Arg, ItemLong -- 13" , L"Arg, ItemLong -- 14" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBMRD_c2524 WPP_ANNOTATE_USBMRD_c2524_FINAL("TMF:", "USBMRD.c", "USBMRD_c2524", L"{", L"pDevExt->PortName, ItemString -- 10" , L"pktLen, ItemLong -- 11" , L"ulReqLength, ItemLong -- 12" , L"ulL2Length, ItemLong -- 13" , L"pDevExt->MaxPipeXferSize, ItemLong -- 14" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBMRD_c2541_FINAL(P, File, Name, ...)    __annotation(L ## P, L"c545fe3d-9b98-385c-84e8-450beb16428c ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 100 \"%0<%10!s!> MRIC - error partial fill, IRP buf too small %11!u!/%12!u!/%13!u!\" //   FLAG=QCUSB_DBG_MASK_RIRP LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBMRD_c2541_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 100 \"%0<%10!s!> MRIC - error partial fill, IRP buf too small %11!u!/%12!u!/%13!u!\" //   FLAG=QCUSB_DBG_MASK_RIRP LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBMRD_c2541
    #define WPP_ANNOTATE_USBMRD_c2541 WPP_ANNOTATE_USBMRD_c2541_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemLong -- 12" , L"Arg, ItemLong -- 13" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBMRD_c2541 WPP_ANNOTATE_USBMRD_c2541_FINAL("TMF:", "USBMRD.c", "USBMRD_c2541", L"{", L"pDevExt->PortName, ItemString -- 10" , L"pktLen, ItemLong -- 11" , L"ulReqLength, ItemLong -- 12" , L"ulL2Length, ItemLong -- 13" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBMRD_c2556_FINAL(P, File, Name, ...)    __annotation(L ## P, L"c545fe3d-9b98-385c-84e8-450beb16428c ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 101 \"%0<%10!s!> MBIM - error bad packet %11!u!/%12!u!/%13!u!/%14!u!, drop\" //   FLAG=QCUSB_DBG_MASK_RIRP LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBMRD_c2556_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 101 \"%0<%10!s!> MBIM - error bad packet %11!u!/%12!u!/%13!u!/%14!u!, drop\" //   FLAG=QCUSB_DBG_MASK_RIRP LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBMRD_c2556
    #define WPP_ANNOTATE_USBMRD_c2556 WPP_ANNOTATE_USBMRD_c2556_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemLong -- 12" , L"Arg, ItemLong -- 13" , L"Arg, ItemLong -- 14" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBMRD_c2556 WPP_ANNOTATE_USBMRD_c2556_FINAL("TMF:", "USBMRD.c", "USBMRD_c2556", L"{", L"pDevExt->PortName, ItemString -- 10" , L"pktLen, ItemLong -- 11" , L"ulReqLength, ItemLong -- 12" , L"ulL2Length, ItemLong -- 13" , L"pDevExt->MaxPipeXferSize, ItemLong -- 14" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBMRD_c2614_FINAL(P, File, Name, ...)    __annotation(L ## P, L"c545fe3d-9b98-385c-84e8-450beb16428c ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 102 \"%0<%10!s!> MRIC - error, frame spans > 2 buffers\" //   FLAG=QCUSB_DBG_MASK_RIRP LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBMRD_c2614_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 102 \"%0<%10!s!> MRIC - error, frame spans > 2 buffers\" //   FLAG=QCUSB_DBG_MASK_RIRP LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBMRD_c2614
    #define WPP_ANNOTATE_USBMRD_c2614 WPP_ANNOTATE_USBMRD_c2614_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBMRD_c2614 WPP_ANNOTATE_USBMRD_c2614_FINAL("TMF:", "USBMRD.c", "USBMRD_c2614", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBMRD_c2639_FINAL(P, File, Name, ...)    __annotation(L ## P, L"c545fe3d-9b98-385c-84e8-450beb16428c ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 103 \"%0<%10!s!> MRIC - M Filling RIRP 0x%11!p![%12!u!] (%13!u!B+%14!u!B)\" //   FLAG=QCUSB_DBG_MASK_RIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBMRD_c2639_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 103 \"%0<%10!s!> MRIC - M Filling RIRP 0x%11!p![%12!u!] (%13!u!B+%14!u!B)\" //   FLAG=QCUSB_DBG_MASK_RIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBMRD_c2639
    #define WPP_ANNOTATE_USBMRD_c2639 WPP_ANNOTATE_USBMRD_c2639_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemPtr -- 11" , L"Arg, ItemLong -- 12" , L"Arg, ItemLong -- 13" , L"Arg, ItemLong -- 14" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBMRD_c2639 WPP_ANNOTATE_USBMRD_c2639_FINAL("TMF:", "USBMRD.c", "USBMRD_c2639", L"{", L"pDevExt->PortName, ItemString -- 10" , L"pIrp, ItemPtr -- 11" , L"pDevExt->TLPCount, ItemLong -- 12" , L"pDevExt->TlpFrameBuffer.PktLength, ItemLong -- 13" , L"pDevExt->TlpFrameBuffer.BytesNeeded, ItemLong -- 14" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBMRD_c2698_FINAL(P, File, Name, ...)    __annotation(L ## P, L"c545fe3d-9b98-385c-84e8-450beb16428c ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 104 \"%0<%10!s!> MRIC - error bad bundle, discard L2[%11!u!] %12!u!B\" //   FLAG=QCUSB_DBG_MASK_RIRP LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBMRD_c2698_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 104 \"%0<%10!s!> MRIC - error bad bundle, discard L2[%11!u!] %12!u!B\" //   FLAG=QCUSB_DBG_MASK_RIRP LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBMRD_c2698
    #define WPP_ANNOTATE_USBMRD_c2698 WPP_ANNOTATE_USBMRD_c2698_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemLong -- 12" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBMRD_c2698 WPP_ANNOTATE_USBMRD_c2698_FINAL("TMF:", "USBMRD.c", "USBMRD_c2698", L"{", L"pDevExt->PortName, ItemString -- 10" , L"pDevExt->L2FillIdx, ItemLong -- 11" , L"ulL2Length, ItemLong -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBMRD_c271_FINAL(P, File, Name, ...)    __annotation(L ## P, L"c545fe3d-9b98-385c-84e8-450beb16428c ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 16 \"%0<%10!s!> L1 direct completion[%11!u!](0x%12!x!)\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_INFO" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBMRD_c271_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 16 \"%0<%10!s!> L1 direct completion[%11!u!](0x%12!x!)\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_INFO" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBMRD_c271
    #define WPP_ANNOTATE_USBMRD_c271 WPP_ANNOTATE_USBMRD_c271_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemLong -- 12" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBMRD_c271 WPP_ANNOTATE_USBMRD_c271_FINAL("TMF:", "USBMRD.c", "USBMRD_c271", L"{", L"pDevExt->PortName, ItemString -- 10" , L"pDevExt->L2FillIdx, ItemLong -- 11" , L"pDevExt->pL2ReadBuffer[pDevExt->L2FillIdx].Status, ItemLong -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBMRD_c2711_FINAL(P, File, Name, ...)    __annotation(L ## P, L"c545fe3d-9b98-385c-84e8-450beb16428c ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 105 \"%0<%10!s!> MRIC - end of bad bundle reached %11!u!B\" //   FLAG=QCUSB_DBG_MASK_RIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBMRD_c2711_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 105 \"%0<%10!s!> MRIC - end of bad bundle reached %11!u!B\" //   FLAG=QCUSB_DBG_MASK_RIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBMRD_c2711
    #define WPP_ANNOTATE_USBMRD_c2711 WPP_ANNOTATE_USBMRD_c2711_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBMRD_c2711 WPP_ANNOTATE_USBMRD_c2711_FINAL("TMF:", "USBMRD.c", "USBMRD_c2711", L"{", L"pDevExt->PortName, ItemString -- 10" , L"ulL2Length, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBMRD_c2725_FINAL(P, File, Name, ...)    __annotation(L ## P, L"c545fe3d-9b98-385c-84e8-450beb16428c ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 106 \"%0<%10!s!> MRIC - error: wrong TLP state\" //   FLAG=QCUSB_DBG_MASK_RIRP LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBMRD_c2725_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 106 \"%0<%10!s!> MRIC - error: wrong TLP state\" //   FLAG=QCUSB_DBG_MASK_RIRP LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBMRD_c2725
    #define WPP_ANNOTATE_USBMRD_c2725 WPP_ANNOTATE_USBMRD_c2725_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBMRD_c2725 WPP_ANNOTATE_USBMRD_c2725_FINAL("TMF:", "USBMRD.c", "USBMRD_c2725", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBMRD_c2751_FINAL(P, File, Name, ...)    __annotation(L ## P, L"c545fe3d-9b98-385c-84e8-450beb16428c ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 107 \"%0<%10!s!> MRIC - error RIRP 0x%11!p! C: in callellation!!\" //   FLAG=QCUSB_DBG_MASK_RIRP LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBMRD_c2751_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 107 \"%0<%10!s!> MRIC - error RIRP 0x%11!p! C: in callellation!!\" //   FLAG=QCUSB_DBG_MASK_RIRP LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBMRD_c2751
    #define WPP_ANNOTATE_USBMRD_c2751 WPP_ANNOTATE_USBMRD_c2751_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemPtr -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBMRD_c2751 WPP_ANNOTATE_USBMRD_c2751_FINAL("TMF:", "USBMRD.c", "USBMRD_c2751", L"{", L"pDevExt->PortName, ItemString -- 10" , L"pIrp, ItemPtr -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBMRD_c2762_FINAL(P, File, Name, ...)    __annotation(L ## P, L"c545fe3d-9b98-385c-84e8-450beb16428c ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 108 \"%0<%10!s!> MRIC - error RIRP 0x%11!p! C: 0\" //   FLAG=QCUSB_DBG_MASK_RIRP LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBMRD_c2762_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 108 \"%0<%10!s!> MRIC - error RIRP 0x%11!p! C: 0\" //   FLAG=QCUSB_DBG_MASK_RIRP LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBMRD_c2762
    #define WPP_ANNOTATE_USBMRD_c2762 WPP_ANNOTATE_USBMRD_c2762_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemPtr -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBMRD_c2762 WPP_ANNOTATE_USBMRD_c2762_FINAL("TMF:", "USBMRD.c", "USBMRD_c2762", L"{", L"pDevExt->PortName, ItemString -- 10" , L"pIrp, ItemPtr -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBMRD_c2841_FINAL(P, File, Name, ...)    __annotation(L ## P, L"c545fe3d-9b98-385c-84e8-450beb16428c ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 109 \"%0<%10!s!> --> USBRD_InPipeOk 0x%11!x!\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_TRACE" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBMRD_c2841_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 109 \"%0<%10!s!> --> USBRD_InPipeOk 0x%11!x!\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_TRACE" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBMRD_c2841
    #define WPP_ANNOTATE_USBMRD_c2841 WPP_ANNOTATE_USBMRD_c2841_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBMRD_c2841 WPP_ANNOTATE_USBMRD_c2841_FINAL("TMF:", "USBMRD.c", "USBMRD_c2841", L"{", L"pDevExt->PortName, ItemString -- 10" , L"pDevExt->BulkPipeInput, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBMRD_c2849_FINAL(P, File, Name, ...)    __annotation(L ## P, L"c545fe3d-9b98-385c-84e8-450beb16428c ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 110 \"%0<%10!s!> _InPipeOk: no IN pipe!\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBMRD_c2849_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 110 \"%0<%10!s!> _InPipeOk: no IN pipe!\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBMRD_c2849
    #define WPP_ANNOTATE_USBMRD_c2849 WPP_ANNOTATE_USBMRD_c2849_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBMRD_c2849 WPP_ANNOTATE_USBMRD_c2849_FINAL("TMF:", "USBMRD.c", "USBMRD_c2849", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBMRD_c2861_FINAL(P, File, Name, ...)    __annotation(L ## P, L"c545fe3d-9b98-385c-84e8-450beb16428c ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 111 \"%0<%10!s!> _InPipeOk: no MEM!\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBMRD_c2861_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 111 \"%0<%10!s!> _InPipeOk: no MEM!\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBMRD_c2861
    #define WPP_ANNOTATE_USBMRD_c2861 WPP_ANNOTATE_USBMRD_c2861_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBMRD_c2861 WPP_ANNOTATE_USBMRD_c2861_FINAL("TMF:", "USBMRD.c", "USBMRD_c2861", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBMRD_c2920_FINAL(P, File, Name, ...)    __annotation(L ## P, L"c545fe3d-9b98-385c-84e8-450beb16428c ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 112 \"%0<%10!s!> _InPipeOk: 1st timeout\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBMRD_c2920_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 112 \"%0<%10!s!> _InPipeOk: 1st timeout\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBMRD_c2920
    #define WPP_ANNOTATE_USBMRD_c2920 WPP_ANNOTATE_USBMRD_c2920_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBMRD_c2920 WPP_ANNOTATE_USBMRD_c2920_FINAL("TMF:", "USBMRD.c", "USBMRD_c2920", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBMRD_c2937_FINAL(P, File, Name, ...)    __annotation(L ## P, L"c545fe3d-9b98-385c-84e8-450beb16428c ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 113 \"%0<%10!s!> _InPipeOk: Cxl timeout!\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_CRITICAL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBMRD_c2937_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 113 \"%0<%10!s!> _InPipeOk: Cxl timeout!\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_CRITICAL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBMRD_c2937
    #define WPP_ANNOTATE_USBMRD_c2937 WPP_ANNOTATE_USBMRD_c2937_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBMRD_c2937 WPP_ANNOTATE_USBMRD_c2937_FINAL("TMF:", "USBMRD.c", "USBMRD_c2937", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBMRD_c2948_FINAL(P, File, Name, ...)    __annotation(L ## P, L"c545fe3d-9b98-385c-84e8-450beb16428c ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 114 \"%0<%10!s!> _InPipeOk: IoCallDriver failed 0x%11!x!\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBMRD_c2948_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 114 \"%0<%10!s!> _InPipeOk: IoCallDriver failed 0x%11!x!\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBMRD_c2948
    #define WPP_ANNOTATE_USBMRD_c2948 WPP_ANNOTATE_USBMRD_c2948_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBMRD_c2948 WPP_ANNOTATE_USBMRD_c2948_FINAL("TMF:", "USBMRD.c", "USBMRD_c2948", L"{", L"pDevExt->PortName, ItemString -- 10" , L"ntStatus, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBMRD_c2966_FINAL(P, File, Name, ...)    __annotation(L ## P, L"c545fe3d-9b98-385c-84e8-450beb16428c ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 115 \"%0<%10!s!> <-- USBRD_InPipeOk 0x%11!x!/0x%12!x!\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_TRACE" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBMRD_c2966_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 115 \"%0<%10!s!> <-- USBRD_InPipeOk 0x%11!x!/0x%12!x!\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_TRACE" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBMRD_c2966
    #define WPP_ANNOTATE_USBMRD_c2966 WPP_ANNOTATE_USBMRD_c2966_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemLong -- 12" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBMRD_c2966 WPP_ANNOTATE_USBMRD_c2966_FINAL("TMF:", "USBMRD.c", "USBMRD_c2966", L"{", L"pDevExt->PortName, ItemString -- 10" , L"pIrp->IoStatus.Status, ItemLong -- 11" , L"STATUS_DEVICE_NOT_CONNECTED, ItemLong -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBMRD_c2994_FINAL(P, File, Name, ...)    __annotation(L ## P, L"c545fe3d-9b98-385c-84e8-450beb16428c ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 116 \"%0<%10!s!> IPO: MRD_FillIrpData: IRP buf too small: %11!d!/%12!d!B\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBMRD_c2994_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 116 \"%0<%10!s!> IPO: MRD_FillIrpData: IRP buf too small: %11!d!/%12!d!B\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBMRD_c2994
    #define WPP_ANNOTATE_USBMRD_c2994 WPP_ANNOTATE_USBMRD_c2994_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemLong -- 12" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBMRD_c2994 WPP_ANNOTATE_USBMRD_c2994_FINAL("TMF:", "USBMRD.c", "USBMRD_c2994", L"{", L"pDevExt->PortName, ItemString -- 10" , L"BufferSize, ItemLong -- 11" , L"DataLength, ItemLong -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBMRD_c301_FINAL(P, File, Name, ...)    __annotation(L ## P, L"c545fe3d-9b98-385c-84e8-450beb16428c ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 17 \"%0<%10!s!> L1: DUMMY_EVENT\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBMRD_c301_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 17 \"%0<%10!s!> L1: DUMMY_EVENT\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBMRD_c301
    #define WPP_ANNOTATE_USBMRD_c301 WPP_ANNOTATE_USBMRD_c301_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBMRD_c301 WPP_ANNOTATE_USBMRD_c301_FINAL("TMF:", "USBMRD.c", "USBMRD_c301", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBMRD_c3023_FINAL(P, File, Name, ...)    __annotation(L ## P, L"c545fe3d-9b98-385c-84e8-450beb16428c ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 117 \"%0<%10!s!> RECEIVED PACKET : seq num (%11!02X! %12!02X!)\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBMRD_c3023_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 117 \"%0<%10!s!> RECEIVED PACKET : seq num (%11!02X! %12!02X!)\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBMRD_c3023
    #define WPP_ANNOTATE_USBMRD_c3023 WPP_ANNOTATE_USBMRD_c3023_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemLong -- 12" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBMRD_c3023 WPP_ANNOTATE_USBMRD_c3023_FINAL("TMF:", "USBMRD.c", "USBMRD_c3023", L"{", L"pDevExt->PortName, ItemString -- 10" , L"(UCHAR)DataBuffer[4], ItemLong -- 11" , L"(UCHAR)DataBuffer[5], ItemLong -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBMRD_c3024_FINAL(P, File, Name, ...)    __annotation(L ## P, L"c545fe3d-9b98-385c-84e8-450beb16428c ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 118 \"%0<%10!s!> RECEIVED PACKET : seq num (%11!02X! %12!02X!)\" //  " WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBMRD_c3024_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 118 \"%0<%10!s!> RECEIVED PACKET : seq num (%11!02X! %12!02X!)\" //  " WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBMRD_c3024
    #define WPP_ANNOTATE_USBMRD_c3024 WPP_ANNOTATE_USBMRD_c3024_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemLong -- 12" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBMRD_c3024 WPP_ANNOTATE_USBMRD_c3024_FINAL("TMF:", "USBMRD.c", "USBMRD_c3024", L"{", L"pDevExt->PortName, ItemString -- 10" , L"(UCHAR)DataBuffer[4], ItemLong -- 11" , L"(UCHAR)DataBuffer[5], ItemLong -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBMRD_c3035_FINAL(P, File, Name, ...)    __annotation(L ## P, L"c545fe3d-9b98-385c-84e8-450beb16428c ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 119 \"%0<%10!s!> RECEIVED PACKET : seq num (%11!02X! %12!02X!)\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBMRD_c3035_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 119 \"%0<%10!s!> RECEIVED PACKET : seq num (%11!02X! %12!02X!)\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBMRD_c3035
    #define WPP_ANNOTATE_USBMRD_c3035 WPP_ANNOTATE_USBMRD_c3035_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemLong -- 12" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBMRD_c3035 WPP_ANNOTATE_USBMRD_c3035_FINAL("TMF:", "USBMRD.c", "USBMRD_c3035", L"{", L"pDevExt->PortName, ItemString -- 10" , L"(UCHAR)DataBuffer[18], ItemLong -- 11" , L"(UCHAR)DataBuffer[19], ItemLong -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBMRD_c325_FINAL(P, File, Name, ...)    __annotation(L ## P, L"c545fe3d-9b98-385c-84e8-450beb16428c ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 18 \"%0<%10!s!> L1 R kicked, active=%11!d!\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBMRD_c325_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 18 \"%0<%10!s!> L1 R kicked, active=%11!d!\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBMRD_c325
    #define WPP_ANNOTATE_USBMRD_c325 WPP_ANNOTATE_USBMRD_c325_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBMRD_c325 WPP_ANNOTATE_USBMRD_c325_FINAL("TMF:", "USBMRD.c", "USBMRD_c325", L"{", L"pDevExt->PortName, ItemString -- 10" , L"pDevExt->bL1ReadActive, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBMRD_c352_FINAL(P, File, Name, ...)    __annotation(L ## P, L"c545fe3d-9b98-385c-84e8-450beb16428c ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 19 \"%0<%10!s!> L1_CANCEL_EVENT_INDEX\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBMRD_c352_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 19 \"%0<%10!s!> L1_CANCEL_EVENT_INDEX\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBMRD_c352
    #define WPP_ANNOTATE_USBMRD_c352 WPP_ANNOTATE_USBMRD_c352_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBMRD_c352 WPP_ANNOTATE_USBMRD_c352_FINAL("TMF:", "USBMRD.c", "USBMRD_c352", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBMRD_c398_FINAL(P, File, Name, ...)    __annotation(L ## P, L"c545fe3d-9b98-385c-84e8-450beb16428c ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 20 \"%0<%10!s!> L1R cxl: L2 OUT\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBMRD_c398_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 20 \"%0<%10!s!> L1R cxl: L2 OUT\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBMRD_c398
    #define WPP_ANNOTATE_USBMRD_c398 WPP_ANNOTATE_USBMRD_c398_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBMRD_c398 WPP_ANNOTATE_USBMRD_c398_FINAL("TMF:", "USBMRD.c", "USBMRD_c398", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBMRD_c410_FINAL(P, File, Name, ...)    __annotation(L ## P, L"c545fe3d-9b98-385c-84e8-450beb16428c ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 21 \"%0<%10!s!> L1_CANCEL_EVENT_INDEX END\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBMRD_c410_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 21 \"%0<%10!s!> L1_CANCEL_EVENT_INDEX END\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBMRD_c410
    #define WPP_ANNOTATE_USBMRD_c410 WPP_ANNOTATE_USBMRD_c410_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBMRD_c410 WPP_ANNOTATE_USBMRD_c410_FINAL("TMF:", "USBMRD.c", "USBMRD_c410", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBMRD_c423_FINAL(P, File, Name, ...)    __annotation(L ## P, L"c545fe3d-9b98-385c-84e8-450beb16428c ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 22 \"%0<%10!s!> L1_READ_PURGE_EVENT\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBMRD_c423_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 22 \"%0<%10!s!> L1_READ_PURGE_EVENT\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBMRD_c423
    #define WPP_ANNOTATE_USBMRD_c423 WPP_ANNOTATE_USBMRD_c423_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBMRD_c423 WPP_ANNOTATE_USBMRD_c423_FINAL("TMF:", "USBMRD.c", "USBMRD_c423", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBMRD_c462_FINAL(P, File, Name, ...)    __annotation(L ## P, L"c545fe3d-9b98-385c-84e8-450beb16428c ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 23 \"%0<%10!s!> L1_STOP_EVENT\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBMRD_c462_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 23 \"%0<%10!s!> L1_STOP_EVENT\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBMRD_c462
    #define WPP_ANNOTATE_USBMRD_c462 WPP_ANNOTATE_USBMRD_c462_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBMRD_c462 WPP_ANNOTATE_USBMRD_c462_FINAL("TMF:", "USBMRD.c", "USBMRD_c462", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBMRD_c491_FINAL(P, File, Name, ...)    __annotation(L ## P, L"c545fe3d-9b98-385c-84e8-450beb16428c ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 24 \"%0<%10!s!> L1_RESUME_EVENT rm %11!d!\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBMRD_c491_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 24 \"%0<%10!s!> L1_RESUME_EVENT rm %11!d!\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBMRD_c491
    #define WPP_ANNOTATE_USBMRD_c491 WPP_ANNOTATE_USBMRD_c491_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBMRD_c491 WPP_ANNOTATE_USBMRD_c491_FINAL("TMF:", "USBMRD.c", "USBMRD_c491", L"{", L"pDevExt->PortName, ItemString -- 10" , L"pDevExt->bDeviceRemoved, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBMRD_c520_FINAL(P, File, Name, ...)    __annotation(L ## P, L"c545fe3d-9b98-385c-84e8-450beb16428c ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 25 \"%0<%10!s!> L1 unsupported st 0x%11!x!\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBMRD_c520_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 25 \"%0<%10!s!> L1 unsupported st 0x%11!x!\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBMRD_c520
    #define WPP_ANNOTATE_USBMRD_c520 WPP_ANNOTATE_USBMRD_c520_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBMRD_c520 WPP_ANNOTATE_USBMRD_c520_FINAL("TMF:", "USBMRD.c", "USBMRD_c520", L"{", L"pDevExt->PortName, ItemString -- 10" , L"ntStatus, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBMRD_c544_FINAL(P, File, Name, ...)    __annotation(L ## P, L"c545fe3d-9b98-385c-84e8-450beb16428c ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 26 \"%0<%10!s!> L1 thread exiting, cancelling L2\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBMRD_c544_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 26 \"%0<%10!s!> L1 thread exiting, cancelling L2\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBMRD_c544
    #define WPP_ANNOTATE_USBMRD_c544 WPP_ANNOTATE_USBMRD_c544_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBMRD_c544 WPP_ANNOTATE_USBMRD_c544_FINAL("TMF:", "USBMRD.c", "USBMRD_c544", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBMRD_c561_FINAL(P, File, Name, ...)    __annotation(L ## P, L"c545fe3d-9b98-385c-84e8-450beb16428c ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 27 \"%0<%10!s!> L1 thread exiting, cancelling L2 - 2 \" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBMRD_c561_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 27 \"%0<%10!s!> L1 thread exiting, cancelling L2 - 2 \" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBMRD_c561
    #define WPP_ANNOTATE_USBMRD_c561 WPP_ANNOTATE_USBMRD_c561_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBMRD_c561 WPP_ANNOTATE_USBMRD_c561_FINAL("TMF:", "USBMRD.c", "USBMRD_c561", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBMRD_c575_FINAL(P, File, Name, ...)    __annotation(L ## P, L"c545fe3d-9b98-385c-84e8-450beb16428c ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 28 \"%0<%10!s!> L1 thread exiting, cancelling L2 - 3 \" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBMRD_c575_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 28 \"%0<%10!s!> L1 thread exiting, cancelling L2 - 3 \" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBMRD_c575
    #define WPP_ANNOTATE_USBMRD_c575 WPP_ANNOTATE_USBMRD_c575_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBMRD_c575 WPP_ANNOTATE_USBMRD_c575_FINAL("TMF:", "USBMRD.c", "USBMRD_c575", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBMRD_c585_FINAL(P, File, Name, ...)    __annotation(L ## P, L"c545fe3d-9b98-385c-84e8-450beb16428c ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 29 \"%0<%10!s!> L1 thread exiting, cancelling L2 - 4 \" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBMRD_c585_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 29 \"%0<%10!s!> L1 thread exiting, cancelling L2 - 4 \" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBMRD_c585
    #define WPP_ANNOTATE_USBMRD_c585 WPP_ANNOTATE_USBMRD_c585_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBMRD_c585 WPP_ANNOTATE_USBMRD_c585_FINAL("TMF:", "USBMRD.c", "USBMRD_c585", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBMRD_c623_FINAL(P, File, Name, ...)    __annotation(L ## P, L"c545fe3d-9b98-385c-84e8-450beb16428c ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 30 \"%0<%10!s!> L1: OUT 0x%11!x! RmlCount[0]=%12!d!\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBMRD_c623_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 30 \"%0<%10!s!> L1: OUT 0x%11!x! RmlCount[0]=%12!d!\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBMRD_c623
    #define WPP_ANNOTATE_USBMRD_c623 WPP_ANNOTATE_USBMRD_c623_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemLong -- 12" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBMRD_c623 WPP_ANNOTATE_USBMRD_c623_FINAL("TMF:", "USBMRD.c", "USBMRD_c623", L"{", L"pDevExt->PortName, ItemString -- 10" , L"ntStatus, ItemLong -- 11" , L"pDevExt->Sts.lRmlCount[0], ItemLong -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBMRD_c652_FINAL(P, File, Name, ...)    __annotation(L ## P, L"c545fe3d-9b98-385c-84e8-450beb16428c ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 31 \"%0<%10!s!> ML2 COMPL: Irp[%11!u!]=0x%12!p!(0x%13!x!)\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_TRACE" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBMRD_c652_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 31 \"%0<%10!s!> ML2 COMPL: Irp[%11!u!]=0x%12!p!(0x%13!x!)\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_TRACE" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBMRD_c652
    #define WPP_ANNOTATE_USBMRD_c652 WPP_ANNOTATE_USBMRD_c652_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemPtr -- 12" , L"Arg, ItemLong -- 13" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBMRD_c652 WPP_ANNOTATE_USBMRD_c652_FINAL("TMF:", "USBMRD.c", "USBMRD_c652", L"{", L"pDevExt->PortName, ItemString -- 10" , L"pL2Ctx->Index, ItemLong -- 11" , L"Irp, ItemPtr -- 12" , L"Irp->IoStatus.Status, ItemLong -- 13" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBMRD_c68_FINAL(P, File, Name, ...)    __annotation(L ## P, L"c545fe3d-9b98-385c-84e8-450beb16428c ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 10 \"%0<%10!s!> L1: STATUS_NO_MEMORY 01\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_CRITICAL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBMRD_c68_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 10 \"%0<%10!s!> L1: STATUS_NO_MEMORY 01\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_CRITICAL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBMRD_c68
    #define WPP_ANNOTATE_USBMRD_c68 WPP_ANNOTATE_USBMRD_c68_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBMRD_c68 WPP_ANNOTATE_USBMRD_c68_FINAL("TMF:", "USBMRD.c", "USBMRD_c68", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBMRD_c702_FINAL(P, File, Name, ...)    __annotation(L ## P, L"c545fe3d-9b98-385c-84e8-450beb16428c ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 32 \"%0<%10!s!> ML2 ERR: wrong IRQL\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_CRITICAL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBMRD_c702_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 32 \"%0<%10!s!> ML2 ERR: wrong IRQL\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_CRITICAL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBMRD_c702
    #define WPP_ANNOTATE_USBMRD_c702 WPP_ANNOTATE_USBMRD_c702_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBMRD_c702 WPP_ANNOTATE_USBMRD_c702_FINAL("TMF:", "USBMRD.c", "USBMRD_c702", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBMRD_c722_FINAL(P, File, Name, ...)    __annotation(L ## P, L"c545fe3d-9b98-385c-84e8-450beb16428c ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 33 \"%0<%10!s!> ML2 - STATUS_NO_MEMORY 1\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_CRITICAL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBMRD_c722_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 33 \"%0<%10!s!> ML2 - STATUS_NO_MEMORY 1\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_CRITICAL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBMRD_c722
    #define WPP_ANNOTATE_USBMRD_c722 WPP_ANNOTATE_USBMRD_c722_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBMRD_c722 WPP_ANNOTATE_USBMRD_c722_FINAL("TMF:", "USBMRD.c", "USBMRD_c722", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBMRD_c751_FINAL(P, File, Name, ...)    __annotation(L ## P, L"c545fe3d-9b98-385c-84e8-450beb16428c ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 34 \"%0<%10!s!> ML2: pri=%11!d!, L2Buf=%12!d!\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_INFO" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBMRD_c751_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 34 \"%0<%10!s!> ML2: pri=%11!d!, L2Buf=%12!d!\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_INFO" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBMRD_c751
    #define WPP_ANNOTATE_USBMRD_c751 WPP_ANNOTATE_USBMRD_c751_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemLong -- 12" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBMRD_c751 WPP_ANNOTATE_USBMRD_c751_FINAL("TMF:", "USBMRD.c", "USBMRD_c751", L"{", L"pDevExt->PortName, ItemString -- 10" , L"KeQueryPriorityThread(KeGetCurrentThread()), ItemLong -- 11" , L"pDevExt->NumberOfL2Buffers, ItemLong -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBMRD_c831_FINAL(P, File, Name, ...)    __annotation(L ## P, L"c545fe3d-9b98-385c-84e8-450beb16428c ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 35 \"%0<%10!s!> ML2: IoCallDriver-IRP[%11!u!]=0x%12!p!, Pending %13!d!\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_FORCE" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBMRD_c831_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 35 \"%0<%10!s!> ML2: IoCallDriver-IRP[%11!u!]=0x%12!p!, Pending %13!d!\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_FORCE" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBMRD_c831
    #define WPP_ANNOTATE_USBMRD_c831 WPP_ANNOTATE_USBMRD_c831_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemPtr -- 12" , L"Arg, ItemLong -- 13" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBMRD_c831 WPP_ANNOTATE_USBMRD_c831_FINAL("TMF:", "USBMRD.c", "USBMRD_c831", L"{", L"pDevExt->PortName, ItemString -- 10" , L"pDevExt->L2IrpEndIdx, ItemLong -- 11" , L"pIrp, ItemPtr -- 12" , L"pDevExt->NumberOfPendingReadIRPs, ItemLong -- 13" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBMRD_c845_FINAL(P, File, Name, ...)    __annotation(L ## P, L"c545fe3d-9b98-385c-84e8-450beb16428c ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 36 \"%0<%10!s!> ML2 PENDING: Index[%11!u!]\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_TRACE" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBMRD_c845_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 36 \"%0<%10!s!> ML2 PENDING: Index[%11!u!]\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_TRACE" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBMRD_c845
    #define WPP_ANNOTATE_USBMRD_c845 WPP_ANNOTATE_USBMRD_c845_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBMRD_c845 WPP_ANNOTATE_USBMRD_c845_FINAL("TMF:", "USBMRD.c", "USBMRD_c845", L"{", L"pDevExt->PortName, ItemString -- 10" , L"pDevExt->pL2ReadBuffer[pDevExt->L2IrpEndIdx].Index, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBMRD_c860_FINAL(P, File, Name, ...)    __annotation(L ## P, L"c545fe3d-9b98-385c-84e8-450beb16428c ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 37 \"%0<%10!s!> ML2: IoCallDriver rtn 0x%11!x!\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_CRITICAL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBMRD_c860_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 37 \"%0<%10!s!> ML2: IoCallDriver rtn 0x%11!x!\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_CRITICAL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBMRD_c860
    #define WPP_ANNOTATE_USBMRD_c860 WPP_ANNOTATE_USBMRD_c860_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBMRD_c860 WPP_ANNOTATE_USBMRD_c860_FINAL("TMF:", "USBMRD.c", "USBMRD_c860", L"{", L"pDevExt->PortName, ItemString -- 10" , L"ntStatus, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBMRD_c871_FINAL(P, File, Name, ...)    __annotation(L ## P, L"c545fe3d-9b98-385c-84e8-450beb16428c ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 38 \"%0<%10!s!> ML2 DELETE: Index[%11!u!]\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_TRACE" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBMRD_c871_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 38 \"%0<%10!s!> ML2 DELETE: Index[%11!u!]\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_TRACE" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBMRD_c871
    #define WPP_ANNOTATE_USBMRD_c871 WPP_ANNOTATE_USBMRD_c871_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBMRD_c871 WPP_ANNOTATE_USBMRD_c871_FINAL("TMF:", "USBMRD.c", "USBMRD_c871", L"{", L"pDevExt->PortName, ItemString -- 10" , L"pDevExt->pL2ReadBuffer[pDevExt->L2IrpEndIdx].Index, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBMRD_c893_FINAL(P, File, Name, ...)    __annotation(L ## P, L"c545fe3d-9b98-385c-84e8-450beb16428c ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 39 \"%0<%10!s!> ML2 err, stopped\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBMRD_c893_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 39 \"%0<%10!s!> ML2 err, stopped\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBMRD_c893
    #define WPP_ANNOTATE_USBMRD_c893 WPP_ANNOTATE_USBMRD_c893_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBMRD_c893 WPP_ANNOTATE_USBMRD_c893_FINAL("TMF:", "USBMRD.c", "USBMRD_c893", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBMRD_c924_FINAL(P, File, Name, ...)    __annotation(L ## P, L"c545fe3d-9b98-385c-84e8-450beb16428c ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 40 \"%0<%10!s!> ML2 ON %11!ld!/%12!u!\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBMRD_c924_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 40 \"%0<%10!s!> ML2 ON %11!ld!/%12!u!\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBMRD_c924
    #define WPP_ANNOTATE_USBMRD_c924 WPP_ANNOTATE_USBMRD_c924_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemLong -- 12" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBMRD_c924 WPP_ANNOTATE_USBMRD_c924_FINAL("TMF:", "USBMRD.c", "USBMRD_c924", L"{", L"pDevExt->PortName, ItemString -- 10" , L"ulReadSize, ItemLong -- 11" , L"CountReadQueue(pDevExt), ItemLong -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBMRD_c934_FINAL(P, File, Name, ...)    __annotation(L ## P, L"c545fe3d-9b98-385c-84e8-450beb16428c ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 41 \"%0<%10!s!> ML2: ERR-ACTorSTOP(L2Stop=%11!u!)\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBMRD_c934_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 41 \"%0<%10!s!> ML2: ERR-ACTorSTOP(L2Stop=%11!u!)\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBMRD_c934
    #define WPP_ANNOTATE_USBMRD_c934 WPP_ANNOTATE_USBMRD_c934_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBMRD_c934 WPP_ANNOTATE_USBMRD_c934_FINAL("TMF:", "USBMRD.c", "USBMRD_c934", L"{", L"pDevExt->PortName, ItemString -- 10" , L"pDevExt->bL2Stopped, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBMRD_c947_FINAL(P, File, Name, ...)    __annotation(L ## P, L"c545fe3d-9b98-385c-84e8-450beb16428c ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 42 \"%0<%10!s!> ML2 buf exhausted or no dev, wait...\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBMRD_c947_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 42 \"%0<%10!s!> ML2 buf exhausted or no dev, wait...\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBMRD_c947
    #define WPP_ANNOTATE_USBMRD_c947 WPP_ANNOTATE_USBMRD_c947_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBMRD_c947 WPP_ANNOTATE_USBMRD_c947_FINAL("TMF:", "USBMRD.c", "USBMRD_c947", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBMRD_c956_FINAL(P, File, Name, ...)    __annotation(L ## P, L"c545fe3d-9b98-385c-84e8-450beb16428c ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 43 \"%0<%10!s!> ML2: %11!d! REQ's sent\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBMRD_c956_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 43 \"%0<%10!s!> ML2: %11!d! REQ's sent\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBMRD_c956
    #define WPP_ANNOTATE_USBMRD_c956 WPP_ANNOTATE_USBMRD_c956_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBMRD_c956 WPP_ANNOTATE_USBMRD_c956_FINAL("TMF:", "USBMRD.c", "USBMRD_c956", L"{", L"pDevExt->PortName, ItemString -- 10" , L"reqSent, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBMRD_c995_FINAL(P, File, Name, ...)    __annotation(L ## P, L"c545fe3d-9b98-385c-84e8-450beb16428c ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 44 \"%0<%10!s!> L2: DUMMY_EVENT\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBMRD_c995_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 44 \"%0<%10!s!> L2: DUMMY_EVENT\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBMRD_c995
    #define WPP_ANNOTATE_USBMRD_c995 WPP_ANNOTATE_USBMRD_c995_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBMRD_c995 WPP_ANNOTATE_USBMRD_c995_FINAL("TMF:", "USBMRD.c", "USBMRD_c995", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
# define WPP_ANNOTATE(x) WPP_ANNOTATE_ ## x,

#else
# define WPP_ANNOTATE(x)
#endif


#if 1
#if !defined(WPP_USER_MSG_GUID)

#define WPP_LOCAL_TraceGuids WPP_c545fe3d9b98385c84e8450beb16428c_Traceguids
extern const __declspec(selectany) GUID WPP_LOCAL_TraceGuids[] = { {0xc545fe3d,0x9b98,0x385c,{0x84,0xe8,0x45,0x0b,0xeb,0x16,0x42,0x8c}}, };

#else

#define WPP_LOCAL_MSG_VAR(Guid) WPP_XGLUE3(WPP_, WPP_GUID_NORM Guid, _Traceguids)

#define WPP_LOCAL_MSG_GUID(Guid) \
extern const __declspec(selectany) GUID WPP_LOCAL_MSG_VAR(Guid)[] = { WPP_GUID_STRUCT Guid }

WPP_LOCAL_MSG_GUID(WPP_USER_MSG_GUID);
#define WPP_LOCAL_TraceGuids WPP_LOCAL_MSG_VAR(WPP_USER_MSG_GUID)

#endif
#endif


#ifndef WPP_ALREADY_INCLUDED

#if !defined(WPP_TRACE_OPTIONS)
enum {WPP_TRACE_OPTIONS = TRACE_MESSAGE_SEQUENCE   | TRACE_MESSAGE_GUID
                        | TRACE_MESSAGE_SYSTEMINFO | TRACE_MESSAGE_TIMESTAMP };
#endif

#ifndef WPP_LOGPAIR_SEPARATOR
# define WPP_LOGPAIR_SEPARATOR ,
#endif

#ifndef WPP_LOGPAIR_SIZET
# define WPP_LOGPAIR_SIZET SIZE_T
#endif

#if !defined(WPP_LOGPAIR)
# define WPP_LOGPAIR(_Size, _Addr)     (_Addr),((WPP_LOGPAIR_SIZET)(_Size))WPP_LOGPAIR_SEPARATOR
#endif

#define WPP_LOGTYPEVAL(_Type, _Value) WPP_LOGPAIR(sizeof(_Type), &(_Value))
#define WPP_LOGTYPEPTR(_Value)        WPP_LOGPAIR(sizeof(*(_Value)), (_Value))

// Marshalling macros.

#if !defined(WPP_LOGASTR)
# if !defined(WPP_CHECK_FOR_NULL_STRING)
#  define WPP_LOGASTR(_value)  WPP_LOGPAIR(strlen(_value) + 1, _value )
# else
#  define WPP_LOGASTR(_value)  WPP_LOGPAIR( (_value)?strlen(_value) + 1:5, (_value)?(_value):"NULL" )
# endif
#endif

#if !defined(WPP_LOGWSTR)
# if !defined(WPP_CHECK_FOR_NULL_STRING)
#  define WPP_LOGWSTR(_value)  WPP_LOGPAIR( (wcslen(_value)+1) * sizeof(WCHAR), _value)
# else
#  define WPP_LOGWSTR(_value)  WPP_LOGPAIR( ((_value)?wcslen(_value) + 1:5) * sizeof(WCHAR), (_value)?(_value):L"NULL" )
# endif
#endif

#if !defined(WPP_LOGPGUID)
# define WPP_LOGPGUID(_value) WPP_LOGPAIR( sizeof(GUID), (_value) )
#endif


#if !defined(WPP_LOGPSID)
# if !defined(WPP_CHECK_FOR_NULL_STRING)
# define WPP_LOGPSID(_value)  WPP_LOGPAIR( WPP_GetLengthSid(_value), (_value) )
# else
# define WPP_LOGPSID(_value)  WPP_LOGPAIR( (_value)? (WPP_IsValidSid(_value)? \
                                                                        WPP_GetLengthSid(_value):5):5, \
                                                                        (_value)? (WPP_IsValidSid(_value)?\
                                                                        (_value):"NULL"):"NULL")
#endif
#endif

#if !defined(WPP_LOGCSTR)
# define WPP_LOGCSTR(_x) \
    WPP_LOGPAIR( sizeof((_x).Length), &(_x).Length ) WPP_LOGPAIR( (_x).Length, (_x).Buffer )
#endif

#if !defined(WPP_LOGUSTR)
# define WPP_LOGUSTR(_x) \
    WPP_LOGPAIR( sizeof((_x).Length), &(_x).Length ) WPP_LOGPAIR( (_x).Length, (_x).Buffer )
#endif

#if !defined(WPP_LOGPUSTR)
#if !defined(WPP_CHECK_FOR_NULL_STRING)
# define WPP_LOGPUSTR(_x) WPP_LOGUSTR(*(_x))
#else
# define WPP_LOGPUSTR(_x) WPP_LOGPAIR( sizeof(USHORT), (_x)?&(_x)->Length:L"\x08" ) \
                          WPP_LOGPAIR( (_x)?(_x)->Length:0x08, (_x)?(_x)->Buffer:L"NULL" )
#endif
#endif

#if !defined(WPP_LOGPCSTR)
#if !defined(WPP_CHECK_FOR_NULL_STRING)
# define WPP_LOGPCSTR(_x) WPP_LOGCSTR(*(_x))
#else
# define WPP_LOGPCSTR(_x) WPP_LOGPAIR( sizeof(USHORT), (_x)?&(_x)->Length:L"\x04" ) \
                          WPP_LOGPAIR( (_x)?(_x)->Length:0x04, (_x)?(_x)->Buffer:"NULL" )
#endif
#endif

#if !defined(WPP_LOGSTDSTR)
#define WPP_LOGSTDSTR(_value)  WPP_LOGPAIR( (_value).size()+1, (_value).c_str() )
#endif

#endif  //  #ifndef WPP_ALREADY_INCLUDED

#if !defined(WPP_CHECK_INIT)
# define WPP_CHECK_INIT (WPP_CB != (WPP_CB_TYPE*)&WPP_CB) && 
#endif


#ifndef WPP_SF_s_def
#       define WPP_SF_s_def
WPP_INLINE void WPP_SF_s(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, const char* _a1)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGASTR(_a1)  0); }
#endif  // #ifndef WPP_SF_s_def
#ifndef WPP_SF_sD_def
#       define WPP_SF_sD_def
WPP_INLINE void WPP_SF_sD(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, const char* _a1, unsigned int _a2)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(unsigned int,_a2)  0); }
#endif  // #ifndef WPP_SF_sD_def
#ifndef WPP_SF_sDD_def
#       define WPP_SF_sDD_def
WPP_INLINE void WPP_SF_sDD(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, const char* _a1, unsigned int _a2, unsigned int _a3)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(unsigned int,_a2) WPP_LOGTYPEVAL(unsigned int,_a3)  0); }
#endif  // #ifndef WPP_SF_sDD_def
#ifndef WPP_SF_sDDD_def
#       define WPP_SF_sDDD_def
WPP_INLINE void WPP_SF_sDDD(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, const char* _a1, unsigned int _a2, unsigned int _a3, unsigned int _a4)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(unsigned int,_a2) WPP_LOGTYPEVAL(unsigned int,_a3) WPP_LOGTYPEVAL(unsigned int,_a4)  0); }
#endif  // #ifndef WPP_SF_sDDD_def
#ifndef WPP_SF_sDDDD_def
#       define WPP_SF_sDDDD_def
WPP_INLINE void WPP_SF_sDDDD(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, const char* _a1, unsigned int _a2, unsigned int _a3, unsigned int _a4, unsigned int _a5)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(unsigned int,_a2) WPP_LOGTYPEVAL(unsigned int,_a3) WPP_LOGTYPEVAL(unsigned int,_a4) WPP_LOGTYPEVAL(unsigned int,_a5)  0); }
#endif  // #ifndef WPP_SF_sDDDD_def
#ifndef WPP_SF_sDd_def
#       define WPP_SF_sDd_def
WPP_INLINE void WPP_SF_sDd(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, const char* _a1, unsigned int _a2, signed int _a3)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(unsigned int,_a2) WPP_LOGTYPEVAL(signed int,_a3)  0); }
#endif  // #ifndef WPP_SF_sDd_def
#ifndef WPP_SF_sDqD_def
#       define WPP_SF_sDqD_def
WPP_INLINE void WPP_SF_sDqD(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, const char* _a1, unsigned int _a2, const void* _a3, unsigned int _a4)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(unsigned int,_a2) WPP_LOGTYPEVAL(const void*,_a3) WPP_LOGTYPEVAL(unsigned int,_a4)  0); }
#endif  // #ifndef WPP_SF_sDqD_def
#ifndef WPP_SF_sDqd_def
#       define WPP_SF_sDqd_def
WPP_INLINE void WPP_SF_sDqd(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, const char* _a1, unsigned int _a2, const void* _a3, signed int _a4)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(unsigned int,_a2) WPP_LOGTYPEVAL(const void*,_a3) WPP_LOGTYPEVAL(signed int,_a4)  0); }
#endif  // #ifndef WPP_SF_sDqd_def
#ifndef WPP_SF_sd_def
#       define WPP_SF_sd_def
WPP_INLINE void WPP_SF_sd(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, const char* _a1, signed int _a2)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(signed int,_a2)  0); }
#endif  // #ifndef WPP_SF_sd_def
#ifndef WPP_SF_sdD_def
#       define WPP_SF_sdD_def
WPP_INLINE void WPP_SF_sdD(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, const char* _a1, signed int _a2, unsigned int _a3)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(signed int,_a2) WPP_LOGTYPEVAL(unsigned int,_a3)  0); }
#endif  // #ifndef WPP_SF_sdD_def
#ifndef WPP_SF_sdd_def
#       define WPP_SF_sdd_def
WPP_INLINE void WPP_SF_sdd(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, const char* _a1, signed int _a2, signed int _a3)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(signed int,_a2) WPP_LOGTYPEVAL(signed int,_a3)  0); }
#endif  // #ifndef WPP_SF_sdd_def
#ifndef WPP_SF_sddd_def
#       define WPP_SF_sddd_def
WPP_INLINE void WPP_SF_sddd(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, const char* _a1, signed int _a2, signed int _a3, signed int _a4)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(signed int,_a2) WPP_LOGTYPEVAL(signed int,_a3) WPP_LOGTYPEVAL(signed int,_a4)  0); }
#endif  // #ifndef WPP_SF_sddd_def
#ifndef WPP_SF_sdddD_def
#       define WPP_SF_sdddD_def
WPP_INLINE void WPP_SF_sdddD(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, const char* _a1, signed int _a2, signed int _a3, signed int _a4, unsigned int _a5)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(signed int,_a2) WPP_LOGTYPEVAL(signed int,_a3) WPP_LOGTYPEVAL(signed int,_a4) WPP_LOGTYPEVAL(unsigned int,_a5)  0); }
#endif  // #ifndef WPP_SF_sdddD_def
#ifndef WPP_SF_sdl_def
#       define WPP_SF_sdl_def
WPP_INLINE void WPP_SF_sdl(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, const char* _a1, signed int _a2, signed long _a3)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(signed int,_a2) WPP_LOGTYPEVAL(signed long,_a3)  0); }
#endif  // #ifndef WPP_SF_sdl_def
#ifndef WPP_SF_sdq_def
#       define WPP_SF_sdq_def
WPP_INLINE void WPP_SF_sdq(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, const char* _a1, signed int _a2, const void* _a3)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(signed int,_a2) WPP_LOGTYPEVAL(const void*,_a3)  0); }
#endif  // #ifndef WPP_SF_sdq_def
#ifndef WPP_SF_sl_def
#       define WPP_SF_sl_def
WPP_INLINE void WPP_SF_sl(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, const char* _a1, signed long _a2)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(signed long,_a2)  0); }
#endif  // #ifndef WPP_SF_sl_def
#ifndef WPP_SF_slL_def
#       define WPP_SF_slL_def
WPP_INLINE void WPP_SF_slL(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, const char* _a1, signed long _a2, unsigned long _a3)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(signed long,_a2) WPP_LOGTYPEVAL(unsigned long,_a3)  0); }
#endif  // #ifndef WPP_SF_slL_def
#ifndef WPP_SF_sll_def
#       define WPP_SF_sll_def
WPP_INLINE void WPP_SF_sll(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, const char* _a1, signed long _a2, signed long _a3)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(signed long,_a2) WPP_LOGTYPEVAL(signed long,_a3)  0); }
#endif  // #ifndef WPP_SF_sll_def
#ifndef WPP_SF_slll_def
#       define WPP_SF_slll_def
WPP_INLINE void WPP_SF_slll(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, const char* _a1, signed long _a2, signed long _a3, signed long _a4)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(signed long,_a2) WPP_LOGTYPEVAL(signed long,_a3) WPP_LOGTYPEVAL(signed long,_a4)  0); }
#endif  // #ifndef WPP_SF_slll_def
#ifndef WPP_SF_sq_def
#       define WPP_SF_sq_def
WPP_INLINE void WPP_SF_sq(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, const char* _a1, const void* _a2)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(const void*,_a2)  0); }
#endif  // #ifndef WPP_SF_sq_def
#ifndef WPP_SF_sqDD_def
#       define WPP_SF_sqDD_def
WPP_INLINE void WPP_SF_sqDD(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, const char* _a1, const void* _a2, unsigned int _a3, unsigned int _a4)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(const void*,_a2) WPP_LOGTYPEVAL(unsigned int,_a3) WPP_LOGTYPEVAL(unsigned int,_a4)  0); }
#endif  // #ifndef WPP_SF_sqDD_def
#ifndef WPP_SF_sqDDD_def
#       define WPP_SF_sqDDD_def
WPP_INLINE void WPP_SF_sqDDD(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, const char* _a1, const void* _a2, unsigned int _a3, unsigned int _a4, unsigned int _a5)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(const void*,_a2) WPP_LOGTYPEVAL(unsigned int,_a3) WPP_LOGTYPEVAL(unsigned int,_a4) WPP_LOGTYPEVAL(unsigned int,_a5)  0); }
#endif  // #ifndef WPP_SF_sqDDD_def
#ifndef WPP_SF_sqlDd_def
#       define WPP_SF_sqlDd_def
WPP_INLINE void WPP_SF_sqlDd(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, const char* _a1, const void* _a2, signed long _a3, unsigned int _a4, signed int _a5)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(const void*,_a2) WPP_LOGTYPEVAL(signed long,_a3) WPP_LOGTYPEVAL(unsigned int,_a4) WPP_LOGTYPEVAL(signed int,_a5)  0); }
#endif  // #ifndef WPP_SF_sqlDd_def
#ifndef WPP_SF_sqq_def
#       define WPP_SF_sqq_def
WPP_INLINE void WPP_SF_sqq(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, const char* _a1, const void* _a2, const void* _a3)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(const void*,_a2) WPP_LOGTYPEVAL(const void*,_a3)  0); }
#endif  // #ifndef WPP_SF_sqq_def
#ifndef WPP_POST
#  define WPP_POST()
#endif

#ifndef WPP_PRE
#  define WPP_PRE()
#endif

#ifndef WPP_LOG_ALWAYS
#  define WPP_LOG_ALWAYS(...)
#endif      

#ifdef WPP_DEBUG
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBMRD_c1744(MSG,a10) \
     WPP_LOG_ALWAYS(WPP_EX(),MSG,a10)\
     WPP_PRE() \
     WPP_ANNOTATE(USBMRD_c1744) \
     ( ( \
         WPP_CHECK_INIT WPP_ENABLED() ? \
          WPP_DEBUG((MSG,a10)), \
          WPP_SF_s(WPP_LOGGER() 71, \
                             WPP_LOCAL_TraceGuids+0, a10), 1:0  \
     ) ) \
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBMRD_c1891(MSG,a10,a11,a12,a13) \
     WPP_LOG_ALWAYS(WPP_EX(),MSG,a10,a11,a12,a13)\
     WPP_PRE() \
     WPP_ANNOTATE(USBMRD_c1891) \
     ( ( \
         WPP_CHECK_INIT WPP_ENABLED() ? \
          WPP_DEBUG((MSG,a10,a11,a12,a13)), \
          WPP_SF_slll(WPP_LOGGER() 79, \
                             WPP_LOCAL_TraceGuids+0, a10, a11, a12, a13), 1:0  \
     ) ) \
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBMRD_c2064(MSG,a10,a11) \
     WPP_LOG_ALWAYS(WPP_EX(),MSG,a10,a11)\
     WPP_PRE() \
     WPP_ANNOTATE(USBMRD_c2064) \
     ( ( \
         WPP_CHECK_INIT WPP_ENABLED() ? \
          WPP_DEBUG((MSG,a10,a11)), \
          WPP_SF_sl(WPP_LOGGER() 84, \
                             WPP_LOCAL_TraceGuids+0, a10, a11), 1:0  \
     ) ) \
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBMRD_c2067(MSG,a10,a11,a12) \
     WPP_LOG_ALWAYS(WPP_EX(),MSG,a10,a11,a12)\
     WPP_PRE() \
     WPP_ANNOTATE(USBMRD_c2067) \
     ( ( \
         WPP_CHECK_INIT WPP_ENABLED() ? \
          WPP_DEBUG((MSG,a10,a11,a12)), \
          WPP_SF_sll(WPP_LOGGER() 85, \
                             WPP_LOCAL_TraceGuids+0, a10, a11, a12), 1:0  \
     ) ) \
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBMRD_c3024(MSG,a10,a11,a12) \
     WPP_LOG_ALWAYS(WPP_EX(),MSG,a10,a11,a12)\
     WPP_PRE() \
     WPP_ANNOTATE(USBMRD_c3024) \
     ( ( \
         WPP_CHECK_INIT WPP_ENABLED() ? \
          WPP_DEBUG((MSG,a10,a11,a12)), \
          WPP_SF_sDD(WPP_LOGGER() 118, \
                             WPP_LOCAL_TraceGuids+0, a10, a11, a12), 1:0  \
     ) ) \
     WPP_POST()
#else
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBMRD_c1744(MSG,a10) \
     WPP_LOG_ALWAYS(WPP_EX(),MSG,a10) \
     WPP_PRE() \
     WPP_ANNOTATE(USBMRD_c1744) \
     ( ( \
         WPP_CHECK_INIT WPP_ENABLED() ? \
            WPP_SF_s(WPP_LOGGER() 71, \
                               WPP_LOCAL_TraceGuids+0, a10), 1:0  \
     ) ) \
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBMRD_c1891(MSG,a10,a11,a12,a13) \
     WPP_LOG_ALWAYS(WPP_EX(),MSG,a10,a11,a12,a13) \
     WPP_PRE() \
     WPP_ANNOTATE(USBMRD_c1891) \
     ( ( \
         WPP_CHECK_INIT WPP_ENABLED() ? \
            WPP_SF_slll(WPP_LOGGER() 79, \
                               WPP_LOCAL_TraceGuids+0, a10, a11, a12, a13), 1:0  \
     ) ) \
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBMRD_c2064(MSG,a10,a11) \
     WPP_LOG_ALWAYS(WPP_EX(),MSG,a10,a11) \
     WPP_PRE() \
     WPP_ANNOTATE(USBMRD_c2064) \
     ( ( \
         WPP_CHECK_INIT WPP_ENABLED() ? \
            WPP_SF_sl(WPP_LOGGER() 84, \
                               WPP_LOCAL_TraceGuids+0, a10, a11), 1:0  \
     ) ) \
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBMRD_c2067(MSG,a10,a11,a12) \
     WPP_LOG_ALWAYS(WPP_EX(),MSG,a10,a11,a12) \
     WPP_PRE() \
     WPP_ANNOTATE(USBMRD_c2067) \
     ( ( \
         WPP_CHECK_INIT WPP_ENABLED() ? \
            WPP_SF_sll(WPP_LOGGER() 85, \
                               WPP_LOCAL_TraceGuids+0, a10, a11, a12), 1:0  \
     ) ) \
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBMRD_c3024(MSG,a10,a11,a12) \
     WPP_LOG_ALWAYS(WPP_EX(),MSG,a10,a11,a12) \
     WPP_PRE() \
     WPP_ANNOTATE(USBMRD_c3024) \
     ( ( \
         WPP_CHECK_INIT WPP_ENABLED() ? \
            WPP_SF_sDD(WPP_LOGGER() 118, \
                               WPP_LOCAL_TraceGuids+0, a10, a11, a12), 1:0  \
     ) ) \
     WPP_POST()
#endif


#ifdef WPP_DEBUG
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c1008(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c1008) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 45,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c1022(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c1022) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sd(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 46,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c1037(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c1037) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 47,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c1060(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c1060) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 48,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c1082(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c1082) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 49,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c1090(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c1090) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 50,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c1105(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c1105) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 51,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c1128(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c1128) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sdd(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 52,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c1182(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c1182) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 53,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c1193(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c1193) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sDD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 54,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c1218(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c1218) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sdl(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 55,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c1253(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c1253) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 56,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c1298(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c1298) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 57,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c1354(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c1354) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 58,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c1425(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c1425) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sDD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 59,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c1439(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c1439) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 60,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c145(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c145) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 11,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c1456(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c1456) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sdq(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 61,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c1466(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c1466) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 62,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c1541(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c1541) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sdd(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 63,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c1551(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c1551) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sdD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 64,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c1582(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c1582) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 65,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c1622(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c1622) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sDd(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 66,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c1649(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c1649) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sDd(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 67,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c1697(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c1697) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 68,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c1715(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c1715) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sdddD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 69,WPP_LOCAL_TraceGuids+0 WPP_R01234 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c1739(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c1739) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sddd(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 70,WPP_LOCAL_TraceGuids+0 WPP_R0123 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c174(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c174) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 12,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c1763(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c1763) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sddd(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 72,WPP_LOCAL_TraceGuids+0 WPP_R0123 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c1772(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c1772) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sddd(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 73,WPP_LOCAL_TraceGuids+0 WPP_R0123 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c1793(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c1793) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 74,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c1811(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c1811) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 75,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c1851(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c1851) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sdD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 76,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c186(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c186) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 13,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c1862(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c1862) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sd(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 77,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c1889(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c1889) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sqlDd(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 78,WPP_LOCAL_TraceGuids+0 WPP_R01234 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c1907(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c1907) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sq(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 80,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c1933(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c1933) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 81,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c201(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c201) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sqq(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 14,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c2043(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c2043) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sq(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 82,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c2060(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c2060) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 83,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c2132(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c2132) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 86,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c2146(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c2146) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 87,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c2170(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c2170) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 88,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c2194(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c2194) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 89,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c2218(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c2218) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 90,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c2242(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c2242) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sdd(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 91,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c2265(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c2265) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sdd(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 92,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c2279(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c2279) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sdd(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 93,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c2306(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c2306) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sDDD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 94,WPP_LOCAL_TraceGuids+0 WPP_R0123 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c2348(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c2348) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sqDD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 95,WPP_LOCAL_TraceGuids+0 WPP_R0123 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c2362(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c2362) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sDDDD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 96,WPP_LOCAL_TraceGuids+0 WPP_R01234 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c2382(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c2382) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sDDD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 97,WPP_LOCAL_TraceGuids+0 WPP_R0123 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c243(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c243) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sDD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 15,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c2500(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c2500) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sDDDD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 98,WPP_LOCAL_TraceGuids+0 WPP_R01234 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c2524(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c2524) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sDDDD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 99,WPP_LOCAL_TraceGuids+0 WPP_R01234 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c2541(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c2541) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sDDD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 100,WPP_LOCAL_TraceGuids+0 WPP_R0123 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c2556(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c2556) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sDDDD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 101,WPP_LOCAL_TraceGuids+0 WPP_R01234 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c2614(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c2614) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 102,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c2639(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c2639) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sqDDD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 103,WPP_LOCAL_TraceGuids+0 WPP_R01234 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c2698(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c2698) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sDD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 104,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c271(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c271) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sDD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 16,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c2711(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c2711) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 105,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c2725(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c2725) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 106,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c2751(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c2751) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sq(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 107,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c2762(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c2762) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sq(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 108,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c2841(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c2841) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 109,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c2849(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c2849) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 110,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c2861(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c2861) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 111,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c2920(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c2920) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 112,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c2937(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c2937) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 113,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c2948(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c2948) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 114,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c2966(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c2966) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sDD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 115,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c2994(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c2994) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sdd(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 116,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c301(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c301) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 17,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c3023(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c3023) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sDD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 117,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c3035(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c3035) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sDD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 119,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c325(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c325) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sd(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 18,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c352(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c352) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 19,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c398(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c398) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 20,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c410(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c410) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 21,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c423(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c423) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 22,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c462(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c462) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 23,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c491(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c491) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sd(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 24,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c520(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c520) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 25,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c544(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c544) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 26,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c561(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c561) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 27,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c575(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c575) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 28,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c585(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c585) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 29,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c623(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c623) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sDd(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 30,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c652(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c652) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sDqD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 31,WPP_LOCAL_TraceGuids+0 WPP_R0123 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c68(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c68) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 10,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c702(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c702) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 32,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c722(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c722) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 33,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c751(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c751) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sdd(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 34,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c831(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c831) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sDqd(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 35,WPP_LOCAL_TraceGuids+0 WPP_R0123 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c845(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c845) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 36,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c860(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c860) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 37,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c871(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c871) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 38,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c893(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c893) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 39,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c924(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c924) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_slL(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 40,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c934(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c934) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 41,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c947(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c947) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 42,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c956(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c956) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sd(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 43,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c995(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c995) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 44,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#else
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c1008(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c1008) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 45,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c1022(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c1022) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sd(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 46,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c1037(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c1037) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 47,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c1060(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c1060) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 48,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c1082(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c1082) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 49,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c1090(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c1090) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 50,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c1105(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c1105) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 51,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c1128(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c1128) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sdd(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 52,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c1182(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c1182) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 53,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c1193(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c1193) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sDD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 54,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c1218(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c1218) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sdl(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 55,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c1253(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c1253) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 56,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c1298(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c1298) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 57,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c1354(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c1354) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 58,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c1425(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c1425) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sDD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 59,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c1439(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c1439) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 60,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c145(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c145) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 11,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c1456(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c1456) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sdq(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 61,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c1466(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c1466) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 62,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c1541(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c1541) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sdd(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 63,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c1551(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c1551) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sdD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 64,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c1582(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c1582) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 65,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c1622(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c1622) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sDd(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 66,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c1649(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c1649) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sDd(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 67,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c1697(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c1697) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 68,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c1715(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c1715) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sdddD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 69,WPP_LOCAL_TraceGuids+0 WPP_R01234 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c1739(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c1739) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sddd(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 70,WPP_LOCAL_TraceGuids+0 WPP_R0123 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c174(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c174) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 12,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c1763(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c1763) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sddd(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 72,WPP_LOCAL_TraceGuids+0 WPP_R0123 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c1772(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c1772) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sddd(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 73,WPP_LOCAL_TraceGuids+0 WPP_R0123 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c1793(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c1793) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 74,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c1811(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c1811) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 75,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c1851(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c1851) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sdD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 76,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c186(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c186) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 13,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c1862(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c1862) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sd(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 77,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c1889(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c1889) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sqlDd(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 78,WPP_LOCAL_TraceGuids+0 WPP_R01234 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c1907(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c1907) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sq(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 80,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c1933(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c1933) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 81,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c201(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c201) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sqq(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 14,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c2043(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c2043) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sq(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 82,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c2060(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c2060) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 83,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c2132(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c2132) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 86,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c2146(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c2146) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 87,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c2170(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c2170) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 88,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c2194(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c2194) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 89,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c2218(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c2218) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 90,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c2242(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c2242) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sdd(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 91,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c2265(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c2265) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sdd(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 92,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c2279(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c2279) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sdd(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 93,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c2306(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c2306) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sDDD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 94,WPP_LOCAL_TraceGuids+0 WPP_R0123 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c2348(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c2348) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sqDD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 95,WPP_LOCAL_TraceGuids+0 WPP_R0123 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c2362(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c2362) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sDDDD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 96,WPP_LOCAL_TraceGuids+0 WPP_R01234 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c2382(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c2382) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sDDD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 97,WPP_LOCAL_TraceGuids+0 WPP_R0123 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c243(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c243) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sDD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 15,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c2500(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c2500) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sDDDD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 98,WPP_LOCAL_TraceGuids+0 WPP_R01234 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c2524(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c2524) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sDDDD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 99,WPP_LOCAL_TraceGuids+0 WPP_R01234 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c2541(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c2541) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sDDD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 100,WPP_LOCAL_TraceGuids+0 WPP_R0123 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c2556(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c2556) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sDDDD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 101,WPP_LOCAL_TraceGuids+0 WPP_R01234 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c2614(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c2614) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 102,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c2639(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c2639) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sqDDD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 103,WPP_LOCAL_TraceGuids+0 WPP_R01234 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c2698(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c2698) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sDD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 104,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c271(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c271) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sDD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 16,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c2711(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c2711) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 105,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c2725(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c2725) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 106,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c2751(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c2751) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sq(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 107,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c2762(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c2762) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sq(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 108,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c2841(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c2841) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 109,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c2849(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c2849) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 110,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c2861(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c2861) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 111,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c2920(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c2920) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 112,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c2937(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c2937) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 113,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c2948(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c2948) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 114,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c2966(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c2966) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sDD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 115,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c2994(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c2994) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sdd(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 116,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c301(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c301) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 17,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c3023(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c3023) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sDD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 117,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c3035(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c3035) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sDD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 119,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c325(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c325) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sd(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 18,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c352(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c352) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 19,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c398(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c398) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 20,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c410(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c410) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 21,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c423(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c423) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 22,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c462(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c462) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 23,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c491(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c491) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sd(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 24,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c520(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c520) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 25,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c544(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c544) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 26,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c561(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c561) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 27,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c575(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c575) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 28,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c585(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c585) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 29,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c623(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c623) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sDd(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 30,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c652(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c652) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sDqD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 31,WPP_LOCAL_TraceGuids+0 WPP_R0123 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c68(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c68) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 10,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c702(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c702) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 32,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c722(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c722) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 33,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c751(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c751) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sdd(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 34,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c831(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c831) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sDqd(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 35,WPP_LOCAL_TraceGuids+0 WPP_R0123 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c845(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c845) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 36,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c860(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c860) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 37,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c871(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c871) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 38,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c893(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c893) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 39,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c924(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c924) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_slL(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 40,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c934(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c934) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 41,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c947(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c947) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 42,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c956(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c956) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sd(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 43,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBMRD_c995(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBMRD_c995) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 44,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#endif



#if defined(__cplusplus)
};
#endif

#endif

//
// Tracing Macro name redefinition
//

// NoMsgArgs

#undef DbgPrint
#define DbgPrint WPP_(CALL)
#undef DoDebugTrace
#define DoDebugTrace WPP_(CALL)
#undef DoTraceMessage
#define DoTraceMessage WPP_(CALL)
#undef KdPrint
#define KdPrint(ARGS) WPP_(CALL) ARGS
#undef QCNET_DbgPrintG
#define QCNET_DbgPrintG(ARGS) WPP_(CALL) ARGS
// MsgArgs

#undef QCNET_DbgPrint
#define QCNET_DbgPrint(MASK, LEVEL,  MSGARGS) WPP_(CALL)(MASK, LEVEL,  MSGARGS)
#undef QCUSB_DbgPrint
#define QCUSB_DbgPrint(FLAG, LEVEL,  MSGARGS) WPP_(CALL)(FLAG, LEVEL,  MSGARGS)
#undef QCUSB_DbgPrintG
#define QCUSB_DbgPrintG(GFLAG, GLEVEL,  MSGARGS) WPP_(CALL)(GFLAG, GLEVEL,  MSGARGS)
#undef QCUSB_DbgPrintX
#define QCUSB_DbgPrintX(X, XFLAG, XLEVEL,  MSGARGS) WPP_(CALL)(X, XFLAG, XLEVEL,  MSGARGS)
#undef  WPP_R
#define WPP_R(MSG) 
#undef  WPP_R0
#define WPP_R0(MSG, a0) , a0
#undef  WPP_R01
#define WPP_R01(MSG, a0, a1) , a0, a1
#undef  WPP_R012
#define WPP_R012(MSG, a0, a1, a2) , a0, a1, a2
#undef  WPP_R0123
#define WPP_R0123(MSG, a0, a1, a2, a3) , a0, a1, a2, a3
#undef  WPP_R01234
#define WPP_R01234(MSG, a0, a1, a2, a3, a4) , a0, a1, a2, a3, a4
#undef  WPP_R012345
#define WPP_R012345(MSG, a0, a1, a2, a3, a4, a5) , a0, a1, a2, a3, a4, a5
#undef  WPP_R0123456
#define WPP_R0123456(MSG, a0, a1, a2, a3, a4, a5, a6) , a0, a1, a2, a3, a4, a5, a6
#undef  WPP_R01234567
#define WPP_R01234567(MSG, a0, a1, a2, a3, a4, a5, a6, a7) , a0, a1, a2, a3, a4, a5, a6, a7
#undef  WPP_R012345678
#define WPP_R012345678(MSG, a0, a1, a2, a3, a4, a5, a6, a7, a8) , a0, a1, a2, a3, a4, a5, a6, a7, a8
#undef  WPP_R0123456789
#define WPP_R0123456789(MSG, a0, a1, a2, a3, a4, a5, a6, a7, a8, a9) , a0, a1, a2, a3, a4, a5, a6, a7, a8, a9
#undef  WPP_R0123456789a
#define WPP_R0123456789a(MSG, a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10) , a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10
#undef  WPP_R0123456789abc
#define WPP_R0123456789abc(MSG, a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12) , a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12
#undef  WPP_R0a0b0c0d0e0f000102030405060708090a
#define WPP_R0a0b0c0d0e0f000102030405060708090a(MSG, a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16) , a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16
