// bd3cc4c3c3901a3a1f5347d0dbb6758c Generated file. Do not edit.
// File created by WPP compiler version 10.0.15063-Wed Feb 18 19:04:42 2037
// from template km-default.tpl

//
// Define anything which is needed but missing from 
// older versions of the DDK.
//
#include <evntrace.h>
#include <stddef.h>
#include <stdarg.h>
#include <wmistr.h>

#if !defined(TRACE_LEVEL_NONE)
  #define TRACE_LEVEL_NONE        0  
  #define TRACE_LEVEL_CRITICAL    1  
  #define TRACE_LEVEL_FATAL       1  
  #define TRACE_LEVEL_ERROR       2  
  #define TRACE_LEVEL_WARNING     3  
  #define TRACE_LEVEL_INFORMATION 4  
  #define TRACE_LEVEL_VERBOSE     5  
  #define TRACE_LEVEL_RESERVED6   6
  #define TRACE_LEVEL_RESERVED7   7
  #define TRACE_LEVEL_RESERVED8   8
  #define TRACE_LEVEL_RESERVED9   9
#endif
    
#if !defined(TRACE_INFORMATION_CLASS_DEFINE)
typedef enum _TRACE_INFORMATION_CLASS {
    TraceIdClass,
    TraceHandleClass,
    TraceEnableFlagsClass,
    TraceEnableLevelClass,
    GlobalLoggerHandleClass,
    EventLoggerHandleClass,
    AllLoggerHandlesClass,
    TraceHandleByNameClass
} TRACE_INFORMATION_CLASS;
  
#define TRACE_MESSAGE_SEQUENCE               1
#define TRACE_MESSAGE_GUID                   2         
#define TRACE_MESSAGE_COMPONENTID            4           
#define TRACE_MESSAGE_TIMESTAMP              8         
#define TRACE_MESSAGE_PERFORMANCE_TIMESTAMP 16  
#define TRACE_MESSAGE_SYSTEMINFO            32          

#endif // !defined(TRACE_INFORMATION_CLASS_DEFINE)


//
// Advanced tracing APIs (XP and later) will be indirectly called.
//
typedef
LONG
(*PFN_WPPQUERYTRACEINFORMATION) (
    IN  TRACE_INFORMATION_CLASS TraceInformationClass,
    OUT PVOID  TraceInformation,
    IN  ULONG  TraceInformationLength,
    OUT PULONG RequiredLength OPTIONAL,
    IN  PVOID  Buffer OPTIONAL
    );

typedef
LONG
(*PFN_WPPTRACEMESSAGE)(
    IN ULONG64  LoggerHandle,
    IN ULONG   MessageFlags,
    IN LPCGUID MessageGuid,
    IN USHORT  MessageNumber,
    IN ...
    );

// template km-header.tpl

#ifdef  WPP_THIS_FILE
// included twice
#       define  WPP_ALREADY_INCLUDED
#       undef   WPP_THIS_FILE
#endif  // #ifdef WPP_THIS_FILE

#define WPP_THIS_FILE USBPWR_c

#ifndef WPP_ALREADY_INCLUDED

#define WPP_KERNEL_MODE 
#define WPP_THIS_FILE USBPWR_c

#if defined(__cplusplus)
extern "C" {
#endif


typedef enum _WPP_TRACE_API_SUITE {
    WppTraceDisabledSuite,
    WppTraceWin2K,
    WppTraceWinXP,
    WppTraceTraceLH,
    WppTraceServer08,
    WppTraceMaxSuite
} WPP_TRACE_API_SUITE;

_IRQL_requires_same_
typedef
VOID
(NTAPI *PETW_CLASSIC_CALLBACK)(
    _In_ LPCGUID Guid,
    _In_ UCHAR ControlCode,
    _In_ PVOID EnableContext, 
    _In_opt_ PVOID CallbackContext
    );

_IRQL_requires_same_
typedef
NTSTATUS
NTKERNELAPI
(FN_ETWREGISTERCLASSICPROVIDER)(
    _In_ LPCGUID ProviderGuid,
    _In_ ULONG Type,
    _In_ PETW_CLASSIC_CALLBACK EnableCallback,
    _In_opt_ PVOID CallbackContext,
    _Out_ PREGHANDLE RegHandle
    );

typedef FN_ETWREGISTERCLASSICPROVIDER *PFN_ETWREGISTERCLASSICPROVIDER;

typedef
BOOLEAN
NTKERNELAPI
(FN_WPPGETVERSION)(
    _Out_opt_ PULONG MajorVersion,
    _Out_opt_ PULONG MinorVersion,
    _Out_opt_ PULONG BuildNumber,
    _Out_opt_ PUNICODE_STRING CSDVersion
    );

typedef FN_WPPGETVERSION *PFN_WPPGETVERSION;

typedef
NTSTATUS
NTKERNELAPI
(FN_ETWUNREGISTER)(
    _In_ REGHANDLE RegHandle
    );

typedef FN_ETWUNREGISTER *PFN_ETWUNREGISTER;

#pragma prefast(suppress:__WARNING_ENCODE_GLOBAL_FUNCTION_POINTER, "this pointer can not be encoded");
__declspec(selectany) PFN_WPPQUERYTRACEINFORMATION   pfnWppQueryTraceInformation = NULL;

#pragma prefast(suppress:__WARNING_ENCODE_GLOBAL_FUNCTION_POINTER, "this pointer can not be encoded");
__declspec(selectany) PFN_WPPTRACEMESSAGE            pfnWppTraceMessage = NULL;

#pragma prefast(suppress:__WARNING_ENCODE_GLOBAL_FUNCTION_POINTER, "this pointer can not be encoded");
__declspec(selectany) PFN_ETWUNREGISTER              pfnEtwUnregister = NULL;

#pragma prefast(suppress:__WARNING_ENCODE_GLOBAL_FUNCTION_POINTER, "this pointer can not be encoded");
__declspec(selectany) PFN_ETWREGISTERCLASSICPROVIDER pfnEtwRegisterClassicProvider = NULL;

#pragma prefast(suppress:__WARNING_ENCODE_GLOBAL_FUNCTION_POINTER, "this pointer can not be encoded");
__declspec(selectany) PFN_WPPGETVERSION              pfnWppGetVersion = NULL;


__declspec(selectany) WPP_TRACE_API_SUITE            WPPTraceSuite = WppTraceDisabledSuite;


#if !defined(_NTRTL_)
#if !defined(_NTHAL_) 
      // fake RTL_TIME_ZONE_INFORMATION //
    typedef int RTL_TIME_ZONE_INFORMATION;
#endif
#   define _WMIKM_  
#endif
#ifndef WPP_TRACE
#define WPP_TRACE pfnWppTraceMessage
#endif

#if ENABLE_WPP_RECORDER

#define _ENABLE_WPP_RECORDER TRUE

#ifndef WPP_RECORDER
#define WPP_RECORDER WppAutoLogTrace
#endif

#if !defined(WPP_RECORDER_LEVEL_FLAGS_ARGS)
#define WPP_RECORDER_LEVEL_FLAGS_ARGS(lvl, flags) WPP_CONTROL(WPP_BIT_ ## flags).AutoLogContext, lvl, WPP_BIT_ ## flags
#define WPP_RECORDER_LEVEL_FLAGS_FILTER(lvl,flags) (lvl < TRACE_LEVEL_VERBOSE || WPP_CONTROL(WPP_BIT_ ## flags).AutoLogVerboseEnabled)
#endif


#if !defined(WPP_RECORDER_LEVEL_ARGS)
#define WPP_RECORDER_LEVEL_ARGS(lvl) WPP_CONTROL(WPP_BIT_ ## lvl).AutoLogContext, 0, WPP_BIT_ ## lvl
#define WPP_RECORDER_LEVEL_FILTER(lvl) (WPP_CONTROL(WPP_BIT_ ## lvl).AutoLogVerboseEnabled)
#endif

NTSTATUS
WppAutoLogTrace(
    IN PVOID              AutoLogContext,
    IN UCHAR              MessageLevel,
    IN ULONG              MessageFlags,
    IN LPGUID             MessageGuid,
    IN USHORT             MessageNumber,
    IN ...
    );

#else
#define _ENABLE_WPP_RECORDER FALSE
#endif

VOID
WppLoadTracingSupport(
    VOID
    );

NTSTATUS
WppTraceCallback(
    _In_ UCHAR MinorFunction,
    _In_opt_ PVOID DataPath,
    _In_ ULONG BufferLength,
    _Inout_updates_bytes_(BufferLength) PVOID Buffer,
    _Inout_ PVOID Context,
    _Out_ PULONG Size
    );
#if !defined(WPP_TRACE_CONTROL_NULL_GUID)
DEFINE_GUID(WPP_TRACE_CONTROL_NULL_GUID, 0x00000000L, 0x0000, 0x0000, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00);
#endif
#define WPP_TRACE_CONTROL(Function,Buffer,BufferSize,ReturnSize) WppTraceCallback(Function,NULL,BufferSize,Buffer,&WPP_CB[0],&ReturnSize);
    

__inline ULONG64 WppQueryLogger(_In_opt_ PCWSTR LoggerName)
{

    if (WppTraceWinXP == WPPTraceSuite) {

        ULONG ReturnLength ;
        LONG Status ;
        ULONG64 TraceHandle ;
        UNICODE_STRING  Buffer  ;
           
        RtlInitUnicodeString(&Buffer, LoggerName ? LoggerName : L"stdout");

        Status = pfnWppQueryTraceInformation(
                                            TraceHandleByNameClass,
                                            (PVOID)&TraceHandle,
                                            sizeof(TraceHandle),
                                            &ReturnLength,
                                            (PVOID)&Buffer
                                            );
        if (Status != STATUS_SUCCESS) {
           return (ULONG64)0 ;
        }
        
        return TraceHandle ;
    } else {
        return (ULONG64) 0 ;
    }
}

typedef LONG (*WMIENTRY_NEW)(
    _In_ UCHAR MinorFunction,
    _In_opt_ PVOID DataPath,
    _In_ ULONG BufferLength,
    _Inout_updates_bytes_(BufferLength) PVOID Buffer,
    _In_ PVOID Context,
    _Out_ PULONG Size
    );

typedef struct _WPP_TRACE_CONTROL_BLOCK
{
    WMIENTRY_NEW                        Callback;
    LPCGUID                             ControlGuid;
    struct _WPP_TRACE_CONTROL_BLOCK    *Next;
    __int64                             Logger;
    PUNICODE_STRING                     RegistryPath;
    UCHAR                               FlagsLen; 
    UCHAR                               Level; 
    USHORT                              Reserved;
    ULONG                               Flags[1];
    ULONG                               ReservedFlags;
    REGHANDLE                           RegHandle;
#if ENABLE_WPP_RECORDER    
    PVOID                               AutoLogContext;
    USHORT                              AutoLogVerboseEnabled;
    USHORT                              AutoLogAttachToMiniDump;
#endif    
} WPP_TRACE_CONTROL_BLOCK, *PWPP_TRACE_CONTROL_BLOCK;

VOID WppCleanupKm(_When_(_ENABLE_WPP_RECORDER, _In_) _When_(!_ENABLE_WPP_RECORDER, _In_opt_) PDRIVER_OBJECT DriverObject);

#define WPP_CLEANUP(DriverObject) WppCleanupKm((PDRIVER_OBJECT)DriverObject)

#define WPP_IsValidSid RtlValidSid
#define WPP_GetLengthSid RtlLengthSid

//
// Callback routine to be defined by the driver, which will be called from WPP callback
// WPP will pass current valued of : GUID, Logger, Enable, Flags, and Level
// 
// To activate driver must define WPP_PRIVATE_ENABLE_CALLBACK in their code, sample below 
// #define WPP_PRIVATE_ENABLE_CALLBACK MyPrivateCallback;
//
typedef
VOID
(*PFN_WPP_PRIVATE_ENABLE_CALLBACK)(
    _In_ LPCGUID Guid,   
    _In_ __int64 Logger, 
    _In_ BOOLEAN Enable, 
    _In_ ULONG Flags,    
    _In_ UCHAR Level);   

#if defined(__cplusplus)
};
#endif

#endif  // #ifndef WPP_ALREADY_INCLUDED


 
// template control.tpl

//
//     Defines a set of macro that expand control model specified
//     with WPP_CONTROL_GUIDS (example shown below)
//     into an enum of trace levels and required structures that
//     contain the mask of levels, logger handle and some information
//     required for registration.
//

#ifndef WPP_ALREADY_INCLUDED

#define WPP_EVAL(x) x
#define WPP_STR(x)  #x
#define WPP_STRINGIZE(x) WPP_STR(x)
#define WPP_GLUE(a, b)  a ## b
#define WPP_GLUE3(a, b, c)  a ## b ## c
#define WPP_GLUE4(a, b, c, d)  a ## b ## c ## d
#define WPP_XGLUE(a, b) WPP_GLUE(a, b)
#define WPP_XGLUE3(a, b, c) WPP_GLUE3(a, b, c)
#define WPP_XGLUE4(a, b, c, d) WPP_GLUE4(a, b, c, d)

///////////////////////////////////////////////////////////////////////////////////
//
// #define WPP_CONTROL_GUIDS \
//     WPP_DEFINE_CONTROL_GUID(Regular,(81b20fea,73a8,4b62,95bc,354477c97a6f), \
//       WPP_DEFINE_BIT(Error)      \
//       WPP_DEFINE_BIT(Unusual)    \
//       WPP_DEFINE_BIT(Noise)      \
//    )        \
//    WPP_DEFINE_CONTROL_GUID(HiFreq,(91b20fea,73a8,4b62,95bc,354477c97a6f), \
//       WPP_DEFINE_BIT(Entry)      \
//       WPP_DEFINE_BIT(Exit)       \
//       WPP_DEFINE_BIT(ApiCalls)   \
//       WPP_DEFINE_BIT(RandomJunk) \
//       WPP_DEFINE_BIT(LovePoem)   \
//    )        

#if defined(__cplusplus)
extern "C" {
#endif

#if !defined(WPP_CONTROL_GUIDS)  && defined(WPP_ETW_PROVIDER)
#define WPP_NO_CONTROL_GUIDS
#endif

#if !defined(WPP_NO_CONTROL_GUIDS)

#if defined(WPP_DEFAULT_CONTROL_GUID)
#  if defined(WPP_CONTROL_GUIDS)
#     pragma message(__FILE__ " : error : WPP_DEFAULT_CONTROL_GUID cannot be used together with WPP_CONTROL_GUIDS")
#     stop
#  else
#     define WPP_CONTROL_GUIDS \
         WPP_DEFINE_CONTROL_GUID(Default,(WPP_DEFAULT_CONTROL_GUID), \
         WPP_DEFINE_BIT(Error)   \
         WPP_DEFINE_BIT(Unusual) \
         WPP_DEFINE_BIT(Noise)   \
      )
#  endif      
#endif

#if !defined(WPP_CONTROL_GUIDS)
#  pragma message(__FILE__ " : error : Please define control model via WPP_CONTROL_GUIDS or WPP_DEFAULT_CONTROL_GUID macros")
#  pragma message(__FILE__ " : error : don't forget to call WPP_INIT_TRACING and WPP_CLEANUP in your main, DriverEntry or DllInit")
#  pragma message(__FILE__ " : error : see tracewpp.doc for further information")
stop.
#endif
// a set of macro to convert a guid in a form x(81b20fea,73a8,4b62,95bc,354477c97a6f)
// into either a a struct or text string

#define _WPPW(x) WPP_GLUE(L, x)

#define WPP_GUID_NORM(l,w1,w2,w3,ll) l ## w1 ## w2 ## w3 ## ll
#define WPP_GUID_TEXT(l,w1,w2,w3,ll) #l "-" #w1 "-" #w2 "-" #w3 "-" #ll
#define WPP_GUID_WTEXT(l,w1,w2,w3,ll) _WPPW(#l) L"-" _WPPW(#w1) L"-" _WPPW(#w2) L"-" _WPPW(#w3) L"-" _WPPW(#ll)
#define WPP_EXTRACT_BYTE(val,n) (((ULONGLONG)(0x ## val) >> (8 * n)) & 0xFF)
#define WPP_GUID_STRUCT(l,w1,w2,w3,ll) {0x ## l, 0x ## w1, 0x ## w2,\
     {WPP_EXTRACT_BYTE(w3, 1), WPP_EXTRACT_BYTE(w3, 0),\
      WPP_EXTRACT_BYTE(ll, 5), WPP_EXTRACT_BYTE(ll, 4),\
      WPP_EXTRACT_BYTE(ll, 3), WPP_EXTRACT_BYTE(ll, 2),\
      WPP_EXTRACT_BYTE(ll, 1), WPP_EXTRACT_BYTE(ll, 0)} }

#ifndef WPP_FORCEINLINE
#if !defined(WPP_OLDCC)
#define WPP_FORCEINLINE __forceinline
#else
#define WPP_FORCEINLINE __inline
#endif
#endif


// define an enum of control block names
//////
#define WPP_DEFINE_CONTROL_GUID(Name,Guid,Bits) WPP_XGLUE(WPP_CTL_, WPP_EVAL(Name)),
enum WPP_CTL_NAMES { WPP_CONTROL_GUIDS WPP_LAST_CTL};
#undef WPP_DEFINE_CONTROL_GUID

// define control guids
//////
#define WPP_DEFINE_CONTROL_GUID(Name,Guid,Bits) \
extern __declspec(selectany) const GUID WPP_XGLUE4(WPP_, ThisDir, _CTLGUID_, WPP_EVAL(Name)) = WPP_GUID_STRUCT Guid;
WPP_CONTROL_GUIDS
#undef WPP_DEFINE_CONTROL_GUID

// define enums of individual bits
/////
#define WPP_DEFINE_CONTROL_GUID(Name,Guid,Bits) \
    WPP_XGLUE(WPP_BLOCK_START_, WPP_EVAL(Name)) = WPP_XGLUE(WPP_CTL_, WPP_EVAL(Name)) * 0x10000, Bits WPP_XGLUE(WPP_BLOCK_END_, WPP_EVAL(Name)), 
# define WPP_DEFINE_BIT(Name) WPP_BIT_ ## Name,
enum WPP_DEFINE_BIT_NAMES { WPP_CONTROL_GUIDS };
# undef WPP_DEFINE_BIT
#undef WPP_DEFINE_CONTROL_GUID

#define WPP_MASK(CTL)    (1 << ( ((CTL)-1) & 31 ))
#define WPP_FLAG_NO(CTL) ( (0xFFFF & ((CTL)-1) ) / 32)
#define WPP_CTRL_NO(CTL) ((CTL) >> 16)

// calculate how many DWORDs we need to get the required number of bits
// upper estimate. Sometimes will be off by one
#define WPP_DEFINE_CONTROL_GUID(Name,Guid,Bits) | WPP_XGLUE(WPP_BLOCK_END_, WPP_EVAL(Name))
enum _WPP_FLAG_LEN_ENUM { WPP_FLAG_LEN = 1 | ((0 WPP_CONTROL_GUIDS) & 0xFFFF) / 32 };
#undef WPP_DEFINE_CONTROL_GUID

//
// Check that maximum number of flags does not exceed 32
//
#ifndef C_ASSERT
#define C_ASSERT(e) typedef char __C_ASSERT__[(e)?1:-1]
#endif

#define MAX_NUMBER_OF_ETW_FLAGS 34 // 32 flags plus 2 separators
#define WPP_DEFINE_CONTROL_GUID(Name,Guid,Bits) && ((WPP_XGLUE(WPP_BLOCK_END_, WPP_EVAL(Name) & 0xFFFF)) < MAX_NUMBER_OF_ETW_FLAGS)
enum _WPP_FLAG_LEN_ENUM_MAX { WPP_MAX_FLAG_LEN_CHECK = (1 WPP_CONTROL_GUIDS) }; 
#undef WPP_DEFINE_CONTROL_GUID

#ifndef WPP_CB
#  define WPP_CB      WPP_GLOBAL_Control
#endif
#ifndef WPP_CB_TYPE
#define WPP_CB_TYPE WPP_PROJECT_CONTROL_BLOCK
#endif

typedef union {
    WPP_TRACE_CONTROL_BLOCK Control;      
    UCHAR ReserveSpace[ sizeof(WPP_TRACE_CONTROL_BLOCK) + sizeof(ULONG) * (WPP_FLAG_LEN - 1) ];
} WPP_CB_TYPE ;

 
extern __declspec(selectany) WPP_CB_TYPE *WPP_CB = (WPP_CB_TYPE*)&WPP_CB;

#define WPP_CONTROL(CTL) (WPP_CB[WPP_CTRL_NO(CTL)].Control)

#ifndef WPP_USE_TRACE_LEVELS
// For historical reasons the use of LEVEL could imply flags, this was a bad choice but very difficult
// to undo.
#if !defined(WPP_LEVEL_LOGGER)
#  define WPP_LEVEL_LOGGER(CTL)  (WPP_CONTROL(WPP_BIT_ ## CTL).Logger), 
#endif

#if !defined(WPP_LEVEL_ENABLED)
#  define WPP_LEVEL_ENABLED(CTL) (WPP_CONTROL(WPP_BIT_ ## CTL).Flags[WPP_FLAG_NO(WPP_BIT_ ## CTL)] & WPP_MASK(WPP_BIT_ ## CTL)) 
#endif
#else  //  #ifndef WPP_USE_TRACE_LEVELS
#if !defined(WPP_LEVEL_LOGGER)
#define WPP_LEVEL_LOGGER(lvl) (WPP_CONTROL(WPP_BIT_ ## DUMMY).Logger),
#endif

#if !defined(WPP_LEVEL_ENABLED)
#define WPP_LEVEL_ENABLED(lvl) (WPP_CONTROL(WPP_BIT_ ## DUMMY).Level >= lvl)
#endif
#endif  // #ifndef WPP_USE_TRACE_LEVELS

#if !defined(WPP_FLAG_LOGGER)
#  define WPP_FLAG_LOGGER(CTL)  (WPP_CONTROL(WPP_BIT_ ## CTL).Logger), 
#endif


#if !defined(WPP_FLAG_ENABLED)
#  define WPP_FLAG_ENABLED(CTL) (WPP_CONTROL(WPP_BIT_ ## CTL).Flags[WPP_FLAG_NO(WPP_BIT_ ## CTL)] & WPP_MASK(WPP_BIT_ ## CTL)) 
#endif


#ifndef WPP_ENABLED
#  define WPP_ENABLED() 1
#endif
#ifndef WPP_LOGGER
#  define WPP_LOGGER() (WPP_CB[0].Control.Logger),
#endif

#endif // WPP_NO_CONTROL_GUIDS

#if !defined(WPP_GET_LOGGER)
#  define WPP_GET_LOGGER Logger
#endif

#if !defined(WPP_LOGGER_ARG)
#  define WPP_LOGGER_ARG TRACEHANDLE Logger,
#endif

#if defined(__cplusplus)
};
#endif

#endif  // #ifndef WPP_ALREADY_INCLUDED


#if ENABLE_WPP_RECORDER
// template tracemacro-ifr.tpl

// This template expects:
//      WPP_THIS_FILE defined (see header.tpl)
//      WPP_LOGGER_ARG  defined
//      WPP_GET_LOGGER  defined
//      WPP_ENABLED() defined

#if defined(__cplusplus)
extern "C" {
#endif

#ifndef WPP_ALREADY_INCLUDED

#ifndef NO_CHECK_FOR_NULL_STRING
#ifndef WPP_CHECK_FOR_NULL_STRING
#define WPP_CHECK_FOR_NULL_STRING 1
#endif
#endif

#define WPP_EVAL(_value_) _value_
#define WPP_(Id) WPP_EVAL(WPP_) ## WPP_EVAL(Id) ## WPP_EVAL(_) ## WPP_EVAL(WPP_THIS_FILE) ## WPP_EVAL(__LINE__)

#if !defined(WPP_INLINE)
#define WPP_INLINE DECLSPEC_NOINLINE __inline
#endif

#else   // #ifndef WPP_ALREADY_INCLUDED

#undef WPP_LOCAL_TraceGuids

#endif  // #ifndef WPP_ALREADY_INCLUDED

#if !defined(WPP_NO_ANNOTATIONS)

#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c1016
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c1039
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c1073
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c1106
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c1118
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c1127
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c1148
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c116
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c1177
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c1208
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c1225
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c1244
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c1280
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c1298
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c1307
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c1319
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c1332
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c1345
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c1364
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c1380
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c1406
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c1416
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c1445
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c1459
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c1484
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c149
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c1503
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c1513
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c1532
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c1544
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c1557
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c1571
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c1598
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c1660
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c1670
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c1691
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c1707
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c1719
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c1728
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c1742
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c1764
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c177
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c1773
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c1785
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c1809
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c1825
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c1841
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c1875
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c1918
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c1927
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c1937
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c1956
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c1981
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c2015
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c202
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c2031
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c2056
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c2097
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c2128
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c2163
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c217
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c2186
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c2221
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c2245
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c2260
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c2279
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c2291
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c2317
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c2343
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c2354
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c2371
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c2386
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c2419
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c245
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c2450
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c2459
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c2480
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c2489
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c2505
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c2528
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c2555
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c2584
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c2598
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c261
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c2612
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c2636
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c2666
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c2689
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c272
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c2731
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c2759
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c281
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c2844
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c2857
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c2866
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c2887
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c2897
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c2926
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c2936
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c2949
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c2966
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c2982
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c2998
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c3021
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c3042
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c3053
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c3081
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c310
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c3114
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c3125
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c3141
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c3157
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c3183
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c3224
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c3240
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c325
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c3269
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c3305
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c3321
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c3338
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c3381
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c3399
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c3438
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c3460
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c3474
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c3488
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c3502
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c352
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c3535
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c3558
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c3571
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c3585
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c3619
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c3628
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c3651
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c3664
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c3676
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c3714
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c3726
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c3735
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c3757
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c3773
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c3794
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c3809
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c3819
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c3832
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c3845
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c3856
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c3870
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c3878
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c3896
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c3908
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c3920
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c3932
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c395
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c3968
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c3979
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c3997
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c4005
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c4024
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c4065
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c4128
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c4137
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c4148
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c4184
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c419
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c4196
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c4210
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c4242
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c4283
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c431
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c4310
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c4330
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c452
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c482
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c495
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c529
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c552
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c583
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c614
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c649
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c678
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c707
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c720
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c743
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c765
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c792
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c816
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c841
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c869
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c87
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c890
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c927
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c957
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c971
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c991
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c1016_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 48 \"%0<%10!s!> DecreaseDevicePower: IRP 0x%11!p!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c1016_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 48 \"%0<%10!s!> DecreaseDevicePower: IRP 0x%11!p!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c1016
    #define WPP_ANNOTATE_USBPWR_c1016 WPP_ANNOTATE_USBPWR_c1016_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemPtr -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c1016 WPP_ANNOTATE_USBPWR_c1016_FINAL("TMF:", "USBPWR.c", "USBPWR_c1016", L"{", L"pDevExt->PortName, ItemString -- 10" , L"Irp, ItemPtr -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c1039_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 49 \"%0<%10!s!> DecreaseDevicePower: not in D0, no act(0x%11!p!)\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c1039_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 49 \"%0<%10!s!> DecreaseDevicePower: not in D0, no act(0x%11!p!)\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c1039
    #define WPP_ANNOTATE_USBPWR_c1039 WPP_ANNOTATE_USBPWR_c1039_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemPtr -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c1039 WPP_ANNOTATE_USBPWR_c1039_FINAL("TMF:", "USBPWR.c", "USBPWR_c1039", L"{", L"pDevExt->PortName, ItemString -- 10" , L"Irp, ItemPtr -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c1073_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 50 \"%0<%10!s!> -->ScheduleDevicePowerUp: 0x%11!p!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c1073_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 50 \"%0<%10!s!> -->ScheduleDevicePowerUp: 0x%11!p!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c1073
    #define WPP_ANNOTATE_USBPWR_c1073 WPP_ANNOTATE_USBPWR_c1073_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemPtr -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c1073 WPP_ANNOTATE_USBPWR_c1073_FINAL("TMF:", "USBPWR.c", "USBPWR_c1073", L"{", L"pDevExt->PortName, ItemString -- 10" , L"Irp, ItemPtr -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c1106_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 51 \"%0<%10!s!> ScheduleDevicePowerUp: Out of mem 1\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c1106_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 51 \"%0<%10!s!> ScheduleDevicePowerUp: Out of mem 1\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c1106
    #define WPP_ANNOTATE_USBPWR_c1106 WPP_ANNOTATE_USBPWR_c1106_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c1106 WPP_ANNOTATE_USBPWR_c1106_FINAL("TMF:", "USBPWR.c", "USBPWR_c1106", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c1118_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 52 \"%0<%10!s!> ScheduleDevicePowerUp: Out of mem 2\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c1118_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 52 \"%0<%10!s!> ScheduleDevicePowerUp: Out of mem 2\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c1118
    #define WPP_ANNOTATE_USBPWR_c1118 WPP_ANNOTATE_USBPWR_c1118_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c1118 WPP_ANNOTATE_USBPWR_c1118_FINAL("TMF:", "USBPWR.c", "USBPWR_c1118", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c1127_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 53 \"%0<%10!s!> <--ScheduleDevicePowerUp: 0x%11!p! ST 0x%12!x!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c1127_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 53 \"%0<%10!s!> <--ScheduleDevicePowerUp: 0x%11!p! ST 0x%12!x!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c1127
    #define WPP_ANNOTATE_USBPWR_c1127 WPP_ANNOTATE_USBPWR_c1127_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemPtr -- 11" , L"Arg, ItemLong -- 12" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c1127 WPP_ANNOTATE_USBPWR_c1127_FINAL("TMF:", "USBPWR.c", "USBPWR_c1127", L"{", L"pDevExt->PortName, ItemString -- 10" , L"Irp, ItemPtr -- 11" , L"ntStatus, ItemLong -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c1148_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 54 \"%0<%10!s!> PowerUpDevice: 0x%11!p!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c1148_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 54 \"%0<%10!s!> PowerUpDevice: 0x%11!p!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c1148
    #define WPP_ANNOTATE_USBPWR_c1148 WPP_ANNOTATE_USBPWR_c1148_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemPtr -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c1148 WPP_ANNOTATE_USBPWR_c1148_FINAL("TMF:", "USBPWR.c", "USBPWR_c1148", L"{", L"pDevExt->PortName, ItemString -- 10" , L"irp, ItemPtr -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c116_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 11 \"%0<%10!s!> IRP_MN_QUERY_POWER: DevicePowerState D%11!d!\" //   FLAG=QCUSB_DBG_MASK_POWER LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c116_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 11 \"%0<%10!s!> IRP_MN_QUERY_POWER: DevicePowerState D%11!d!\" //   FLAG=QCUSB_DBG_MASK_POWER LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c116
    #define WPP_ANNOTATE_USBPWR_c116 WPP_ANNOTATE_USBPWR_c116_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c116 WPP_ANNOTATE_USBPWR_c116_FINAL("TMF:", "USBPWR.c", "USBPWR_c116", L"{", L"pDevExt->PortName, ItemString -- 10" , L"pwrState-1, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c1177_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 55 \"%0<%10!s!> PIRP (Cdev-s 0x%11!x!) 0x%12!p!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c1177_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 55 \"%0<%10!s!> PIRP (Cdev-s 0x%11!x!) 0x%12!p!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c1177
    #define WPP_ANNOTATE_USBPWR_c1177 WPP_ANNOTATE_USBPWR_c1177_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemPtr -- 12" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c1177 WPP_ANNOTATE_USBPWR_c1177_FINAL("TMF:", "USBPWR.c", "USBPWR_c1177", L"{", L"pDevExt->PortName, ItemString -- 10" , L"irp->IoStatus.Status, ItemLong -- 11" , L"irp, ItemPtr -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c1208_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 56 \"%0<%10!s!> -->CancelIdleTimer(%11!u!): BusyMask 0x%12!x!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c1208_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 56 \"%0<%10!s!> -->CancelIdleTimer(%11!u!): BusyMask 0x%12!x!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c1208
    #define WPP_ANNOTATE_USBPWR_c1208 WPP_ANNOTATE_USBPWR_c1208_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemLong -- 12" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c1208 WPP_ANNOTATE_USBPWR_c1208_FINAL("TMF:", "USBPWR.c", "USBPWR_c1208", L"{", L"pDevExt->PortName, ItemString -- 10" , L"Cookie, ItemLong -- 11" , L"BusyMask, ItemLong -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c1225_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 57 \"%0<%10!s!> CancelIdleTimer(deQ) - RML %11!d!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c1225_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 57 \"%0<%10!s!> CancelIdleTimer(deQ) - RML %11!d!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c1225
    #define WPP_ANNOTATE_USBPWR_c1225 WPP_ANNOTATE_USBPWR_c1225_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c1225 WPP_ANNOTATE_USBPWR_c1225_FINAL("TMF:", "USBPWR.c", "USBPWR_c1225", L"{", L"pDevExt->PortName, ItemString -- 10" , L"pDevExt->Sts.lRmlCount[3], ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c1244_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 58 \"%0<%10!s!> <--CancelIdleTimer(%11!u!): BusyMask 0x%12!x!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c1244_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 58 \"%0<%10!s!> <--CancelIdleTimer(%11!u!): BusyMask 0x%12!x!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c1244
    #define WPP_ANNOTATE_USBPWR_c1244 WPP_ANNOTATE_USBPWR_c1244_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemLong -- 12" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c1244 WPP_ANNOTATE_USBPWR_c1244_FINAL("TMF:", "USBPWR.c", "USBPWR_c1244", L"{", L"pDevExt->PortName, ItemString -- 10" , L"Cookie, ItemLong -- 11" , L"BusyMask, ItemLong -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c1280_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 59 \"%0<%10!s!> <--SetIdleTimer(%11!u!): BM 0x%12!x! SS disabled\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c1280_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 59 \"%0<%10!s!> <--SetIdleTimer(%11!u!): BM 0x%12!x! SS disabled\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c1280
    #define WPP_ANNOTATE_USBPWR_c1280 WPP_ANNOTATE_USBPWR_c1280_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemLong -- 12" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c1280 WPP_ANNOTATE_USBPWR_c1280_FINAL("TMF:", "USBPWR.c", "USBPWR_c1280", L"{", L"pDevExt->PortName, ItemString -- 10" , L"Cookie, ItemLong -- 11" , L"BusyMask, ItemLong -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c1298_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 60 \"%0<%10!s!> -->SetIdleTimer(%11!u!): BusyMask 0x%12!x! IRQL %13!u! Idle %14!u!s Rml[0]=%15!u!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c1298_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 60 \"%0<%10!s!> -->SetIdleTimer(%11!u!): BusyMask 0x%12!x! IRQL %13!u! Idle %14!u!s Rml[0]=%15!u!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c1298
    #define WPP_ANNOTATE_USBPWR_c1298 WPP_ANNOTATE_USBPWR_c1298_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemLong -- 12" , L"Arg, ItemLong -- 13" , L"Arg, ItemLong -- 14" , L"Arg, ItemLong -- 15" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c1298 WPP_ANNOTATE_USBPWR_c1298_FINAL("TMF:", "USBPWR.c", "USBPWR_c1298", L"{", L"pDevExt->PortName, ItemString -- 10" , L"Cookie, ItemLong -- 11" , L"BusyMask, ItemLong -- 12" , L"irql, ItemLong -- 13" , L"pDevExt->SelectiveSuspendIdleTime, ItemLong -- 14" , L"pDevExt->Sts.lRmlCount[0], ItemLong -- 15" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c1307_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 61 \"%0<%10!s!> <--SetIdleTimer(%11!u!): Suspended, no act\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c1307_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 61 \"%0<%10!s!> <--SetIdleTimer(%11!u!): Suspended, no act\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c1307
    #define WPP_ANNOTATE_USBPWR_c1307 WPP_ANNOTATE_USBPWR_c1307_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c1307 WPP_ANNOTATE_USBPWR_c1307_FINAL("TMF:", "USBPWR.c", "USBPWR_c1307", L"{", L"pDevExt->PortName, ItemString -- 10" , L"Cookie, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c1319_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 62 \"%0<%10!s!> <--SetIdleTimer(%11!u!): dev not in working state\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c1319_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 62 \"%0<%10!s!> <--SetIdleTimer(%11!u!): dev not in working state\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c1319
    #define WPP_ANNOTATE_USBPWR_c1319 WPP_ANNOTATE_USBPWR_c1319_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c1319 WPP_ANNOTATE_USBPWR_c1319_FINAL("TMF:", "USBPWR.c", "USBPWR_c1319", L"{", L"pDevExt->PortName, ItemString -- 10" , L"Cookie, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c1332_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 63 \"%0<%10!s!> <--SetIdleTimer(%11!u!): Idle req pending, no act 0x%12!p!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c1332_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 63 \"%0<%10!s!> <--SetIdleTimer(%11!u!): Idle req pending, no act 0x%12!p!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c1332
    #define WPP_ANNOTATE_USBPWR_c1332 WPP_ANNOTATE_USBPWR_c1332_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemPtr -- 12" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c1332 WPP_ANNOTATE_USBPWR_c1332_FINAL("TMF:", "USBPWR.c", "USBPWR_c1332", L"{", L"pDevExt->PortName, ItemString -- 10" , L"Cookie, ItemLong -- 11" , L"pDevExt->IdleNotificationIrp, ItemPtr -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c1345_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 64 \"%0<%10!s!> <--SetIdleTimer(%11!u!): powering down, no act\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c1345_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 64 \"%0<%10!s!> <--SetIdleTimer(%11!u!): powering down, no act\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c1345
    #define WPP_ANNOTATE_USBPWR_c1345 WPP_ANNOTATE_USBPWR_c1345_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c1345 WPP_ANNOTATE_USBPWR_c1345_FINAL("TMF:", "USBPWR.c", "USBPWR_c1345", L"{", L"pDevExt->PortName, ItemString -- 10" , L"Cookie, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c1364_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 65 \"%0<%10!s!> SetIdleTimer: re-start %11!d!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c1364_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 65 \"%0<%10!s!> SetIdleTimer: re-start %11!d!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c1364
    #define WPP_ANNOTATE_USBPWR_c1364 WPP_ANNOTATE_USBPWR_c1364_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c1364 WPP_ANNOTATE_USBPWR_c1364_FINAL("TMF:", "USBPWR.c", "USBPWR_c1364", L"{", L"pDevExt->PortName, ItemString -- 10" , L"pDevExt->Sts.lRmlCount[3], ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c1380_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 66 \"%0<%10!s!> SetIdleTimer: no reset\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c1380_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 66 \"%0<%10!s!> SetIdleTimer: no reset\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c1380
    #define WPP_ANNOTATE_USBPWR_c1380 WPP_ANNOTATE_USBPWR_c1380_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c1380 WPP_ANNOTATE_USBPWR_c1380_FINAL("TMF:", "USBPWR.c", "USBPWR_c1380", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c1406_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 67 \"%0<%10!s!> <--SetIdleTimer: ST 0x%11!x!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c1406_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 67 \"%0<%10!s!> <--SetIdleTimer: ST 0x%11!x!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c1406
    #define WPP_ANNOTATE_USBPWR_c1406 WPP_ANNOTATE_USBPWR_c1406_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c1406 WPP_ANNOTATE_USBPWR_c1406_FINAL("TMF:", "USBPWR.c", "USBPWR_c1406", L"{", L"pDevExt->PortName, ItemString -- 10" , L"ntStatus, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c1416_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 68 \"%0<%10!s!> <--SetIdleTimer: err - IoBusyMask 0x%11!x! (not 0) (RML %12!d!)\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c1416_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 68 \"%0<%10!s!> <--SetIdleTimer: err - IoBusyMask 0x%11!x! (not 0) (RML %12!d!)\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c1416
    #define WPP_ANNOTATE_USBPWR_c1416 WPP_ANNOTATE_USBPWR_c1416_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemLong -- 12" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c1416 WPP_ANNOTATE_USBPWR_c1416_FINAL("TMF:", "USBPWR.c", "USBPWR_c1416", L"{", L"pDevExt->PortName, ItemString -- 10" , L"pDevExt->IoBusyMask, ItemLong -- 11" , L"pDevExt->Sts.lRmlCount[3], ItemLong -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c1445_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 69 \"%0<%10!s!> -->IdleDpcRoutine: context 0x%11!p!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_TRACE", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c1445_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 69 \"%0<%10!s!> -->IdleDpcRoutine: context 0x%11!p!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_TRACE", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c1445
    #define WPP_ANNOTATE_USBPWR_c1445 WPP_ANNOTATE_USBPWR_c1445_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemPtr -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c1445 WPP_ANNOTATE_USBPWR_c1445_FINAL("TMF:", "USBPWR.c", "USBPWR_c1445", L"{", L"pDevExt->PortName, ItemString -- 10" , L"DeferredContext, ItemPtr -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c1459_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 70 \"%0<%10!s!> <--IdleDpcRoutine: context 0x%11!p!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_TRACE", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c1459_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 70 \"%0<%10!s!> <--IdleDpcRoutine: context 0x%11!p!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_TRACE", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c1459
    #define WPP_ANNOTATE_USBPWR_c1459 WPP_ANNOTATE_USBPWR_c1459_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemPtr -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c1459 WPP_ANNOTATE_USBPWR_c1459_FINAL("TMF:", "USBPWR.c", "USBPWR_c1459", L"{", L"pDevExt->PortName, ItemString -- 10" , L"DeferredContext, ItemPtr -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c1484_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 71 \"%0<%10!s!> -->RegisterIdleNotification\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c1484_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 71 \"%0<%10!s!> -->RegisterIdleNotification\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c1484
    #define WPP_ANNOTATE_USBPWR_c1484 WPP_ANNOTATE_USBPWR_c1484_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c1484 WPP_ANNOTATE_USBPWR_c1484_FINAL("TMF:", "USBPWR.c", "USBPWR_c1484", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c149_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 12 \"%0<%10!s!> IRP_MN_QUERY_POWER: unknown pwr type %11!u!\" //   FLAG=QCUSB_DBG_MASK_POWER LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c149_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 12 \"%0<%10!s!> IRP_MN_QUERY_POWER: unknown pwr type %11!u!\" //   FLAG=QCUSB_DBG_MASK_POWER LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c149
    #define WPP_ANNOTATE_USBPWR_c149 WPP_ANNOTATE_USBPWR_c149_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c149 WPP_ANNOTATE_USBPWR_c149_FINAL("TMF:", "USBPWR.c", "USBPWR_c149", L"{", L"pDevExt->PortName, ItemString -- 10" , L"IrpStack->Parameters.Power.Type, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c1503_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 72 \"%0<%10!s!> RegIdle: to request idle IRP\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c1503_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 72 \"%0<%10!s!> RegIdle: to request idle IRP\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c1503
    #define WPP_ANNOTATE_USBPWR_c1503 WPP_ANNOTATE_USBPWR_c1503_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c1503 WPP_ANNOTATE_USBPWR_c1503_FINAL("TMF:", "USBPWR.c", "USBPWR_c1503", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c1513_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 73 \"%0<%10!s!> RegIdle: SystemPower low, not to send idle req\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c1513_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 73 \"%0<%10!s!> RegIdle: SystemPower low, not to send idle req\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c1513
    #define WPP_ANNOTATE_USBPWR_c1513 WPP_ANNOTATE_USBPWR_c1513_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c1513 WPP_ANNOTATE_USBPWR_c1513_FINAL("TMF:", "USBPWR.c", "USBPWR_c1513", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c1532_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 74 \"%0<%10!s!> RegisterIdleNotification: selective suspension disabled\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c1532_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 74 \"%0<%10!s!> RegisterIdleNotification: selective suspension disabled\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c1532
    #define WPP_ANNOTATE_USBPWR_c1532 WPP_ANNOTATE_USBPWR_c1532_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c1532 WPP_ANNOTATE_USBPWR_c1532_FINAL("TMF:", "USBPWR.c", "USBPWR_c1532", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c1544_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 75 \"%0<%10!s!> <--RegisterIdleNotification: powering down, no act\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c1544_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 75 \"%0<%10!s!> <--RegisterIdleNotification: powering down, no act\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c1544
    #define WPP_ANNOTATE_USBPWR_c1544 WPP_ANNOTATE_USBPWR_c1544_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c1544 WPP_ANNOTATE_USBPWR_c1544_FINAL("TMF:", "USBPWR.c", "USBPWR_c1544", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c1557_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 76 \"%0<%10!s!> RegisterIdleNotification: wrong dev power state: D%11!u!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c1557_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 76 \"%0<%10!s!> RegisterIdleNotification: wrong dev power state: D%11!u!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c1557
    #define WPP_ANNOTATE_USBPWR_c1557 WPP_ANNOTATE_USBPWR_c1557_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c1557 WPP_ANNOTATE_USBPWR_c1557_FINAL("TMF:", "USBPWR.c", "USBPWR_c1557", L"{", L"pDevExt->PortName, ItemString -- 10" , L"pDevExt->DevicePower-1, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c1571_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 77 \"%0<%10!s!> RegisterIdleNotification: dev busy, abort (0x%11!p!, 0x%12!x!)\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c1571_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 77 \"%0<%10!s!> RegisterIdleNotification: dev busy, abort (0x%11!p!, 0x%12!x!)\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c1571
    #define WPP_ANNOTATE_USBPWR_c1571 WPP_ANNOTATE_USBPWR_c1571_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemPtr -- 11" , L"Arg, ItemLong -- 12" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c1571 WPP_ANNOTATE_USBPWR_c1571_FINAL("TMF:", "USBPWR.c", "USBPWR_c1571", L"{", L"pDevExt->PortName, ItemString -- 10" , L"pDevExt->IdleNotificationIrp, ItemPtr -- 11" , L"pDevExt->IoBusyMask, ItemLong -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c1598_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 78 \"%0<%10!s!> RegisterIdleNotification: no mem-0\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c1598_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 78 \"%0<%10!s!> RegisterIdleNotification: no mem-0\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c1598
    #define WPP_ANNOTATE_USBPWR_c1598 WPP_ANNOTATE_USBPWR_c1598_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c1598 WPP_ANNOTATE_USBPWR_c1598_FINAL("TMF:", "USBPWR.c", "USBPWR_c1598", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c1660_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 79 \"%0<%10!s!> RegisterIdleNotification: rm lock failrue\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c1660_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 79 \"%0<%10!s!> RegisterIdleNotification: rm lock failrue\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c1660
    #define WPP_ANNOTATE_USBPWR_c1660 WPP_ANNOTATE_USBPWR_c1660_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c1660 WPP_ANNOTATE_USBPWR_c1660_FINAL("TMF:", "USBPWR.c", "USBPWR_c1660", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c1670_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 80 \"%0<%10!s!> RegisterIdleNotification: Submit an idle req at D%11!u! 0x%12!p!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c1670_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 80 \"%0<%10!s!> RegisterIdleNotification: Submit an idle req at D%11!u! 0x%12!p!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c1670
    #define WPP_ANNOTATE_USBPWR_c1670 WPP_ANNOTATE_USBPWR_c1670_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemPtr -- 12" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c1670 WPP_ANNOTATE_USBPWR_c1670_FINAL("TMF:", "USBPWR.c", "USBPWR_c1670", L"{", L"pDevExt->PortName, ItemString -- 10" , L"pDevExt->DevicePower-1, ItemLong -- 11" , L"irp, ItemPtr -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c1691_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 81 \"%0<%10!s!> RegisterIdleNotification: no mem\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c1691_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 81 \"%0<%10!s!> RegisterIdleNotification: no mem\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c1691
    #define WPP_ANNOTATE_USBPWR_c1691 WPP_ANNOTATE_USBPWR_c1691_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c1691 WPP_ANNOTATE_USBPWR_c1691_FINAL("TMF:", "USBPWR.c", "USBPWR_c1691", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c1707_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 82 \"%0<%10!s!> <--RegisterIdleNotification: ST 0x%11!x! RML %12!d!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c1707_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 82 \"%0<%10!s!> <--RegisterIdleNotification: ST 0x%11!x! RML %12!d!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c1707
    #define WPP_ANNOTATE_USBPWR_c1707 WPP_ANNOTATE_USBPWR_c1707_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemLong -- 12" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c1707 WPP_ANNOTATE_USBPWR_c1707_FINAL("TMF:", "USBPWR.c", "USBPWR_c1707", L"{", L"pDevExt->PortName, ItemString -- 10" , L"ntStatus, ItemLong -- 11" , L"pDevExt->Sts.lRmlCount[3], ItemLong -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c1719_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 83 \"%0<%10!s!> -->IdleNotificationCallback\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c1719_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 83 \"%0<%10!s!> -->IdleNotificationCallback\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c1719
    #define WPP_ANNOTATE_USBPWR_c1719 WPP_ANNOTATE_USBPWR_c1719_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c1719 WPP_ANNOTATE_USBPWR_c1719_FINAL("TMF:", "USBPWR.c", "USBPWR_c1719", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c1728_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 84 \"%0<%10!s!> IdleNotificationCallback: err-dev not ready\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c1728_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 84 \"%0<%10!s!> IdleNotificationCallback: err-dev not ready\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c1728
    #define WPP_ANNOTATE_USBPWR_c1728 WPP_ANNOTATE_USBPWR_c1728_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c1728 WPP_ANNOTATE_USBPWR_c1728_FINAL("TMF:", "USBPWR.c", "USBPWR_c1728", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c1742_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 85 \"%0<%10!s!> <--IdleNotificationCallback\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c1742_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 85 \"%0<%10!s!> <--IdleNotificationCallback\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c1742
    #define WPP_ANNOTATE_USBPWR_c1742 WPP_ANNOTATE_USBPWR_c1742_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c1742 WPP_ANNOTATE_USBPWR_c1742_FINAL("TMF:", "USBPWR.c", "USBPWR_c1742", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c1764_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 86 \"%0<%10!s!> -->IdleNotificationCallbackEpisode\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c1764_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 86 \"%0<%10!s!> -->IdleNotificationCallbackEpisode\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c1764
    #define WPP_ANNOTATE_USBPWR_c1764 WPP_ANNOTATE_USBPWR_c1764_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c1764 WPP_ANNOTATE_USBPWR_c1764_FINAL("TMF:", "USBPWR.c", "USBPWR_c1764", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c177_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 13 \"%0<%10!s!> IRP_MN_SET_POWER: SystemPowerState %11!d!\" //   FLAG=QCUSB_DBG_MASK_POWER LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c177_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 13 \"%0<%10!s!> IRP_MN_SET_POWER: SystemPowerState %11!d!\" //   FLAG=QCUSB_DBG_MASK_POWER LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c177
    #define WPP_ANNOTATE_USBPWR_c177 WPP_ANNOTATE_USBPWR_c177_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c177 WPP_ANNOTATE_USBPWR_c177_FINAL("TMF:", "USBPWR.c", "USBPWR_c177", L"{", L"pDevExt->PortName, ItemString -- 10" , L"pwrState, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c1773_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 87 \"%0<%10!s!> IdleNotificationCallbackEpisode: err-dev not ready\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c1773_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 87 \"%0<%10!s!> IdleNotificationCallbackEpisode: err-dev not ready\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c1773
    #define WPP_ANNOTATE_USBPWR_c1773 WPP_ANNOTATE_USBPWR_c1773_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c1773 WPP_ANNOTATE_USBPWR_c1773_FINAL("TMF:", "USBPWR.c", "USBPWR_c1773", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c1785_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 88 \"%0<%10!s!> <--IdleNotificationCallbackEpisode: powering down, no act\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c1785_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 88 \"%0<%10!s!> <--IdleNotificationCallbackEpisode: powering down, no act\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c1785
    #define WPP_ANNOTATE_USBPWR_c1785 WPP_ANNOTATE_USBPWR_c1785_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c1785 WPP_ANNOTATE_USBPWR_c1785_FINAL("TMF:", "USBPWR.c", "USBPWR_c1785", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c1809_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 89 \"%0<%10!s!> IdleNotificationCallbackEpisode: Out of mem 1\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c1809_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 89 \"%0<%10!s!> IdleNotificationCallbackEpisode: Out of mem 1\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c1809
    #define WPP_ANNOTATE_USBPWR_c1809 WPP_ANNOTATE_USBPWR_c1809_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c1809 WPP_ANNOTATE_USBPWR_c1809_FINAL("TMF:", "USBPWR.c", "USBPWR_c1809", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c1825_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 90 \"%0<%10!s!> IdleNotificationCallbackEpisode: Sending PWR req for D%11!u!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c1825_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 90 \"%0<%10!s!> IdleNotificationCallbackEpisode: Sending PWR req for D%11!u!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c1825
    #define WPP_ANNOTATE_USBPWR_c1825 WPP_ANNOTATE_USBPWR_c1825_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c1825 WPP_ANNOTATE_USBPWR_c1825_FINAL("TMF:", "USBPWR.c", "USBPWR_c1825", L"{", L"pDevExt->PortName, ItemString -- 10" , L"powerState.DeviceState-1, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c1841_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 91 \"%0<%10!s!> IdleNotificationCallbackEpisode: rm lock failure\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c1841_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 91 \"%0<%10!s!> IdleNotificationCallbackEpisode: rm lock failure\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c1841
    #define WPP_ANNOTATE_USBPWR_c1841 WPP_ANNOTATE_USBPWR_c1841_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c1841 WPP_ANNOTATE_USBPWR_c1841_FINAL("TMF:", "USBPWR.c", "USBPWR_c1841", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c1875_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 92 \"%0<%10!s!> IdleNotificationCallback: PWR req for D%11!u! sent, status 0x%12!x!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c1875_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 92 \"%0<%10!s!> IdleNotificationCallback: PWR req for D%11!u! sent, status 0x%12!x!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c1875
    #define WPP_ANNOTATE_USBPWR_c1875 WPP_ANNOTATE_USBPWR_c1875_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemLong -- 12" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c1875 WPP_ANNOTATE_USBPWR_c1875_FINAL("TMF:", "USBPWR.c", "USBPWR_c1875", L"{", L"pDevExt->PortName, ItemString -- 10" , L"powerState.DeviceState-1, ItemLong -- 11" , L"ntStatus, ItemLong -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c1918_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 93 \"%0<%10!s!> WTO-2 (%11!d!)\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c1918_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 93 \"%0<%10!s!> WTO-2 (%11!d!)\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c1918
    #define WPP_ANNOTATE_USBPWR_c1918 WPP_ANNOTATE_USBPWR_c1918_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c1918 WPP_ANNOTATE_USBPWR_c1918_FINAL("TMF:", "USBPWR.c", "USBPWR_c1918", L"{", L"pDevExt->PortName, ItemString -- 10" , L"++i, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c1927_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 94 \"%0<%10!s!> Got IRP completion event (%11!d!)\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c1927_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 94 \"%0<%10!s!> Got IRP completion event (%11!d!)\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c1927
    #define WPP_ANNOTATE_USBPWR_c1927 WPP_ANNOTATE_USBPWR_c1927_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c1927 WPP_ANNOTATE_USBPWR_c1927_FINAL("TMF:", "USBPWR.c", "USBPWR_c1927", L"{", L"pDevExt->PortName, ItemString -- 10" , L"++i, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c1937_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 95 \"%0<%10!s!> IdleNotificationCallbackEpisode: powered down\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c1937_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 95 \"%0<%10!s!> IdleNotificationCallbackEpisode: powered down\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c1937
    #define WPP_ANNOTATE_USBPWR_c1937 WPP_ANNOTATE_USBPWR_c1937_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c1937 WPP_ANNOTATE_USBPWR_c1937_FINAL("TMF:", "USBPWR.c", "USBPWR_c1937", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c1956_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 96 \"%0<%10!s!> <--IdleNotificationCallbackEpisode 0x%11!x!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c1956_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 96 \"%0<%10!s!> <--IdleNotificationCallbackEpisode 0x%11!x!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c1956
    #define WPP_ANNOTATE_USBPWR_c1956 WPP_ANNOTATE_USBPWR_c1956_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c1956 WPP_ANNOTATE_USBPWR_c1956_FINAL("TMF:", "USBPWR.c", "USBPWR_c1956", L"{", L"pDevExt->PortName, ItemString -- 10" , L"ntStatus, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c1981_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 97 \"%0<%10!s!> TopDevSetPowerIrpComp: ST 0x%11!x!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c1981_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 97 \"%0<%10!s!> TopDevSetPowerIrpComp: ST 0x%11!x!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c1981
    #define WPP_ANNOTATE_USBPWR_c1981 WPP_ANNOTATE_USBPWR_c1981_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c1981 WPP_ANNOTATE_USBPWR_c1981_FINAL("TMF:", "USBPWR.c", "USBPWR_c1981", L"{", L"pDevExt->PortName, ItemString -- 10" , L"IoStatus->Status, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c2015_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 98 \"%0<%10!s!> -->IdleNotificationIrpCompletion: IRP 0x%11!p!/0x%12!p! st 0x%13!x!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c2015_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 98 \"%0<%10!s!> -->IdleNotificationIrpCompletion: IRP 0x%11!p!/0x%12!p! st 0x%13!x!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c2015
    #define WPP_ANNOTATE_USBPWR_c2015 WPP_ANNOTATE_USBPWR_c2015_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemPtr -- 11" , L"Arg, ItemPtr -- 12" , L"Arg, ItemLong -- 13" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c2015 WPP_ANNOTATE_USBPWR_c2015_FINAL("TMF:", "USBPWR.c", "USBPWR_c2015", L"{", L"pDevExt->PortName, ItemString -- 10" , L"Irp, ItemPtr -- 11" , L"pDevExt->IdleNotificationIrp, ItemPtr -- 12" , L"ntStatus, ItemLong -- 13" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c202_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 14 \"%0<%10!s!> IRP_MN_SET_POWER: D%11!d!\" //   FLAG=QCUSB_DBG_MASK_POWER LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c202_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 14 \"%0<%10!s!> IRP_MN_SET_POWER: D%11!d!\" //   FLAG=QCUSB_DBG_MASK_POWER LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c202
    #define WPP_ANNOTATE_USBPWR_c202 WPP_ANNOTATE_USBPWR_c202_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c202 WPP_ANNOTATE_USBPWR_c202_FINAL("TMF:", "USBPWR.c", "USBPWR_c202", L"{", L"pDevExt->PortName, ItemString -- 10" , L"pwrState-1, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c2031_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 99 \"%0<%10!s!> IdleNotificationIrpCompletion: NO_MEM, best effort\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c2031_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 99 \"%0<%10!s!> IdleNotificationIrpCompletion: NO_MEM, best effort\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c2031
    #define WPP_ANNOTATE_USBPWR_c2031 WPP_ANNOTATE_USBPWR_c2031_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c2031 WPP_ANNOTATE_USBPWR_c2031_FINAL("TMF:", "USBPWR.c", "USBPWR_c2031", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c2056_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 100 \"%0<%10!s!> <--IdleNotificationIrpCompletion [PrepareToPowerDown %11!d!]\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c2056_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 100 \"%0<%10!s!> <--IdleNotificationIrpCompletion [PrepareToPowerDown %11!d!]\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c2056
    #define WPP_ANNOTATE_USBPWR_c2056 WPP_ANNOTATE_USBPWR_c2056_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c2056 WPP_ANNOTATE_USBPWR_c2056_FINAL("TMF:", "USBPWR.c", "USBPWR_c2056", L"{", L"pDevExt->PortName, ItemString -- 10" , L"pDevExt->PrepareToPowerDown, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c2097_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 101 \"%0<%10!s!> _GetOutOfIdleState: no param\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c2097_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 101 \"%0<%10!s!> _GetOutOfIdleState: no param\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c2097
    #define WPP_ANNOTATE_USBPWR_c2097 WPP_ANNOTATE_USBPWR_c2097_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c2097 WPP_ANNOTATE_USBPWR_c2097_FINAL("TMF:", "USBPWR.c", "USBPWR_c2097", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c2128_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 102 \"%0<%10!s!> -->IdleNotificationIrpCompletionEpisode: IRP 0x%11!p!/0x%12!p! st 0x%13!x!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c2128_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 102 \"%0<%10!s!> -->IdleNotificationIrpCompletionEpisode: IRP 0x%11!p!/0x%12!p! st 0x%13!x!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c2128
    #define WPP_ANNOTATE_USBPWR_c2128 WPP_ANNOTATE_USBPWR_c2128_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemPtr -- 11" , L"Arg, ItemPtr -- 12" , L"Arg, ItemLong -- 13" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c2128 WPP_ANNOTATE_USBPWR_c2128_FINAL("TMF:", "USBPWR.c", "USBPWR_c2128", L"{", L"pDevExt->PortName, ItemString -- 10" , L"Irp, ItemPtr -- 11" , L"pDevExt->IdleNotificationIrp, ItemPtr -- 12" , L"ntStatus, ItemLong -- 13" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c2163_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 103 \"%0<%10!s!> IdleNotificationIrpCompletionEpisode: err 0x%11!x!, requesting D0\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c2163_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 103 \"%0<%10!s!> IdleNotificationIrpCompletionEpisode: err 0x%11!x!, requesting D0\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c2163
    #define WPP_ANNOTATE_USBPWR_c2163 WPP_ANNOTATE_USBPWR_c2163_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c2163 WPP_ANNOTATE_USBPWR_c2163_FINAL("TMF:", "USBPWR.c", "USBPWR_c2163", L"{", L"pDevExt->PortName, ItemString -- 10" , L"ntStatus, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c217_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 15 \"%0<%10!s!> IRP_MN_SET_POWER: unknown pwr type %11!u!\" //   FLAG=QCUSB_DBG_MASK_POWER LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c217_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 15 \"%0<%10!s!> IRP_MN_SET_POWER: unknown pwr type %11!u!\" //   FLAG=QCUSB_DBG_MASK_POWER LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c217
    #define WPP_ANNOTATE_USBPWR_c217 WPP_ANNOTATE_USBPWR_c217_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c217 WPP_ANNOTATE_USBPWR_c217_FINAL("TMF:", "USBPWR.c", "USBPWR_c217", L"{", L"pDevExt->PortName, ItemString -- 10" , L"IrpStack->Parameters.Power.Type, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c2186_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 104 \"%0<%10!s!> IdleNotificationIrpCompletionEpisode: rm lock failure 0x%11!x!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c2186_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 104 \"%0<%10!s!> IdleNotificationIrpCompletionEpisode: rm lock failure 0x%11!x!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c2186
    #define WPP_ANNOTATE_USBPWR_c2186 WPP_ANNOTATE_USBPWR_c2186_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c2186 WPP_ANNOTATE_USBPWR_c2186_FINAL("TMF:", "USBPWR.c", "USBPWR_c2186", L"{", L"pDevExt->PortName, ItemString -- 10" , L"ntStatus, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c2221_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 105 \"%0<%10!s!> IdleNotificationIrpCompletionEpisode: err req D0 0x%11!x!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c2221_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 105 \"%0<%10!s!> IdleNotificationIrpCompletionEpisode: err req D0 0x%11!x!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c2221
    #define WPP_ANNOTATE_USBPWR_c2221 WPP_ANNOTATE_USBPWR_c2221_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c2221 WPP_ANNOTATE_USBPWR_c2221_FINAL("TMF:", "USBPWR.c", "USBPWR_c2221", L"{", L"pDevExt->PortName, ItemString -- 10" , L"ntStatus, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c2245_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 106 \"%0<%10!s!> IdleNotificationIrpCompletionEpisode: dev in D0, no act\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c2245_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 106 \"%0<%10!s!> IdleNotificationIrpCompletionEpisode: dev in D0, no act\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c2245
    #define WPP_ANNOTATE_USBPWR_c2245 WPP_ANNOTATE_USBPWR_c2245_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c2245 WPP_ANNOTATE_USBPWR_c2245_FINAL("TMF:", "USBPWR.c", "USBPWR_c2245", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c2260_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 107 \"%0<%10!s!> IdleNotificationIrpCompletionEpisode: IRP was cancelled\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c2260_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 107 \"%0<%10!s!> IdleNotificationIrpCompletionEpisode: IRP was cancelled\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c2260
    #define WPP_ANNOTATE_USBPWR_c2260 WPP_ANNOTATE_USBPWR_c2260_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c2260 WPP_ANNOTATE_USBPWR_c2260_FINAL("TMF:", "USBPWR.c", "USBPWR_c2260", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c2279_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 108 \"%0<%10!s!> IdleNotificationIrpCompletionEpisode: powering down\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c2279_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 108 \"%0<%10!s!> IdleNotificationIrpCompletionEpisode: powering down\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c2279
    #define WPP_ANNOTATE_USBPWR_c2279 WPP_ANNOTATE_USBPWR_c2279_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c2279 WPP_ANNOTATE_USBPWR_c2279_FINAL("TMF:", "USBPWR.c", "USBPWR_c2279", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c2291_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 109 \"%0<%10!s!> <--IdleNotificationIrpCompletionEpisode [PrepareToPowerDown %11!d!] Rml[0]=%12!u!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c2291_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 109 \"%0<%10!s!> <--IdleNotificationIrpCompletionEpisode [PrepareToPowerDown %11!d!] Rml[0]=%12!u!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c2291
    #define WPP_ANNOTATE_USBPWR_c2291 WPP_ANNOTATE_USBPWR_c2291_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemLong -- 12" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c2291 WPP_ANNOTATE_USBPWR_c2291_FINAL("TMF:", "USBPWR.c", "USBPWR_c2291", L"{", L"pDevExt->PortName, ItemString -- 10" , L"pDevExt->PrepareToPowerDown, ItemLong -- 11" , L"pDevExt->Sts.lRmlCount[0], ItemLong -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c2317_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 110 \"%0<%10!s!> TopIdlePowerUpCompletionRoutine: 0x%11!x!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c2317_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 110 \"%0<%10!s!> TopIdlePowerUpCompletionRoutine: 0x%11!x!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c2317
    #define WPP_ANNOTATE_USBPWR_c2317 WPP_ANNOTATE_USBPWR_c2317_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c2317 WPP_ANNOTATE_USBPWR_c2317_FINAL("TMF:", "USBPWR.c", "USBPWR_c2317", L"{", L"pDevExt->PortName, ItemString -- 10" , L"IoStatus->Status, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c2343_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 111 \"%0<%10!s!> -->CancelIdleNotificationIrp(%11!u!) 0x%12!p! Rml[0]=%13!u!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_TRACE", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c2343_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 111 \"%0<%10!s!> -->CancelIdleNotificationIrp(%11!u!) 0x%12!p! Rml[0]=%13!u!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_TRACE", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c2343
    #define WPP_ANNOTATE_USBPWR_c2343 WPP_ANNOTATE_USBPWR_c2343_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemPtr -- 12" , L"Arg, ItemLong -- 13" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c2343 WPP_ANNOTATE_USBPWR_c2343_FINAL("TMF:", "USBPWR.c", "USBPWR_c2343", L"{", L"pDevExt->PortName, ItemString -- 10" , L"Cookie, ItemLong -- 11" , L"pDevExt->IdleNotificationIrp, ItemPtr -- 12" , L"pDevExt->Sts.lRmlCount[0], ItemLong -- 13" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c2354_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 112 \"%0<%10!s!> CancelIdleNotificationIrp: not pending, no act\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c2354_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 112 \"%0<%10!s!> CancelIdleNotificationIrp: not pending, no act\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c2354
    #define WPP_ANNOTATE_USBPWR_c2354 WPP_ANNOTATE_USBPWR_c2354_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c2354 WPP_ANNOTATE_USBPWR_c2354_FINAL("TMF:", "USBPWR.c", "USBPWR_c2354", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c2371_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 113 \"%0<%10!s!> <--CancelIdleNotificationIrp(%11!u!) Rml[0]=%12!u!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_TRACE", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c2371_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 113 \"%0<%10!s!> <--CancelIdleNotificationIrp(%11!u!) Rml[0]=%12!u!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_TRACE", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c2371
    #define WPP_ANNOTATE_USBPWR_c2371 WPP_ANNOTATE_USBPWR_c2371_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemLong -- 12" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c2371 WPP_ANNOTATE_USBPWR_c2371_FINAL("TMF:", "USBPWR.c", "USBPWR_c2371", L"{", L"pDevExt->PortName, ItemString -- 10" , L"Cookie, ItemLong -- 11" , L"pDevExt->Sts.lRmlCount[0], ItemLong -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c2386_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 114 \"%0<%10!s!> ProcessWaitWake: IRP 0x%11!p!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c2386_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 114 \"%0<%10!s!> ProcessWaitWake: IRP 0x%11!p!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c2386
    #define WPP_ANNOTATE_USBPWR_c2386 WPP_ANNOTATE_USBPWR_c2386_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemPtr -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c2386 WPP_ANNOTATE_USBPWR_c2386_FINAL("TMF:", "USBPWR.c", "USBPWR_c2386", L"{", L"pDevExt->PortName, ItemString -- 10" , L"Irp, ItemPtr -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c2419_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 115 \"%0<%10!s!> -->WaitWakeCompletion: 0x%11!p!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_TRACE", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c2419_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 115 \"%0<%10!s!> -->WaitWakeCompletion: 0x%11!p!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_TRACE", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c2419
    #define WPP_ANNOTATE_USBPWR_c2419 WPP_ANNOTATE_USBPWR_c2419_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemPtr -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c2419 WPP_ANNOTATE_USBPWR_c2419_FINAL("TMF:", "USBPWR.c", "USBPWR_c2419", L"{", L"pDevExt->PortName, ItemString -- 10" , L"Irp, ItemPtr -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c245_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 16 \"%0<%10!s!> PowerManagement: Unkown MN 0x%11!x!\" //   FLAG=QCUSB_DBG_MASK_POWER LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c245_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 16 \"%0<%10!s!> PowerManagement: Unkown MN 0x%11!x!\" //   FLAG=QCUSB_DBG_MASK_POWER LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c245
    #define WPP_ANNOTATE_USBPWR_c245 WPP_ANNOTATE_USBPWR_c245_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c245 WPP_ANNOTATE_USBPWR_c245_FINAL("TMF:", "USBPWR.c", "USBPWR_c245", L"{", L"pDevExt->PortName, ItemString -- 10" , L"IrpStack->MinorFunction, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c2450_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 116 \"%0<%10!s!> PIRP (Cww 0x%11!x!/0x%12!x!) 0x%13!p!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c2450_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 116 \"%0<%10!s!> PIRP (Cww 0x%11!x!/0x%12!x!) 0x%13!p!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c2450
    #define WPP_ANNOTATE_USBPWR_c2450 WPP_ANNOTATE_USBPWR_c2450_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemLong -- 12" , L"Arg, ItemPtr -- 13" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c2450 WPP_ANNOTATE_USBPWR_c2450_FINAL("TMF:", "USBPWR.c", "USBPWR_c2450", L"{", L"pDevExt->PortName, ItemString -- 10" , L"Irp->IoStatus.Status, ItemLong -- 11" , L"ntStatus, ItemLong -- 12" , L"Irp, ItemPtr -- 13" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c2459_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 117 \"%0<%10!s!> <--WaitWakeCompletion: 0x%11!p!(0x%12!x!)\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_TRACE", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c2459_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 117 \"%0<%10!s!> <--WaitWakeCompletion: 0x%11!p!(0x%12!x!)\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_TRACE", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c2459
    #define WPP_ANNOTATE_USBPWR_c2459 WPP_ANNOTATE_USBPWR_c2459_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemPtr -- 11" , L"Arg, ItemLong -- 12" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c2459 WPP_ANNOTATE_USBPWR_c2459_FINAL("TMF:", "USBPWR.c", "USBPWR_c2459", L"{", L"pDevExt->PortName, ItemString -- 10" , L"Irp, ItemPtr -- 11" , L"ntStatus, ItemLong -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c2480_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 118 \"%0<%10!s!> -->RegisterWaitWake: %11!u!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c2480_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 118 \"%0<%10!s!> -->RegisterWaitWake: %11!u!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c2480
    #define WPP_ANNOTATE_USBPWR_c2480 WPP_ANNOTATE_USBPWR_c2480_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c2480 WPP_ANNOTATE_USBPWR_c2480_FINAL("TMF:", "USBPWR.c", "USBPWR_c2480", L"{", L"pDevExt->PortName, ItemString -- 10" , L"Cookie, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c2489_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 119 \"%0<%10!s!> <--RegisterWaitWake(%11!u!): feature disabled\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c2489_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 119 \"%0<%10!s!> <--RegisterWaitWake(%11!u!): feature disabled\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c2489
    #define WPP_ANNOTATE_USBPWR_c2489 WPP_ANNOTATE_USBPWR_c2489_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c2489 WPP_ANNOTATE_USBPWR_c2489_FINAL("TMF:", "USBPWR.c", "USBPWR_c2489", L"{", L"pDevExt->PortName, ItemString -- 10" , L"Cookie, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c2505_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 120 \"%0<%10!s!> <--RegisterWaitWake: already pending(%11!u!)\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c2505_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 120 \"%0<%10!s!> <--RegisterWaitWake: already pending(%11!u!)\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c2505
    #define WPP_ANNOTATE_USBPWR_c2505 WPP_ANNOTATE_USBPWR_c2505_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c2505 WPP_ANNOTATE_USBPWR_c2505_FINAL("TMF:", "USBPWR.c", "USBPWR_c2505", L"{", L"pDevExt->PortName, ItemString -- 10" , L"Cookie, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c2528_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 121 \"%0<%10!s!> <--RegisterWaitWake: rm lock failure(0x%11!x!)\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c2528_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 121 \"%0<%10!s!> <--RegisterWaitWake: rm lock failure(0x%11!x!)\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c2528
    #define WPP_ANNOTATE_USBPWR_c2528 WPP_ANNOTATE_USBPWR_c2528_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c2528 WPP_ANNOTATE_USBPWR_c2528_FINAL("TMF:", "USBPWR.c", "USBPWR_c2528", L"{", L"pDevExt->PortName, ItemString -- 10" , L"ntStatus, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c2555_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 122 \"%0<%10!s!> <--RegisterWaitWake: requested IRP (0x%11!p!)\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c2555_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 122 \"%0<%10!s!> <--RegisterWaitWake: requested IRP (0x%11!p!)\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c2555
    #define WPP_ANNOTATE_USBPWR_c2555 WPP_ANNOTATE_USBPWR_c2555_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemPtr -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c2555 WPP_ANNOTATE_USBPWR_c2555_FINAL("TMF:", "USBPWR.c", "USBPWR_c2555", L"{", L"pDevExt->PortName, ItemString -- 10" , L"pDevExt->WaitWakeIrp, ItemPtr -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c2584_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 123 \"%0<%10!s!> TopWaitWakeCompletion: IRP 0x%11!p! MN 0x%12!x!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c2584_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 123 \"%0<%10!s!> TopWaitWakeCompletion: IRP 0x%11!p! MN 0x%12!x!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c2584
    #define WPP_ANNOTATE_USBPWR_c2584 WPP_ANNOTATE_USBPWR_c2584_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemPtr -- 11" , L"Arg, ItemLong -- 12" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c2584 WPP_ANNOTATE_USBPWR_c2584_FINAL("TMF:", "USBPWR.c", "USBPWR_c2584", L"{", L"pDevExt->PortName, ItemString -- 10" , L"pDevExt->WaitWakeIrp, ItemPtr -- 11" , L"MinorFunction, ItemLong -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c2598_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 124 \"%0<%10!s!> TopWaitWakeCompletion failure: IRP 0x%11!p!(0x%12!x!)\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c2598_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 124 \"%0<%10!s!> TopWaitWakeCompletion failure: IRP 0x%11!p!(0x%12!x!)\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c2598
    #define WPP_ANNOTATE_USBPWR_c2598 WPP_ANNOTATE_USBPWR_c2598_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemPtr -- 11" , L"Arg, ItemLong -- 12" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c2598 WPP_ANNOTATE_USBPWR_c2598_FINAL("TMF:", "USBPWR.c", "USBPWR_c2598", L"{", L"pDevExt->PortName, ItemString -- 10" , L"pDevExt->WaitWakeIrp, ItemPtr -- 11" , L"IoStatus->Status, ItemLong -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c261_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 17 \"%0<%10!s!> PIRP: (Ce 0x%11!x!) 0x%12!p!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c261_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 17 \"%0<%10!s!> PIRP: (Ce 0x%11!x!) 0x%12!p!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c261
    #define WPP_ANNOTATE_USBPWR_c261 WPP_ANNOTATE_USBPWR_c261_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemPtr -- 12" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c261 WPP_ANNOTATE_USBPWR_c261_FINAL("TMF:", "USBPWR.c", "USBPWR_c261", L"{", L"pDevExt->PortName, ItemString -- 10" , L"nts, ItemLong -- 11" , L"Irp, ItemPtr -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c2612_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 125 \"%0<%10!s!> TopWaitWakeCompletion: device up running\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c2612_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 125 \"%0<%10!s!> TopWaitWakeCompletion: device up running\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c2612
    #define WPP_ANNOTATE_USBPWR_c2612 WPP_ANNOTATE_USBPWR_c2612_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c2612 WPP_ANNOTATE_USBPWR_c2612_FINAL("TMF:", "USBPWR.c", "USBPWR_c2612", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c2636_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 126 \"%0<%10!s!> TopWaitWakeCompletion: pwr IRP req failure 0x%11!x!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c2636_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 126 \"%0<%10!s!> TopWaitWakeCompletion: pwr IRP req failure 0x%11!x!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c2636
    #define WPP_ANNOTATE_USBPWR_c2636 WPP_ANNOTATE_USBPWR_c2636_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c2636 WPP_ANNOTATE_USBPWR_c2636_FINAL("TMF:", "USBPWR.c", "USBPWR_c2636", L"{", L"pDevExt->PortName, ItemString -- 10" , L"ntStatus, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c2666_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 127 \"%0<%10!s!> TopDeviceWakeUpCompletionRoutine: MN 0x%11!x! st 0x%12!x!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c2666_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 127 \"%0<%10!s!> TopDeviceWakeUpCompletionRoutine: MN 0x%11!x! st 0x%12!x!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c2666
    #define WPP_ANNOTATE_USBPWR_c2666 WPP_ANNOTATE_USBPWR_c2666_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemLong -- 12" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c2666 WPP_ANNOTATE_USBPWR_c2666_FINAL("TMF:", "USBPWR.c", "USBPWR_c2666", L"{", L"pDevExt->PortName, ItemString -- 10" , L"MinorFunction, ItemLong -- 11" , L"IoStatus->Status, ItemLong -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c2689_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 128 \"%0<%10!s!> CancelWaitWakeIrp(%11!u!) \" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c2689_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 128 \"%0<%10!s!> CancelWaitWakeIrp(%11!u!) \" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c2689
    #define WPP_ANNOTATE_USBPWR_c2689 WPP_ANNOTATE_USBPWR_c2689_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c2689 WPP_ANNOTATE_USBPWR_c2689_FINAL("TMF:", "USBPWR.c", "USBPWR_c2689", L"{", L"pDevExt->PortName, ItemString -- 10" , L"Cookie, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c272_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 18 \"%0<%10!s!> PIRP: (C FWD) 0x%11!p!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c272_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 18 \"%0<%10!s!> PIRP: (C FWD) 0x%11!p!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c272
    #define WPP_ANNOTATE_USBPWR_c272 WPP_ANNOTATE_USBPWR_c272_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemPtr -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c272 WPP_ANNOTATE_USBPWR_c272_FINAL("TMF:", "USBPWR.c", "USBPWR_c272", L"{", L"pDevExt->PortName, ItemString -- 10" , L"Irp, ItemPtr -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c2731_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 129 \"%0<%10!s!> WdmVersionIdx: %11!d!\" //   FLAG=(QCUSB_DBG_MASK_CONTROL | QCUSB_DBG_MASK_POWER) LEVEL=QCUSB_DBG_LEVEL_CRITICAL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c2731_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 129 \"%0<%10!s!> WdmVersionIdx: %11!d!\" //   FLAG=(QCUSB_DBG_MASK_CONTROL | QCUSB_DBG_MASK_POWER) LEVEL=QCUSB_DBG_LEVEL_CRITICAL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c2731
    #define WPP_ANNOTATE_USBPWR_c2731 WPP_ANNOTATE_USBPWR_c2731_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c2731 WPP_ANNOTATE_USBPWR_c2731_FINAL("TMF:", "USBPWR.c", "USBPWR_c2731", L"{", L"pDevExt->PortName, ItemString -- 10" , L"pDevExt->WdmVersion, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c2759_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 130 \"%0<%10!s!> -->CheckToWakeup(%11!u!) IRQL(%12!u!): IRP 0x%13!p! Susp %14!u!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_TRACE", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c2759_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 130 \"%0<%10!s!> -->CheckToWakeup(%11!u!) IRQL(%12!u!): IRP 0x%13!p! Susp %14!u!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_TRACE", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c2759
    #define WPP_ANNOTATE_USBPWR_c2759 WPP_ANNOTATE_USBPWR_c2759_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemLong -- 12" , L"Arg, ItemPtr -- 13" , L"Arg, ItemLong -- 14" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c2759 WPP_ANNOTATE_USBPWR_c2759_FINAL("TMF:", "USBPWR.c", "USBPWR_c2759", L"{", L"pDevExt->PortName, ItemString -- 10" , L"Cookie, ItemLong -- 11" , L"KeGetCurrentIrql(), ItemLong -- 12" , L"Irp, ItemPtr -- 13" , L"pDevExt->PowerSuspended, ItemLong -- 14" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c281_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 19 \"%0<%10!s!> PoCallDriver failure: IRP 0x%11!p!(0x%12!x!)\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c281_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 19 \"%0<%10!s!> PoCallDriver failure: IRP 0x%11!p!(0x%12!x!)\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c281
    #define WPP_ANNOTATE_USBPWR_c281 WPP_ANNOTATE_USBPWR_c281_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemPtr -- 11" , L"Arg, ItemLong -- 12" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c281 WPP_ANNOTATE_USBPWR_c281_FINAL("TMF:", "USBPWR.c", "USBPWR_c281", L"{", L"pDevExt->PortName, ItemString -- 10" , L"Irp, ItemPtr -- 11" , L"nts, ItemLong -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c2844_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 131 \"%0<%10!s!> <--CheckToWakeup(%11!u!): IRP 0x%12!p! Susp %13!u! hold %14!u!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_TRACE", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c2844_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 131 \"%0<%10!s!> <--CheckToWakeup(%11!u!): IRP 0x%12!p! Susp %13!u! hold %14!u!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_TRACE", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c2844
    #define WPP_ANNOTATE_USBPWR_c2844 WPP_ANNOTATE_USBPWR_c2844_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemPtr -- 12" , L"Arg, ItemLong -- 13" , L"Arg, ItemLong -- 14" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c2844 WPP_ANNOTATE_USBPWR_c2844_FINAL("TMF:", "USBPWR.c", "USBPWR_c2844", L"{", L"pDevExt->PortName, ItemString -- 10" , L"Cookie, ItemLong -- 11" , L"Irp, ItemPtr -- 12" , L"pDevExt->PowerSuspended, ItemLong -- 13" , L"holdRequest, ItemLong -- 14" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c2857_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 132 \"%0<%10!s!> -->ResumeDataThreads\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c2857_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 132 \"%0<%10!s!> -->ResumeDataThreads\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c2857
    #define WPP_ANNOTATE_USBPWR_c2857 WPP_ANNOTATE_USBPWR_c2857_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c2857 WPP_ANNOTATE_USBPWR_c2857_FINAL("TMF:", "USBPWR.c", "USBPWR_c2857", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c2866_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 133 \"%0<%10!s!> <--ResumeDataThreads\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c2866_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 133 \"%0<%10!s!> <--ResumeDataThreads\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c2866
    #define WPP_ANNOTATE_USBPWR_c2866 WPP_ANNOTATE_USBPWR_c2866_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c2866 WPP_ANNOTATE_USBPWR_c2866_FINAL("TMF:", "USBPWR.c", "USBPWR_c2866", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c2887_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 134 \"%0<%10!s!> -->RegisterWmiPowerGuids\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_TRACE", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c2887_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 134 \"%0<%10!s!> -->RegisterWmiPowerGuids\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_TRACE", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c2887
    #define WPP_ANNOTATE_USBPWR_c2887 WPP_ANNOTATE_USBPWR_c2887_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c2887 WPP_ANNOTATE_USBPWR_c2887_FINAL("TMF:", "USBPWR.c", "USBPWR_c2887", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c2897_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 135 \"%0<%10!s!> RegisterWmiPowerGuids: dup req\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c2897_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 135 \"%0<%10!s!> RegisterWmiPowerGuids: dup req\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c2897
    #define WPP_ANNOTATE_USBPWR_c2897 WPP_ANNOTATE_USBPWR_c2897_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c2897 WPP_ANNOTATE_USBPWR_c2897_FINAL("TMF:", "USBPWR.c", "USBPWR_c2897", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c2926_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 136 \"%0<%10!s!> <--RegisterWmiPowerGuids ST 0x%11!x!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_TRACE", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c2926_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 136 \"%0<%10!s!> <--RegisterWmiPowerGuids ST 0x%11!x!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_TRACE", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c2926
    #define WPP_ANNOTATE_USBPWR_c2926 WPP_ANNOTATE_USBPWR_c2926_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c2926 WPP_ANNOTATE_USBPWR_c2926_FINAL("TMF:", "USBPWR.c", "USBPWR_c2926", L"{", L"pDevExt->PortName, ItemString -- 10" , L"ntStatus, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c2936_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 137 \"%0<%10!s!> -->DeregisterWmiPowerGuids\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_TRACE", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c2936_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 137 \"%0<%10!s!> -->DeregisterWmiPowerGuids\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_TRACE", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c2936
    #define WPP_ANNOTATE_USBPWR_c2936 WPP_ANNOTATE_USBPWR_c2936_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c2936 WPP_ANNOTATE_USBPWR_c2936_FINAL("TMF:", "USBPWR.c", "USBPWR_c2936", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c2949_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 138 \"%0<%10!s!> <--DeregisterWmiPowerGuids\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_TRACE", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c2949_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 138 \"%0<%10!s!> <--DeregisterWmiPowerGuids\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_TRACE", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c2949
    #define WPP_ANNOTATE_USBPWR_c2949 WPP_ANNOTATE_USBPWR_c2949_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c2949 WPP_ANNOTATE_USBPWR_c2949_FINAL("TMF:", "USBPWR.c", "USBPWR_c2949", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c2966_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 139 \"%0<%10!s!> -->ProcessSystemControlIrps IRP 0x%11!p!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_TRACE", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c2966_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 139 \"%0<%10!s!> -->ProcessSystemControlIrps IRP 0x%11!p!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_TRACE", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c2966
    #define WPP_ANNOTATE_USBPWR_c2966 WPP_ANNOTATE_USBPWR_c2966_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemPtr -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c2966 WPP_ANNOTATE_USBPWR_c2966_FINAL("TMF:", "USBPWR.c", "USBPWR_c2966", L"{", L"pDevExt->PortName, ItemString -- 10" , L"Irp, ItemPtr -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c2982_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 140 \"%0<%10!s!> ProcessSystemControlIrps: WmiSystemControl IRP 0x%11!p! ST 0x%12!x! (0x%13!x!)\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c2982_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 140 \"%0<%10!s!> ProcessSystemControlIrps: WmiSystemControl IRP 0x%11!p! ST 0x%12!x! (0x%13!x!)\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c2982
    #define WPP_ANNOTATE_USBPWR_c2982 WPP_ANNOTATE_USBPWR_c2982_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemPtr -- 11" , L"Arg, ItemLong -- 12" , L"Arg, ItemLong -- 13" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c2982 WPP_ANNOTATE_USBPWR_c2982_FINAL("TMF:", "USBPWR.c", "USBPWR_c2982", L"{", L"pDevExt->PortName, ItemString -- 10" , L"Irp, ItemPtr -- 11" , L"ntStatus, ItemLong -- 12" , L"irpDisposition, ItemLong -- 13" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c2998_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 141 \"%0<%10!s!> CIRP (C 0x%11!x!) 0x%12!p!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c2998_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 141 \"%0<%10!s!> CIRP (C 0x%11!x!) 0x%12!p!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c2998
    #define WPP_ANNOTATE_USBPWR_c2998 WPP_ANNOTATE_USBPWR_c2998_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemPtr -- 12" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c2998 WPP_ANNOTATE_USBPWR_c2998_FINAL("TMF:", "USBPWR.c", "USBPWR_c2998", L"{", L"pDevExt->PortName, ItemString -- 10" , L"Irp->IoStatus.Status, ItemLong -- 11" , L"Irp, ItemPtr -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c3021_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 142 \"%0<%10!s!> <--ProcessSystemControlIrps IRP 0x%11!p! (0x%12!x!)\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_TRACE", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c3021_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 142 \"%0<%10!s!> <--ProcessSystemControlIrps IRP 0x%11!p! (0x%12!x!)\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_TRACE", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c3021
    #define WPP_ANNOTATE_USBPWR_c3021 WPP_ANNOTATE_USBPWR_c3021_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemPtr -- 11" , L"Arg, ItemLong -- 12" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c3021 WPP_ANNOTATE_USBPWR_c3021_FINAL("TMF:", "USBPWR.c", "USBPWR_c3021", L"{", L"pDevExt->PortName, ItemString -- 10" , L"Irp, ItemPtr -- 11" , L"ntStatus, ItemLong -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c3042_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 143 \"%0<%10!s!> -->PMQueryWmiRegInfo\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_TRACE", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c3042_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 143 \"%0<%10!s!> -->PMQueryWmiRegInfo\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_TRACE", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c3042
    #define WPP_ANNOTATE_USBPWR_c3042 WPP_ANNOTATE_USBPWR_c3042_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c3042 WPP_ANNOTATE_USBPWR_c3042_FINAL("TMF:", "USBPWR.c", "USBPWR_c3042", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c3053_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 144 \"%0<%10!s!> <--PMQueryWmiRegInfo\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_TRACE", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c3053_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 144 \"%0<%10!s!> <--PMQueryWmiRegInfo\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_TRACE", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c3053
    #define WPP_ANNOTATE_USBPWR_c3053 WPP_ANNOTATE_USBPWR_c3053_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c3053 WPP_ANNOTATE_USBPWR_c3053_FINAL("TMF:", "USBPWR.c", "USBPWR_c3053", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c3081_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 145 \"%0<%10!s!> -->PMQueryWmiDataBlock: IRP 0x%11!p! GIDX %12!u! InsIdx %13!u! InsCnt %14!u!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_TRACE", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c3081_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 145 \"%0<%10!s!> -->PMQueryWmiDataBlock: IRP 0x%11!p! GIDX %12!u! InsIdx %13!u! InsCnt %14!u!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_TRACE", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c3081
    #define WPP_ANNOTATE_USBPWR_c3081 WPP_ANNOTATE_USBPWR_c3081_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemPtr -- 11" , L"Arg, ItemLong -- 12" , L"Arg, ItemLong -- 13" , L"Arg, ItemLong -- 14" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c3081 WPP_ANNOTATE_USBPWR_c3081_FINAL("TMF:", "USBPWR.c", "USBPWR_c3081", L"{", L"pDevExt->PortName, ItemString -- 10" , L"Irp, ItemPtr -- 11" , L"GuidIndex, ItemLong -- 12" , L"InstanceIndex, ItemLong -- 13" , L"InstanceCount, ItemLong -- 14" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c310_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 20 \"%0<%10!s!> PIRP: (Cdp) 0x%11!p!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c310_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 20 \"%0<%10!s!> PIRP: (Cdp) 0x%11!p!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c310
    #define WPP_ANNOTATE_USBPWR_c310 WPP_ANNOTATE_USBPWR_c310_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemPtr -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c310 WPP_ANNOTATE_USBPWR_c310_FINAL("TMF:", "USBPWR.c", "USBPWR_c310", L"{", L"pDevExt->PortName, ItemString -- 10" , L"Irp, ItemPtr -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c3114_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 146 \"%0<%10!s!> PMQueryWmiDataBlock: IRP 0x%11!p! buf too small %12!u!B\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c3114_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 146 \"%0<%10!s!> PMQueryWmiDataBlock: IRP 0x%11!p! buf too small %12!u!B\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c3114
    #define WPP_ANNOTATE_USBPWR_c3114 WPP_ANNOTATE_USBPWR_c3114_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemPtr -- 11" , L"Arg, ItemLong -- 12" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c3114 WPP_ANNOTATE_USBPWR_c3114_FINAL("TMF:", "USBPWR.c", "USBPWR_c3114", L"{", L"pDevExt->PortName, ItemString -- 10" , L"Irp, ItemPtr -- 11" , L"BufferAvail, ItemLong -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c3125_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 147 \"%0<%10!s!> PMQueryWmiDataBlock: IRP 0x%11!p! WaitWakeEnabled %12!u!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c3125_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 147 \"%0<%10!s!> PMQueryWmiDataBlock: IRP 0x%11!p! WaitWakeEnabled %12!u!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c3125
    #define WPP_ANNOTATE_USBPWR_c3125 WPP_ANNOTATE_USBPWR_c3125_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemPtr -- 11" , L"Arg, ItemLong -- 12" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c3125 WPP_ANNOTATE_USBPWR_c3125_FINAL("TMF:", "USBPWR.c", "USBPWR_c3125", L"{", L"pDevExt->PortName, ItemString -- 10" , L"Irp, ItemPtr -- 11" , L"pDevExt->WaitWakeEnabled, ItemLong -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c3141_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 148 \"%0<%10!s!> CIRP (Cw0 0x%11!x!/0x%12!x!) 0x%13!p!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c3141_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 148 \"%0<%10!s!> CIRP (Cw0 0x%11!x!/0x%12!x!) 0x%13!p!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c3141
    #define WPP_ANNOTATE_USBPWR_c3141 WPP_ANNOTATE_USBPWR_c3141_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemLong -- 12" , L"Arg, ItemPtr -- 13" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c3141 WPP_ANNOTATE_USBPWR_c3141_FINAL("TMF:", "USBPWR.c", "USBPWR_c3141", L"{", L"pDevExt->PortName, ItemString -- 10" , L"Irp->IoStatus.Status, ItemLong -- 11" , L"ntStatus, ItemLong -- 12" , L"Irp, ItemPtr -- 13" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c3157_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 149 \"%0<%10!s!> <--PMQueryWmiDataBlock: IRP 0x%11!p!(ST 0x%12!x!) GIDX %13!u! InsIdx %14!u! InsCnt %15!u!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_TRACE", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c3157_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 149 \"%0<%10!s!> <--PMQueryWmiDataBlock: IRP 0x%11!p!(ST 0x%12!x!) GIDX %13!u! InsIdx %14!u! InsCnt %15!u!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_TRACE", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c3157
    #define WPP_ANNOTATE_USBPWR_c3157 WPP_ANNOTATE_USBPWR_c3157_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemPtr -- 11" , L"Arg, ItemLong -- 12" , L"Arg, ItemLong -- 13" , L"Arg, ItemLong -- 14" , L"Arg, ItemLong -- 15" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c3157 WPP_ANNOTATE_USBPWR_c3157_FINAL("TMF:", "USBPWR.c", "USBPWR_c3157", L"{", L"pDevExt->PortName, ItemString -- 10" , L"Irp, ItemPtr -- 11" , L"ntStatus, ItemLong -- 12" , L"GuidIndex, ItemLong -- 13" , L"InstanceIndex, ItemLong -- 14" , L"InstanceCount, ItemLong -- 15" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c3183_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 150 \"%0<%10!s!> -->PMSetWmiDataBlock: IRP 0x%11!p! GIDX %12!u! InsIdx %13!u!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_TRACE", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c3183_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 150 \"%0<%10!s!> -->PMSetWmiDataBlock: IRP 0x%11!p! GIDX %12!u! InsIdx %13!u!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_TRACE", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c3183
    #define WPP_ANNOTATE_USBPWR_c3183 WPP_ANNOTATE_USBPWR_c3183_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemPtr -- 11" , L"Arg, ItemLong -- 12" , L"Arg, ItemLong -- 13" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c3183 WPP_ANNOTATE_USBPWR_c3183_FINAL("TMF:", "USBPWR.c", "USBPWR_c3183", L"{", L"pDevExt->PortName, ItemString -- 10" , L"Irp, ItemPtr -- 11" , L"GuidIndex, ItemLong -- 12" , L"InstanceIndex, ItemLong -- 13" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c3224_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 151 \"%0<%10!s!> CIRP (Cw1 0x%11!x!/0x%12!x!) 0x%13!p!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c3224_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 151 \"%0<%10!s!> CIRP (Cw1 0x%11!x!/0x%12!x!) 0x%13!p!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c3224
    #define WPP_ANNOTATE_USBPWR_c3224 WPP_ANNOTATE_USBPWR_c3224_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemLong -- 12" , L"Arg, ItemPtr -- 13" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c3224 WPP_ANNOTATE_USBPWR_c3224_FINAL("TMF:", "USBPWR.c", "USBPWR_c3224", L"{", L"pDevExt->PortName, ItemString -- 10" , L"Irp->IoStatus.Status, ItemLong -- 11" , L"ntStatus, ItemLong -- 12" , L"Irp, ItemPtr -- 13" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c3240_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 152 \"%0<%10!s!> <--PMSetWmiDataBlock: IRP 0x%11!p! (ST 0x%12!x!) GIDX %13!u! InsIdx %14!u!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_TRACE", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c3240_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 152 \"%0<%10!s!> <--PMSetWmiDataBlock: IRP 0x%11!p! (ST 0x%12!x!) GIDX %13!u! InsIdx %14!u!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_TRACE", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c3240
    #define WPP_ANNOTATE_USBPWR_c3240 WPP_ANNOTATE_USBPWR_c3240_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemPtr -- 11" , L"Arg, ItemLong -- 12" , L"Arg, ItemLong -- 13" , L"Arg, ItemLong -- 14" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c3240 WPP_ANNOTATE_USBPWR_c3240_FINAL("TMF:", "USBPWR.c", "USBPWR_c3240", L"{", L"pDevExt->PortName, ItemString -- 10" , L"Irp, ItemPtr -- 11" , L"ntStatus, ItemLong -- 12" , L"GuidIndex, ItemLong -- 13" , L"InstanceIndex, ItemLong -- 14" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c325_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 21 \"%0<%10!s!> PIRP (FWDi 0x%11!x!) 0x%12!p!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c325_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 21 \"%0<%10!s!> PIRP (FWDi 0x%11!x!) 0x%12!p!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c325
    #define WPP_ANNOTATE_USBPWR_c325 WPP_ANNOTATE_USBPWR_c325_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemPtr -- 12" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c325 WPP_ANNOTATE_USBPWR_c325_FINAL("TMF:", "USBPWR.c", "USBPWR_c325", L"{", L"pDevExt->PortName, ItemString -- 10" , L"*pNtStatus, ItemLong -- 11" , L"Irp, ItemPtr -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c3269_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 153 \"%0<%10!s!> -->PMSetWmiDataItem: IRP 0x%11!p! GIDX %12!u! InsIdx %13!u! ItmId %14!u!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_TRACE", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c3269_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 153 \"%0<%10!s!> -->PMSetWmiDataItem: IRP 0x%11!p! GIDX %12!u! InsIdx %13!u! ItmId %14!u!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_TRACE", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c3269
    #define WPP_ANNOTATE_USBPWR_c3269 WPP_ANNOTATE_USBPWR_c3269_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemPtr -- 11" , L"Arg, ItemLong -- 12" , L"Arg, ItemLong -- 13" , L"Arg, ItemLong -- 14" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c3269 WPP_ANNOTATE_USBPWR_c3269_FINAL("TMF:", "USBPWR.c", "USBPWR_c3269", L"{", L"pDevExt->PortName, ItemString -- 10" , L"Irp, ItemPtr -- 11" , L"GuidIndex, ItemLong -- 12" , L"InstanceIndex, ItemLong -- 13" , L"DataItemId, ItemLong -- 14" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c3305_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 154 \"%0<%10!s!> CIRP (Cw2 0x%11!x!/0x%12!x!) 0x%13!p!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c3305_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 154 \"%0<%10!s!> CIRP (Cw2 0x%11!x!/0x%12!x!) 0x%13!p!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c3305
    #define WPP_ANNOTATE_USBPWR_c3305 WPP_ANNOTATE_USBPWR_c3305_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemLong -- 12" , L"Arg, ItemPtr -- 13" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c3305 WPP_ANNOTATE_USBPWR_c3305_FINAL("TMF:", "USBPWR.c", "USBPWR_c3305", L"{", L"pDevExt->PortName, ItemString -- 10" , L"Irp->IoStatus.Status, ItemLong -- 11" , L"ntStatus, ItemLong -- 12" , L"Irp, ItemPtr -- 13" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c3321_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 155 \"%0<%10!s!> <--PMSetWmiDataItem: IRP 0x%11!p! (ST 0x%12!x!) GIDX %13!u! InsIdx %14!u! ItmId %15!u!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_TRACE", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c3321_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 155 \"%0<%10!s!> <--PMSetWmiDataItem: IRP 0x%11!p! (ST 0x%12!x!) GIDX %13!u! InsIdx %14!u! ItmId %15!u!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_TRACE", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c3321
    #define WPP_ANNOTATE_USBPWR_c3321 WPP_ANNOTATE_USBPWR_c3321_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemPtr -- 11" , L"Arg, ItemLong -- 12" , L"Arg, ItemLong -- 13" , L"Arg, ItemLong -- 14" , L"Arg, ItemLong -- 15" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c3321 WPP_ANNOTATE_USBPWR_c3321_FINAL("TMF:", "USBPWR.c", "USBPWR_c3321", L"{", L"pDevExt->PortName, ItemString -- 10" , L"Irp, ItemPtr -- 11" , L"ntStatus, ItemLong -- 12" , L"GuidIndex, ItemLong -- 13" , L"InstanceIndex, ItemLong -- 14" , L"DataItemId, ItemLong -- 15" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c3338_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 156 \"%0<%10!s!> -->SetPMState: %11!u!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_TRACE", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c3338_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 156 \"%0<%10!s!> -->SetPMState: %11!u!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_TRACE", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c3338
    #define WPP_ANNOTATE_USBPWR_c3338 WPP_ANNOTATE_USBPWR_c3338_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c3338 WPP_ANNOTATE_USBPWR_c3338_FINAL("TMF:", "USBPWR.c", "USBPWR_c3338", L"{", L"pDevExt->PortName, ItemString -- 10" , L"IsEnabled, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c3381_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 157 \"%0<%10!s!> <--SetPMState: %11!u! (ST 0x%12!x!)\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_TRACE", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c3381_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 157 \"%0<%10!s!> <--SetPMState: %11!u! (ST 0x%12!x!)\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_TRACE", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c3381
    #define WPP_ANNOTATE_USBPWR_c3381 WPP_ANNOTATE_USBPWR_c3381_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemLong -- 12" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c3381 WPP_ANNOTATE_USBPWR_c3381_FINAL("TMF:", "USBPWR.c", "USBPWR_c3381", L"{", L"pDevExt->PortName, ItemString -- 10" , L"IsEnabled, ItemLong -- 11" , L"ntStatus, ItemLong -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c3399_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 158 \"%0<%10!s!> -->SetWaitWakeState: %11!u!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_TRACE", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c3399_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 158 \"%0<%10!s!> -->SetWaitWakeState: %11!u!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_TRACE", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c3399
    #define WPP_ANNOTATE_USBPWR_c3399 WPP_ANNOTATE_USBPWR_c3399_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c3399 WPP_ANNOTATE_USBPWR_c3399_FINAL("TMF:", "USBPWR.c", "USBPWR_c3399", L"{", L"pDevExt->PortName, ItemString -- 10" , L"IsEnabled, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c3438_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 159 \"%0<%10!s!> <--SetWaitWakeState: %11!u! (ST 0x%12!x!)\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_TRACE", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c3438_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 159 \"%0<%10!s!> <--SetWaitWakeState: %11!u! (ST 0x%12!x!)\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_TRACE", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c3438
    #define WPP_ANNOTATE_USBPWR_c3438 WPP_ANNOTATE_USBPWR_c3438_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemLong -- 12" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c3438 WPP_ANNOTATE_USBPWR_c3438_FINAL("TMF:", "USBPWR.c", "USBPWR_c3438", L"{", L"pDevExt->PortName, ItemString -- 10" , L"IsEnabled, ItemLong -- 11" , L"ntStatus, ItemLong -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c3460_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 160 \"%0<%10!s!> VerifyDeviceCapabilities: S0 maps to D%11!u!, use D0\" //   FLAG=QCUSB_DBG_MASK_CONTROL LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c3460_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 160 \"%0<%10!s!> VerifyDeviceCapabilities: S0 maps to D%11!u!, use D0\" //   FLAG=QCUSB_DBG_MASK_CONTROL LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c3460
    #define WPP_ANNOTATE_USBPWR_c3460 WPP_ANNOTATE_USBPWR_c3460_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c3460 WPP_ANNOTATE_USBPWR_c3460_FINAL("TMF:", "USBPWR.c", "USBPWR_c3460", L"{", L"pDevExt->PortName, ItemString -- 10" , L"pDevExt->DeviceCapabilities.DeviceState[PowerSystemWorking]-1, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c3474_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 161 \"%0<%10!s!> VerifyDeviceCapabilities: S1 maps to D%11!u!, use D3\" //   FLAG=QCUSB_DBG_MASK_CONTROL LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c3474_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 161 \"%0<%10!s!> VerifyDeviceCapabilities: S1 maps to D%11!u!, use D3\" //   FLAG=QCUSB_DBG_MASK_CONTROL LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c3474
    #define WPP_ANNOTATE_USBPWR_c3474 WPP_ANNOTATE_USBPWR_c3474_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c3474 WPP_ANNOTATE_USBPWR_c3474_FINAL("TMF:", "USBPWR.c", "USBPWR_c3474", L"{", L"pDevExt->PortName, ItemString -- 10" , L"pDevExt->DeviceCapabilities.DeviceState[PowerSystemSleeping1]-1, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c3488_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 162 \"%0<%10!s!> VerifyDeviceCapabilities: S2 maps to D%11!u!, use D3\" //   FLAG=QCUSB_DBG_MASK_CONTROL LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c3488_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 162 \"%0<%10!s!> VerifyDeviceCapabilities: S2 maps to D%11!u!, use D3\" //   FLAG=QCUSB_DBG_MASK_CONTROL LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c3488
    #define WPP_ANNOTATE_USBPWR_c3488 WPP_ANNOTATE_USBPWR_c3488_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c3488 WPP_ANNOTATE_USBPWR_c3488_FINAL("TMF:", "USBPWR.c", "USBPWR_c3488", L"{", L"pDevExt->PortName, ItemString -- 10" , L"pDevExt->DeviceCapabilities.DeviceState[PowerSystemSleeping2]-1, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c3502_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 163 \"%0<%10!s!> VerifyDeviceCapabilities: S3 maps to D%11!u!, use D3\" //   FLAG=QCUSB_DBG_MASK_CONTROL LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c3502_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 163 \"%0<%10!s!> VerifyDeviceCapabilities: S3 maps to D%11!u!, use D3\" //   FLAG=QCUSB_DBG_MASK_CONTROL LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c3502
    #define WPP_ANNOTATE_USBPWR_c3502 WPP_ANNOTATE_USBPWR_c3502_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c3502 WPP_ANNOTATE_USBPWR_c3502_FINAL("TMF:", "USBPWR.c", "USBPWR_c3502", L"{", L"pDevExt->PortName, ItemString -- 10" , L"pDevExt->DeviceCapabilities.DeviceState[PowerSystemSleeping3]-1, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c352_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 22 \"%0<%10!s!> QuerySystemPowerState: dev in service, reject.\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c352_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 22 \"%0<%10!s!> QuerySystemPowerState: dev in service, reject.\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c352
    #define WPP_ANNOTATE_USBPWR_c352 WPP_ANNOTATE_USBPWR_c352_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c352 WPP_ANNOTATE_USBPWR_c352_FINAL("TMF:", "USBPWR.c", "USBPWR_c352", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c3535_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 164 \"%0<%10!s!> DSP: PWR IRP 0x%11!p! to front-A\" //   FLAG=QCUSB_DBG_MASK_POWER LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c3535_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 164 \"%0<%10!s!> DSP: PWR IRP 0x%11!p! to front-A\" //   FLAG=QCUSB_DBG_MASK_POWER LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c3535
    #define WPP_ANNOTATE_USBPWR_c3535 WPP_ANNOTATE_USBPWR_c3535_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemPtr -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c3535 WPP_ANNOTATE_USBPWR_c3535_FINAL("TMF:", "USBPWR.c", "USBPWR_c3535", L"{", L"pDevExt->PortName, ItemString -- 10" , L"Irp, ItemPtr -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c3558_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 165 \"%0<%10!s!> DSP: PWR IRP 0x%11!p! before 0x%12!x! CNT %13!d!\" //   FLAG=QCUSB_DBG_MASK_POWER LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c3558_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 165 \"%0<%10!s!> DSP: PWR IRP 0x%11!p! before 0x%12!x! CNT %13!d!\" //   FLAG=QCUSB_DBG_MASK_POWER LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c3558
    #define WPP_ANNOTATE_USBPWR_c3558 WPP_ANNOTATE_USBPWR_c3558_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemPtr -- 11" , L"Arg, ItemLong -- 12" , L"Arg, ItemLong -- 13" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c3558 WPP_ANNOTATE_USBPWR_c3558_FINAL("TMF:", "USBPWR.c", "USBPWR_c3558", L"{", L"pDevExt->PortName, ItemString -- 10" , L"pIrp, ItemPtr -- 11" , L"irpStack->MajorFunction, ItemLong -- 12" , L"cnt, ItemLong -- 13" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c3571_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 166 \"%0<%10!s!> DSP: existing PWR IRP 0x%11!p![%12!x!,%13!x!]-%14!d!\" //   FLAG=QCUSB_DBG_MASK_POWER LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c3571_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 166 \"%0<%10!s!> DSP: existing PWR IRP 0x%11!p![%12!x!,%13!x!]-%14!d!\" //   FLAG=QCUSB_DBG_MASK_POWER LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c3571
    #define WPP_ANNOTATE_USBPWR_c3571 WPP_ANNOTATE_USBPWR_c3571_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemPtr -- 11" , L"Arg, ItemLong -- 12" , L"Arg, ItemLong -- 13" , L"Arg, ItemLong -- 14" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c3571 WPP_ANNOTATE_USBPWR_c3571_FINAL("TMF:", "USBPWR.c", "USBPWR_c3571", L"{", L"pDevExt->PortName, ItemString -- 10" , L"pIrp, ItemPtr -- 11" , L"irpStack->MajorFunction, ItemLong -- 12" , L"irpStack->MinorFunction, ItemLong -- 13" , L"cnt, ItemLong -- 14" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c3585_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 167 \"%0<%10!s!> DSP: PWR IRP 0x%11!p! to front-B CNT %12!d!\" //   FLAG=QCUSB_DBG_MASK_POWER LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c3585_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 167 \"%0<%10!s!> DSP: PWR IRP 0x%11!p! to front-B CNT %12!d!\" //   FLAG=QCUSB_DBG_MASK_POWER LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c3585
    #define WPP_ANNOTATE_USBPWR_c3585 WPP_ANNOTATE_USBPWR_c3585_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemPtr -- 11" , L"Arg, ItemLong -- 12" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c3585 WPP_ANNOTATE_USBPWR_c3585_FINAL("TMF:", "USBPWR.c", "USBPWR_c3585", L"{", L"pDevExt->PortName, ItemString -- 10" , L"Irp, ItemPtr -- 11" , L"cnt, ItemLong -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c3619_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 168 \"%0<%10!s!> -->_StartDeviceMonitor: 0x%11!x!\" //   FLAG=QCUSB_DBG_MASK_POWER LEVEL=QCUSB_DBG_LEVEL_TRACE", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c3619_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 168 \"%0<%10!s!> -->_StartDeviceMonitor: 0x%11!x!\" //   FLAG=QCUSB_DBG_MASK_POWER LEVEL=QCUSB_DBG_LEVEL_TRACE", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c3619
    #define WPP_ANNOTATE_USBPWR_c3619 WPP_ANNOTATE_USBPWR_c3619_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c3619 WPP_ANNOTATE_USBPWR_c3619_FINAL("TMF:", "USBPWR.c", "USBPWR_c3619", L"{", L"pDevExt->PortName, ItemString -- 10" , L"pDevExt->ExWdmMonitorStarted, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c3628_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 169 \"%0<%10!s!> _StartDeviceMonitor error: dup\" //   FLAG=QCUSB_DBG_MASK_POWER LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c3628_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 169 \"%0<%10!s!> _StartDeviceMonitor error: dup\" //   FLAG=QCUSB_DBG_MASK_POWER LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c3628
    #define WPP_ANNOTATE_USBPWR_c3628 WPP_ANNOTATE_USBPWR_c3628_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c3628 WPP_ANNOTATE_USBPWR_c3628_FINAL("TMF:", "USBPWR.c", "USBPWR_c3628", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c3651_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 170 \"%0<%10!s!> _StartDeviceMonitor error: 0x%11!x! 0x%12!p!\" //   FLAG=QCUSB_DBG_MASK_POWER LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c3651_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 170 \"%0<%10!s!> _StartDeviceMonitor error: 0x%11!x! 0x%12!p!\" //   FLAG=QCUSB_DBG_MASK_POWER LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c3651
    #define WPP_ANNOTATE_USBPWR_c3651 WPP_ANNOTATE_USBPWR_c3651_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemPtr -- 12" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c3651 WPP_ANNOTATE_USBPWR_c3651_FINAL("TMF:", "USBPWR.c", "USBPWR_c3651", L"{", L"pDevExt->PortName, ItemString -- 10" , L"ntStatus, ItemLong -- 11" , L"pDevExt->ExWdmIfNotificationEntry, ItemPtr -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c3664_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 171 \"%0<%10!s!> <--_StartDeviceMonitor: 0x%11!x! 0x%12!p!\" //   FLAG=QCUSB_DBG_MASK_POWER LEVEL=QCUSB_DBG_LEVEL_TRACE", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c3664_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 171 \"%0<%10!s!> <--_StartDeviceMonitor: 0x%11!x! 0x%12!p!\" //   FLAG=QCUSB_DBG_MASK_POWER LEVEL=QCUSB_DBG_LEVEL_TRACE", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c3664
    #define WPP_ANNOTATE_USBPWR_c3664 WPP_ANNOTATE_USBPWR_c3664_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemPtr -- 12" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c3664 WPP_ANNOTATE_USBPWR_c3664_FINAL("TMF:", "USBPWR.c", "USBPWR_c3664", L"{", L"pDevExt->PortName, ItemString -- 10" , L"pDevExt->ExWdmMonitorStarted, ItemLong -- 11" , L"pDevExt->ExWdmIfNotificationEntry, ItemPtr -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c3676_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 172 \"%0<%10!s!> _StopDeviceMonitor error: dup\" //   FLAG=QCUSB_DBG_MASK_POWER LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c3676_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 172 \"%0<%10!s!> _StopDeviceMonitor error: dup\" //   FLAG=QCUSB_DBG_MASK_POWER LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c3676
    #define WPP_ANNOTATE_USBPWR_c3676 WPP_ANNOTATE_USBPWR_c3676_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c3676 WPP_ANNOTATE_USBPWR_c3676_FINAL("TMF:", "USBPWR.c", "USBPWR_c3676", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c3714_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 173 \"%0<%10!s!> _DeviceInterfaceChange: wrong IF\" //   FLAG=QCUSB_DBG_MASK_POWER LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c3714_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 173 \"%0<%10!s!> _DeviceInterfaceChange: wrong IF\" //   FLAG=QCUSB_DBG_MASK_POWER LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c3714
    #define WPP_ANNOTATE_USBPWR_c3714 WPP_ANNOTATE_USBPWR_c3714_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c3714 WPP_ANNOTATE_USBPWR_c3714_FINAL("TMF:", "USBPWR.c", "USBPWR_c3714", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c3726_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 174 \"%0<%10!s!> _DeviceInterfaceChange: ARRIVAL\" //   FLAG=QCUSB_DBG_MASK_POWER LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c3726_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 174 \"%0<%10!s!> _DeviceInterfaceChange: ARRIVAL\" //   FLAG=QCUSB_DBG_MASK_POWER LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c3726
    #define WPP_ANNOTATE_USBPWR_c3726 WPP_ANNOTATE_USBPWR_c3726_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c3726 WPP_ANNOTATE_USBPWR_c3726_FINAL("TMF:", "USBPWR.c", "USBPWR_c3726", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c3735_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 175 \"%0<%10!s!> _DeviceInterfaceChange: err - DUP ARRIVAL\" //   FLAG=QCUSB_DBG_MASK_POWER LEVEL=QCUSB_DBG_LEVEL_CRITICAL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c3735_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 175 \"%0<%10!s!> _DeviceInterfaceChange: err - DUP ARRIVAL\" //   FLAG=QCUSB_DBG_MASK_POWER LEVEL=QCUSB_DBG_LEVEL_CRITICAL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c3735
    #define WPP_ANNOTATE_USBPWR_c3735 WPP_ANNOTATE_USBPWR_c3735_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c3735 WPP_ANNOTATE_USBPWR_c3735_FINAL("TMF:", "USBPWR.c", "USBPWR_c3735", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c3757_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 176 \"%0<%10!s!> _DeviceInterfaceChange: NO_MEM\" //   FLAG=QCUSB_DBG_MASK_POWER LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c3757_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 176 \"%0<%10!s!> _DeviceInterfaceChange: NO_MEM\" //   FLAG=QCUSB_DBG_MASK_POWER LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c3757
    #define WPP_ANNOTATE_USBPWR_c3757 WPP_ANNOTATE_USBPWR_c3757_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c3757 WPP_ANNOTATE_USBPWR_c3757_FINAL("TMF:", "USBPWR.c", "USBPWR_c3757", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c3773_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 177 \"%0<%10!s!> _DeviceInterfaceChange: REMOVAL\" //   FLAG=QCUSB_DBG_MASK_POWER LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c3773_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 177 \"%0<%10!s!> _DeviceInterfaceChange: REMOVAL\" //   FLAG=QCUSB_DBG_MASK_POWER LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c3773
    #define WPP_ANNOTATE_USBPWR_c3773 WPP_ANNOTATE_USBPWR_c3773_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c3773 WPP_ANNOTATE_USBPWR_c3773_FINAL("TMF:", "USBPWR.c", "USBPWR_c3773", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c3794_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 178 \"%0<%10!s!> -->_DeviceChange\" //   FLAG=QCUSB_DBG_MASK_POWER LEVEL=QCUSB_DBG_LEVEL_TRACE", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c3794_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 178 \"%0<%10!s!> -->_DeviceChange\" //   FLAG=QCUSB_DBG_MASK_POWER LEVEL=QCUSB_DBG_LEVEL_TRACE", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c3794
    #define WPP_ANNOTATE_USBPWR_c3794 WPP_ANNOTATE_USBPWR_c3794_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c3794 WPP_ANNOTATE_USBPWR_c3794_FINAL("TMF:", "USBPWR.c", "USBPWR_c3794", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c3809_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 179 \"%0<%10!s!> _DeviceChange: EX_WDM_QUERY_REMOVE\" //   FLAG=QCUSB_DBG_MASK_POWER LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c3809_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 179 \"%0<%10!s!> _DeviceChange: EX_WDM_QUERY_REMOVE\" //   FLAG=QCUSB_DBG_MASK_POWER LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c3809
    #define WPP_ANNOTATE_USBPWR_c3809 WPP_ANNOTATE_USBPWR_c3809_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c3809 WPP_ANNOTATE_USBPWR_c3809_FINAL("TMF:", "USBPWR.c", "USBPWR_c3809", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c3819_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 180 \"%0<%10!s!> _DeviceChange: err - wrong file obj 0x%11!p!/0x%12!p!\" //   FLAG=QCUSB_DBG_MASK_POWER LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c3819_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 180 \"%0<%10!s!> _DeviceChange: err - wrong file obj 0x%11!p!/0x%12!p!\" //   FLAG=QCUSB_DBG_MASK_POWER LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c3819
    #define WPP_ANNOTATE_USBPWR_c3819 WPP_ANNOTATE_USBPWR_c3819_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemPtr -- 11" , L"Arg, ItemPtr -- 12" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c3819 WPP_ANNOTATE_USBPWR_c3819_FINAL("TMF:", "USBPWR.c", "USBPWR_c3819", L"{", L"pDevExt->PortName, ItemString -- 10" , L"removalNotification->FileObject, ItemPtr -- 11" , L"pDevExt->ExFileObject, ItemPtr -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c3832_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 181 \"%0<%10!s!> _DeviceChange: EX_WDM_REMOVE_COMPLETE\" //   FLAG=QCUSB_DBG_MASK_POWER LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c3832_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 181 \"%0<%10!s!> _DeviceChange: EX_WDM_REMOVE_COMPLETE\" //   FLAG=QCUSB_DBG_MASK_POWER LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c3832
    #define WPP_ANNOTATE_USBPWR_c3832 WPP_ANNOTATE_USBPWR_c3832_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c3832 WPP_ANNOTATE_USBPWR_c3832_FINAL("TMF:", "USBPWR.c", "USBPWR_c3832", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c3845_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 182 \"%0<%10!s!> _DeviceChange: EX_WDM_REMOVE_CANCELLED\" //   FLAG=QCUSB_DBG_MASK_POWER LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c3845_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 182 \"%0<%10!s!> _DeviceChange: EX_WDM_REMOVE_CANCELLED\" //   FLAG=QCUSB_DBG_MASK_POWER LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c3845
    #define WPP_ANNOTATE_USBPWR_c3845 WPP_ANNOTATE_USBPWR_c3845_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c3845 WPP_ANNOTATE_USBPWR_c3845_FINAL("TMF:", "USBPWR.c", "USBPWR_c3845", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c3856_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 183 \"%0<%10!s!> _DeviceChange: err - FileObj not NUL 0x%11!p!\" //   FLAG=QCUSB_DBG_MASK_POWER LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c3856_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 183 \"%0<%10!s!> _DeviceChange: err - FileObj not NUL 0x%11!p!\" //   FLAG=QCUSB_DBG_MASK_POWER LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c3856
    #define WPP_ANNOTATE_USBPWR_c3856 WPP_ANNOTATE_USBPWR_c3856_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemPtr -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c3856 WPP_ANNOTATE_USBPWR_c3856_FINAL("TMF:", "USBPWR.c", "USBPWR_c3856", L"{", L"pDevExt->PortName, ItemString -- 10" , L"pDevExt->ExFileObject, ItemPtr -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c3870_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 184 \"%0<%10!s!> _DeviceChange: UNKNOWN_NOTIFICATION\" //   FLAG=QCUSB_DBG_MASK_POWER LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c3870_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 184 \"%0<%10!s!> _DeviceChange: UNKNOWN_NOTIFICATION\" //   FLAG=QCUSB_DBG_MASK_POWER LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c3870
    #define WPP_ANNOTATE_USBPWR_c3870 WPP_ANNOTATE_USBPWR_c3870_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c3870 WPP_ANNOTATE_USBPWR_c3870_FINAL("TMF:", "USBPWR.c", "USBPWR_c3870", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c3878_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 185 \"%0<%10!s!> <--_DeviceChange\" //   FLAG=QCUSB_DBG_MASK_POWER LEVEL=QCUSB_DBG_LEVEL_TRACE", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c3878_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 185 \"%0<%10!s!> <--_DeviceChange\" //   FLAG=QCUSB_DBG_MASK_POWER LEVEL=QCUSB_DBG_LEVEL_TRACE", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c3878
    #define WPP_ANNOTATE_USBPWR_c3878 WPP_ANNOTATE_USBPWR_c3878_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c3878 WPP_ANNOTATE_USBPWR_c3878_FINAL("TMF:", "USBPWR.c", "USBPWR_c3878", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c3896_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 186 \"%0<%10!s!> -->_OpenExWdmDevice\" //   FLAG=QCUSB_DBG_MASK_POWER LEVEL=QCUSB_DBG_LEVEL_TRACE", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c3896_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 186 \"%0<%10!s!> -->_OpenExWdmDevice\" //   FLAG=QCUSB_DBG_MASK_POWER LEVEL=QCUSB_DBG_LEVEL_TRACE", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c3896
    #define WPP_ANNOTATE_USBPWR_c3896 WPP_ANNOTATE_USBPWR_c3896_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c3896 WPP_ANNOTATE_USBPWR_c3896_FINAL("TMF:", "USBPWR.c", "USBPWR_c3896", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c3908_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 187 \"%0<%10!s!> _OpenExWdmDevice: DUP 0x%11!p!\" //   FLAG=QCUSB_DBG_MASK_POWER LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c3908_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 187 \"%0<%10!s!> _OpenExWdmDevice: DUP 0x%11!p!\" //   FLAG=QCUSB_DBG_MASK_POWER LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c3908
    #define WPP_ANNOTATE_USBPWR_c3908 WPP_ANNOTATE_USBPWR_c3908_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemPtr -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c3908 WPP_ANNOTATE_USBPWR_c3908_FINAL("TMF:", "USBPWR.c", "USBPWR_c3908", L"{", L"pDevExt->PortName, ItemString -- 10" , L"pDevExt->ExFileObject, ItemPtr -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c3920_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 188 \"%0<%10!s!> _OpenExWdmDevice: err - no dev name\" //   FLAG=QCUSB_DBG_MASK_POWER LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c3920_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 188 \"%0<%10!s!> _OpenExWdmDevice: err - no dev name\" //   FLAG=QCUSB_DBG_MASK_POWER LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c3920
    #define WPP_ANNOTATE_USBPWR_c3920 WPP_ANNOTATE_USBPWR_c3920_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c3920 WPP_ANNOTATE_USBPWR_c3920_FINAL("TMF:", "USBPWR.c", "USBPWR_c3920", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c3932_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 189 \"%0<%10!s!> _OpenExWdmDevice: err - dev busy\" //   FLAG=QCUSB_DBG_MASK_POWER LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c3932_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 189 \"%0<%10!s!> _OpenExWdmDevice: err - dev busy\" //   FLAG=QCUSB_DBG_MASK_POWER LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c3932
    #define WPP_ANNOTATE_USBPWR_c3932 WPP_ANNOTATE_USBPWR_c3932_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c3932 WPP_ANNOTATE_USBPWR_c3932_FINAL("TMF:", "USBPWR.c", "USBPWR_c3932", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c395_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 23 \"%0<%10!s!> QuerySystemPowerState: invalid state req1 - %11!u!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c395_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 23 \"%0<%10!s!> QuerySystemPowerState: invalid state req1 - %11!u!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c395
    #define WPP_ANNOTATE_USBPWR_c395 WPP_ANNOTATE_USBPWR_c395_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c395 WPP_ANNOTATE_USBPWR_c395_FINAL("TMF:", "USBPWR.c", "USBPWR_c395", L"{", L"pDevExt->PortName, ItemString -- 10" , L"PowerState, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c3968_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 190 \"%0<%10!s!> _OpenExWdmDevice: fail to reg for dev change 0x%11!p!\" //   FLAG=QCUSB_DBG_MASK_POWER LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c3968_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 190 \"%0<%10!s!> _OpenExWdmDevice: fail to reg for dev change 0x%11!p!\" //   FLAG=QCUSB_DBG_MASK_POWER LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c3968
    #define WPP_ANNOTATE_USBPWR_c3968 WPP_ANNOTATE_USBPWR_c3968_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemPtr -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c3968 WPP_ANNOTATE_USBPWR_c3968_FINAL("TMF:", "USBPWR.c", "USBPWR_c3968", L"{", L"pDevExt->PortName, ItemString -- 10" , L"pDevExt->ExFileObject, ItemPtr -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c3979_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 191 \"%0<%10!s!> _OpenExWdmDevice: dev 0x%11!p! fileObj 0x%12!p! hdl 0x%13!p!\" //   FLAG=QCUSB_DBG_MASK_POWER LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c3979_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 191 \"%0<%10!s!> _OpenExWdmDevice: dev 0x%11!p! fileObj 0x%12!p! hdl 0x%13!p!\" //   FLAG=QCUSB_DBG_MASK_POWER LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c3979
    #define WPP_ANNOTATE_USBPWR_c3979 WPP_ANNOTATE_USBPWR_c3979_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemPtr -- 11" , L"Arg, ItemPtr -- 12" , L"Arg, ItemPtr -- 13" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c3979 WPP_ANNOTATE_USBPWR_c3979_FINAL("TMF:", "USBPWR.c", "USBPWR_c3979", L"{", L"pDevExt->PortName, ItemString -- 10" , L"pDevExt->ExWdmDeviceObject, ItemPtr -- 11" , L"pDevExt->ExFileObject, ItemPtr -- 12" , L"pDevExt->ExWdmDevNotificationEntry, ItemPtr -- 13" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c3997_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 192 \"%0<%10!s!> _OpenExWdmDevice: fail to get dev ptr 0x%11!x!\" //   FLAG=QCUSB_DBG_MASK_POWER LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c3997_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 192 \"%0<%10!s!> _OpenExWdmDevice: fail to get dev ptr 0x%11!x!\" //   FLAG=QCUSB_DBG_MASK_POWER LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c3997
    #define WPP_ANNOTATE_USBPWR_c3997 WPP_ANNOTATE_USBPWR_c3997_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c3997 WPP_ANNOTATE_USBPWR_c3997_FINAL("TMF:", "USBPWR.c", "USBPWR_c3997", L"{", L"pDevExt->PortName, ItemString -- 10" , L"status, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c4005_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 193 \"%0<%10!s!> <--_OpenExWdmDevice 0x%11!x!\" //   FLAG=QCUSB_DBG_MASK_POWER LEVEL=QCUSB_DBG_LEVEL_TRACE", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c4005_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 193 \"%0<%10!s!> <--_OpenExWdmDevice 0x%11!x!\" //   FLAG=QCUSB_DBG_MASK_POWER LEVEL=QCUSB_DBG_LEVEL_TRACE", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c4005
    #define WPP_ANNOTATE_USBPWR_c4005 WPP_ANNOTATE_USBPWR_c4005_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c4005 WPP_ANNOTATE_USBPWR_c4005_FINAL("TMF:", "USBPWR.c", "USBPWR_c4005", L"{", L"pDevExt->PortName, ItemString -- 10" , L"status, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c4024_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 194 \"%0<%10!s!> -->_CloseExWdmDevice 0x%11!p!, 0x%12!p!, 0x%13!p!\" //   FLAG=QCUSB_DBG_MASK_POWER LEVEL=QCUSB_DBG_LEVEL_TRACE", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c4024_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 194 \"%0<%10!s!> -->_CloseExWdmDevice 0x%11!p!, 0x%12!p!, 0x%13!p!\" //   FLAG=QCUSB_DBG_MASK_POWER LEVEL=QCUSB_DBG_LEVEL_TRACE", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c4024
    #define WPP_ANNOTATE_USBPWR_c4024 WPP_ANNOTATE_USBPWR_c4024_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemPtr -- 11" , L"Arg, ItemPtr -- 12" , L"Arg, ItemPtr -- 13" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c4024 WPP_ANNOTATE_USBPWR_c4024_FINAL("TMF:", "USBPWR.c", "USBPWR_c4024", L"{", L"pDevExt->PortName, ItemString -- 10" , L"pDevExt->ExWdmDeviceObject, ItemPtr -- 11" , L"pDevExt->ExFileObject, ItemPtr -- 12" , L"pDevExt->ExWdmDevNotificationEntry, ItemPtr -- 13" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c4065_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 195 \"%0<%10!s!> <--_CloseExWdmDevice 0x%11!p!\" //   FLAG=QCUSB_DBG_MASK_POWER LEVEL=QCUSB_DBG_LEVEL_TRACE", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c4065_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 195 \"%0<%10!s!> <--_CloseExWdmDevice 0x%11!p!\" //   FLAG=QCUSB_DBG_MASK_POWER LEVEL=QCUSB_DBG_LEVEL_TRACE", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c4065
    #define WPP_ANNOTATE_USBPWR_c4065 WPP_ANNOTATE_USBPWR_c4065_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemPtr -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c4065 WPP_ANNOTATE_USBPWR_c4065_FINAL("TMF:", "USBPWR.c", "USBPWR_c4065", L"{", L"pDevExt->PortName, ItemString -- 10" , L"pDevExt->ExWdmDeviceObject, ItemPtr -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c4128_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 196 \"%0<%10!s!> _GetSystemPowerIrpComp: [%11!d!] %12!d!\" //   FLAG=QCUSB_DBG_MASK_POWER LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c4128_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 196 \"%0<%10!s!> _GetSystemPowerIrpComp: [%11!d!] %12!d!\" //   FLAG=QCUSB_DBG_MASK_POWER LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c4128
    #define WPP_ANNOTATE_USBPWR_c4128 WPP_ANNOTATE_USBPWR_c4128_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemLong -- 12" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c4128 WPP_ANNOTATE_USBPWR_c4128_FINAL("TMF:", "USBPWR.c", "USBPWR_c4128", L"{", L"pDevExt->PortName, ItemString -- 10" , L"pSysPwr->Type, ItemLong -- 11" , L"pSysPwr->State, ItemLong -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c4137_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 197 \"%0<%10!s!> _GetSystemPowerIrpComp: buf too small\" //   FLAG=QCUSB_DBG_MASK_POWER LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c4137_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 197 \"%0<%10!s!> _GetSystemPowerIrpComp: buf too small\" //   FLAG=QCUSB_DBG_MASK_POWER LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c4137
    #define WPP_ANNOTATE_USBPWR_c4137 WPP_ANNOTATE_USBPWR_c4137_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c4137 WPP_ANNOTATE_USBPWR_c4137_FINAL("TMF:", "USBPWR.c", "USBPWR_c4137", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c4148_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 198 \"%0<%10!s!> _GetSystemPowerIrpComp: failure 0x%11!x!\" //   FLAG=QCUSB_DBG_MASK_POWER LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c4148_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 198 \"%0<%10!s!> _GetSystemPowerIrpComp: failure 0x%11!x!\" //   FLAG=QCUSB_DBG_MASK_POWER LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c4148
    #define WPP_ANNOTATE_USBPWR_c4148 WPP_ANNOTATE_USBPWR_c4148_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c4148 WPP_ANNOTATE_USBPWR_c4148_FINAL("TMF:", "USBPWR.c", "USBPWR_c4148", L"{", L"pDevExt->PortName, ItemString -- 10" , L"Irp->IoStatus.Status, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c4184_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 199 \"%0<%10!s!> _GetSystemPowerState: ExWdm not open\" //   FLAG=QCUSB_DBG_MASK_POWER LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c4184_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 199 \"%0<%10!s!> _GetSystemPowerState: ExWdm not open\" //   FLAG=QCUSB_DBG_MASK_POWER LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c4184
    #define WPP_ANNOTATE_USBPWR_c4184 WPP_ANNOTATE_USBPWR_c4184_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c4184 WPP_ANNOTATE_USBPWR_c4184_FINAL("TMF:", "USBPWR.c", "USBPWR_c4184", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c419_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 24 \"%0<%10!s!> SystemPowerRequestCompletion: IRP 0x%11!p!(0x%12!x!)\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c419_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 24 \"%0<%10!s!> SystemPowerRequestCompletion: IRP 0x%11!p!(0x%12!x!)\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c419
    #define WPP_ANNOTATE_USBPWR_c419 WPP_ANNOTATE_USBPWR_c419_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemPtr -- 11" , L"Arg, ItemLong -- 12" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c419 WPP_ANNOTATE_USBPWR_c419_FINAL("TMF:", "USBPWR.c", "USBPWR_c419", L"{", L"pDevExt->PortName, ItemString -- 10" , L"Irp, ItemPtr -- 11" , L"ntStatus, ItemLong -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c4196_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 200 \"%0<%10!s!> _GetSystemPowerState: ExWdm ref failure\" //   FLAG=QCUSB_DBG_MASK_POWER LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c4196_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 200 \"%0<%10!s!> _GetSystemPowerState: ExWdm ref failure\" //   FLAG=QCUSB_DBG_MASK_POWER LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c4196
    #define WPP_ANNOTATE_USBPWR_c4196 WPP_ANNOTATE_USBPWR_c4196_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c4196 WPP_ANNOTATE_USBPWR_c4196_FINAL("TMF:", "USBPWR.c", "USBPWR_c4196", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c4210_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 201 \"%0<%10!s!> _GetSystemPowerState: NO_MEM Irp\" //   FLAG=QCUSB_DBG_MASK_POWER LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c4210_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 201 \"%0<%10!s!> _GetSystemPowerState: NO_MEM Irp\" //   FLAG=QCUSB_DBG_MASK_POWER LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c4210
    #define WPP_ANNOTATE_USBPWR_c4210 WPP_ANNOTATE_USBPWR_c4210_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c4210 WPP_ANNOTATE_USBPWR_c4210_FINAL("TMF:", "USBPWR.c", "USBPWR_c4210", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c4242_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 202 \"%0<%10!s!> _GetSystemPowerState: sysPwr %11!d!\" //   FLAG=QCUSB_DBG_MASK_POWER LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c4242_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 202 \"%0<%10!s!> _GetSystemPowerState: sysPwr %11!d!\" //   FLAG=QCUSB_DBG_MASK_POWER LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c4242
    #define WPP_ANNOTATE_USBPWR_c4242 WPP_ANNOTATE_USBPWR_c4242_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c4242 WPP_ANNOTATE_USBPWR_c4242_FINAL("TMF:", "USBPWR.c", "USBPWR_c4242", L"{", L"pDevExt->PortName, ItemString -- 10" , L"pDevExt->SystemPower, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c4283_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 203 \"%0<%10!s!> _RegisterNotification: NO_MEM Irp\" //   FLAG=QCUSB_DBG_MASK_POWER LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c4283_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 203 \"%0<%10!s!> _RegisterNotification: NO_MEM Irp\" //   FLAG=QCUSB_DBG_MASK_POWER LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c4283
    #define WPP_ANNOTATE_USBPWR_c4283 WPP_ANNOTATE_USBPWR_c4283_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c4283 WPP_ANNOTATE_USBPWR_c4283_FINAL("TMF:", "USBPWR.c", "USBPWR_c4283", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c431_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 25 \"%0<%10!s!> PIRP (Ce 0x%11!x!) 0x%12!p!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c431_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 25 \"%0<%10!s!> PIRP (Ce 0x%11!x!) 0x%12!p!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c431
    #define WPP_ANNOTATE_USBPWR_c431 WPP_ANNOTATE_USBPWR_c431_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemPtr -- 12" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c431 WPP_ANNOTATE_USBPWR_c431_FINAL("TMF:", "USBPWR.c", "USBPWR_c431", L"{", L"pDevExt->PortName, ItemString -- 10" , L"ntStatus, ItemLong -- 11" , L"Irp, ItemPtr -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c4310_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 204 \"%0<%10!s!> _RegisterNotification: ST 0x%11!x!\" //   FLAG=QCUSB_DBG_MASK_POWER LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c4310_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 204 \"%0<%10!s!> _RegisterNotification: ST 0x%11!x!\" //   FLAG=QCUSB_DBG_MASK_POWER LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c4310
    #define WPP_ANNOTATE_USBPWR_c4310 WPP_ANNOTATE_USBPWR_c4310_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c4310 WPP_ANNOTATE_USBPWR_c4310_FINAL("TMF:", "USBPWR.c", "USBPWR_c4310", L"{", L"pDevExt->PortName, ItemString -- 10" , L"ntStatus, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c4330_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 205 \"%0<%10!s!> _CancelXwdmNotification: 0x%11!p!\" //   FLAG=QCUSB_DBG_MASK_POWER LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c4330_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 205 \"%0<%10!s!> _CancelXwdmNotification: 0x%11!p!\" //   FLAG=QCUSB_DBG_MASK_POWER LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c4330
    #define WPP_ANNOTATE_USBPWR_c4330 WPP_ANNOTATE_USBPWR_c4330_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemPtr -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c4330 WPP_ANNOTATE_USBPWR_c4330_FINAL("TMF:", "USBPWR.c", "USBPWR_c4330", L"{", L"pDevExt->PortName, ItemString -- 10" , L"pDevExt->XwdmNotificationIrp, ItemPtr -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c452_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 26 \"%0<%10!s!> SysPwrReqCompletion: 0x%11!p! [PrepareToPowerDown 0]\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c452_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 26 \"%0<%10!s!> SysPwrReqCompletion: 0x%11!p! [PrepareToPowerDown 0]\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c452
    #define WPP_ANNOTATE_USBPWR_c452 WPP_ANNOTATE_USBPWR_c452_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemPtr -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c452 WPP_ANNOTATE_USBPWR_c452_FINAL("TMF:", "USBPWR.c", "USBPWR_c452", L"{", L"pDevExt->PortName, ItemString -- 10" , L"Irp, ItemPtr -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c482_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 27 \"%0<%10!s!> ReqDevicePowerIrp: SysPwrIRP 0x%11!p!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c482_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 27 \"%0<%10!s!> ReqDevicePowerIrp: SysPwrIRP 0x%11!p!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c482
    #define WPP_ANNOTATE_USBPWR_c482 WPP_ANNOTATE_USBPWR_c482_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemPtr -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c482 WPP_ANNOTATE_USBPWR_c482_FINAL("TMF:", "USBPWR.c", "USBPWR_c482", L"{", L"pDevExt->PortName, ItemString -- 10" , L"Irp, ItemPtr -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c495_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 28 \"%0<%10!s!> ReqDevicePowerIrp: unexpected pwr map (sys[%11!u!]<->dev[%12!u!])\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c495_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 28 \"%0<%10!s!> ReqDevicePowerIrp: unexpected pwr map (sys[%11!u!]<->dev[%12!u!])\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c495
    #define WPP_ANNOTATE_USBPWR_c495 WPP_ANNOTATE_USBPWR_c495_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemLong -- 12" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c495 WPP_ANNOTATE_USBPWR_c495_FINAL("TMF:", "USBPWR.c", "USBPWR_c495", L"{", L"pDevExt->PortName, ItemString -- 10" , L"systemState, ItemLong -- 11" , L"devState, ItemLong -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c529_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 29 \"%0<%10!s!> LONGHORN fast resume: to complete SysIrp 0x%11!p!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c529_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 29 \"%0<%10!s!> LONGHORN fast resume: to complete SysIrp 0x%11!p!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c529
    #define WPP_ANNOTATE_USBPWR_c529 WPP_ANNOTATE_USBPWR_c529_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemPtr -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c529 WPP_ANNOTATE_USBPWR_c529_FINAL("TMF:", "USBPWR.c", "USBPWR_c529", L"{", L"pDevExt->PortName, ItemString -- 10" , L"Irp, ItemPtr -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c552_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 30 \"%0<%10!s!> PIRP (Csys 0) 0x%11!p! dev req2 0x%12!x!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c552_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 30 \"%0<%10!s!> PIRP (Csys 0) 0x%11!p! dev req2 0x%12!x!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c552
    #define WPP_ANNOTATE_USBPWR_c552 WPP_ANNOTATE_USBPWR_c552_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemPtr -- 11" , L"Arg, ItemLong -- 12" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c552 WPP_ANNOTATE_USBPWR_c552_FINAL("TMF:", "USBPWR.c", "USBPWR_c552", L"{", L"pDevExt->PortName, ItemString -- 10" , L"Irp, ItemPtr -- 11" , L"ntStatus, ItemLong -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c583_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 31 \"%0<%10!s!> PIRP (Csys 0) 0x%11!p! dev req 0x%12!x!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c583_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 31 \"%0<%10!s!> PIRP (Csys 0) 0x%11!p! dev req 0x%12!x!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c583
    #define WPP_ANNOTATE_USBPWR_c583 WPP_ANNOTATE_USBPWR_c583_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemPtr -- 11" , L"Arg, ItemLong -- 12" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c583 WPP_ANNOTATE_USBPWR_c583_FINAL("TMF:", "USBPWR.c", "USBPWR_c583", L"{", L"pDevExt->PortName, ItemString -- 10" , L"Irp, ItemPtr -- 11" , L"ntStatus, ItemLong -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c614_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 32 \"%0<%10!s!> TopDevicePowerIrpCompletion: sIRP 0x%11!p! DevObj 0x%12!p!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c614_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 32 \"%0<%10!s!> TopDevicePowerIrpCompletion: sIRP 0x%11!p! DevObj 0x%12!p!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c614
    #define WPP_ANNOTATE_USBPWR_c614 WPP_ANNOTATE_USBPWR_c614_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemPtr -- 11" , L"Arg, ItemPtr -- 12" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c614 WPP_ANNOTATE_USBPWR_c614_FINAL("TMF:", "USBPWR.c", "USBPWR_c614", L"{", L"pDevExt->PortName, ItemString -- 10" , L"systemPwrIrp, ItemPtr -- 11" , L"DeviceObject, ItemPtr -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c649_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 33 \"%0<%10!s!> PIRP (Csys 0x%11!x!) 0x%12!p! [PrepareToPowerDown %13!u!]\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c649_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 33 \"%0<%10!s!> PIRP (Csys 0x%11!x!) 0x%12!p! [PrepareToPowerDown %13!u!]\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c649
    #define WPP_ANNOTATE_USBPWR_c649 WPP_ANNOTATE_USBPWR_c649_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemPtr -- 12" , L"Arg, ItemLong -- 13" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c649 WPP_ANNOTATE_USBPWR_c649_FINAL("TMF:", "USBPWR.c", "USBPWR_c649", L"{", L"pDevExt->PortName, ItemString -- 10" , L"IoStatus->Status, ItemLong -- 11" , L"systemPwrIrp, ItemPtr -- 12" , L"pDevExt->PrepareToPowerDown, ItemLong -- 13" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c678_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 34 \"%0<%10!s!> QueryDevicePowerState: dev in service, reject.\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c678_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 34 \"%0<%10!s!> QueryDevicePowerState: dev in service, reject.\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c678
    #define WPP_ANNOTATE_USBPWR_c678 WPP_ANNOTATE_USBPWR_c678_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c678 WPP_ANNOTATE_USBPWR_c678_FINAL("TMF:", "USBPWR.c", "USBPWR_c678", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c707_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 35 \"%0<%10!s!> QueryDevicePowerState: D%11!u!, no action\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c707_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 35 \"%0<%10!s!> QueryDevicePowerState: D%11!u!, no action\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c707
    #define WPP_ANNOTATE_USBPWR_c707 WPP_ANNOTATE_USBPWR_c707_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c707 WPP_ANNOTATE_USBPWR_c707_FINAL("TMF:", "USBPWR.c", "USBPWR_c707", L"{", L"pDevExt->PortName, ItemString -- 10" , L"PowerState-1, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c720_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 36 \"%0<%10!s!> QueryDevicePowerState: invalid state req1 - D%11!u!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c720_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 36 \"%0<%10!s!> QueryDevicePowerState: invalid state req1 - D%11!u!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c720
    #define WPP_ANNOTATE_USBPWR_c720 WPP_ANNOTATE_USBPWR_c720_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c720 WPP_ANNOTATE_USBPWR_c720_FINAL("TMF:", "USBPWR.c", "USBPWR_c720", L"{", L"pDevExt->PortName, ItemString -- 10" , L"PowerState-1, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c743_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 37 \"%0<%10!s!> DevicePowerDownIrpCompletion: IRP 0x%11!p!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c743_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 37 \"%0<%10!s!> DevicePowerDownIrpCompletion: IRP 0x%11!p!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c743
    #define WPP_ANNOTATE_USBPWR_c743 WPP_ANNOTATE_USBPWR_c743_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemPtr -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c743 WPP_ANNOTATE_USBPWR_c743_FINAL("TMF:", "USBPWR.c", "USBPWR_c743", L"{", L"pDevExt->PortName, ItemString -- 10" , L"Irp, ItemPtr -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c765_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 38 \"%0<%10!s!> PIRP (Cdev 0x%11!x!) 0x%12!p!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c765_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 38 \"%0<%10!s!> PIRP (Cdev 0x%11!x!) 0x%12!p!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c765
    #define WPP_ANNOTATE_USBPWR_c765 WPP_ANNOTATE_USBPWR_c765_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemPtr -- 12" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c765 WPP_ANNOTATE_USBPWR_c765_FINAL("TMF:", "USBPWR.c", "USBPWR_c765", L"{", L"pDevExt->PortName, ItemString -- 10" , L"Irp->IoStatus.Status, ItemLong -- 11" , L"Irp, ItemPtr -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c792_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 39 \"%0<%10!s!> -->SetSystemPowerState: %11!u!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_TRACE", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c792_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 39 \"%0<%10!s!> -->SetSystemPowerState: %11!u!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_TRACE", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c792
    #define WPP_ANNOTATE_USBPWR_c792 WPP_ANNOTATE_USBPWR_c792_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c792 WPP_ANNOTATE_USBPWR_c792_FINAL("TMF:", "USBPWR.c", "USBPWR_c792", L"{", L"pDevExt->PortName, ItemString -- 10" , L"PowerState, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c816_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 40 \"%0<%10!s!> <--SetSystemPowerState: %11!u!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_TRACE", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c816_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 40 \"%0<%10!s!> <--SetSystemPowerState: %11!u!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_TRACE", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c816
    #define WPP_ANNOTATE_USBPWR_c816 WPP_ANNOTATE_USBPWR_c816_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c816 WPP_ANNOTATE_USBPWR_c816_FINAL("TMF:", "USBPWR.c", "USBPWR_c816", L"{", L"pDevExt->PortName, ItemString -- 10" , L"PowerState, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c841_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 41 \"%0<%10!s!> -->CancelPendingIrps: %11!u!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_TRACE", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c841_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 41 \"%0<%10!s!> -->CancelPendingIrps: %11!u!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_TRACE", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c841
    #define WPP_ANNOTATE_USBPWR_c841 WPP_ANNOTATE_USBPWR_c841_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c841 WPP_ANNOTATE_USBPWR_c841_FINAL("TMF:", "USBPWR.c", "USBPWR_c841", L"{", L"pDevExt->PortName, ItemString -- 10" , L"PowerState, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c869_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 42 \"%0<%10!s!> WTO-a\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c869_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 42 \"%0<%10!s!> WTO-a\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c869
    #define WPP_ANNOTATE_USBPWR_c869 WPP_ANNOTATE_USBPWR_c869_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c869 WPP_ANNOTATE_USBPWR_c869_FINAL("TMF:", "USBPWR.c", "USBPWR_c869", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c87_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 10 \"%0<%10!s!> IRP_MN_QUERY_POWER: SystemPowerState %11!d!\" //   FLAG=QCUSB_DBG_MASK_POWER LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c87_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 10 \"%0<%10!s!> IRP_MN_QUERY_POWER: SystemPowerState %11!d!\" //   FLAG=QCUSB_DBG_MASK_POWER LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c87
    #define WPP_ANNOTATE_USBPWR_c87 WPP_ANNOTATE_USBPWR_c87_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c87 WPP_ANNOTATE_USBPWR_c87_FINAL("TMF:", "USBPWR.c", "USBPWR_c87", L"{", L"pDevExt->PortName, ItemString -- 10" , L"pwrState, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c890_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 43 \"%0<%10!s!> <--CancelPendingIrps: %11!u!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_TRACE", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c890_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 43 \"%0<%10!s!> <--CancelPendingIrps: %11!u!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_TRACE", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c890
    #define WPP_ANNOTATE_USBPWR_c890 WPP_ANNOTATE_USBPWR_c890_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c890 WPP_ANNOTATE_USBPWR_c890_FINAL("TMF:", "USBPWR.c", "USBPWR_c890", L"{", L"pDevExt->PortName, ItemString -- 10" , L"PowerState, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c927_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 44 \"%0<%10!s!> SetDevicePowerState: already in D0, no act(0x%11!p!)\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c927_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 44 \"%0<%10!s!> SetDevicePowerState: already in D0, no act(0x%11!p!)\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c927
    #define WPP_ANNOTATE_USBPWR_c927 WPP_ANNOTATE_USBPWR_c927_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemPtr -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c927 WPP_ANNOTATE_USBPWR_c927_FINAL("TMF:", "USBPWR.c", "USBPWR_c927", L"{", L"pDevExt->PortName, ItemString -- 10" , L"Irp, ItemPtr -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c957_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 45 \"%0<%10!s!> DevicePowerUpIrpCompletion: 0x%11!p!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c957_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 45 \"%0<%10!s!> DevicePowerUpIrpCompletion: 0x%11!p!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c957
    #define WPP_ANNOTATE_USBPWR_c957 WPP_ANNOTATE_USBPWR_c957_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemPtr -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c957 WPP_ANNOTATE_USBPWR_c957_FINAL("TMF:", "USBPWR.c", "USBPWR_c957", L"{", L"pDevExt->PortName, ItemString -- 10" , L"Irp, ItemPtr -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c971_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 46 \"%0<%10!s!> DevicePowerUpIrpCompletion failure 0x%11!x!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c971_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 46 \"%0<%10!s!> DevicePowerUpIrpCompletion failure 0x%11!x!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c971
    #define WPP_ANNOTATE_USBPWR_c971 WPP_ANNOTATE_USBPWR_c971_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c971 WPP_ANNOTATE_USBPWR_c971_FINAL("TMF:", "USBPWR.c", "USBPWR_c971", L"{", L"pDevExt->PortName, ItemString -- 10" , L"ntStatus, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c991_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 47 \"%0<%10!s!> PIRP (Cdev-s0 0x%11!x!) 0x%12!p!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c991_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 47 \"%0<%10!s!> PIRP (Cdev-s0 0x%11!x!) 0x%12!p!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c991
    #define WPP_ANNOTATE_USBPWR_c991 WPP_ANNOTATE_USBPWR_c991_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemPtr -- 12" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c991 WPP_ANNOTATE_USBPWR_c991_FINAL("TMF:", "USBPWR.c", "USBPWR_c991", L"{", L"pDevExt->PortName, ItemString -- 10" , L"Irp->IoStatus.Status, ItemLong -- 11" , L"Irp, ItemPtr -- 12" , L"}")
#endif
# define WPP_ANNOTATE(x) WPP_ANNOTATE_ ## x,

#else
# define WPP_ANNOTATE(x)
#endif

#define WPP_LOCAL_TraceGuids WPP_78a3e3744d4e3853317bf7d3db21d4c1_Traceguids

#if 1
extern const __declspec(selectany) GUID WPP_LOCAL_TraceGuids[] = { {0x78a3e374,0x4d4e,0x3853,{0x31,0x7b,0xf7,0xd3,0xdb,0x21,0xd4,0xc1}}, };
#endif

#ifndef WPP_ALREADY_INCLUDED

#if !defined(WPP_TRACE_OPTIONS)
enum {WPP_TRACE_OPTIONS = TRACE_MESSAGE_SEQUENCE   | TRACE_MESSAGE_GUID
                        | TRACE_MESSAGE_SYSTEMINFO | TRACE_MESSAGE_TIMESTAMP };
#endif

#if !defined(WPP_LOGPAIR)
# define WPP_LOGPAIR(_Size, _Addr)     (_Addr),((SIZE_T)(_Size)),
#endif

#define WPP_LOGTYPEVAL(_Type, _Value) WPP_LOGPAIR(sizeof(_Type), &(_Value))
#define WPP_LOGTYPEPTR(_Value)        WPP_LOGPAIR(sizeof(*(_Value)), (_Value))

// Marshalling macros.

#if !defined(WPP_LOGASTR)
# if !defined(WPP_CHECK_FOR_NULL_STRING)
#  define WPP_LOGASTR(_value)  WPP_LOGPAIR(strlen(_value) + 1, _value )
# else
#  define WPP_LOGASTR(_value)  WPP_LOGPAIR( (_value)?strlen(_value) + 1:5, (_value)?(_value):"NULL" )
# endif
#endif

#if !defined(WPP_LOGWSTR)
# if !defined(WPP_CHECK_FOR_NULL_STRING)
#  define WPP_LOGWSTR(_value)  WPP_LOGPAIR( (wcslen(_value)+1) * sizeof(WCHAR), _value)
# else
#  define WPP_LOGWSTR(_value)  WPP_LOGPAIR( ((_value)?wcslen(_value) + 1:5) * sizeof(WCHAR), (_value)?(_value):L"NULL" )
# endif
#endif

#if !defined(WPP_LOGPGUID)
# define WPP_LOGPGUID(_value) WPP_LOGPAIR( sizeof(GUID), (_value) )
#endif


#if !defined(WPP_LOGPSID)
# if !defined(WPP_CHECK_FOR_NULL_STRING)
# define WPP_LOGPSID(_value)  WPP_LOGPAIR( WPP_GetLengthSid(_value), (_value) )
# else
# define WPP_LOGPSID(_value)  WPP_LOGPAIR( (_value)? (WPP_IsValidSid(_value)? \
                                                                        WPP_GetLengthSid(_value):5):5, \
                                                                        (_value)? (WPP_IsValidSid(_value)?\
                                                                        (_value):"NULL"):"NULL")
#endif
#endif

#if !defined(WPP_LOGCSTR)
# define WPP_LOGCSTR(_x) \
    WPP_LOGPAIR( sizeof((_x).Length), &(_x).Length ) WPP_LOGPAIR( (_x).Length, (_x).Buffer )
#endif

#if !defined(WPP_LOGUSTR)
# define WPP_LOGUSTR(_x) \
    WPP_LOGPAIR( sizeof((_x).Length), &(_x).Length ) WPP_LOGPAIR( (_x).Length, (_x).Buffer )
#endif

#if !defined(WPP_LOGPUSTR)
#if !defined(WPP_CHECK_FOR_NULL_STRING)
# define WPP_LOGPUSTR(_x) WPP_LOGUSTR(*(_x))
#else
# define WPP_LOGPUSTR(_x) WPP_LOGPAIR( sizeof(USHORT), (_x)?&(_x)->Length:L"\x08" ) \
                          WPP_LOGPAIR( (_x)?(_x)->Length:0x08, (_x)?(_x)->Buffer:L"NULL" )
#endif
#endif

#if !defined(WPP_LOGPCSTR)
#if !defined(WPP_CHECK_FOR_NULL_STRING)
# define WPP_LOGPCSTR(_x) WPP_LOGCSTR(*(_x))
#else
# define WPP_LOGPCSTR(_x) WPP_LOGPAIR( sizeof(USHORT), (_x)?&(_x)->Length:L"\x04" ) \
                          WPP_LOGPAIR( (_x)?(_x)->Length:0x04, (_x)?(_x)->Buffer:"NULL" )
#endif
#endif

#if !defined(WPP_LOGSTDSTR)
#define WPP_LOGSTDSTR(_value)  WPP_LOGPAIR( (_value).size()+1, (_value).c_str() )
#endif

#endif  //  #ifndef WPP_ALREADY_INCLUDED

#if !defined(WPP_ENABLE_FLAG_BIT)
#define WPP_ENABLE_FLAG_BIT(flag) (WPP_CB[((flag) >> 16)].Control).Flags[( (0xFFFF & ((flag)-1) ) / 32)] & (1 << ( ((flag)-1) & 31 )) 
#endif

#ifndef WPP_SF_s_def
#       define WPP_SF_s_def
WPP_INLINE void WPP_SF_s(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, const char* _a1)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGASTR(_a1)  0); }
#endif  // #ifndef WPP_SF_s_def


//
// Generate the WPP_RECORDER_SP_s function    2
//
#ifndef WPP_RECORDER_SF_s_def
#       define WPP_RECORDER_SF_s_def
WPP_INLINE
VOID
WPP_RECORDER_SF_s(
    PVOID    AutoLogContext,
    UCHAR    level,
    ULONG    flags,
    USHORT   id,
    LPCGUID  traceGuid
    , const char* _a1
    )
{
    if (WPP_ENABLE_FLAG_BIT(flags) && 
       (WPP_CONTROL(flags).Level >= level)) {
        WPP_TRACE( WPP_CONTROL(flags).Logger,
                   WPP_TRACE_OPTIONS,
                   (LPGUID)traceGuid,
                   id,
                   WPP_LOGASTR(_a1)  0);

    }
    
    WPP_RECORDER( AutoLogContext, level, flags, (LPGUID) traceGuid, id, WPP_LOGASTR(_a1)  0);
}
#endif  // #ifndef WPP_RECORDER_SF_s_def


#ifndef WPP_SF_sD_def
#       define WPP_SF_sD_def
WPP_INLINE void WPP_SF_sD(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, const char* _a1, unsigned int _a2)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(unsigned int,_a2)  0); }
#endif  // #ifndef WPP_SF_sD_def


//
// Generate the WPP_RECORDER_SP_sD function    2
//
#ifndef WPP_RECORDER_SF_sD_def
#       define WPP_RECORDER_SF_sD_def
WPP_INLINE
VOID
WPP_RECORDER_SF_sD(
    PVOID    AutoLogContext,
    UCHAR    level,
    ULONG    flags,
    USHORT   id,
    LPCGUID  traceGuid
    , const char* _a1, unsigned int _a2
    )
{
    if (WPP_ENABLE_FLAG_BIT(flags) && 
       (WPP_CONTROL(flags).Level >= level)) {
        WPP_TRACE( WPP_CONTROL(flags).Logger,
                   WPP_TRACE_OPTIONS,
                   (LPGUID)traceGuid,
                   id,
                   WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(unsigned int,_a2)  0);

    }
    
    WPP_RECORDER( AutoLogContext, level, flags, (LPGUID) traceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(unsigned int,_a2)  0);
}
#endif  // #ifndef WPP_RECORDER_SF_sD_def


#ifndef WPP_SF_sDD_def
#       define WPP_SF_sDD_def
WPP_INLINE void WPP_SF_sDD(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, const char* _a1, unsigned int _a2, unsigned int _a3)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(unsigned int,_a2) WPP_LOGTYPEVAL(unsigned int,_a3)  0); }
#endif  // #ifndef WPP_SF_sDD_def


//
// Generate the WPP_RECORDER_SP_sDD function    2
//
#ifndef WPP_RECORDER_SF_sDD_def
#       define WPP_RECORDER_SF_sDD_def
WPP_INLINE
VOID
WPP_RECORDER_SF_sDD(
    PVOID    AutoLogContext,
    UCHAR    level,
    ULONG    flags,
    USHORT   id,
    LPCGUID  traceGuid
    , const char* _a1, unsigned int _a2, unsigned int _a3
    )
{
    if (WPP_ENABLE_FLAG_BIT(flags) && 
       (WPP_CONTROL(flags).Level >= level)) {
        WPP_TRACE( WPP_CONTROL(flags).Logger,
                   WPP_TRACE_OPTIONS,
                   (LPGUID)traceGuid,
                   id,
                   WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(unsigned int,_a2) WPP_LOGTYPEVAL(unsigned int,_a3)  0);

    }
    
    WPP_RECORDER( AutoLogContext, level, flags, (LPGUID) traceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(unsigned int,_a2) WPP_LOGTYPEVAL(unsigned int,_a3)  0);
}
#endif  // #ifndef WPP_RECORDER_SF_sDD_def


#ifndef WPP_SF_sDDDDD_def
#       define WPP_SF_sDDDDD_def
WPP_INLINE void WPP_SF_sDDDDD(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, const char* _a1, unsigned int _a2, unsigned int _a3, unsigned int _a4, unsigned int _a5, unsigned int _a6)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(unsigned int,_a2) WPP_LOGTYPEVAL(unsigned int,_a3) WPP_LOGTYPEVAL(unsigned int,_a4) WPP_LOGTYPEVAL(unsigned int,_a5) WPP_LOGTYPEVAL(unsigned int,_a6)  0); }
#endif  // #ifndef WPP_SF_sDDDDD_def


//
// Generate the WPP_RECORDER_SP_sDDDDD function    2
//
#ifndef WPP_RECORDER_SF_sDDDDD_def
#       define WPP_RECORDER_SF_sDDDDD_def
WPP_INLINE
VOID
WPP_RECORDER_SF_sDDDDD(
    PVOID    AutoLogContext,
    UCHAR    level,
    ULONG    flags,
    USHORT   id,
    LPCGUID  traceGuid
    , const char* _a1, unsigned int _a2, unsigned int _a3, unsigned int _a4, unsigned int _a5, unsigned int _a6
    )
{
    if (WPP_ENABLE_FLAG_BIT(flags) && 
       (WPP_CONTROL(flags).Level >= level)) {
        WPP_TRACE( WPP_CONTROL(flags).Logger,
                   WPP_TRACE_OPTIONS,
                   (LPGUID)traceGuid,
                   id,
                   WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(unsigned int,_a2) WPP_LOGTYPEVAL(unsigned int,_a3) WPP_LOGTYPEVAL(unsigned int,_a4) WPP_LOGTYPEVAL(unsigned int,_a5) WPP_LOGTYPEVAL(unsigned int,_a6)  0);

    }
    
    WPP_RECORDER( AutoLogContext, level, flags, (LPGUID) traceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(unsigned int,_a2) WPP_LOGTYPEVAL(unsigned int,_a3) WPP_LOGTYPEVAL(unsigned int,_a4) WPP_LOGTYPEVAL(unsigned int,_a5) WPP_LOGTYPEVAL(unsigned int,_a6)  0);
}
#endif  // #ifndef WPP_RECORDER_SF_sDDDDD_def


#ifndef WPP_SF_sDDq_def
#       define WPP_SF_sDDq_def
WPP_INLINE void WPP_SF_sDDq(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, const char* _a1, unsigned int _a2, unsigned int _a3, const void* _a4)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(unsigned int,_a2) WPP_LOGTYPEVAL(unsigned int,_a3) WPP_LOGTYPEVAL(const void*,_a4)  0); }
#endif  // #ifndef WPP_SF_sDDq_def


//
// Generate the WPP_RECORDER_SP_sDDq function    2
//
#ifndef WPP_RECORDER_SF_sDDq_def
#       define WPP_RECORDER_SF_sDDq_def
WPP_INLINE
VOID
WPP_RECORDER_SF_sDDq(
    PVOID    AutoLogContext,
    UCHAR    level,
    ULONG    flags,
    USHORT   id,
    LPCGUID  traceGuid
    , const char* _a1, unsigned int _a2, unsigned int _a3, const void* _a4
    )
{
    if (WPP_ENABLE_FLAG_BIT(flags) && 
       (WPP_CONTROL(flags).Level >= level)) {
        WPP_TRACE( WPP_CONTROL(flags).Logger,
                   WPP_TRACE_OPTIONS,
                   (LPGUID)traceGuid,
                   id,
                   WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(unsigned int,_a2) WPP_LOGTYPEVAL(unsigned int,_a3) WPP_LOGTYPEVAL(const void*,_a4)  0);

    }
    
    WPP_RECORDER( AutoLogContext, level, flags, (LPGUID) traceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(unsigned int,_a2) WPP_LOGTYPEVAL(unsigned int,_a3) WPP_LOGTYPEVAL(const void*,_a4)  0);
}
#endif  // #ifndef WPP_RECORDER_SF_sDDq_def


#ifndef WPP_SF_sDDqD_def
#       define WPP_SF_sDDqD_def
WPP_INLINE void WPP_SF_sDDqD(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, const char* _a1, unsigned int _a2, unsigned int _a3, const void* _a4, unsigned int _a5)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(unsigned int,_a2) WPP_LOGTYPEVAL(unsigned int,_a3) WPP_LOGTYPEVAL(const void*,_a4) WPP_LOGTYPEVAL(unsigned int,_a5)  0); }
#endif  // #ifndef WPP_SF_sDDqD_def


//
// Generate the WPP_RECORDER_SP_sDDqD function    2
//
#ifndef WPP_RECORDER_SF_sDDqD_def
#       define WPP_RECORDER_SF_sDDqD_def
WPP_INLINE
VOID
WPP_RECORDER_SF_sDDqD(
    PVOID    AutoLogContext,
    UCHAR    level,
    ULONG    flags,
    USHORT   id,
    LPCGUID  traceGuid
    , const char* _a1, unsigned int _a2, unsigned int _a3, const void* _a4, unsigned int _a5
    )
{
    if (WPP_ENABLE_FLAG_BIT(flags) && 
       (WPP_CONTROL(flags).Level >= level)) {
        WPP_TRACE( WPP_CONTROL(flags).Logger,
                   WPP_TRACE_OPTIONS,
                   (LPGUID)traceGuid,
                   id,
                   WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(unsigned int,_a2) WPP_LOGTYPEVAL(unsigned int,_a3) WPP_LOGTYPEVAL(const void*,_a4) WPP_LOGTYPEVAL(unsigned int,_a5)  0);

    }
    
    WPP_RECORDER( AutoLogContext, level, flags, (LPGUID) traceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(unsigned int,_a2) WPP_LOGTYPEVAL(unsigned int,_a3) WPP_LOGTYPEVAL(const void*,_a4) WPP_LOGTYPEVAL(unsigned int,_a5)  0);
}
#endif  // #ifndef WPP_RECORDER_SF_sDDqD_def


#ifndef WPP_SF_sDd_def
#       define WPP_SF_sDd_def
WPP_INLINE void WPP_SF_sDd(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, const char* _a1, unsigned int _a2, signed int _a3)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(unsigned int,_a2) WPP_LOGTYPEVAL(signed int,_a3)  0); }
#endif  // #ifndef WPP_SF_sDd_def


//
// Generate the WPP_RECORDER_SP_sDd function    2
//
#ifndef WPP_RECORDER_SF_sDd_def
#       define WPP_RECORDER_SF_sDd_def
WPP_INLINE
VOID
WPP_RECORDER_SF_sDd(
    PVOID    AutoLogContext,
    UCHAR    level,
    ULONG    flags,
    USHORT   id,
    LPCGUID  traceGuid
    , const char* _a1, unsigned int _a2, signed int _a3
    )
{
    if (WPP_ENABLE_FLAG_BIT(flags) && 
       (WPP_CONTROL(flags).Level >= level)) {
        WPP_TRACE( WPP_CONTROL(flags).Logger,
                   WPP_TRACE_OPTIONS,
                   (LPGUID)traceGuid,
                   id,
                   WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(unsigned int,_a2) WPP_LOGTYPEVAL(signed int,_a3)  0);

    }
    
    WPP_RECORDER( AutoLogContext, level, flags, (LPGUID) traceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(unsigned int,_a2) WPP_LOGTYPEVAL(signed int,_a3)  0);
}
#endif  // #ifndef WPP_RECORDER_SF_sDd_def


#ifndef WPP_SF_sDq_def
#       define WPP_SF_sDq_def
WPP_INLINE void WPP_SF_sDq(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, const char* _a1, unsigned int _a2, const void* _a3)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(unsigned int,_a2) WPP_LOGTYPEVAL(const void*,_a3)  0); }
#endif  // #ifndef WPP_SF_sDq_def


//
// Generate the WPP_RECORDER_SP_sDq function    2
//
#ifndef WPP_RECORDER_SF_sDq_def
#       define WPP_RECORDER_SF_sDq_def
WPP_INLINE
VOID
WPP_RECORDER_SF_sDq(
    PVOID    AutoLogContext,
    UCHAR    level,
    ULONG    flags,
    USHORT   id,
    LPCGUID  traceGuid
    , const char* _a1, unsigned int _a2, const void* _a3
    )
{
    if (WPP_ENABLE_FLAG_BIT(flags) && 
       (WPP_CONTROL(flags).Level >= level)) {
        WPP_TRACE( WPP_CONTROL(flags).Logger,
                   WPP_TRACE_OPTIONS,
                   (LPGUID)traceGuid,
                   id,
                   WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(unsigned int,_a2) WPP_LOGTYPEVAL(const void*,_a3)  0);

    }
    
    WPP_RECORDER( AutoLogContext, level, flags, (LPGUID) traceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(unsigned int,_a2) WPP_LOGTYPEVAL(const void*,_a3)  0);
}
#endif  // #ifndef WPP_RECORDER_SF_sDq_def


#ifndef WPP_SF_sDqD_def
#       define WPP_SF_sDqD_def
WPP_INLINE void WPP_SF_sDqD(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, const char* _a1, unsigned int _a2, const void* _a3, unsigned int _a4)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(unsigned int,_a2) WPP_LOGTYPEVAL(const void*,_a3) WPP_LOGTYPEVAL(unsigned int,_a4)  0); }
#endif  // #ifndef WPP_SF_sDqD_def


//
// Generate the WPP_RECORDER_SP_sDqD function    2
//
#ifndef WPP_RECORDER_SF_sDqD_def
#       define WPP_RECORDER_SF_sDqD_def
WPP_INLINE
VOID
WPP_RECORDER_SF_sDqD(
    PVOID    AutoLogContext,
    UCHAR    level,
    ULONG    flags,
    USHORT   id,
    LPCGUID  traceGuid
    , const char* _a1, unsigned int _a2, const void* _a3, unsigned int _a4
    )
{
    if (WPP_ENABLE_FLAG_BIT(flags) && 
       (WPP_CONTROL(flags).Level >= level)) {
        WPP_TRACE( WPP_CONTROL(flags).Logger,
                   WPP_TRACE_OPTIONS,
                   (LPGUID)traceGuid,
                   id,
                   WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(unsigned int,_a2) WPP_LOGTYPEVAL(const void*,_a3) WPP_LOGTYPEVAL(unsigned int,_a4)  0);

    }
    
    WPP_RECORDER( AutoLogContext, level, flags, (LPGUID) traceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(unsigned int,_a2) WPP_LOGTYPEVAL(const void*,_a3) WPP_LOGTYPEVAL(unsigned int,_a4)  0);
}
#endif  // #ifndef WPP_RECORDER_SF_sDqD_def


#ifndef WPP_SF_sDqDD_def
#       define WPP_SF_sDqDD_def
WPP_INLINE void WPP_SF_sDqDD(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, const char* _a1, unsigned int _a2, const void* _a3, unsigned int _a4, unsigned int _a5)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(unsigned int,_a2) WPP_LOGTYPEVAL(const void*,_a3) WPP_LOGTYPEVAL(unsigned int,_a4) WPP_LOGTYPEVAL(unsigned int,_a5)  0); }
#endif  // #ifndef WPP_SF_sDqDD_def


//
// Generate the WPP_RECORDER_SP_sDqDD function    2
//
#ifndef WPP_RECORDER_SF_sDqDD_def
#       define WPP_RECORDER_SF_sDqDD_def
WPP_INLINE
VOID
WPP_RECORDER_SF_sDqDD(
    PVOID    AutoLogContext,
    UCHAR    level,
    ULONG    flags,
    USHORT   id,
    LPCGUID  traceGuid
    , const char* _a1, unsigned int _a2, const void* _a3, unsigned int _a4, unsigned int _a5
    )
{
    if (WPP_ENABLE_FLAG_BIT(flags) && 
       (WPP_CONTROL(flags).Level >= level)) {
        WPP_TRACE( WPP_CONTROL(flags).Logger,
                   WPP_TRACE_OPTIONS,
                   (LPGUID)traceGuid,
                   id,
                   WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(unsigned int,_a2) WPP_LOGTYPEVAL(const void*,_a3) WPP_LOGTYPEVAL(unsigned int,_a4) WPP_LOGTYPEVAL(unsigned int,_a5)  0);

    }
    
    WPP_RECORDER( AutoLogContext, level, flags, (LPGUID) traceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(unsigned int,_a2) WPP_LOGTYPEVAL(const void*,_a3) WPP_LOGTYPEVAL(unsigned int,_a4) WPP_LOGTYPEVAL(unsigned int,_a5)  0);
}
#endif  // #ifndef WPP_RECORDER_SF_sDqDD_def


#ifndef WPP_SF_sd_def
#       define WPP_SF_sd_def
WPP_INLINE void WPP_SF_sd(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, const char* _a1, signed int _a2)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(signed int,_a2)  0); }
#endif  // #ifndef WPP_SF_sd_def


//
// Generate the WPP_RECORDER_SP_sd function    2
//
#ifndef WPP_RECORDER_SF_sd_def
#       define WPP_RECORDER_SF_sd_def
WPP_INLINE
VOID
WPP_RECORDER_SF_sd(
    PVOID    AutoLogContext,
    UCHAR    level,
    ULONG    flags,
    USHORT   id,
    LPCGUID  traceGuid
    , const char* _a1, signed int _a2
    )
{
    if (WPP_ENABLE_FLAG_BIT(flags) && 
       (WPP_CONTROL(flags).Level >= level)) {
        WPP_TRACE( WPP_CONTROL(flags).Logger,
                   WPP_TRACE_OPTIONS,
                   (LPGUID)traceGuid,
                   id,
                   WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(signed int,_a2)  0);

    }
    
    WPP_RECORDER( AutoLogContext, level, flags, (LPGUID) traceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(signed int,_a2)  0);
}
#endif  // #ifndef WPP_RECORDER_SF_sd_def


#ifndef WPP_SF_sdD_def
#       define WPP_SF_sdD_def
WPP_INLINE void WPP_SF_sdD(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, const char* _a1, signed int _a2, unsigned int _a3)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(signed int,_a2) WPP_LOGTYPEVAL(unsigned int,_a3)  0); }
#endif  // #ifndef WPP_SF_sdD_def


//
// Generate the WPP_RECORDER_SP_sdD function    2
//
#ifndef WPP_RECORDER_SF_sdD_def
#       define WPP_RECORDER_SF_sdD_def
WPP_INLINE
VOID
WPP_RECORDER_SF_sdD(
    PVOID    AutoLogContext,
    UCHAR    level,
    ULONG    flags,
    USHORT   id,
    LPCGUID  traceGuid
    , const char* _a1, signed int _a2, unsigned int _a3
    )
{
    if (WPP_ENABLE_FLAG_BIT(flags) && 
       (WPP_CONTROL(flags).Level >= level)) {
        WPP_TRACE( WPP_CONTROL(flags).Logger,
                   WPP_TRACE_OPTIONS,
                   (LPGUID)traceGuid,
                   id,
                   WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(signed int,_a2) WPP_LOGTYPEVAL(unsigned int,_a3)  0);

    }
    
    WPP_RECORDER( AutoLogContext, level, flags, (LPGUID) traceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(signed int,_a2) WPP_LOGTYPEVAL(unsigned int,_a3)  0);
}
#endif  // #ifndef WPP_RECORDER_SF_sdD_def


#ifndef WPP_SF_sdd_def
#       define WPP_SF_sdd_def
WPP_INLINE void WPP_SF_sdd(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, const char* _a1, signed int _a2, signed int _a3)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(signed int,_a2) WPP_LOGTYPEVAL(signed int,_a3)  0); }
#endif  // #ifndef WPP_SF_sdd_def


//
// Generate the WPP_RECORDER_SP_sdd function    2
//
#ifndef WPP_RECORDER_SF_sdd_def
#       define WPP_RECORDER_SF_sdd_def
WPP_INLINE
VOID
WPP_RECORDER_SF_sdd(
    PVOID    AutoLogContext,
    UCHAR    level,
    ULONG    flags,
    USHORT   id,
    LPCGUID  traceGuid
    , const char* _a1, signed int _a2, signed int _a3
    )
{
    if (WPP_ENABLE_FLAG_BIT(flags) && 
       (WPP_CONTROL(flags).Level >= level)) {
        WPP_TRACE( WPP_CONTROL(flags).Logger,
                   WPP_TRACE_OPTIONS,
                   (LPGUID)traceGuid,
                   id,
                   WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(signed int,_a2) WPP_LOGTYPEVAL(signed int,_a3)  0);

    }
    
    WPP_RECORDER( AutoLogContext, level, flags, (LPGUID) traceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(signed int,_a2) WPP_LOGTYPEVAL(signed int,_a3)  0);
}
#endif  // #ifndef WPP_RECORDER_SF_sdd_def


#ifndef WPP_SF_sq_def
#       define WPP_SF_sq_def
WPP_INLINE void WPP_SF_sq(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, const char* _a1, const void* _a2)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(const void*,_a2)  0); }
#endif  // #ifndef WPP_SF_sq_def


//
// Generate the WPP_RECORDER_SP_sq function    2
//
#ifndef WPP_RECORDER_SF_sq_def
#       define WPP_RECORDER_SF_sq_def
WPP_INLINE
VOID
WPP_RECORDER_SF_sq(
    PVOID    AutoLogContext,
    UCHAR    level,
    ULONG    flags,
    USHORT   id,
    LPCGUID  traceGuid
    , const char* _a1, const void* _a2
    )
{
    if (WPP_ENABLE_FLAG_BIT(flags) && 
       (WPP_CONTROL(flags).Level >= level)) {
        WPP_TRACE( WPP_CONTROL(flags).Logger,
                   WPP_TRACE_OPTIONS,
                   (LPGUID)traceGuid,
                   id,
                   WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(const void*,_a2)  0);

    }
    
    WPP_RECORDER( AutoLogContext, level, flags, (LPGUID) traceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(const void*,_a2)  0);
}
#endif  // #ifndef WPP_RECORDER_SF_sq_def


#ifndef WPP_SF_sqD_def
#       define WPP_SF_sqD_def
WPP_INLINE void WPP_SF_sqD(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, const char* _a1, const void* _a2, unsigned int _a3)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(const void*,_a2) WPP_LOGTYPEVAL(unsigned int,_a3)  0); }
#endif  // #ifndef WPP_SF_sqD_def


//
// Generate the WPP_RECORDER_SP_sqD function    2
//
#ifndef WPP_RECORDER_SF_sqD_def
#       define WPP_RECORDER_SF_sqD_def
WPP_INLINE
VOID
WPP_RECORDER_SF_sqD(
    PVOID    AutoLogContext,
    UCHAR    level,
    ULONG    flags,
    USHORT   id,
    LPCGUID  traceGuid
    , const char* _a1, const void* _a2, unsigned int _a3
    )
{
    if (WPP_ENABLE_FLAG_BIT(flags) && 
       (WPP_CONTROL(flags).Level >= level)) {
        WPP_TRACE( WPP_CONTROL(flags).Logger,
                   WPP_TRACE_OPTIONS,
                   (LPGUID)traceGuid,
                   id,
                   WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(const void*,_a2) WPP_LOGTYPEVAL(unsigned int,_a3)  0);

    }
    
    WPP_RECORDER( AutoLogContext, level, flags, (LPGUID) traceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(const void*,_a2) WPP_LOGTYPEVAL(unsigned int,_a3)  0);
}
#endif  // #ifndef WPP_RECORDER_SF_sqD_def


#ifndef WPP_SF_sqDD_def
#       define WPP_SF_sqDD_def
WPP_INLINE void WPP_SF_sqDD(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, const char* _a1, const void* _a2, unsigned int _a3, unsigned int _a4)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(const void*,_a2) WPP_LOGTYPEVAL(unsigned int,_a3) WPP_LOGTYPEVAL(unsigned int,_a4)  0); }
#endif  // #ifndef WPP_SF_sqDD_def


//
// Generate the WPP_RECORDER_SP_sqDD function    2
//
#ifndef WPP_RECORDER_SF_sqDD_def
#       define WPP_RECORDER_SF_sqDD_def
WPP_INLINE
VOID
WPP_RECORDER_SF_sqDD(
    PVOID    AutoLogContext,
    UCHAR    level,
    ULONG    flags,
    USHORT   id,
    LPCGUID  traceGuid
    , const char* _a1, const void* _a2, unsigned int _a3, unsigned int _a4
    )
{
    if (WPP_ENABLE_FLAG_BIT(flags) && 
       (WPP_CONTROL(flags).Level >= level)) {
        WPP_TRACE( WPP_CONTROL(flags).Logger,
                   WPP_TRACE_OPTIONS,
                   (LPGUID)traceGuid,
                   id,
                   WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(const void*,_a2) WPP_LOGTYPEVAL(unsigned int,_a3) WPP_LOGTYPEVAL(unsigned int,_a4)  0);

    }
    
    WPP_RECORDER( AutoLogContext, level, flags, (LPGUID) traceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(const void*,_a2) WPP_LOGTYPEVAL(unsigned int,_a3) WPP_LOGTYPEVAL(unsigned int,_a4)  0);
}
#endif  // #ifndef WPP_RECORDER_SF_sqDD_def


#ifndef WPP_SF_sqDDD_def
#       define WPP_SF_sqDDD_def
WPP_INLINE void WPP_SF_sqDDD(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, const char* _a1, const void* _a2, unsigned int _a3, unsigned int _a4, unsigned int _a5)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(const void*,_a2) WPP_LOGTYPEVAL(unsigned int,_a3) WPP_LOGTYPEVAL(unsigned int,_a4) WPP_LOGTYPEVAL(unsigned int,_a5)  0); }
#endif  // #ifndef WPP_SF_sqDDD_def


//
// Generate the WPP_RECORDER_SP_sqDDD function    2
//
#ifndef WPP_RECORDER_SF_sqDDD_def
#       define WPP_RECORDER_SF_sqDDD_def
WPP_INLINE
VOID
WPP_RECORDER_SF_sqDDD(
    PVOID    AutoLogContext,
    UCHAR    level,
    ULONG    flags,
    USHORT   id,
    LPCGUID  traceGuid
    , const char* _a1, const void* _a2, unsigned int _a3, unsigned int _a4, unsigned int _a5
    )
{
    if (WPP_ENABLE_FLAG_BIT(flags) && 
       (WPP_CONTROL(flags).Level >= level)) {
        WPP_TRACE( WPP_CONTROL(flags).Logger,
                   WPP_TRACE_OPTIONS,
                   (LPGUID)traceGuid,
                   id,
                   WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(const void*,_a2) WPP_LOGTYPEVAL(unsigned int,_a3) WPP_LOGTYPEVAL(unsigned int,_a4) WPP_LOGTYPEVAL(unsigned int,_a5)  0);

    }
    
    WPP_RECORDER( AutoLogContext, level, flags, (LPGUID) traceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(const void*,_a2) WPP_LOGTYPEVAL(unsigned int,_a3) WPP_LOGTYPEVAL(unsigned int,_a4) WPP_LOGTYPEVAL(unsigned int,_a5)  0);
}
#endif  // #ifndef WPP_RECORDER_SF_sqDDD_def


#ifndef WPP_SF_sqDDDD_def
#       define WPP_SF_sqDDDD_def
WPP_INLINE void WPP_SF_sqDDDD(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, const char* _a1, const void* _a2, unsigned int _a3, unsigned int _a4, unsigned int _a5, unsigned int _a6)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(const void*,_a2) WPP_LOGTYPEVAL(unsigned int,_a3) WPP_LOGTYPEVAL(unsigned int,_a4) WPP_LOGTYPEVAL(unsigned int,_a5) WPP_LOGTYPEVAL(unsigned int,_a6)  0); }
#endif  // #ifndef WPP_SF_sqDDDD_def


//
// Generate the WPP_RECORDER_SP_sqDDDD function    2
//
#ifndef WPP_RECORDER_SF_sqDDDD_def
#       define WPP_RECORDER_SF_sqDDDD_def
WPP_INLINE
VOID
WPP_RECORDER_SF_sqDDDD(
    PVOID    AutoLogContext,
    UCHAR    level,
    ULONG    flags,
    USHORT   id,
    LPCGUID  traceGuid
    , const char* _a1, const void* _a2, unsigned int _a3, unsigned int _a4, unsigned int _a5, unsigned int _a6
    )
{
    if (WPP_ENABLE_FLAG_BIT(flags) && 
       (WPP_CONTROL(flags).Level >= level)) {
        WPP_TRACE( WPP_CONTROL(flags).Logger,
                   WPP_TRACE_OPTIONS,
                   (LPGUID)traceGuid,
                   id,
                   WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(const void*,_a2) WPP_LOGTYPEVAL(unsigned int,_a3) WPP_LOGTYPEVAL(unsigned int,_a4) WPP_LOGTYPEVAL(unsigned int,_a5) WPP_LOGTYPEVAL(unsigned int,_a6)  0);

    }
    
    WPP_RECORDER( AutoLogContext, level, flags, (LPGUID) traceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(const void*,_a2) WPP_LOGTYPEVAL(unsigned int,_a3) WPP_LOGTYPEVAL(unsigned int,_a4) WPP_LOGTYPEVAL(unsigned int,_a5) WPP_LOGTYPEVAL(unsigned int,_a6)  0);
}
#endif  // #ifndef WPP_RECORDER_SF_sqDDDD_def


#ifndef WPP_SF_sqDDd_def
#       define WPP_SF_sqDDd_def
WPP_INLINE void WPP_SF_sqDDd(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, const char* _a1, const void* _a2, unsigned int _a3, unsigned int _a4, signed int _a5)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(const void*,_a2) WPP_LOGTYPEVAL(unsigned int,_a3) WPP_LOGTYPEVAL(unsigned int,_a4) WPP_LOGTYPEVAL(signed int,_a5)  0); }
#endif  // #ifndef WPP_SF_sqDDd_def


//
// Generate the WPP_RECORDER_SP_sqDDd function    2
//
#ifndef WPP_RECORDER_SF_sqDDd_def
#       define WPP_RECORDER_SF_sqDDd_def
WPP_INLINE
VOID
WPP_RECORDER_SF_sqDDd(
    PVOID    AutoLogContext,
    UCHAR    level,
    ULONG    flags,
    USHORT   id,
    LPCGUID  traceGuid
    , const char* _a1, const void* _a2, unsigned int _a3, unsigned int _a4, signed int _a5
    )
{
    if (WPP_ENABLE_FLAG_BIT(flags) && 
       (WPP_CONTROL(flags).Level >= level)) {
        WPP_TRACE( WPP_CONTROL(flags).Logger,
                   WPP_TRACE_OPTIONS,
                   (LPGUID)traceGuid,
                   id,
                   WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(const void*,_a2) WPP_LOGTYPEVAL(unsigned int,_a3) WPP_LOGTYPEVAL(unsigned int,_a4) WPP_LOGTYPEVAL(signed int,_a5)  0);

    }
    
    WPP_RECORDER( AutoLogContext, level, flags, (LPGUID) traceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(const void*,_a2) WPP_LOGTYPEVAL(unsigned int,_a3) WPP_LOGTYPEVAL(unsigned int,_a4) WPP_LOGTYPEVAL(signed int,_a5)  0);
}
#endif  // #ifndef WPP_RECORDER_SF_sqDDd_def


#ifndef WPP_SF_sqDd_def
#       define WPP_SF_sqDd_def
WPP_INLINE void WPP_SF_sqDd(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, const char* _a1, const void* _a2, unsigned int _a3, signed int _a4)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(const void*,_a2) WPP_LOGTYPEVAL(unsigned int,_a3) WPP_LOGTYPEVAL(signed int,_a4)  0); }
#endif  // #ifndef WPP_SF_sqDd_def


//
// Generate the WPP_RECORDER_SP_sqDd function    2
//
#ifndef WPP_RECORDER_SF_sqDd_def
#       define WPP_RECORDER_SF_sqDd_def
WPP_INLINE
VOID
WPP_RECORDER_SF_sqDd(
    PVOID    AutoLogContext,
    UCHAR    level,
    ULONG    flags,
    USHORT   id,
    LPCGUID  traceGuid
    , const char* _a1, const void* _a2, unsigned int _a3, signed int _a4
    )
{
    if (WPP_ENABLE_FLAG_BIT(flags) && 
       (WPP_CONTROL(flags).Level >= level)) {
        WPP_TRACE( WPP_CONTROL(flags).Logger,
                   WPP_TRACE_OPTIONS,
                   (LPGUID)traceGuid,
                   id,
                   WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(const void*,_a2) WPP_LOGTYPEVAL(unsigned int,_a3) WPP_LOGTYPEVAL(signed int,_a4)  0);

    }
    
    WPP_RECORDER( AutoLogContext, level, flags, (LPGUID) traceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(const void*,_a2) WPP_LOGTYPEVAL(unsigned int,_a3) WPP_LOGTYPEVAL(signed int,_a4)  0);
}
#endif  // #ifndef WPP_RECORDER_SF_sqDd_def


#ifndef WPP_SF_sqd_def
#       define WPP_SF_sqd_def
WPP_INLINE void WPP_SF_sqd(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, const char* _a1, const void* _a2, signed int _a3)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(const void*,_a2) WPP_LOGTYPEVAL(signed int,_a3)  0); }
#endif  // #ifndef WPP_SF_sqd_def


//
// Generate the WPP_RECORDER_SP_sqd function    2
//
#ifndef WPP_RECORDER_SF_sqd_def
#       define WPP_RECORDER_SF_sqd_def
WPP_INLINE
VOID
WPP_RECORDER_SF_sqd(
    PVOID    AutoLogContext,
    UCHAR    level,
    ULONG    flags,
    USHORT   id,
    LPCGUID  traceGuid
    , const char* _a1, const void* _a2, signed int _a3
    )
{
    if (WPP_ENABLE_FLAG_BIT(flags) && 
       (WPP_CONTROL(flags).Level >= level)) {
        WPP_TRACE( WPP_CONTROL(flags).Logger,
                   WPP_TRACE_OPTIONS,
                   (LPGUID)traceGuid,
                   id,
                   WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(const void*,_a2) WPP_LOGTYPEVAL(signed int,_a3)  0);

    }
    
    WPP_RECORDER( AutoLogContext, level, flags, (LPGUID) traceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(const void*,_a2) WPP_LOGTYPEVAL(signed int,_a3)  0);
}
#endif  // #ifndef WPP_RECORDER_SF_sqd_def


#ifndef WPP_SF_sqq_def
#       define WPP_SF_sqq_def
WPP_INLINE void WPP_SF_sqq(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, const char* _a1, const void* _a2, const void* _a3)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(const void*,_a2) WPP_LOGTYPEVAL(const void*,_a3)  0); }
#endif  // #ifndef WPP_SF_sqq_def


//
// Generate the WPP_RECORDER_SP_sqq function    2
//
#ifndef WPP_RECORDER_SF_sqq_def
#       define WPP_RECORDER_SF_sqq_def
WPP_INLINE
VOID
WPP_RECORDER_SF_sqq(
    PVOID    AutoLogContext,
    UCHAR    level,
    ULONG    flags,
    USHORT   id,
    LPCGUID  traceGuid
    , const char* _a1, const void* _a2, const void* _a3
    )
{
    if (WPP_ENABLE_FLAG_BIT(flags) && 
       (WPP_CONTROL(flags).Level >= level)) {
        WPP_TRACE( WPP_CONTROL(flags).Logger,
                   WPP_TRACE_OPTIONS,
                   (LPGUID)traceGuid,
                   id,
                   WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(const void*,_a2) WPP_LOGTYPEVAL(const void*,_a3)  0);

    }
    
    WPP_RECORDER( AutoLogContext, level, flags, (LPGUID) traceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(const void*,_a2) WPP_LOGTYPEVAL(const void*,_a3)  0);
}
#endif  // #ifndef WPP_RECORDER_SF_sqq_def


#ifndef WPP_SF_sqqD_def
#       define WPP_SF_sqqD_def
WPP_INLINE void WPP_SF_sqqD(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, const char* _a1, const void* _a2, const void* _a3, unsigned int _a4)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(const void*,_a2) WPP_LOGTYPEVAL(const void*,_a3) WPP_LOGTYPEVAL(unsigned int,_a4)  0); }
#endif  // #ifndef WPP_SF_sqqD_def


//
// Generate the WPP_RECORDER_SP_sqqD function    2
//
#ifndef WPP_RECORDER_SF_sqqD_def
#       define WPP_RECORDER_SF_sqqD_def
WPP_INLINE
VOID
WPP_RECORDER_SF_sqqD(
    PVOID    AutoLogContext,
    UCHAR    level,
    ULONG    flags,
    USHORT   id,
    LPCGUID  traceGuid
    , const char* _a1, const void* _a2, const void* _a3, unsigned int _a4
    )
{
    if (WPP_ENABLE_FLAG_BIT(flags) && 
       (WPP_CONTROL(flags).Level >= level)) {
        WPP_TRACE( WPP_CONTROL(flags).Logger,
                   WPP_TRACE_OPTIONS,
                   (LPGUID)traceGuid,
                   id,
                   WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(const void*,_a2) WPP_LOGTYPEVAL(const void*,_a3) WPP_LOGTYPEVAL(unsigned int,_a4)  0);

    }
    
    WPP_RECORDER( AutoLogContext, level, flags, (LPGUID) traceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(const void*,_a2) WPP_LOGTYPEVAL(const void*,_a3) WPP_LOGTYPEVAL(unsigned int,_a4)  0);
}
#endif  // #ifndef WPP_RECORDER_SF_sqqD_def


#ifndef WPP_SF_sqqq_def
#       define WPP_SF_sqqq_def
WPP_INLINE void WPP_SF_sqqq(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, const char* _a1, const void* _a2, const void* _a3, const void* _a4)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(const void*,_a2) WPP_LOGTYPEVAL(const void*,_a3) WPP_LOGTYPEVAL(const void*,_a4)  0); }
#endif  // #ifndef WPP_SF_sqqq_def


//
// Generate the WPP_RECORDER_SP_sqqq function    2
//
#ifndef WPP_RECORDER_SF_sqqq_def
#       define WPP_RECORDER_SF_sqqq_def
WPP_INLINE
VOID
WPP_RECORDER_SF_sqqq(
    PVOID    AutoLogContext,
    UCHAR    level,
    ULONG    flags,
    USHORT   id,
    LPCGUID  traceGuid
    , const char* _a1, const void* _a2, const void* _a3, const void* _a4
    )
{
    if (WPP_ENABLE_FLAG_BIT(flags) && 
       (WPP_CONTROL(flags).Level >= level)) {
        WPP_TRACE( WPP_CONTROL(flags).Logger,
                   WPP_TRACE_OPTIONS,
                   (LPGUID)traceGuid,
                   id,
                   WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(const void*,_a2) WPP_LOGTYPEVAL(const void*,_a3) WPP_LOGTYPEVAL(const void*,_a4)  0);

    }
    
    WPP_RECORDER( AutoLogContext, level, flags, (LPGUID) traceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(const void*,_a2) WPP_LOGTYPEVAL(const void*,_a3) WPP_LOGTYPEVAL(const void*,_a4)  0);
}
#endif  // #ifndef WPP_RECORDER_SF_sqqq_def


#ifndef WPP_POST
#  define WPP_POST()
#endif

#ifndef WPP_PRE
#  define WPP_PRE()
#endif


#ifdef WPP_DEBUG
#else
#endif


#ifdef WPP_DEBUG
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c1016(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c1016) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sq(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 48,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c1039(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c1039) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sq(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 49,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c1073(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c1073) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sq(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 50,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c1106(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c1106) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 51,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c1118(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c1118) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 52,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c1127(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c1127) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sqD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 53,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c1148(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c1148) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sq(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 54,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c116(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c116) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sd(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 11,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c1177(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c1177) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sDq(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 55,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c1208(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c1208) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sDD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 56,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c1225(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c1225) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sd(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 57,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c1244(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c1244) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sDD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 58,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c1280(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c1280) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sDD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 59,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c1298(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c1298) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sDDDDD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 60,WPP_LOCAL_TraceGuids+0 WPP_R012345 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c1307(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c1307) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 61,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c1319(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c1319) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 62,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c1332(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c1332) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sDq(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 63,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c1345(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c1345) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 64,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c1364(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c1364) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sd(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 65,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c1380(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c1380) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 66,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c1406(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c1406) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 67,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c1416(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c1416) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sDd(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 68,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c1445(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c1445) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sq(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 69,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c1459(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c1459) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sq(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 70,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c1484(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c1484) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 71,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c149(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c149) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 12,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c1503(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c1503) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 72,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c1513(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c1513) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 73,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c1532(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c1532) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 74,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c1544(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c1544) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 75,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c1557(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c1557) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 76,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c1571(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c1571) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sqD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 77,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c1598(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c1598) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 78,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c1660(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c1660) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 79,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c1670(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c1670) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sDq(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 80,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c1691(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c1691) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 81,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c1707(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c1707) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sDd(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 82,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c1719(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c1719) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 83,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c1728(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c1728) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 84,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c1742(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c1742) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 85,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c1764(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c1764) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 86,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c177(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c177) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sd(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 13,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c1773(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c1773) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 87,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c1785(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c1785) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 88,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c1809(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c1809) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 89,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c1825(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c1825) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 90,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c1841(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c1841) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 91,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c1875(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c1875) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sDD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 92,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c1918(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c1918) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sd(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 93,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c1927(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c1927) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sd(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 94,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c1937(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c1937) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 95,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c1956(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c1956) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 96,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c1981(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c1981) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 97,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c2015(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c2015) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sqqD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 98,WPP_LOCAL_TraceGuids+0 WPP_R0123 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c202(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c202) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sd(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 14,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c2031(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c2031) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 99,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c2056(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c2056) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sd(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 100,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c2097(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c2097) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 101,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c2128(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c2128) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sqqD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 102,WPP_LOCAL_TraceGuids+0 WPP_R0123 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c2163(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c2163) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 103,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c217(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c217) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 15,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c2186(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c2186) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 104,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c2221(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c2221) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 105,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c2245(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c2245) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 106,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c2260(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c2260) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 107,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c2279(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c2279) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 108,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c2291(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c2291) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sdD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 109,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c2317(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c2317) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 110,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c2343(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c2343) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sDqD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 111,WPP_LOCAL_TraceGuids+0 WPP_R0123 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c2354(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c2354) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 112,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c2371(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c2371) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sDD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 113,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c2386(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c2386) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sq(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 114,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c2419(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c2419) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sq(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 115,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c245(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c245) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 16,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c2450(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c2450) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sDDq(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 116,WPP_LOCAL_TraceGuids+0 WPP_R0123 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c2459(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c2459) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sqD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 117,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c2480(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c2480) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 118,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c2489(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c2489) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 119,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c2505(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c2505) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 120,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c2528(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c2528) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 121,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c2555(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c2555) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sq(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 122,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c2584(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c2584) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sqD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 123,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c2598(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c2598) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sqD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 124,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c261(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c261) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sDq(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 17,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c2612(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c2612) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 125,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c2636(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c2636) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 126,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c2666(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c2666) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sDD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 127,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c2689(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c2689) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 128,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c272(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c272) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sq(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 18,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c2731(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c2731) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sd(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 129,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c2759(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c2759) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sDDqD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 130,WPP_LOCAL_TraceGuids+0 WPP_R01234 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c281(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c281) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sqD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 19,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c2844(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c2844) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sDqDD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 131,WPP_LOCAL_TraceGuids+0 WPP_R01234 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c2857(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c2857) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 132,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c2866(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c2866) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 133,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c2887(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c2887) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 134,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c2897(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c2897) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 135,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c2926(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c2926) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 136,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c2936(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c2936) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 137,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c2949(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c2949) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 138,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c2966(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c2966) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sq(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 139,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c2982(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c2982) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sqDD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 140,WPP_LOCAL_TraceGuids+0 WPP_R0123 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c2998(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c2998) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sDq(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 141,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c3021(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c3021) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sqD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 142,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c3042(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c3042) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 143,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c3053(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c3053) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 144,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c3081(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c3081) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sqDDD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 145,WPP_LOCAL_TraceGuids+0 WPP_R01234 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c310(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c310) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sq(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 20,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c3114(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c3114) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sqD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 146,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c3125(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c3125) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sqD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 147,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c3141(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c3141) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sDDq(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 148,WPP_LOCAL_TraceGuids+0 WPP_R0123 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c3157(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c3157) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sqDDDD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 149,WPP_LOCAL_TraceGuids+0 WPP_R012345 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c3183(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c3183) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sqDD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 150,WPP_LOCAL_TraceGuids+0 WPP_R0123 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c3224(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c3224) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sDDq(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 151,WPP_LOCAL_TraceGuids+0 WPP_R0123 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c3240(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c3240) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sqDDD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 152,WPP_LOCAL_TraceGuids+0 WPP_R01234 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c325(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c325) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sDq(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 21,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c3269(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c3269) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sqDDD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 153,WPP_LOCAL_TraceGuids+0 WPP_R01234 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c3305(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c3305) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sDDq(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 154,WPP_LOCAL_TraceGuids+0 WPP_R0123 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c3321(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c3321) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sqDDDD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 155,WPP_LOCAL_TraceGuids+0 WPP_R012345 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c3338(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c3338) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 156,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c3381(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c3381) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sDD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 157,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c3399(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c3399) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 158,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c3438(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c3438) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sDD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 159,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c3460(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c3460) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 160,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c3474(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c3474) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 161,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c3488(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c3488) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 162,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c3502(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c3502) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 163,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c352(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c352) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 22,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c3535(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c3535) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sq(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 164,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c3558(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c3558) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sqDd(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 165,WPP_LOCAL_TraceGuids+0 WPP_R0123 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c3571(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c3571) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sqDDd(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 166,WPP_LOCAL_TraceGuids+0 WPP_R01234 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c3585(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c3585) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sqd(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 167,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c3619(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c3619) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 168,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c3628(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c3628) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 169,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c3651(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c3651) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sDq(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 170,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c3664(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c3664) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sDq(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 171,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c3676(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c3676) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 172,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c3714(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c3714) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 173,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c3726(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c3726) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 174,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c3735(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c3735) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 175,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c3757(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c3757) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 176,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c3773(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c3773) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 177,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c3794(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c3794) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 178,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c3809(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c3809) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 179,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c3819(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c3819) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sqq(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 180,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c3832(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c3832) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 181,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c3845(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c3845) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 182,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c3856(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c3856) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sq(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 183,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c3870(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c3870) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 184,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c3878(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c3878) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 185,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c3896(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c3896) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 186,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c3908(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c3908) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sq(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 187,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c3920(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c3920) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 188,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c3932(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c3932) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 189,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c395(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c395) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 23,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c3968(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c3968) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sq(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 190,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c3979(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c3979) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sqqq(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 191,WPP_LOCAL_TraceGuids+0 WPP_R0123 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c3997(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c3997) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 192,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c4005(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c4005) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 193,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c4024(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c4024) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sqqq(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 194,WPP_LOCAL_TraceGuids+0 WPP_R0123 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c4065(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c4065) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sq(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 195,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c4128(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c4128) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sdd(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 196,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c4137(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c4137) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 197,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c4148(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c4148) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 198,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c4184(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c4184) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 199,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c419(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c419) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sqD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 24,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c4196(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c4196) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 200,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c4210(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c4210) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 201,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c4242(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c4242) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sd(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 202,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c4283(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c4283) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 203,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c431(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c431) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sDq(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 25,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c4310(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c4310) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 204,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c4330(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c4330) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sq(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 205,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c452(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c452) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sq(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 26,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c482(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c482) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sq(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 27,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c495(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c495) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sDD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 28,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c529(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c529) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sq(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 29,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c552(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c552) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sqD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 30,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c583(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c583) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sqD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 31,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c614(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c614) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sqq(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 32,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c649(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c649) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sDqD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 33,WPP_LOCAL_TraceGuids+0 WPP_R0123 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c678(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c678) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 34,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c707(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c707) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 35,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c720(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c720) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 36,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c743(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c743) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sq(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 37,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c765(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c765) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sDq(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 38,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c792(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c792) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 39,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c816(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c816) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 40,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c841(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c841) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 41,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c869(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c869) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 42,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c87(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c87) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sd(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 10,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c890(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c890) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 43,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c927(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c927) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sq(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 44,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c957(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c957) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sq(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 45,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c971(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c971) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 46,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c991(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c991) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sDq(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 47,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#else
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c1016(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c1016) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sq(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 48,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c1039(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c1039) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sq(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 49,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c1073(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c1073) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sq(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 50,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c1106(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c1106) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 51,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c1118(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c1118) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 52,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c1127(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c1127) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sqD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 53,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c1148(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c1148) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sq(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 54,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c116(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c116) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sd(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 11,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c1177(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c1177) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sDq(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 55,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c1208(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c1208) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sDD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 56,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c1225(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c1225) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sd(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 57,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c1244(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c1244) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sDD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 58,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c1280(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c1280) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sDD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 59,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c1298(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c1298) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sDDDDD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 60,WPP_LOCAL_TraceGuids+0 WPP_R012345 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c1307(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c1307) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 61,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c1319(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c1319) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 62,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c1332(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c1332) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sDq(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 63,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c1345(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c1345) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 64,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c1364(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c1364) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sd(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 65,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c1380(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c1380) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 66,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c1406(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c1406) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 67,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c1416(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c1416) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sDd(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 68,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c1445(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c1445) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sq(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 69,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c1459(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c1459) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sq(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 70,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c1484(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c1484) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 71,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c149(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c149) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 12,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c1503(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c1503) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 72,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c1513(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c1513) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 73,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c1532(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c1532) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 74,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c1544(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c1544) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 75,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c1557(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c1557) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 76,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c1571(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c1571) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sqD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 77,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c1598(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c1598) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 78,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c1660(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c1660) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 79,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c1670(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c1670) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sDq(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 80,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c1691(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c1691) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 81,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c1707(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c1707) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sDd(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 82,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c1719(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c1719) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 83,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c1728(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c1728) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 84,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c1742(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c1742) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 85,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c1764(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c1764) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 86,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c177(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c177) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sd(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 13,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c1773(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c1773) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 87,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c1785(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c1785) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 88,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c1809(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c1809) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 89,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c1825(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c1825) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 90,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c1841(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c1841) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 91,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c1875(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c1875) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sDD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 92,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c1918(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c1918) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sd(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 93,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c1927(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c1927) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sd(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 94,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c1937(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c1937) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 95,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c1956(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c1956) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 96,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c1981(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c1981) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 97,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c2015(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c2015) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sqqD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 98,WPP_LOCAL_TraceGuids+0 WPP_R0123 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c202(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c202) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sd(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 14,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c2031(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c2031) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 99,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c2056(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c2056) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sd(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 100,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c2097(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c2097) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 101,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c2128(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c2128) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sqqD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 102,WPP_LOCAL_TraceGuids+0 WPP_R0123 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c2163(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c2163) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 103,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c217(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c217) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 15,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c2186(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c2186) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 104,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c2221(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c2221) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 105,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c2245(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c2245) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 106,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c2260(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c2260) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 107,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c2279(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c2279) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 108,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c2291(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c2291) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sdD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 109,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c2317(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c2317) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 110,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c2343(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c2343) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sDqD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 111,WPP_LOCAL_TraceGuids+0 WPP_R0123 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c2354(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c2354) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 112,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c2371(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c2371) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sDD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 113,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c2386(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c2386) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sq(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 114,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c2419(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c2419) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sq(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 115,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c245(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c245) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 16,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c2450(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c2450) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sDDq(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 116,WPP_LOCAL_TraceGuids+0 WPP_R0123 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c2459(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c2459) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sqD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 117,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c2480(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c2480) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 118,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c2489(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c2489) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 119,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c2505(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c2505) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 120,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c2528(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c2528) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 121,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c2555(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c2555) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sq(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 122,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c2584(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c2584) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sqD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 123,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c2598(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c2598) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sqD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 124,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c261(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c261) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sDq(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 17,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c2612(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c2612) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 125,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c2636(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c2636) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 126,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c2666(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c2666) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sDD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 127,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c2689(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c2689) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 128,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c272(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c272) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sq(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 18,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c2731(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c2731) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sd(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 129,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c2759(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c2759) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sDDqD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 130,WPP_LOCAL_TraceGuids+0 WPP_R01234 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c281(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c281) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sqD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 19,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c2844(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c2844) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sDqDD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 131,WPP_LOCAL_TraceGuids+0 WPP_R01234 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c2857(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c2857) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 132,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c2866(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c2866) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 133,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c2887(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c2887) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 134,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c2897(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c2897) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 135,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c2926(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c2926) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 136,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c2936(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c2936) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 137,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c2949(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c2949) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 138,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c2966(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c2966) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sq(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 139,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c2982(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c2982) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sqDD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 140,WPP_LOCAL_TraceGuids+0 WPP_R0123 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c2998(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c2998) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sDq(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 141,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c3021(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c3021) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sqD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 142,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c3042(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c3042) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 143,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c3053(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c3053) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 144,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c3081(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c3081) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sqDDD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 145,WPP_LOCAL_TraceGuids+0 WPP_R01234 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c310(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c310) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sq(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 20,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c3114(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c3114) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sqD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 146,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c3125(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c3125) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sqD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 147,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c3141(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c3141) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sDDq(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 148,WPP_LOCAL_TraceGuids+0 WPP_R0123 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c3157(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c3157) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sqDDDD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 149,WPP_LOCAL_TraceGuids+0 WPP_R012345 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c3183(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c3183) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sqDD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 150,WPP_LOCAL_TraceGuids+0 WPP_R0123 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c3224(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c3224) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sDDq(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 151,WPP_LOCAL_TraceGuids+0 WPP_R0123 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c3240(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c3240) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sqDDD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 152,WPP_LOCAL_TraceGuids+0 WPP_R01234 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c325(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c325) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sDq(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 21,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c3269(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c3269) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sqDDD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 153,WPP_LOCAL_TraceGuids+0 WPP_R01234 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c3305(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c3305) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sDDq(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 154,WPP_LOCAL_TraceGuids+0 WPP_R0123 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c3321(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c3321) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sqDDDD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 155,WPP_LOCAL_TraceGuids+0 WPP_R012345 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c3338(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c3338) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 156,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c3381(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c3381) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sDD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 157,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c3399(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c3399) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 158,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c3438(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c3438) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sDD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 159,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c3460(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c3460) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 160,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c3474(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c3474) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 161,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c3488(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c3488) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 162,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c3502(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c3502) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 163,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c352(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c352) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 22,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c3535(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c3535) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sq(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 164,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c3558(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c3558) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sqDd(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 165,WPP_LOCAL_TraceGuids+0 WPP_R0123 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c3571(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c3571) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sqDDd(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 166,WPP_LOCAL_TraceGuids+0 WPP_R01234 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c3585(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c3585) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sqd(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 167,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c3619(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c3619) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 168,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c3628(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c3628) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 169,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c3651(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c3651) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sDq(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 170,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c3664(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c3664) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sDq(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 171,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c3676(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c3676) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 172,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c3714(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c3714) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 173,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c3726(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c3726) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 174,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c3735(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c3735) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 175,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c3757(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c3757) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 176,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c3773(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c3773) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 177,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c3794(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c3794) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 178,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c3809(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c3809) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 179,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c3819(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c3819) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sqq(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 180,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c3832(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c3832) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 181,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c3845(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c3845) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 182,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c3856(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c3856) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sq(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 183,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c3870(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c3870) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 184,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c3878(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c3878) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 185,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c3896(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c3896) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 186,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c3908(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c3908) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sq(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 187,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c3920(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c3920) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 188,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c3932(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c3932) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 189,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c395(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c395) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 23,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c3968(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c3968) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sq(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 190,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c3979(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c3979) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sqqq(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 191,WPP_LOCAL_TraceGuids+0 WPP_R0123 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c3997(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c3997) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 192,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c4005(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c4005) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 193,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c4024(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c4024) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sqqq(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 194,WPP_LOCAL_TraceGuids+0 WPP_R0123 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c4065(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c4065) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sq(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 195,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c4128(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c4128) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sdd(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 196,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c4137(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c4137) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 197,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c4148(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c4148) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 198,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c4184(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c4184) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 199,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c419(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c419) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sqD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 24,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c4196(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c4196) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 200,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c4210(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c4210) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 201,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c4242(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c4242) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sd(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 202,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c4283(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c4283) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 203,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c431(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c431) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sDq(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 25,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c4310(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c4310) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 204,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c4330(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c4330) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sq(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 205,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c452(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c452) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sq(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 26,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c482(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c482) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sq(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 27,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c495(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c495) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sDD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 28,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c529(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c529) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sq(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 29,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c552(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c552) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sqD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 30,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c583(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c583) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sqD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 31,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c614(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c614) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sqq(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 32,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c649(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c649) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sDqD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 33,WPP_LOCAL_TraceGuids+0 WPP_R0123 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c678(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c678) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 34,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c707(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c707) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 35,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c720(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c720) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 36,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c743(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c743) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sq(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 37,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c765(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c765) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sDq(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 38,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c792(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c792) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 39,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c816(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c816) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 40,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c841(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c841) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 41,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c869(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c869) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 42,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c87(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c87) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sd(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 10,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c890(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c890) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 43,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c927(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c927) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sq(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 44,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c957(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c957) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sq(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 45,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c971(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c971) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 46,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c991(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c991) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sDq(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 47,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#endif



#if defined(__cplusplus)
};
#endif


#else
// template tracemacro.tpl

// This template expects:
//      WPP_THIS_FILE defined (see header.tpl)
//      WPP_LOGGER_ARG  defined
//      WPP_GET_LOGGER  defined
//      WPP_ENABLED() defined

#if defined(__cplusplus)
extern "C" {
#endif

#ifndef WPP_ALREADY_INCLUDED

#ifndef NO_CHECK_FOR_NULL_STRING
#ifndef WPP_CHECK_FOR_NULL_STRING
#define WPP_CHECK_FOR_NULL_STRING 1
#endif
#endif

#define WPP_EVAL(_value_) _value_
#define WPP_(Id) WPP_EVAL(WPP_) ## WPP_EVAL(Id) ## WPP_EVAL(_) ## WPP_EVAL(WPP_THIS_FILE) ## WPP_EVAL(__LINE__)

#if !defined(WPP_INLINE)
#define WPP_INLINE DECLSPEC_NOINLINE __inline
#endif

#else   // #ifndef WPP_ALREADY_INCLUDED

#undef WPP_LOCAL_TraceGuids

#endif  // #ifndef WPP_ALREADY_INCLUDED

#if !defined(WPP_NO_ANNOTATIONS)

#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c1016
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c1039
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c1073
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c1106
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c1118
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c1127
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c1148
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c116
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c1177
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c1208
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c1225
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c1244
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c1280
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c1298
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c1307
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c1319
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c1332
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c1345
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c1364
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c1380
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c1406
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c1416
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c1445
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c1459
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c1484
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c149
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c1503
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c1513
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c1532
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c1544
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c1557
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c1571
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c1598
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c1660
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c1670
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c1691
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c1707
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c1719
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c1728
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c1742
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c1764
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c177
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c1773
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c1785
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c1809
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c1825
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c1841
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c1875
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c1918
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c1927
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c1937
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c1956
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c1981
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c2015
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c202
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c2031
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c2056
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c2097
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c2128
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c2163
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c217
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c2186
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c2221
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c2245
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c2260
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c2279
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c2291
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c2317
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c2343
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c2354
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c2371
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c2386
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c2419
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c245
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c2450
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c2459
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c2480
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c2489
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c2505
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c2528
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c2555
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c2584
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c2598
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c261
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c2612
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c2636
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c2666
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c2689
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c272
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c2731
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c2759
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c281
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c2844
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c2857
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c2866
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c2887
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c2897
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c2926
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c2936
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c2949
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c2966
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c2982
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c2998
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c3021
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c3042
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c3053
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c3081
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c310
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c3114
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c3125
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c3141
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c3157
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c3183
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c3224
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c3240
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c325
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c3269
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c3305
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c3321
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c3338
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c3381
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c3399
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c3438
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c3460
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c3474
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c3488
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c3502
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c352
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c3535
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c3558
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c3571
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c3585
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c3619
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c3628
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c3651
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c3664
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c3676
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c3714
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c3726
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c3735
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c3757
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c3773
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c3794
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c3809
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c3819
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c3832
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c3845
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c3856
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c3870
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c3878
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c3896
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c3908
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c3920
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c3932
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c395
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c3968
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c3979
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c3997
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c4005
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c4024
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c4065
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c4128
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c4137
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c4148
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c4184
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c419
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c4196
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c4210
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c4242
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c4283
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c431
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c4310
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c4330
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c452
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c482
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c495
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c529
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c552
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c583
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c614
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c649
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c678
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c707
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c720
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c743
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c765
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c792
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c816
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c841
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c869
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c87
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c890
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c927
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c957
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c971
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPWR_c991
#endif
#ifdef WPP_EMIT_FUNC_NAME
#define WPP_FUNC_NAME L" FUNC=" _WPPW(__FUNCTION__)
#else
#define WPP_FUNC_NAME
#endif

#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c1016_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 48 \"%0<%10!s!> DecreaseDevicePower: IRP 0x%11!p!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c1016_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 48 \"%0<%10!s!> DecreaseDevicePower: IRP 0x%11!p!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c1016
    #define WPP_ANNOTATE_USBPWR_c1016 WPP_ANNOTATE_USBPWR_c1016_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemPtr -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c1016 WPP_ANNOTATE_USBPWR_c1016_FINAL("TMF:", "USBPWR.c", "USBPWR_c1016", L"{", L"pDevExt->PortName, ItemString -- 10" , L"Irp, ItemPtr -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c1039_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 49 \"%0<%10!s!> DecreaseDevicePower: not in D0, no act(0x%11!p!)\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c1039_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 49 \"%0<%10!s!> DecreaseDevicePower: not in D0, no act(0x%11!p!)\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c1039
    #define WPP_ANNOTATE_USBPWR_c1039 WPP_ANNOTATE_USBPWR_c1039_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemPtr -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c1039 WPP_ANNOTATE_USBPWR_c1039_FINAL("TMF:", "USBPWR.c", "USBPWR_c1039", L"{", L"pDevExt->PortName, ItemString -- 10" , L"Irp, ItemPtr -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c1073_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 50 \"%0<%10!s!> -->ScheduleDevicePowerUp: 0x%11!p!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c1073_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 50 \"%0<%10!s!> -->ScheduleDevicePowerUp: 0x%11!p!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c1073
    #define WPP_ANNOTATE_USBPWR_c1073 WPP_ANNOTATE_USBPWR_c1073_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemPtr -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c1073 WPP_ANNOTATE_USBPWR_c1073_FINAL("TMF:", "USBPWR.c", "USBPWR_c1073", L"{", L"pDevExt->PortName, ItemString -- 10" , L"Irp, ItemPtr -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c1106_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 51 \"%0<%10!s!> ScheduleDevicePowerUp: Out of mem 1\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c1106_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 51 \"%0<%10!s!> ScheduleDevicePowerUp: Out of mem 1\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c1106
    #define WPP_ANNOTATE_USBPWR_c1106 WPP_ANNOTATE_USBPWR_c1106_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c1106 WPP_ANNOTATE_USBPWR_c1106_FINAL("TMF:", "USBPWR.c", "USBPWR_c1106", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c1118_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 52 \"%0<%10!s!> ScheduleDevicePowerUp: Out of mem 2\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c1118_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 52 \"%0<%10!s!> ScheduleDevicePowerUp: Out of mem 2\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c1118
    #define WPP_ANNOTATE_USBPWR_c1118 WPP_ANNOTATE_USBPWR_c1118_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c1118 WPP_ANNOTATE_USBPWR_c1118_FINAL("TMF:", "USBPWR.c", "USBPWR_c1118", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c1127_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 53 \"%0<%10!s!> <--ScheduleDevicePowerUp: 0x%11!p! ST 0x%12!x!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c1127_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 53 \"%0<%10!s!> <--ScheduleDevicePowerUp: 0x%11!p! ST 0x%12!x!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c1127
    #define WPP_ANNOTATE_USBPWR_c1127 WPP_ANNOTATE_USBPWR_c1127_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemPtr -- 11" , L"Arg, ItemLong -- 12" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c1127 WPP_ANNOTATE_USBPWR_c1127_FINAL("TMF:", "USBPWR.c", "USBPWR_c1127", L"{", L"pDevExt->PortName, ItemString -- 10" , L"Irp, ItemPtr -- 11" , L"ntStatus, ItemLong -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c1148_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 54 \"%0<%10!s!> PowerUpDevice: 0x%11!p!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c1148_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 54 \"%0<%10!s!> PowerUpDevice: 0x%11!p!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c1148
    #define WPP_ANNOTATE_USBPWR_c1148 WPP_ANNOTATE_USBPWR_c1148_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemPtr -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c1148 WPP_ANNOTATE_USBPWR_c1148_FINAL("TMF:", "USBPWR.c", "USBPWR_c1148", L"{", L"pDevExt->PortName, ItemString -- 10" , L"irp, ItemPtr -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c116_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 11 \"%0<%10!s!> IRP_MN_QUERY_POWER: DevicePowerState D%11!d!\" //   FLAG=QCUSB_DBG_MASK_POWER LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c116_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 11 \"%0<%10!s!> IRP_MN_QUERY_POWER: DevicePowerState D%11!d!\" //   FLAG=QCUSB_DBG_MASK_POWER LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c116
    #define WPP_ANNOTATE_USBPWR_c116 WPP_ANNOTATE_USBPWR_c116_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c116 WPP_ANNOTATE_USBPWR_c116_FINAL("TMF:", "USBPWR.c", "USBPWR_c116", L"{", L"pDevExt->PortName, ItemString -- 10" , L"pwrState-1, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c1177_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 55 \"%0<%10!s!> PIRP (Cdev-s 0x%11!x!) 0x%12!p!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c1177_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 55 \"%0<%10!s!> PIRP (Cdev-s 0x%11!x!) 0x%12!p!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c1177
    #define WPP_ANNOTATE_USBPWR_c1177 WPP_ANNOTATE_USBPWR_c1177_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemPtr -- 12" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c1177 WPP_ANNOTATE_USBPWR_c1177_FINAL("TMF:", "USBPWR.c", "USBPWR_c1177", L"{", L"pDevExt->PortName, ItemString -- 10" , L"irp->IoStatus.Status, ItemLong -- 11" , L"irp, ItemPtr -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c1208_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 56 \"%0<%10!s!> -->CancelIdleTimer(%11!u!): BusyMask 0x%12!x!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c1208_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 56 \"%0<%10!s!> -->CancelIdleTimer(%11!u!): BusyMask 0x%12!x!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c1208
    #define WPP_ANNOTATE_USBPWR_c1208 WPP_ANNOTATE_USBPWR_c1208_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemLong -- 12" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c1208 WPP_ANNOTATE_USBPWR_c1208_FINAL("TMF:", "USBPWR.c", "USBPWR_c1208", L"{", L"pDevExt->PortName, ItemString -- 10" , L"Cookie, ItemLong -- 11" , L"BusyMask, ItemLong -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c1225_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 57 \"%0<%10!s!> CancelIdleTimer(deQ) - RML %11!d!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c1225_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 57 \"%0<%10!s!> CancelIdleTimer(deQ) - RML %11!d!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c1225
    #define WPP_ANNOTATE_USBPWR_c1225 WPP_ANNOTATE_USBPWR_c1225_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c1225 WPP_ANNOTATE_USBPWR_c1225_FINAL("TMF:", "USBPWR.c", "USBPWR_c1225", L"{", L"pDevExt->PortName, ItemString -- 10" , L"pDevExt->Sts.lRmlCount[3], ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c1244_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 58 \"%0<%10!s!> <--CancelIdleTimer(%11!u!): BusyMask 0x%12!x!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c1244_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 58 \"%0<%10!s!> <--CancelIdleTimer(%11!u!): BusyMask 0x%12!x!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c1244
    #define WPP_ANNOTATE_USBPWR_c1244 WPP_ANNOTATE_USBPWR_c1244_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemLong -- 12" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c1244 WPP_ANNOTATE_USBPWR_c1244_FINAL("TMF:", "USBPWR.c", "USBPWR_c1244", L"{", L"pDevExt->PortName, ItemString -- 10" , L"Cookie, ItemLong -- 11" , L"BusyMask, ItemLong -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c1280_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 59 \"%0<%10!s!> <--SetIdleTimer(%11!u!): BM 0x%12!x! SS disabled\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c1280_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 59 \"%0<%10!s!> <--SetIdleTimer(%11!u!): BM 0x%12!x! SS disabled\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c1280
    #define WPP_ANNOTATE_USBPWR_c1280 WPP_ANNOTATE_USBPWR_c1280_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemLong -- 12" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c1280 WPP_ANNOTATE_USBPWR_c1280_FINAL("TMF:", "USBPWR.c", "USBPWR_c1280", L"{", L"pDevExt->PortName, ItemString -- 10" , L"Cookie, ItemLong -- 11" , L"BusyMask, ItemLong -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c1298_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 60 \"%0<%10!s!> -->SetIdleTimer(%11!u!): BusyMask 0x%12!x! IRQL %13!u! Idle %14!u!s Rml[0]=%15!u!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c1298_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 60 \"%0<%10!s!> -->SetIdleTimer(%11!u!): BusyMask 0x%12!x! IRQL %13!u! Idle %14!u!s Rml[0]=%15!u!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c1298
    #define WPP_ANNOTATE_USBPWR_c1298 WPP_ANNOTATE_USBPWR_c1298_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemLong -- 12" , L"Arg, ItemLong -- 13" , L"Arg, ItemLong -- 14" , L"Arg, ItemLong -- 15" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c1298 WPP_ANNOTATE_USBPWR_c1298_FINAL("TMF:", "USBPWR.c", "USBPWR_c1298", L"{", L"pDevExt->PortName, ItemString -- 10" , L"Cookie, ItemLong -- 11" , L"BusyMask, ItemLong -- 12" , L"irql, ItemLong -- 13" , L"pDevExt->SelectiveSuspendIdleTime, ItemLong -- 14" , L"pDevExt->Sts.lRmlCount[0], ItemLong -- 15" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c1307_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 61 \"%0<%10!s!> <--SetIdleTimer(%11!u!): Suspended, no act\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c1307_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 61 \"%0<%10!s!> <--SetIdleTimer(%11!u!): Suspended, no act\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c1307
    #define WPP_ANNOTATE_USBPWR_c1307 WPP_ANNOTATE_USBPWR_c1307_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c1307 WPP_ANNOTATE_USBPWR_c1307_FINAL("TMF:", "USBPWR.c", "USBPWR_c1307", L"{", L"pDevExt->PortName, ItemString -- 10" , L"Cookie, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c1319_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 62 \"%0<%10!s!> <--SetIdleTimer(%11!u!): dev not in working state\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c1319_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 62 \"%0<%10!s!> <--SetIdleTimer(%11!u!): dev not in working state\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c1319
    #define WPP_ANNOTATE_USBPWR_c1319 WPP_ANNOTATE_USBPWR_c1319_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c1319 WPP_ANNOTATE_USBPWR_c1319_FINAL("TMF:", "USBPWR.c", "USBPWR_c1319", L"{", L"pDevExt->PortName, ItemString -- 10" , L"Cookie, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c1332_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 63 \"%0<%10!s!> <--SetIdleTimer(%11!u!): Idle req pending, no act 0x%12!p!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c1332_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 63 \"%0<%10!s!> <--SetIdleTimer(%11!u!): Idle req pending, no act 0x%12!p!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c1332
    #define WPP_ANNOTATE_USBPWR_c1332 WPP_ANNOTATE_USBPWR_c1332_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemPtr -- 12" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c1332 WPP_ANNOTATE_USBPWR_c1332_FINAL("TMF:", "USBPWR.c", "USBPWR_c1332", L"{", L"pDevExt->PortName, ItemString -- 10" , L"Cookie, ItemLong -- 11" , L"pDevExt->IdleNotificationIrp, ItemPtr -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c1345_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 64 \"%0<%10!s!> <--SetIdleTimer(%11!u!): powering down, no act\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c1345_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 64 \"%0<%10!s!> <--SetIdleTimer(%11!u!): powering down, no act\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c1345
    #define WPP_ANNOTATE_USBPWR_c1345 WPP_ANNOTATE_USBPWR_c1345_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c1345 WPP_ANNOTATE_USBPWR_c1345_FINAL("TMF:", "USBPWR.c", "USBPWR_c1345", L"{", L"pDevExt->PortName, ItemString -- 10" , L"Cookie, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c1364_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 65 \"%0<%10!s!> SetIdleTimer: re-start %11!d!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c1364_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 65 \"%0<%10!s!> SetIdleTimer: re-start %11!d!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c1364
    #define WPP_ANNOTATE_USBPWR_c1364 WPP_ANNOTATE_USBPWR_c1364_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c1364 WPP_ANNOTATE_USBPWR_c1364_FINAL("TMF:", "USBPWR.c", "USBPWR_c1364", L"{", L"pDevExt->PortName, ItemString -- 10" , L"pDevExt->Sts.lRmlCount[3], ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c1380_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 66 \"%0<%10!s!> SetIdleTimer: no reset\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c1380_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 66 \"%0<%10!s!> SetIdleTimer: no reset\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c1380
    #define WPP_ANNOTATE_USBPWR_c1380 WPP_ANNOTATE_USBPWR_c1380_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c1380 WPP_ANNOTATE_USBPWR_c1380_FINAL("TMF:", "USBPWR.c", "USBPWR_c1380", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c1406_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 67 \"%0<%10!s!> <--SetIdleTimer: ST 0x%11!x!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c1406_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 67 \"%0<%10!s!> <--SetIdleTimer: ST 0x%11!x!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c1406
    #define WPP_ANNOTATE_USBPWR_c1406 WPP_ANNOTATE_USBPWR_c1406_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c1406 WPP_ANNOTATE_USBPWR_c1406_FINAL("TMF:", "USBPWR.c", "USBPWR_c1406", L"{", L"pDevExt->PortName, ItemString -- 10" , L"ntStatus, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c1416_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 68 \"%0<%10!s!> <--SetIdleTimer: err - IoBusyMask 0x%11!x! (not 0) (RML %12!d!)\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c1416_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 68 \"%0<%10!s!> <--SetIdleTimer: err - IoBusyMask 0x%11!x! (not 0) (RML %12!d!)\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c1416
    #define WPP_ANNOTATE_USBPWR_c1416 WPP_ANNOTATE_USBPWR_c1416_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemLong -- 12" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c1416 WPP_ANNOTATE_USBPWR_c1416_FINAL("TMF:", "USBPWR.c", "USBPWR_c1416", L"{", L"pDevExt->PortName, ItemString -- 10" , L"pDevExt->IoBusyMask, ItemLong -- 11" , L"pDevExt->Sts.lRmlCount[3], ItemLong -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c1445_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 69 \"%0<%10!s!> -->IdleDpcRoutine: context 0x%11!p!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_TRACE" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c1445_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 69 \"%0<%10!s!> -->IdleDpcRoutine: context 0x%11!p!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_TRACE" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c1445
    #define WPP_ANNOTATE_USBPWR_c1445 WPP_ANNOTATE_USBPWR_c1445_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemPtr -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c1445 WPP_ANNOTATE_USBPWR_c1445_FINAL("TMF:", "USBPWR.c", "USBPWR_c1445", L"{", L"pDevExt->PortName, ItemString -- 10" , L"DeferredContext, ItemPtr -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c1459_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 70 \"%0<%10!s!> <--IdleDpcRoutine: context 0x%11!p!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_TRACE" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c1459_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 70 \"%0<%10!s!> <--IdleDpcRoutine: context 0x%11!p!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_TRACE" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c1459
    #define WPP_ANNOTATE_USBPWR_c1459 WPP_ANNOTATE_USBPWR_c1459_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemPtr -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c1459 WPP_ANNOTATE_USBPWR_c1459_FINAL("TMF:", "USBPWR.c", "USBPWR_c1459", L"{", L"pDevExt->PortName, ItemString -- 10" , L"DeferredContext, ItemPtr -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c1484_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 71 \"%0<%10!s!> -->RegisterIdleNotification\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c1484_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 71 \"%0<%10!s!> -->RegisterIdleNotification\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c1484
    #define WPP_ANNOTATE_USBPWR_c1484 WPP_ANNOTATE_USBPWR_c1484_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c1484 WPP_ANNOTATE_USBPWR_c1484_FINAL("TMF:", "USBPWR.c", "USBPWR_c1484", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c149_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 12 \"%0<%10!s!> IRP_MN_QUERY_POWER: unknown pwr type %11!u!\" //   FLAG=QCUSB_DBG_MASK_POWER LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c149_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 12 \"%0<%10!s!> IRP_MN_QUERY_POWER: unknown pwr type %11!u!\" //   FLAG=QCUSB_DBG_MASK_POWER LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c149
    #define WPP_ANNOTATE_USBPWR_c149 WPP_ANNOTATE_USBPWR_c149_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c149 WPP_ANNOTATE_USBPWR_c149_FINAL("TMF:", "USBPWR.c", "USBPWR_c149", L"{", L"pDevExt->PortName, ItemString -- 10" , L"IrpStack->Parameters.Power.Type, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c1503_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 72 \"%0<%10!s!> RegIdle: to request idle IRP\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c1503_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 72 \"%0<%10!s!> RegIdle: to request idle IRP\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c1503
    #define WPP_ANNOTATE_USBPWR_c1503 WPP_ANNOTATE_USBPWR_c1503_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c1503 WPP_ANNOTATE_USBPWR_c1503_FINAL("TMF:", "USBPWR.c", "USBPWR_c1503", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c1513_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 73 \"%0<%10!s!> RegIdle: SystemPower low, not to send idle req\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c1513_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 73 \"%0<%10!s!> RegIdle: SystemPower low, not to send idle req\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c1513
    #define WPP_ANNOTATE_USBPWR_c1513 WPP_ANNOTATE_USBPWR_c1513_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c1513 WPP_ANNOTATE_USBPWR_c1513_FINAL("TMF:", "USBPWR.c", "USBPWR_c1513", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c1532_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 74 \"%0<%10!s!> RegisterIdleNotification: selective suspension disabled\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c1532_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 74 \"%0<%10!s!> RegisterIdleNotification: selective suspension disabled\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c1532
    #define WPP_ANNOTATE_USBPWR_c1532 WPP_ANNOTATE_USBPWR_c1532_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c1532 WPP_ANNOTATE_USBPWR_c1532_FINAL("TMF:", "USBPWR.c", "USBPWR_c1532", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c1544_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 75 \"%0<%10!s!> <--RegisterIdleNotification: powering down, no act\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c1544_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 75 \"%0<%10!s!> <--RegisterIdleNotification: powering down, no act\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c1544
    #define WPP_ANNOTATE_USBPWR_c1544 WPP_ANNOTATE_USBPWR_c1544_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c1544 WPP_ANNOTATE_USBPWR_c1544_FINAL("TMF:", "USBPWR.c", "USBPWR_c1544", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c1557_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 76 \"%0<%10!s!> RegisterIdleNotification: wrong dev power state: D%11!u!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c1557_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 76 \"%0<%10!s!> RegisterIdleNotification: wrong dev power state: D%11!u!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c1557
    #define WPP_ANNOTATE_USBPWR_c1557 WPP_ANNOTATE_USBPWR_c1557_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c1557 WPP_ANNOTATE_USBPWR_c1557_FINAL("TMF:", "USBPWR.c", "USBPWR_c1557", L"{", L"pDevExt->PortName, ItemString -- 10" , L"pDevExt->DevicePower-1, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c1571_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 77 \"%0<%10!s!> RegisterIdleNotification: dev busy, abort (0x%11!p!, 0x%12!x!)\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c1571_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 77 \"%0<%10!s!> RegisterIdleNotification: dev busy, abort (0x%11!p!, 0x%12!x!)\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c1571
    #define WPP_ANNOTATE_USBPWR_c1571 WPP_ANNOTATE_USBPWR_c1571_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemPtr -- 11" , L"Arg, ItemLong -- 12" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c1571 WPP_ANNOTATE_USBPWR_c1571_FINAL("TMF:", "USBPWR.c", "USBPWR_c1571", L"{", L"pDevExt->PortName, ItemString -- 10" , L"pDevExt->IdleNotificationIrp, ItemPtr -- 11" , L"pDevExt->IoBusyMask, ItemLong -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c1598_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 78 \"%0<%10!s!> RegisterIdleNotification: no mem-0\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c1598_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 78 \"%0<%10!s!> RegisterIdleNotification: no mem-0\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c1598
    #define WPP_ANNOTATE_USBPWR_c1598 WPP_ANNOTATE_USBPWR_c1598_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c1598 WPP_ANNOTATE_USBPWR_c1598_FINAL("TMF:", "USBPWR.c", "USBPWR_c1598", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c1660_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 79 \"%0<%10!s!> RegisterIdleNotification: rm lock failrue\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c1660_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 79 \"%0<%10!s!> RegisterIdleNotification: rm lock failrue\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c1660
    #define WPP_ANNOTATE_USBPWR_c1660 WPP_ANNOTATE_USBPWR_c1660_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c1660 WPP_ANNOTATE_USBPWR_c1660_FINAL("TMF:", "USBPWR.c", "USBPWR_c1660", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c1670_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 80 \"%0<%10!s!> RegisterIdleNotification: Submit an idle req at D%11!u! 0x%12!p!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c1670_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 80 \"%0<%10!s!> RegisterIdleNotification: Submit an idle req at D%11!u! 0x%12!p!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c1670
    #define WPP_ANNOTATE_USBPWR_c1670 WPP_ANNOTATE_USBPWR_c1670_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemPtr -- 12" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c1670 WPP_ANNOTATE_USBPWR_c1670_FINAL("TMF:", "USBPWR.c", "USBPWR_c1670", L"{", L"pDevExt->PortName, ItemString -- 10" , L"pDevExt->DevicePower-1, ItemLong -- 11" , L"irp, ItemPtr -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c1691_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 81 \"%0<%10!s!> RegisterIdleNotification: no mem\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c1691_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 81 \"%0<%10!s!> RegisterIdleNotification: no mem\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c1691
    #define WPP_ANNOTATE_USBPWR_c1691 WPP_ANNOTATE_USBPWR_c1691_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c1691 WPP_ANNOTATE_USBPWR_c1691_FINAL("TMF:", "USBPWR.c", "USBPWR_c1691", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c1707_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 82 \"%0<%10!s!> <--RegisterIdleNotification: ST 0x%11!x! RML %12!d!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c1707_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 82 \"%0<%10!s!> <--RegisterIdleNotification: ST 0x%11!x! RML %12!d!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c1707
    #define WPP_ANNOTATE_USBPWR_c1707 WPP_ANNOTATE_USBPWR_c1707_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemLong -- 12" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c1707 WPP_ANNOTATE_USBPWR_c1707_FINAL("TMF:", "USBPWR.c", "USBPWR_c1707", L"{", L"pDevExt->PortName, ItemString -- 10" , L"ntStatus, ItemLong -- 11" , L"pDevExt->Sts.lRmlCount[3], ItemLong -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c1719_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 83 \"%0<%10!s!> -->IdleNotificationCallback\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c1719_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 83 \"%0<%10!s!> -->IdleNotificationCallback\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c1719
    #define WPP_ANNOTATE_USBPWR_c1719 WPP_ANNOTATE_USBPWR_c1719_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c1719 WPP_ANNOTATE_USBPWR_c1719_FINAL("TMF:", "USBPWR.c", "USBPWR_c1719", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c1728_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 84 \"%0<%10!s!> IdleNotificationCallback: err-dev not ready\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c1728_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 84 \"%0<%10!s!> IdleNotificationCallback: err-dev not ready\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c1728
    #define WPP_ANNOTATE_USBPWR_c1728 WPP_ANNOTATE_USBPWR_c1728_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c1728 WPP_ANNOTATE_USBPWR_c1728_FINAL("TMF:", "USBPWR.c", "USBPWR_c1728", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c1742_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 85 \"%0<%10!s!> <--IdleNotificationCallback\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c1742_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 85 \"%0<%10!s!> <--IdleNotificationCallback\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c1742
    #define WPP_ANNOTATE_USBPWR_c1742 WPP_ANNOTATE_USBPWR_c1742_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c1742 WPP_ANNOTATE_USBPWR_c1742_FINAL("TMF:", "USBPWR.c", "USBPWR_c1742", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c1764_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 86 \"%0<%10!s!> -->IdleNotificationCallbackEpisode\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c1764_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 86 \"%0<%10!s!> -->IdleNotificationCallbackEpisode\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c1764
    #define WPP_ANNOTATE_USBPWR_c1764 WPP_ANNOTATE_USBPWR_c1764_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c1764 WPP_ANNOTATE_USBPWR_c1764_FINAL("TMF:", "USBPWR.c", "USBPWR_c1764", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c177_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 13 \"%0<%10!s!> IRP_MN_SET_POWER: SystemPowerState %11!d!\" //   FLAG=QCUSB_DBG_MASK_POWER LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c177_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 13 \"%0<%10!s!> IRP_MN_SET_POWER: SystemPowerState %11!d!\" //   FLAG=QCUSB_DBG_MASK_POWER LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c177
    #define WPP_ANNOTATE_USBPWR_c177 WPP_ANNOTATE_USBPWR_c177_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c177 WPP_ANNOTATE_USBPWR_c177_FINAL("TMF:", "USBPWR.c", "USBPWR_c177", L"{", L"pDevExt->PortName, ItemString -- 10" , L"pwrState, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c1773_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 87 \"%0<%10!s!> IdleNotificationCallbackEpisode: err-dev not ready\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c1773_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 87 \"%0<%10!s!> IdleNotificationCallbackEpisode: err-dev not ready\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c1773
    #define WPP_ANNOTATE_USBPWR_c1773 WPP_ANNOTATE_USBPWR_c1773_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c1773 WPP_ANNOTATE_USBPWR_c1773_FINAL("TMF:", "USBPWR.c", "USBPWR_c1773", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c1785_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 88 \"%0<%10!s!> <--IdleNotificationCallbackEpisode: powering down, no act\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c1785_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 88 \"%0<%10!s!> <--IdleNotificationCallbackEpisode: powering down, no act\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c1785
    #define WPP_ANNOTATE_USBPWR_c1785 WPP_ANNOTATE_USBPWR_c1785_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c1785 WPP_ANNOTATE_USBPWR_c1785_FINAL("TMF:", "USBPWR.c", "USBPWR_c1785", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c1809_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 89 \"%0<%10!s!> IdleNotificationCallbackEpisode: Out of mem 1\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c1809_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 89 \"%0<%10!s!> IdleNotificationCallbackEpisode: Out of mem 1\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c1809
    #define WPP_ANNOTATE_USBPWR_c1809 WPP_ANNOTATE_USBPWR_c1809_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c1809 WPP_ANNOTATE_USBPWR_c1809_FINAL("TMF:", "USBPWR.c", "USBPWR_c1809", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c1825_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 90 \"%0<%10!s!> IdleNotificationCallbackEpisode: Sending PWR req for D%11!u!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c1825_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 90 \"%0<%10!s!> IdleNotificationCallbackEpisode: Sending PWR req for D%11!u!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c1825
    #define WPP_ANNOTATE_USBPWR_c1825 WPP_ANNOTATE_USBPWR_c1825_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c1825 WPP_ANNOTATE_USBPWR_c1825_FINAL("TMF:", "USBPWR.c", "USBPWR_c1825", L"{", L"pDevExt->PortName, ItemString -- 10" , L"powerState.DeviceState-1, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c1841_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 91 \"%0<%10!s!> IdleNotificationCallbackEpisode: rm lock failure\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c1841_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 91 \"%0<%10!s!> IdleNotificationCallbackEpisode: rm lock failure\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c1841
    #define WPP_ANNOTATE_USBPWR_c1841 WPP_ANNOTATE_USBPWR_c1841_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c1841 WPP_ANNOTATE_USBPWR_c1841_FINAL("TMF:", "USBPWR.c", "USBPWR_c1841", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c1875_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 92 \"%0<%10!s!> IdleNotificationCallback: PWR req for D%11!u! sent, status 0x%12!x!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c1875_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 92 \"%0<%10!s!> IdleNotificationCallback: PWR req for D%11!u! sent, status 0x%12!x!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c1875
    #define WPP_ANNOTATE_USBPWR_c1875 WPP_ANNOTATE_USBPWR_c1875_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemLong -- 12" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c1875 WPP_ANNOTATE_USBPWR_c1875_FINAL("TMF:", "USBPWR.c", "USBPWR_c1875", L"{", L"pDevExt->PortName, ItemString -- 10" , L"powerState.DeviceState-1, ItemLong -- 11" , L"ntStatus, ItemLong -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c1918_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 93 \"%0<%10!s!> WTO-2 (%11!d!)\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c1918_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 93 \"%0<%10!s!> WTO-2 (%11!d!)\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c1918
    #define WPP_ANNOTATE_USBPWR_c1918 WPP_ANNOTATE_USBPWR_c1918_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c1918 WPP_ANNOTATE_USBPWR_c1918_FINAL("TMF:", "USBPWR.c", "USBPWR_c1918", L"{", L"pDevExt->PortName, ItemString -- 10" , L"++i, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c1927_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 94 \"%0<%10!s!> Got IRP completion event (%11!d!)\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c1927_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 94 \"%0<%10!s!> Got IRP completion event (%11!d!)\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c1927
    #define WPP_ANNOTATE_USBPWR_c1927 WPP_ANNOTATE_USBPWR_c1927_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c1927 WPP_ANNOTATE_USBPWR_c1927_FINAL("TMF:", "USBPWR.c", "USBPWR_c1927", L"{", L"pDevExt->PortName, ItemString -- 10" , L"++i, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c1937_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 95 \"%0<%10!s!> IdleNotificationCallbackEpisode: powered down\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c1937_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 95 \"%0<%10!s!> IdleNotificationCallbackEpisode: powered down\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c1937
    #define WPP_ANNOTATE_USBPWR_c1937 WPP_ANNOTATE_USBPWR_c1937_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c1937 WPP_ANNOTATE_USBPWR_c1937_FINAL("TMF:", "USBPWR.c", "USBPWR_c1937", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c1956_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 96 \"%0<%10!s!> <--IdleNotificationCallbackEpisode 0x%11!x!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c1956_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 96 \"%0<%10!s!> <--IdleNotificationCallbackEpisode 0x%11!x!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c1956
    #define WPP_ANNOTATE_USBPWR_c1956 WPP_ANNOTATE_USBPWR_c1956_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c1956 WPP_ANNOTATE_USBPWR_c1956_FINAL("TMF:", "USBPWR.c", "USBPWR_c1956", L"{", L"pDevExt->PortName, ItemString -- 10" , L"ntStatus, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c1981_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 97 \"%0<%10!s!> TopDevSetPowerIrpComp: ST 0x%11!x!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c1981_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 97 \"%0<%10!s!> TopDevSetPowerIrpComp: ST 0x%11!x!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c1981
    #define WPP_ANNOTATE_USBPWR_c1981 WPP_ANNOTATE_USBPWR_c1981_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c1981 WPP_ANNOTATE_USBPWR_c1981_FINAL("TMF:", "USBPWR.c", "USBPWR_c1981", L"{", L"pDevExt->PortName, ItemString -- 10" , L"IoStatus->Status, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c2015_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 98 \"%0<%10!s!> -->IdleNotificationIrpCompletion: IRP 0x%11!p!/0x%12!p! st 0x%13!x!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c2015_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 98 \"%0<%10!s!> -->IdleNotificationIrpCompletion: IRP 0x%11!p!/0x%12!p! st 0x%13!x!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c2015
    #define WPP_ANNOTATE_USBPWR_c2015 WPP_ANNOTATE_USBPWR_c2015_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemPtr -- 11" , L"Arg, ItemPtr -- 12" , L"Arg, ItemLong -- 13" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c2015 WPP_ANNOTATE_USBPWR_c2015_FINAL("TMF:", "USBPWR.c", "USBPWR_c2015", L"{", L"pDevExt->PortName, ItemString -- 10" , L"Irp, ItemPtr -- 11" , L"pDevExt->IdleNotificationIrp, ItemPtr -- 12" , L"ntStatus, ItemLong -- 13" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c202_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 14 \"%0<%10!s!> IRP_MN_SET_POWER: D%11!d!\" //   FLAG=QCUSB_DBG_MASK_POWER LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c202_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 14 \"%0<%10!s!> IRP_MN_SET_POWER: D%11!d!\" //   FLAG=QCUSB_DBG_MASK_POWER LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c202
    #define WPP_ANNOTATE_USBPWR_c202 WPP_ANNOTATE_USBPWR_c202_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c202 WPP_ANNOTATE_USBPWR_c202_FINAL("TMF:", "USBPWR.c", "USBPWR_c202", L"{", L"pDevExt->PortName, ItemString -- 10" , L"pwrState-1, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c2031_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 99 \"%0<%10!s!> IdleNotificationIrpCompletion: NO_MEM, best effort\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c2031_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 99 \"%0<%10!s!> IdleNotificationIrpCompletion: NO_MEM, best effort\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c2031
    #define WPP_ANNOTATE_USBPWR_c2031 WPP_ANNOTATE_USBPWR_c2031_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c2031 WPP_ANNOTATE_USBPWR_c2031_FINAL("TMF:", "USBPWR.c", "USBPWR_c2031", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c2056_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 100 \"%0<%10!s!> <--IdleNotificationIrpCompletion [PrepareToPowerDown %11!d!]\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c2056_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 100 \"%0<%10!s!> <--IdleNotificationIrpCompletion [PrepareToPowerDown %11!d!]\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c2056
    #define WPP_ANNOTATE_USBPWR_c2056 WPP_ANNOTATE_USBPWR_c2056_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c2056 WPP_ANNOTATE_USBPWR_c2056_FINAL("TMF:", "USBPWR.c", "USBPWR_c2056", L"{", L"pDevExt->PortName, ItemString -- 10" , L"pDevExt->PrepareToPowerDown, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c2097_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 101 \"%0<%10!s!> _GetOutOfIdleState: no param\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c2097_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 101 \"%0<%10!s!> _GetOutOfIdleState: no param\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c2097
    #define WPP_ANNOTATE_USBPWR_c2097 WPP_ANNOTATE_USBPWR_c2097_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c2097 WPP_ANNOTATE_USBPWR_c2097_FINAL("TMF:", "USBPWR.c", "USBPWR_c2097", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c2128_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 102 \"%0<%10!s!> -->IdleNotificationIrpCompletionEpisode: IRP 0x%11!p!/0x%12!p! st 0x%13!x!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c2128_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 102 \"%0<%10!s!> -->IdleNotificationIrpCompletionEpisode: IRP 0x%11!p!/0x%12!p! st 0x%13!x!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c2128
    #define WPP_ANNOTATE_USBPWR_c2128 WPP_ANNOTATE_USBPWR_c2128_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemPtr -- 11" , L"Arg, ItemPtr -- 12" , L"Arg, ItemLong -- 13" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c2128 WPP_ANNOTATE_USBPWR_c2128_FINAL("TMF:", "USBPWR.c", "USBPWR_c2128", L"{", L"pDevExt->PortName, ItemString -- 10" , L"Irp, ItemPtr -- 11" , L"pDevExt->IdleNotificationIrp, ItemPtr -- 12" , L"ntStatus, ItemLong -- 13" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c2163_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 103 \"%0<%10!s!> IdleNotificationIrpCompletionEpisode: err 0x%11!x!, requesting D0\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c2163_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 103 \"%0<%10!s!> IdleNotificationIrpCompletionEpisode: err 0x%11!x!, requesting D0\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c2163
    #define WPP_ANNOTATE_USBPWR_c2163 WPP_ANNOTATE_USBPWR_c2163_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c2163 WPP_ANNOTATE_USBPWR_c2163_FINAL("TMF:", "USBPWR.c", "USBPWR_c2163", L"{", L"pDevExt->PortName, ItemString -- 10" , L"ntStatus, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c217_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 15 \"%0<%10!s!> IRP_MN_SET_POWER: unknown pwr type %11!u!\" //   FLAG=QCUSB_DBG_MASK_POWER LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c217_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 15 \"%0<%10!s!> IRP_MN_SET_POWER: unknown pwr type %11!u!\" //   FLAG=QCUSB_DBG_MASK_POWER LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c217
    #define WPP_ANNOTATE_USBPWR_c217 WPP_ANNOTATE_USBPWR_c217_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c217 WPP_ANNOTATE_USBPWR_c217_FINAL("TMF:", "USBPWR.c", "USBPWR_c217", L"{", L"pDevExt->PortName, ItemString -- 10" , L"IrpStack->Parameters.Power.Type, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c2186_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 104 \"%0<%10!s!> IdleNotificationIrpCompletionEpisode: rm lock failure 0x%11!x!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c2186_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 104 \"%0<%10!s!> IdleNotificationIrpCompletionEpisode: rm lock failure 0x%11!x!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c2186
    #define WPP_ANNOTATE_USBPWR_c2186 WPP_ANNOTATE_USBPWR_c2186_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c2186 WPP_ANNOTATE_USBPWR_c2186_FINAL("TMF:", "USBPWR.c", "USBPWR_c2186", L"{", L"pDevExt->PortName, ItemString -- 10" , L"ntStatus, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c2221_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 105 \"%0<%10!s!> IdleNotificationIrpCompletionEpisode: err req D0 0x%11!x!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c2221_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 105 \"%0<%10!s!> IdleNotificationIrpCompletionEpisode: err req D0 0x%11!x!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c2221
    #define WPP_ANNOTATE_USBPWR_c2221 WPP_ANNOTATE_USBPWR_c2221_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c2221 WPP_ANNOTATE_USBPWR_c2221_FINAL("TMF:", "USBPWR.c", "USBPWR_c2221", L"{", L"pDevExt->PortName, ItemString -- 10" , L"ntStatus, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c2245_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 106 \"%0<%10!s!> IdleNotificationIrpCompletionEpisode: dev in D0, no act\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c2245_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 106 \"%0<%10!s!> IdleNotificationIrpCompletionEpisode: dev in D0, no act\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c2245
    #define WPP_ANNOTATE_USBPWR_c2245 WPP_ANNOTATE_USBPWR_c2245_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c2245 WPP_ANNOTATE_USBPWR_c2245_FINAL("TMF:", "USBPWR.c", "USBPWR_c2245", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c2260_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 107 \"%0<%10!s!> IdleNotificationIrpCompletionEpisode: IRP was cancelled\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c2260_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 107 \"%0<%10!s!> IdleNotificationIrpCompletionEpisode: IRP was cancelled\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c2260
    #define WPP_ANNOTATE_USBPWR_c2260 WPP_ANNOTATE_USBPWR_c2260_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c2260 WPP_ANNOTATE_USBPWR_c2260_FINAL("TMF:", "USBPWR.c", "USBPWR_c2260", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c2279_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 108 \"%0<%10!s!> IdleNotificationIrpCompletionEpisode: powering down\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c2279_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 108 \"%0<%10!s!> IdleNotificationIrpCompletionEpisode: powering down\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c2279
    #define WPP_ANNOTATE_USBPWR_c2279 WPP_ANNOTATE_USBPWR_c2279_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c2279 WPP_ANNOTATE_USBPWR_c2279_FINAL("TMF:", "USBPWR.c", "USBPWR_c2279", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c2291_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 109 \"%0<%10!s!> <--IdleNotificationIrpCompletionEpisode [PrepareToPowerDown %11!d!] Rml[0]=%12!u!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c2291_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 109 \"%0<%10!s!> <--IdleNotificationIrpCompletionEpisode [PrepareToPowerDown %11!d!] Rml[0]=%12!u!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c2291
    #define WPP_ANNOTATE_USBPWR_c2291 WPP_ANNOTATE_USBPWR_c2291_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemLong -- 12" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c2291 WPP_ANNOTATE_USBPWR_c2291_FINAL("TMF:", "USBPWR.c", "USBPWR_c2291", L"{", L"pDevExt->PortName, ItemString -- 10" , L"pDevExt->PrepareToPowerDown, ItemLong -- 11" , L"pDevExt->Sts.lRmlCount[0], ItemLong -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c2317_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 110 \"%0<%10!s!> TopIdlePowerUpCompletionRoutine: 0x%11!x!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c2317_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 110 \"%0<%10!s!> TopIdlePowerUpCompletionRoutine: 0x%11!x!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c2317
    #define WPP_ANNOTATE_USBPWR_c2317 WPP_ANNOTATE_USBPWR_c2317_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c2317 WPP_ANNOTATE_USBPWR_c2317_FINAL("TMF:", "USBPWR.c", "USBPWR_c2317", L"{", L"pDevExt->PortName, ItemString -- 10" , L"IoStatus->Status, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c2343_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 111 \"%0<%10!s!> -->CancelIdleNotificationIrp(%11!u!) 0x%12!p! Rml[0]=%13!u!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_TRACE" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c2343_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 111 \"%0<%10!s!> -->CancelIdleNotificationIrp(%11!u!) 0x%12!p! Rml[0]=%13!u!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_TRACE" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c2343
    #define WPP_ANNOTATE_USBPWR_c2343 WPP_ANNOTATE_USBPWR_c2343_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemPtr -- 12" , L"Arg, ItemLong -- 13" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c2343 WPP_ANNOTATE_USBPWR_c2343_FINAL("TMF:", "USBPWR.c", "USBPWR_c2343", L"{", L"pDevExt->PortName, ItemString -- 10" , L"Cookie, ItemLong -- 11" , L"pDevExt->IdleNotificationIrp, ItemPtr -- 12" , L"pDevExt->Sts.lRmlCount[0], ItemLong -- 13" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c2354_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 112 \"%0<%10!s!> CancelIdleNotificationIrp: not pending, no act\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c2354_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 112 \"%0<%10!s!> CancelIdleNotificationIrp: not pending, no act\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c2354
    #define WPP_ANNOTATE_USBPWR_c2354 WPP_ANNOTATE_USBPWR_c2354_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c2354 WPP_ANNOTATE_USBPWR_c2354_FINAL("TMF:", "USBPWR.c", "USBPWR_c2354", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c2371_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 113 \"%0<%10!s!> <--CancelIdleNotificationIrp(%11!u!) Rml[0]=%12!u!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_TRACE" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c2371_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 113 \"%0<%10!s!> <--CancelIdleNotificationIrp(%11!u!) Rml[0]=%12!u!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_TRACE" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c2371
    #define WPP_ANNOTATE_USBPWR_c2371 WPP_ANNOTATE_USBPWR_c2371_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemLong -- 12" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c2371 WPP_ANNOTATE_USBPWR_c2371_FINAL("TMF:", "USBPWR.c", "USBPWR_c2371", L"{", L"pDevExt->PortName, ItemString -- 10" , L"Cookie, ItemLong -- 11" , L"pDevExt->Sts.lRmlCount[0], ItemLong -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c2386_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 114 \"%0<%10!s!> ProcessWaitWake: IRP 0x%11!p!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c2386_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 114 \"%0<%10!s!> ProcessWaitWake: IRP 0x%11!p!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c2386
    #define WPP_ANNOTATE_USBPWR_c2386 WPP_ANNOTATE_USBPWR_c2386_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemPtr -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c2386 WPP_ANNOTATE_USBPWR_c2386_FINAL("TMF:", "USBPWR.c", "USBPWR_c2386", L"{", L"pDevExt->PortName, ItemString -- 10" , L"Irp, ItemPtr -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c2419_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 115 \"%0<%10!s!> -->WaitWakeCompletion: 0x%11!p!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_TRACE" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c2419_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 115 \"%0<%10!s!> -->WaitWakeCompletion: 0x%11!p!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_TRACE" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c2419
    #define WPP_ANNOTATE_USBPWR_c2419 WPP_ANNOTATE_USBPWR_c2419_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemPtr -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c2419 WPP_ANNOTATE_USBPWR_c2419_FINAL("TMF:", "USBPWR.c", "USBPWR_c2419", L"{", L"pDevExt->PortName, ItemString -- 10" , L"Irp, ItemPtr -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c245_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 16 \"%0<%10!s!> PowerManagement: Unkown MN 0x%11!x!\" //   FLAG=QCUSB_DBG_MASK_POWER LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c245_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 16 \"%0<%10!s!> PowerManagement: Unkown MN 0x%11!x!\" //   FLAG=QCUSB_DBG_MASK_POWER LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c245
    #define WPP_ANNOTATE_USBPWR_c245 WPP_ANNOTATE_USBPWR_c245_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c245 WPP_ANNOTATE_USBPWR_c245_FINAL("TMF:", "USBPWR.c", "USBPWR_c245", L"{", L"pDevExt->PortName, ItemString -- 10" , L"IrpStack->MinorFunction, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c2450_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 116 \"%0<%10!s!> PIRP (Cww 0x%11!x!/0x%12!x!) 0x%13!p!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c2450_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 116 \"%0<%10!s!> PIRP (Cww 0x%11!x!/0x%12!x!) 0x%13!p!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c2450
    #define WPP_ANNOTATE_USBPWR_c2450 WPP_ANNOTATE_USBPWR_c2450_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemLong -- 12" , L"Arg, ItemPtr -- 13" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c2450 WPP_ANNOTATE_USBPWR_c2450_FINAL("TMF:", "USBPWR.c", "USBPWR_c2450", L"{", L"pDevExt->PortName, ItemString -- 10" , L"Irp->IoStatus.Status, ItemLong -- 11" , L"ntStatus, ItemLong -- 12" , L"Irp, ItemPtr -- 13" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c2459_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 117 \"%0<%10!s!> <--WaitWakeCompletion: 0x%11!p!(0x%12!x!)\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_TRACE" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c2459_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 117 \"%0<%10!s!> <--WaitWakeCompletion: 0x%11!p!(0x%12!x!)\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_TRACE" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c2459
    #define WPP_ANNOTATE_USBPWR_c2459 WPP_ANNOTATE_USBPWR_c2459_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemPtr -- 11" , L"Arg, ItemLong -- 12" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c2459 WPP_ANNOTATE_USBPWR_c2459_FINAL("TMF:", "USBPWR.c", "USBPWR_c2459", L"{", L"pDevExt->PortName, ItemString -- 10" , L"Irp, ItemPtr -- 11" , L"ntStatus, ItemLong -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c2480_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 118 \"%0<%10!s!> -->RegisterWaitWake: %11!u!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c2480_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 118 \"%0<%10!s!> -->RegisterWaitWake: %11!u!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c2480
    #define WPP_ANNOTATE_USBPWR_c2480 WPP_ANNOTATE_USBPWR_c2480_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c2480 WPP_ANNOTATE_USBPWR_c2480_FINAL("TMF:", "USBPWR.c", "USBPWR_c2480", L"{", L"pDevExt->PortName, ItemString -- 10" , L"Cookie, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c2489_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 119 \"%0<%10!s!> <--RegisterWaitWake(%11!u!): feature disabled\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c2489_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 119 \"%0<%10!s!> <--RegisterWaitWake(%11!u!): feature disabled\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c2489
    #define WPP_ANNOTATE_USBPWR_c2489 WPP_ANNOTATE_USBPWR_c2489_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c2489 WPP_ANNOTATE_USBPWR_c2489_FINAL("TMF:", "USBPWR.c", "USBPWR_c2489", L"{", L"pDevExt->PortName, ItemString -- 10" , L"Cookie, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c2505_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 120 \"%0<%10!s!> <--RegisterWaitWake: already pending(%11!u!)\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c2505_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 120 \"%0<%10!s!> <--RegisterWaitWake: already pending(%11!u!)\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c2505
    #define WPP_ANNOTATE_USBPWR_c2505 WPP_ANNOTATE_USBPWR_c2505_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c2505 WPP_ANNOTATE_USBPWR_c2505_FINAL("TMF:", "USBPWR.c", "USBPWR_c2505", L"{", L"pDevExt->PortName, ItemString -- 10" , L"Cookie, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c2528_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 121 \"%0<%10!s!> <--RegisterWaitWake: rm lock failure(0x%11!x!)\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c2528_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 121 \"%0<%10!s!> <--RegisterWaitWake: rm lock failure(0x%11!x!)\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c2528
    #define WPP_ANNOTATE_USBPWR_c2528 WPP_ANNOTATE_USBPWR_c2528_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c2528 WPP_ANNOTATE_USBPWR_c2528_FINAL("TMF:", "USBPWR.c", "USBPWR_c2528", L"{", L"pDevExt->PortName, ItemString -- 10" , L"ntStatus, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c2555_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 122 \"%0<%10!s!> <--RegisterWaitWake: requested IRP (0x%11!p!)\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c2555_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 122 \"%0<%10!s!> <--RegisterWaitWake: requested IRP (0x%11!p!)\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c2555
    #define WPP_ANNOTATE_USBPWR_c2555 WPP_ANNOTATE_USBPWR_c2555_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemPtr -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c2555 WPP_ANNOTATE_USBPWR_c2555_FINAL("TMF:", "USBPWR.c", "USBPWR_c2555", L"{", L"pDevExt->PortName, ItemString -- 10" , L"pDevExt->WaitWakeIrp, ItemPtr -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c2584_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 123 \"%0<%10!s!> TopWaitWakeCompletion: IRP 0x%11!p! MN 0x%12!x!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c2584_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 123 \"%0<%10!s!> TopWaitWakeCompletion: IRP 0x%11!p! MN 0x%12!x!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c2584
    #define WPP_ANNOTATE_USBPWR_c2584 WPP_ANNOTATE_USBPWR_c2584_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemPtr -- 11" , L"Arg, ItemLong -- 12" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c2584 WPP_ANNOTATE_USBPWR_c2584_FINAL("TMF:", "USBPWR.c", "USBPWR_c2584", L"{", L"pDevExt->PortName, ItemString -- 10" , L"pDevExt->WaitWakeIrp, ItemPtr -- 11" , L"MinorFunction, ItemLong -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c2598_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 124 \"%0<%10!s!> TopWaitWakeCompletion failure: IRP 0x%11!p!(0x%12!x!)\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c2598_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 124 \"%0<%10!s!> TopWaitWakeCompletion failure: IRP 0x%11!p!(0x%12!x!)\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c2598
    #define WPP_ANNOTATE_USBPWR_c2598 WPP_ANNOTATE_USBPWR_c2598_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemPtr -- 11" , L"Arg, ItemLong -- 12" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c2598 WPP_ANNOTATE_USBPWR_c2598_FINAL("TMF:", "USBPWR.c", "USBPWR_c2598", L"{", L"pDevExt->PortName, ItemString -- 10" , L"pDevExt->WaitWakeIrp, ItemPtr -- 11" , L"IoStatus->Status, ItemLong -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c261_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 17 \"%0<%10!s!> PIRP: (Ce 0x%11!x!) 0x%12!p!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c261_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 17 \"%0<%10!s!> PIRP: (Ce 0x%11!x!) 0x%12!p!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c261
    #define WPP_ANNOTATE_USBPWR_c261 WPP_ANNOTATE_USBPWR_c261_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemPtr -- 12" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c261 WPP_ANNOTATE_USBPWR_c261_FINAL("TMF:", "USBPWR.c", "USBPWR_c261", L"{", L"pDevExt->PortName, ItemString -- 10" , L"nts, ItemLong -- 11" , L"Irp, ItemPtr -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c2612_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 125 \"%0<%10!s!> TopWaitWakeCompletion: device up running\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c2612_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 125 \"%0<%10!s!> TopWaitWakeCompletion: device up running\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c2612
    #define WPP_ANNOTATE_USBPWR_c2612 WPP_ANNOTATE_USBPWR_c2612_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c2612 WPP_ANNOTATE_USBPWR_c2612_FINAL("TMF:", "USBPWR.c", "USBPWR_c2612", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c2636_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 126 \"%0<%10!s!> TopWaitWakeCompletion: pwr IRP req failure 0x%11!x!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c2636_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 126 \"%0<%10!s!> TopWaitWakeCompletion: pwr IRP req failure 0x%11!x!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c2636
    #define WPP_ANNOTATE_USBPWR_c2636 WPP_ANNOTATE_USBPWR_c2636_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c2636 WPP_ANNOTATE_USBPWR_c2636_FINAL("TMF:", "USBPWR.c", "USBPWR_c2636", L"{", L"pDevExt->PortName, ItemString -- 10" , L"ntStatus, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c2666_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 127 \"%0<%10!s!> TopDeviceWakeUpCompletionRoutine: MN 0x%11!x! st 0x%12!x!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c2666_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 127 \"%0<%10!s!> TopDeviceWakeUpCompletionRoutine: MN 0x%11!x! st 0x%12!x!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c2666
    #define WPP_ANNOTATE_USBPWR_c2666 WPP_ANNOTATE_USBPWR_c2666_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemLong -- 12" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c2666 WPP_ANNOTATE_USBPWR_c2666_FINAL("TMF:", "USBPWR.c", "USBPWR_c2666", L"{", L"pDevExt->PortName, ItemString -- 10" , L"MinorFunction, ItemLong -- 11" , L"IoStatus->Status, ItemLong -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c2689_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 128 \"%0<%10!s!> CancelWaitWakeIrp(%11!u!) \" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c2689_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 128 \"%0<%10!s!> CancelWaitWakeIrp(%11!u!) \" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c2689
    #define WPP_ANNOTATE_USBPWR_c2689 WPP_ANNOTATE_USBPWR_c2689_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c2689 WPP_ANNOTATE_USBPWR_c2689_FINAL("TMF:", "USBPWR.c", "USBPWR_c2689", L"{", L"pDevExt->PortName, ItemString -- 10" , L"Cookie, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c272_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 18 \"%0<%10!s!> PIRP: (C FWD) 0x%11!p!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c272_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 18 \"%0<%10!s!> PIRP: (C FWD) 0x%11!p!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c272
    #define WPP_ANNOTATE_USBPWR_c272 WPP_ANNOTATE_USBPWR_c272_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemPtr -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c272 WPP_ANNOTATE_USBPWR_c272_FINAL("TMF:", "USBPWR.c", "USBPWR_c272", L"{", L"pDevExt->PortName, ItemString -- 10" , L"Irp, ItemPtr -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c2731_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 129 \"%0<%10!s!> WdmVersionIdx: %11!d!\" //   FLAG=(QCUSB_DBG_MASK_CONTROL | QCUSB_DBG_MASK_POWER) LEVEL=QCUSB_DBG_LEVEL_CRITICAL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c2731_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 129 \"%0<%10!s!> WdmVersionIdx: %11!d!\" //   FLAG=(QCUSB_DBG_MASK_CONTROL | QCUSB_DBG_MASK_POWER) LEVEL=QCUSB_DBG_LEVEL_CRITICAL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c2731
    #define WPP_ANNOTATE_USBPWR_c2731 WPP_ANNOTATE_USBPWR_c2731_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c2731 WPP_ANNOTATE_USBPWR_c2731_FINAL("TMF:", "USBPWR.c", "USBPWR_c2731", L"{", L"pDevExt->PortName, ItemString -- 10" , L"pDevExt->WdmVersion, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c2759_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 130 \"%0<%10!s!> -->CheckToWakeup(%11!u!) IRQL(%12!u!): IRP 0x%13!p! Susp %14!u!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_TRACE" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c2759_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 130 \"%0<%10!s!> -->CheckToWakeup(%11!u!) IRQL(%12!u!): IRP 0x%13!p! Susp %14!u!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_TRACE" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c2759
    #define WPP_ANNOTATE_USBPWR_c2759 WPP_ANNOTATE_USBPWR_c2759_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemLong -- 12" , L"Arg, ItemPtr -- 13" , L"Arg, ItemLong -- 14" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c2759 WPP_ANNOTATE_USBPWR_c2759_FINAL("TMF:", "USBPWR.c", "USBPWR_c2759", L"{", L"pDevExt->PortName, ItemString -- 10" , L"Cookie, ItemLong -- 11" , L"KeGetCurrentIrql(), ItemLong -- 12" , L"Irp, ItemPtr -- 13" , L"pDevExt->PowerSuspended, ItemLong -- 14" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c281_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 19 \"%0<%10!s!> PoCallDriver failure: IRP 0x%11!p!(0x%12!x!)\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c281_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 19 \"%0<%10!s!> PoCallDriver failure: IRP 0x%11!p!(0x%12!x!)\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c281
    #define WPP_ANNOTATE_USBPWR_c281 WPP_ANNOTATE_USBPWR_c281_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemPtr -- 11" , L"Arg, ItemLong -- 12" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c281 WPP_ANNOTATE_USBPWR_c281_FINAL("TMF:", "USBPWR.c", "USBPWR_c281", L"{", L"pDevExt->PortName, ItemString -- 10" , L"Irp, ItemPtr -- 11" , L"nts, ItemLong -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c2844_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 131 \"%0<%10!s!> <--CheckToWakeup(%11!u!): IRP 0x%12!p! Susp %13!u! hold %14!u!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_TRACE" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c2844_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 131 \"%0<%10!s!> <--CheckToWakeup(%11!u!): IRP 0x%12!p! Susp %13!u! hold %14!u!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_TRACE" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c2844
    #define WPP_ANNOTATE_USBPWR_c2844 WPP_ANNOTATE_USBPWR_c2844_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemPtr -- 12" , L"Arg, ItemLong -- 13" , L"Arg, ItemLong -- 14" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c2844 WPP_ANNOTATE_USBPWR_c2844_FINAL("TMF:", "USBPWR.c", "USBPWR_c2844", L"{", L"pDevExt->PortName, ItemString -- 10" , L"Cookie, ItemLong -- 11" , L"Irp, ItemPtr -- 12" , L"pDevExt->PowerSuspended, ItemLong -- 13" , L"holdRequest, ItemLong -- 14" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c2857_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 132 \"%0<%10!s!> -->ResumeDataThreads\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c2857_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 132 \"%0<%10!s!> -->ResumeDataThreads\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c2857
    #define WPP_ANNOTATE_USBPWR_c2857 WPP_ANNOTATE_USBPWR_c2857_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c2857 WPP_ANNOTATE_USBPWR_c2857_FINAL("TMF:", "USBPWR.c", "USBPWR_c2857", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c2866_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 133 \"%0<%10!s!> <--ResumeDataThreads\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c2866_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 133 \"%0<%10!s!> <--ResumeDataThreads\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c2866
    #define WPP_ANNOTATE_USBPWR_c2866 WPP_ANNOTATE_USBPWR_c2866_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c2866 WPP_ANNOTATE_USBPWR_c2866_FINAL("TMF:", "USBPWR.c", "USBPWR_c2866", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c2887_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 134 \"%0<%10!s!> -->RegisterWmiPowerGuids\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_TRACE" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c2887_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 134 \"%0<%10!s!> -->RegisterWmiPowerGuids\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_TRACE" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c2887
    #define WPP_ANNOTATE_USBPWR_c2887 WPP_ANNOTATE_USBPWR_c2887_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c2887 WPP_ANNOTATE_USBPWR_c2887_FINAL("TMF:", "USBPWR.c", "USBPWR_c2887", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c2897_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 135 \"%0<%10!s!> RegisterWmiPowerGuids: dup req\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c2897_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 135 \"%0<%10!s!> RegisterWmiPowerGuids: dup req\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c2897
    #define WPP_ANNOTATE_USBPWR_c2897 WPP_ANNOTATE_USBPWR_c2897_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c2897 WPP_ANNOTATE_USBPWR_c2897_FINAL("TMF:", "USBPWR.c", "USBPWR_c2897", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c2926_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 136 \"%0<%10!s!> <--RegisterWmiPowerGuids ST 0x%11!x!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_TRACE" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c2926_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 136 \"%0<%10!s!> <--RegisterWmiPowerGuids ST 0x%11!x!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_TRACE" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c2926
    #define WPP_ANNOTATE_USBPWR_c2926 WPP_ANNOTATE_USBPWR_c2926_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c2926 WPP_ANNOTATE_USBPWR_c2926_FINAL("TMF:", "USBPWR.c", "USBPWR_c2926", L"{", L"pDevExt->PortName, ItemString -- 10" , L"ntStatus, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c2936_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 137 \"%0<%10!s!> -->DeregisterWmiPowerGuids\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_TRACE" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c2936_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 137 \"%0<%10!s!> -->DeregisterWmiPowerGuids\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_TRACE" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c2936
    #define WPP_ANNOTATE_USBPWR_c2936 WPP_ANNOTATE_USBPWR_c2936_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c2936 WPP_ANNOTATE_USBPWR_c2936_FINAL("TMF:", "USBPWR.c", "USBPWR_c2936", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c2949_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 138 \"%0<%10!s!> <--DeregisterWmiPowerGuids\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_TRACE" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c2949_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 138 \"%0<%10!s!> <--DeregisterWmiPowerGuids\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_TRACE" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c2949
    #define WPP_ANNOTATE_USBPWR_c2949 WPP_ANNOTATE_USBPWR_c2949_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c2949 WPP_ANNOTATE_USBPWR_c2949_FINAL("TMF:", "USBPWR.c", "USBPWR_c2949", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c2966_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 139 \"%0<%10!s!> -->ProcessSystemControlIrps IRP 0x%11!p!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_TRACE" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c2966_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 139 \"%0<%10!s!> -->ProcessSystemControlIrps IRP 0x%11!p!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_TRACE" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c2966
    #define WPP_ANNOTATE_USBPWR_c2966 WPP_ANNOTATE_USBPWR_c2966_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemPtr -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c2966 WPP_ANNOTATE_USBPWR_c2966_FINAL("TMF:", "USBPWR.c", "USBPWR_c2966", L"{", L"pDevExt->PortName, ItemString -- 10" , L"Irp, ItemPtr -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c2982_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 140 \"%0<%10!s!> ProcessSystemControlIrps: WmiSystemControl IRP 0x%11!p! ST 0x%12!x! (0x%13!x!)\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c2982_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 140 \"%0<%10!s!> ProcessSystemControlIrps: WmiSystemControl IRP 0x%11!p! ST 0x%12!x! (0x%13!x!)\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c2982
    #define WPP_ANNOTATE_USBPWR_c2982 WPP_ANNOTATE_USBPWR_c2982_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemPtr -- 11" , L"Arg, ItemLong -- 12" , L"Arg, ItemLong -- 13" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c2982 WPP_ANNOTATE_USBPWR_c2982_FINAL("TMF:", "USBPWR.c", "USBPWR_c2982", L"{", L"pDevExt->PortName, ItemString -- 10" , L"Irp, ItemPtr -- 11" , L"ntStatus, ItemLong -- 12" , L"irpDisposition, ItemLong -- 13" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c2998_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 141 \"%0<%10!s!> CIRP (C 0x%11!x!) 0x%12!p!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c2998_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 141 \"%0<%10!s!> CIRP (C 0x%11!x!) 0x%12!p!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c2998
    #define WPP_ANNOTATE_USBPWR_c2998 WPP_ANNOTATE_USBPWR_c2998_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemPtr -- 12" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c2998 WPP_ANNOTATE_USBPWR_c2998_FINAL("TMF:", "USBPWR.c", "USBPWR_c2998", L"{", L"pDevExt->PortName, ItemString -- 10" , L"Irp->IoStatus.Status, ItemLong -- 11" , L"Irp, ItemPtr -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c3021_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 142 \"%0<%10!s!> <--ProcessSystemControlIrps IRP 0x%11!p! (0x%12!x!)\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_TRACE" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c3021_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 142 \"%0<%10!s!> <--ProcessSystemControlIrps IRP 0x%11!p! (0x%12!x!)\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_TRACE" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c3021
    #define WPP_ANNOTATE_USBPWR_c3021 WPP_ANNOTATE_USBPWR_c3021_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemPtr -- 11" , L"Arg, ItemLong -- 12" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c3021 WPP_ANNOTATE_USBPWR_c3021_FINAL("TMF:", "USBPWR.c", "USBPWR_c3021", L"{", L"pDevExt->PortName, ItemString -- 10" , L"Irp, ItemPtr -- 11" , L"ntStatus, ItemLong -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c3042_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 143 \"%0<%10!s!> -->PMQueryWmiRegInfo\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_TRACE" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c3042_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 143 \"%0<%10!s!> -->PMQueryWmiRegInfo\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_TRACE" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c3042
    #define WPP_ANNOTATE_USBPWR_c3042 WPP_ANNOTATE_USBPWR_c3042_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c3042 WPP_ANNOTATE_USBPWR_c3042_FINAL("TMF:", "USBPWR.c", "USBPWR_c3042", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c3053_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 144 \"%0<%10!s!> <--PMQueryWmiRegInfo\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_TRACE" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c3053_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 144 \"%0<%10!s!> <--PMQueryWmiRegInfo\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_TRACE" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c3053
    #define WPP_ANNOTATE_USBPWR_c3053 WPP_ANNOTATE_USBPWR_c3053_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c3053 WPP_ANNOTATE_USBPWR_c3053_FINAL("TMF:", "USBPWR.c", "USBPWR_c3053", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c3081_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 145 \"%0<%10!s!> -->PMQueryWmiDataBlock: IRP 0x%11!p! GIDX %12!u! InsIdx %13!u! InsCnt %14!u!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_TRACE" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c3081_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 145 \"%0<%10!s!> -->PMQueryWmiDataBlock: IRP 0x%11!p! GIDX %12!u! InsIdx %13!u! InsCnt %14!u!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_TRACE" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c3081
    #define WPP_ANNOTATE_USBPWR_c3081 WPP_ANNOTATE_USBPWR_c3081_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemPtr -- 11" , L"Arg, ItemLong -- 12" , L"Arg, ItemLong -- 13" , L"Arg, ItemLong -- 14" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c3081 WPP_ANNOTATE_USBPWR_c3081_FINAL("TMF:", "USBPWR.c", "USBPWR_c3081", L"{", L"pDevExt->PortName, ItemString -- 10" , L"Irp, ItemPtr -- 11" , L"GuidIndex, ItemLong -- 12" , L"InstanceIndex, ItemLong -- 13" , L"InstanceCount, ItemLong -- 14" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c310_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 20 \"%0<%10!s!> PIRP: (Cdp) 0x%11!p!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c310_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 20 \"%0<%10!s!> PIRP: (Cdp) 0x%11!p!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c310
    #define WPP_ANNOTATE_USBPWR_c310 WPP_ANNOTATE_USBPWR_c310_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemPtr -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c310 WPP_ANNOTATE_USBPWR_c310_FINAL("TMF:", "USBPWR.c", "USBPWR_c310", L"{", L"pDevExt->PortName, ItemString -- 10" , L"Irp, ItemPtr -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c3114_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 146 \"%0<%10!s!> PMQueryWmiDataBlock: IRP 0x%11!p! buf too small %12!u!B\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c3114_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 146 \"%0<%10!s!> PMQueryWmiDataBlock: IRP 0x%11!p! buf too small %12!u!B\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c3114
    #define WPP_ANNOTATE_USBPWR_c3114 WPP_ANNOTATE_USBPWR_c3114_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemPtr -- 11" , L"Arg, ItemLong -- 12" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c3114 WPP_ANNOTATE_USBPWR_c3114_FINAL("TMF:", "USBPWR.c", "USBPWR_c3114", L"{", L"pDevExt->PortName, ItemString -- 10" , L"Irp, ItemPtr -- 11" , L"BufferAvail, ItemLong -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c3125_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 147 \"%0<%10!s!> PMQueryWmiDataBlock: IRP 0x%11!p! WaitWakeEnabled %12!u!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c3125_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 147 \"%0<%10!s!> PMQueryWmiDataBlock: IRP 0x%11!p! WaitWakeEnabled %12!u!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c3125
    #define WPP_ANNOTATE_USBPWR_c3125 WPP_ANNOTATE_USBPWR_c3125_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemPtr -- 11" , L"Arg, ItemLong -- 12" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c3125 WPP_ANNOTATE_USBPWR_c3125_FINAL("TMF:", "USBPWR.c", "USBPWR_c3125", L"{", L"pDevExt->PortName, ItemString -- 10" , L"Irp, ItemPtr -- 11" , L"pDevExt->WaitWakeEnabled, ItemLong -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c3141_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 148 \"%0<%10!s!> CIRP (Cw0 0x%11!x!/0x%12!x!) 0x%13!p!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c3141_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 148 \"%0<%10!s!> CIRP (Cw0 0x%11!x!/0x%12!x!) 0x%13!p!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c3141
    #define WPP_ANNOTATE_USBPWR_c3141 WPP_ANNOTATE_USBPWR_c3141_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemLong -- 12" , L"Arg, ItemPtr -- 13" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c3141 WPP_ANNOTATE_USBPWR_c3141_FINAL("TMF:", "USBPWR.c", "USBPWR_c3141", L"{", L"pDevExt->PortName, ItemString -- 10" , L"Irp->IoStatus.Status, ItemLong -- 11" , L"ntStatus, ItemLong -- 12" , L"Irp, ItemPtr -- 13" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c3157_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 149 \"%0<%10!s!> <--PMQueryWmiDataBlock: IRP 0x%11!p!(ST 0x%12!x!) GIDX %13!u! InsIdx %14!u! InsCnt %15!u!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_TRACE" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c3157_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 149 \"%0<%10!s!> <--PMQueryWmiDataBlock: IRP 0x%11!p!(ST 0x%12!x!) GIDX %13!u! InsIdx %14!u! InsCnt %15!u!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_TRACE" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c3157
    #define WPP_ANNOTATE_USBPWR_c3157 WPP_ANNOTATE_USBPWR_c3157_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemPtr -- 11" , L"Arg, ItemLong -- 12" , L"Arg, ItemLong -- 13" , L"Arg, ItemLong -- 14" , L"Arg, ItemLong -- 15" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c3157 WPP_ANNOTATE_USBPWR_c3157_FINAL("TMF:", "USBPWR.c", "USBPWR_c3157", L"{", L"pDevExt->PortName, ItemString -- 10" , L"Irp, ItemPtr -- 11" , L"ntStatus, ItemLong -- 12" , L"GuidIndex, ItemLong -- 13" , L"InstanceIndex, ItemLong -- 14" , L"InstanceCount, ItemLong -- 15" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c3183_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 150 \"%0<%10!s!> -->PMSetWmiDataBlock: IRP 0x%11!p! GIDX %12!u! InsIdx %13!u!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_TRACE" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c3183_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 150 \"%0<%10!s!> -->PMSetWmiDataBlock: IRP 0x%11!p! GIDX %12!u! InsIdx %13!u!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_TRACE" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c3183
    #define WPP_ANNOTATE_USBPWR_c3183 WPP_ANNOTATE_USBPWR_c3183_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemPtr -- 11" , L"Arg, ItemLong -- 12" , L"Arg, ItemLong -- 13" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c3183 WPP_ANNOTATE_USBPWR_c3183_FINAL("TMF:", "USBPWR.c", "USBPWR_c3183", L"{", L"pDevExt->PortName, ItemString -- 10" , L"Irp, ItemPtr -- 11" , L"GuidIndex, ItemLong -- 12" , L"InstanceIndex, ItemLong -- 13" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c3224_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 151 \"%0<%10!s!> CIRP (Cw1 0x%11!x!/0x%12!x!) 0x%13!p!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c3224_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 151 \"%0<%10!s!> CIRP (Cw1 0x%11!x!/0x%12!x!) 0x%13!p!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c3224
    #define WPP_ANNOTATE_USBPWR_c3224 WPP_ANNOTATE_USBPWR_c3224_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemLong -- 12" , L"Arg, ItemPtr -- 13" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c3224 WPP_ANNOTATE_USBPWR_c3224_FINAL("TMF:", "USBPWR.c", "USBPWR_c3224", L"{", L"pDevExt->PortName, ItemString -- 10" , L"Irp->IoStatus.Status, ItemLong -- 11" , L"ntStatus, ItemLong -- 12" , L"Irp, ItemPtr -- 13" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c3240_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 152 \"%0<%10!s!> <--PMSetWmiDataBlock: IRP 0x%11!p! (ST 0x%12!x!) GIDX %13!u! InsIdx %14!u!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_TRACE" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c3240_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 152 \"%0<%10!s!> <--PMSetWmiDataBlock: IRP 0x%11!p! (ST 0x%12!x!) GIDX %13!u! InsIdx %14!u!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_TRACE" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c3240
    #define WPP_ANNOTATE_USBPWR_c3240 WPP_ANNOTATE_USBPWR_c3240_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemPtr -- 11" , L"Arg, ItemLong -- 12" , L"Arg, ItemLong -- 13" , L"Arg, ItemLong -- 14" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c3240 WPP_ANNOTATE_USBPWR_c3240_FINAL("TMF:", "USBPWR.c", "USBPWR_c3240", L"{", L"pDevExt->PortName, ItemString -- 10" , L"Irp, ItemPtr -- 11" , L"ntStatus, ItemLong -- 12" , L"GuidIndex, ItemLong -- 13" , L"InstanceIndex, ItemLong -- 14" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c325_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 21 \"%0<%10!s!> PIRP (FWDi 0x%11!x!) 0x%12!p!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c325_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 21 \"%0<%10!s!> PIRP (FWDi 0x%11!x!) 0x%12!p!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c325
    #define WPP_ANNOTATE_USBPWR_c325 WPP_ANNOTATE_USBPWR_c325_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemPtr -- 12" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c325 WPP_ANNOTATE_USBPWR_c325_FINAL("TMF:", "USBPWR.c", "USBPWR_c325", L"{", L"pDevExt->PortName, ItemString -- 10" , L"*pNtStatus, ItemLong -- 11" , L"Irp, ItemPtr -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c3269_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 153 \"%0<%10!s!> -->PMSetWmiDataItem: IRP 0x%11!p! GIDX %12!u! InsIdx %13!u! ItmId %14!u!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_TRACE" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c3269_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 153 \"%0<%10!s!> -->PMSetWmiDataItem: IRP 0x%11!p! GIDX %12!u! InsIdx %13!u! ItmId %14!u!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_TRACE" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c3269
    #define WPP_ANNOTATE_USBPWR_c3269 WPP_ANNOTATE_USBPWR_c3269_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemPtr -- 11" , L"Arg, ItemLong -- 12" , L"Arg, ItemLong -- 13" , L"Arg, ItemLong -- 14" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c3269 WPP_ANNOTATE_USBPWR_c3269_FINAL("TMF:", "USBPWR.c", "USBPWR_c3269", L"{", L"pDevExt->PortName, ItemString -- 10" , L"Irp, ItemPtr -- 11" , L"GuidIndex, ItemLong -- 12" , L"InstanceIndex, ItemLong -- 13" , L"DataItemId, ItemLong -- 14" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c3305_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 154 \"%0<%10!s!> CIRP (Cw2 0x%11!x!/0x%12!x!) 0x%13!p!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c3305_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 154 \"%0<%10!s!> CIRP (Cw2 0x%11!x!/0x%12!x!) 0x%13!p!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c3305
    #define WPP_ANNOTATE_USBPWR_c3305 WPP_ANNOTATE_USBPWR_c3305_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemLong -- 12" , L"Arg, ItemPtr -- 13" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c3305 WPP_ANNOTATE_USBPWR_c3305_FINAL("TMF:", "USBPWR.c", "USBPWR_c3305", L"{", L"pDevExt->PortName, ItemString -- 10" , L"Irp->IoStatus.Status, ItemLong -- 11" , L"ntStatus, ItemLong -- 12" , L"Irp, ItemPtr -- 13" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c3321_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 155 \"%0<%10!s!> <--PMSetWmiDataItem: IRP 0x%11!p! (ST 0x%12!x!) GIDX %13!u! InsIdx %14!u! ItmId %15!u!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_TRACE" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c3321_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 155 \"%0<%10!s!> <--PMSetWmiDataItem: IRP 0x%11!p! (ST 0x%12!x!) GIDX %13!u! InsIdx %14!u! ItmId %15!u!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_TRACE" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c3321
    #define WPP_ANNOTATE_USBPWR_c3321 WPP_ANNOTATE_USBPWR_c3321_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemPtr -- 11" , L"Arg, ItemLong -- 12" , L"Arg, ItemLong -- 13" , L"Arg, ItemLong -- 14" , L"Arg, ItemLong -- 15" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c3321 WPP_ANNOTATE_USBPWR_c3321_FINAL("TMF:", "USBPWR.c", "USBPWR_c3321", L"{", L"pDevExt->PortName, ItemString -- 10" , L"Irp, ItemPtr -- 11" , L"ntStatus, ItemLong -- 12" , L"GuidIndex, ItemLong -- 13" , L"InstanceIndex, ItemLong -- 14" , L"DataItemId, ItemLong -- 15" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c3338_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 156 \"%0<%10!s!> -->SetPMState: %11!u!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_TRACE" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c3338_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 156 \"%0<%10!s!> -->SetPMState: %11!u!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_TRACE" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c3338
    #define WPP_ANNOTATE_USBPWR_c3338 WPP_ANNOTATE_USBPWR_c3338_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c3338 WPP_ANNOTATE_USBPWR_c3338_FINAL("TMF:", "USBPWR.c", "USBPWR_c3338", L"{", L"pDevExt->PortName, ItemString -- 10" , L"IsEnabled, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c3381_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 157 \"%0<%10!s!> <--SetPMState: %11!u! (ST 0x%12!x!)\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_TRACE" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c3381_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 157 \"%0<%10!s!> <--SetPMState: %11!u! (ST 0x%12!x!)\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_TRACE" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c3381
    #define WPP_ANNOTATE_USBPWR_c3381 WPP_ANNOTATE_USBPWR_c3381_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemLong -- 12" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c3381 WPP_ANNOTATE_USBPWR_c3381_FINAL("TMF:", "USBPWR.c", "USBPWR_c3381", L"{", L"pDevExt->PortName, ItemString -- 10" , L"IsEnabled, ItemLong -- 11" , L"ntStatus, ItemLong -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c3399_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 158 \"%0<%10!s!> -->SetWaitWakeState: %11!u!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_TRACE" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c3399_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 158 \"%0<%10!s!> -->SetWaitWakeState: %11!u!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_TRACE" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c3399
    #define WPP_ANNOTATE_USBPWR_c3399 WPP_ANNOTATE_USBPWR_c3399_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c3399 WPP_ANNOTATE_USBPWR_c3399_FINAL("TMF:", "USBPWR.c", "USBPWR_c3399", L"{", L"pDevExt->PortName, ItemString -- 10" , L"IsEnabled, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c3438_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 159 \"%0<%10!s!> <--SetWaitWakeState: %11!u! (ST 0x%12!x!)\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_TRACE" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c3438_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 159 \"%0<%10!s!> <--SetWaitWakeState: %11!u! (ST 0x%12!x!)\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_TRACE" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c3438
    #define WPP_ANNOTATE_USBPWR_c3438 WPP_ANNOTATE_USBPWR_c3438_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemLong -- 12" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c3438 WPP_ANNOTATE_USBPWR_c3438_FINAL("TMF:", "USBPWR.c", "USBPWR_c3438", L"{", L"pDevExt->PortName, ItemString -- 10" , L"IsEnabled, ItemLong -- 11" , L"ntStatus, ItemLong -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c3460_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 160 \"%0<%10!s!> VerifyDeviceCapabilities: S0 maps to D%11!u!, use D0\" //   FLAG=QCUSB_DBG_MASK_CONTROL LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c3460_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 160 \"%0<%10!s!> VerifyDeviceCapabilities: S0 maps to D%11!u!, use D0\" //   FLAG=QCUSB_DBG_MASK_CONTROL LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c3460
    #define WPP_ANNOTATE_USBPWR_c3460 WPP_ANNOTATE_USBPWR_c3460_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c3460 WPP_ANNOTATE_USBPWR_c3460_FINAL("TMF:", "USBPWR.c", "USBPWR_c3460", L"{", L"pDevExt->PortName, ItemString -- 10" , L"pDevExt->DeviceCapabilities.DeviceState[PowerSystemWorking]-1, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c3474_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 161 \"%0<%10!s!> VerifyDeviceCapabilities: S1 maps to D%11!u!, use D3\" //   FLAG=QCUSB_DBG_MASK_CONTROL LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c3474_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 161 \"%0<%10!s!> VerifyDeviceCapabilities: S1 maps to D%11!u!, use D3\" //   FLAG=QCUSB_DBG_MASK_CONTROL LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c3474
    #define WPP_ANNOTATE_USBPWR_c3474 WPP_ANNOTATE_USBPWR_c3474_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c3474 WPP_ANNOTATE_USBPWR_c3474_FINAL("TMF:", "USBPWR.c", "USBPWR_c3474", L"{", L"pDevExt->PortName, ItemString -- 10" , L"pDevExt->DeviceCapabilities.DeviceState[PowerSystemSleeping1]-1, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c3488_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 162 \"%0<%10!s!> VerifyDeviceCapabilities: S2 maps to D%11!u!, use D3\" //   FLAG=QCUSB_DBG_MASK_CONTROL LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c3488_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 162 \"%0<%10!s!> VerifyDeviceCapabilities: S2 maps to D%11!u!, use D3\" //   FLAG=QCUSB_DBG_MASK_CONTROL LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c3488
    #define WPP_ANNOTATE_USBPWR_c3488 WPP_ANNOTATE_USBPWR_c3488_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c3488 WPP_ANNOTATE_USBPWR_c3488_FINAL("TMF:", "USBPWR.c", "USBPWR_c3488", L"{", L"pDevExt->PortName, ItemString -- 10" , L"pDevExt->DeviceCapabilities.DeviceState[PowerSystemSleeping2]-1, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c3502_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 163 \"%0<%10!s!> VerifyDeviceCapabilities: S3 maps to D%11!u!, use D3\" //   FLAG=QCUSB_DBG_MASK_CONTROL LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c3502_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 163 \"%0<%10!s!> VerifyDeviceCapabilities: S3 maps to D%11!u!, use D3\" //   FLAG=QCUSB_DBG_MASK_CONTROL LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c3502
    #define WPP_ANNOTATE_USBPWR_c3502 WPP_ANNOTATE_USBPWR_c3502_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c3502 WPP_ANNOTATE_USBPWR_c3502_FINAL("TMF:", "USBPWR.c", "USBPWR_c3502", L"{", L"pDevExt->PortName, ItemString -- 10" , L"pDevExt->DeviceCapabilities.DeviceState[PowerSystemSleeping3]-1, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c352_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 22 \"%0<%10!s!> QuerySystemPowerState: dev in service, reject.\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c352_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 22 \"%0<%10!s!> QuerySystemPowerState: dev in service, reject.\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c352
    #define WPP_ANNOTATE_USBPWR_c352 WPP_ANNOTATE_USBPWR_c352_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c352 WPP_ANNOTATE_USBPWR_c352_FINAL("TMF:", "USBPWR.c", "USBPWR_c352", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c3535_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 164 \"%0<%10!s!> DSP: PWR IRP 0x%11!p! to front-A\" //   FLAG=QCUSB_DBG_MASK_POWER LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c3535_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 164 \"%0<%10!s!> DSP: PWR IRP 0x%11!p! to front-A\" //   FLAG=QCUSB_DBG_MASK_POWER LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c3535
    #define WPP_ANNOTATE_USBPWR_c3535 WPP_ANNOTATE_USBPWR_c3535_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemPtr -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c3535 WPP_ANNOTATE_USBPWR_c3535_FINAL("TMF:", "USBPWR.c", "USBPWR_c3535", L"{", L"pDevExt->PortName, ItemString -- 10" , L"Irp, ItemPtr -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c3558_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 165 \"%0<%10!s!> DSP: PWR IRP 0x%11!p! before 0x%12!x! CNT %13!d!\" //   FLAG=QCUSB_DBG_MASK_POWER LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c3558_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 165 \"%0<%10!s!> DSP: PWR IRP 0x%11!p! before 0x%12!x! CNT %13!d!\" //   FLAG=QCUSB_DBG_MASK_POWER LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c3558
    #define WPP_ANNOTATE_USBPWR_c3558 WPP_ANNOTATE_USBPWR_c3558_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemPtr -- 11" , L"Arg, ItemLong -- 12" , L"Arg, ItemLong -- 13" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c3558 WPP_ANNOTATE_USBPWR_c3558_FINAL("TMF:", "USBPWR.c", "USBPWR_c3558", L"{", L"pDevExt->PortName, ItemString -- 10" , L"pIrp, ItemPtr -- 11" , L"irpStack->MajorFunction, ItemLong -- 12" , L"cnt, ItemLong -- 13" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c3571_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 166 \"%0<%10!s!> DSP: existing PWR IRP 0x%11!p![%12!x!,%13!x!]-%14!d!\" //   FLAG=QCUSB_DBG_MASK_POWER LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c3571_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 166 \"%0<%10!s!> DSP: existing PWR IRP 0x%11!p![%12!x!,%13!x!]-%14!d!\" //   FLAG=QCUSB_DBG_MASK_POWER LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c3571
    #define WPP_ANNOTATE_USBPWR_c3571 WPP_ANNOTATE_USBPWR_c3571_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemPtr -- 11" , L"Arg, ItemLong -- 12" , L"Arg, ItemLong -- 13" , L"Arg, ItemLong -- 14" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c3571 WPP_ANNOTATE_USBPWR_c3571_FINAL("TMF:", "USBPWR.c", "USBPWR_c3571", L"{", L"pDevExt->PortName, ItemString -- 10" , L"pIrp, ItemPtr -- 11" , L"irpStack->MajorFunction, ItemLong -- 12" , L"irpStack->MinorFunction, ItemLong -- 13" , L"cnt, ItemLong -- 14" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c3585_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 167 \"%0<%10!s!> DSP: PWR IRP 0x%11!p! to front-B CNT %12!d!\" //   FLAG=QCUSB_DBG_MASK_POWER LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c3585_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 167 \"%0<%10!s!> DSP: PWR IRP 0x%11!p! to front-B CNT %12!d!\" //   FLAG=QCUSB_DBG_MASK_POWER LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c3585
    #define WPP_ANNOTATE_USBPWR_c3585 WPP_ANNOTATE_USBPWR_c3585_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemPtr -- 11" , L"Arg, ItemLong -- 12" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c3585 WPP_ANNOTATE_USBPWR_c3585_FINAL("TMF:", "USBPWR.c", "USBPWR_c3585", L"{", L"pDevExt->PortName, ItemString -- 10" , L"Irp, ItemPtr -- 11" , L"cnt, ItemLong -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c3619_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 168 \"%0<%10!s!> -->_StartDeviceMonitor: 0x%11!x!\" //   FLAG=QCUSB_DBG_MASK_POWER LEVEL=QCUSB_DBG_LEVEL_TRACE" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c3619_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 168 \"%0<%10!s!> -->_StartDeviceMonitor: 0x%11!x!\" //   FLAG=QCUSB_DBG_MASK_POWER LEVEL=QCUSB_DBG_LEVEL_TRACE" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c3619
    #define WPP_ANNOTATE_USBPWR_c3619 WPP_ANNOTATE_USBPWR_c3619_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c3619 WPP_ANNOTATE_USBPWR_c3619_FINAL("TMF:", "USBPWR.c", "USBPWR_c3619", L"{", L"pDevExt->PortName, ItemString -- 10" , L"pDevExt->ExWdmMonitorStarted, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c3628_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 169 \"%0<%10!s!> _StartDeviceMonitor error: dup\" //   FLAG=QCUSB_DBG_MASK_POWER LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c3628_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 169 \"%0<%10!s!> _StartDeviceMonitor error: dup\" //   FLAG=QCUSB_DBG_MASK_POWER LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c3628
    #define WPP_ANNOTATE_USBPWR_c3628 WPP_ANNOTATE_USBPWR_c3628_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c3628 WPP_ANNOTATE_USBPWR_c3628_FINAL("TMF:", "USBPWR.c", "USBPWR_c3628", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c3651_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 170 \"%0<%10!s!> _StartDeviceMonitor error: 0x%11!x! 0x%12!p!\" //   FLAG=QCUSB_DBG_MASK_POWER LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c3651_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 170 \"%0<%10!s!> _StartDeviceMonitor error: 0x%11!x! 0x%12!p!\" //   FLAG=QCUSB_DBG_MASK_POWER LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c3651
    #define WPP_ANNOTATE_USBPWR_c3651 WPP_ANNOTATE_USBPWR_c3651_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemPtr -- 12" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c3651 WPP_ANNOTATE_USBPWR_c3651_FINAL("TMF:", "USBPWR.c", "USBPWR_c3651", L"{", L"pDevExt->PortName, ItemString -- 10" , L"ntStatus, ItemLong -- 11" , L"pDevExt->ExWdmIfNotificationEntry, ItemPtr -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c3664_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 171 \"%0<%10!s!> <--_StartDeviceMonitor: 0x%11!x! 0x%12!p!\" //   FLAG=QCUSB_DBG_MASK_POWER LEVEL=QCUSB_DBG_LEVEL_TRACE" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c3664_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 171 \"%0<%10!s!> <--_StartDeviceMonitor: 0x%11!x! 0x%12!p!\" //   FLAG=QCUSB_DBG_MASK_POWER LEVEL=QCUSB_DBG_LEVEL_TRACE" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c3664
    #define WPP_ANNOTATE_USBPWR_c3664 WPP_ANNOTATE_USBPWR_c3664_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemPtr -- 12" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c3664 WPP_ANNOTATE_USBPWR_c3664_FINAL("TMF:", "USBPWR.c", "USBPWR_c3664", L"{", L"pDevExt->PortName, ItemString -- 10" , L"pDevExt->ExWdmMonitorStarted, ItemLong -- 11" , L"pDevExt->ExWdmIfNotificationEntry, ItemPtr -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c3676_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 172 \"%0<%10!s!> _StopDeviceMonitor error: dup\" //   FLAG=QCUSB_DBG_MASK_POWER LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c3676_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 172 \"%0<%10!s!> _StopDeviceMonitor error: dup\" //   FLAG=QCUSB_DBG_MASK_POWER LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c3676
    #define WPP_ANNOTATE_USBPWR_c3676 WPP_ANNOTATE_USBPWR_c3676_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c3676 WPP_ANNOTATE_USBPWR_c3676_FINAL("TMF:", "USBPWR.c", "USBPWR_c3676", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c3714_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 173 \"%0<%10!s!> _DeviceInterfaceChange: wrong IF\" //   FLAG=QCUSB_DBG_MASK_POWER LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c3714_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 173 \"%0<%10!s!> _DeviceInterfaceChange: wrong IF\" //   FLAG=QCUSB_DBG_MASK_POWER LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c3714
    #define WPP_ANNOTATE_USBPWR_c3714 WPP_ANNOTATE_USBPWR_c3714_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c3714 WPP_ANNOTATE_USBPWR_c3714_FINAL("TMF:", "USBPWR.c", "USBPWR_c3714", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c3726_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 174 \"%0<%10!s!> _DeviceInterfaceChange: ARRIVAL\" //   FLAG=QCUSB_DBG_MASK_POWER LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c3726_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 174 \"%0<%10!s!> _DeviceInterfaceChange: ARRIVAL\" //   FLAG=QCUSB_DBG_MASK_POWER LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c3726
    #define WPP_ANNOTATE_USBPWR_c3726 WPP_ANNOTATE_USBPWR_c3726_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c3726 WPP_ANNOTATE_USBPWR_c3726_FINAL("TMF:", "USBPWR.c", "USBPWR_c3726", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c3735_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 175 \"%0<%10!s!> _DeviceInterfaceChange: err - DUP ARRIVAL\" //   FLAG=QCUSB_DBG_MASK_POWER LEVEL=QCUSB_DBG_LEVEL_CRITICAL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c3735_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 175 \"%0<%10!s!> _DeviceInterfaceChange: err - DUP ARRIVAL\" //   FLAG=QCUSB_DBG_MASK_POWER LEVEL=QCUSB_DBG_LEVEL_CRITICAL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c3735
    #define WPP_ANNOTATE_USBPWR_c3735 WPP_ANNOTATE_USBPWR_c3735_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c3735 WPP_ANNOTATE_USBPWR_c3735_FINAL("TMF:", "USBPWR.c", "USBPWR_c3735", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c3757_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 176 \"%0<%10!s!> _DeviceInterfaceChange: NO_MEM\" //   FLAG=QCUSB_DBG_MASK_POWER LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c3757_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 176 \"%0<%10!s!> _DeviceInterfaceChange: NO_MEM\" //   FLAG=QCUSB_DBG_MASK_POWER LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c3757
    #define WPP_ANNOTATE_USBPWR_c3757 WPP_ANNOTATE_USBPWR_c3757_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c3757 WPP_ANNOTATE_USBPWR_c3757_FINAL("TMF:", "USBPWR.c", "USBPWR_c3757", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c3773_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 177 \"%0<%10!s!> _DeviceInterfaceChange: REMOVAL\" //   FLAG=QCUSB_DBG_MASK_POWER LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c3773_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 177 \"%0<%10!s!> _DeviceInterfaceChange: REMOVAL\" //   FLAG=QCUSB_DBG_MASK_POWER LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c3773
    #define WPP_ANNOTATE_USBPWR_c3773 WPP_ANNOTATE_USBPWR_c3773_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c3773 WPP_ANNOTATE_USBPWR_c3773_FINAL("TMF:", "USBPWR.c", "USBPWR_c3773", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c3794_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 178 \"%0<%10!s!> -->_DeviceChange\" //   FLAG=QCUSB_DBG_MASK_POWER LEVEL=QCUSB_DBG_LEVEL_TRACE" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c3794_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 178 \"%0<%10!s!> -->_DeviceChange\" //   FLAG=QCUSB_DBG_MASK_POWER LEVEL=QCUSB_DBG_LEVEL_TRACE" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c3794
    #define WPP_ANNOTATE_USBPWR_c3794 WPP_ANNOTATE_USBPWR_c3794_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c3794 WPP_ANNOTATE_USBPWR_c3794_FINAL("TMF:", "USBPWR.c", "USBPWR_c3794", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c3809_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 179 \"%0<%10!s!> _DeviceChange: EX_WDM_QUERY_REMOVE\" //   FLAG=QCUSB_DBG_MASK_POWER LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c3809_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 179 \"%0<%10!s!> _DeviceChange: EX_WDM_QUERY_REMOVE\" //   FLAG=QCUSB_DBG_MASK_POWER LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c3809
    #define WPP_ANNOTATE_USBPWR_c3809 WPP_ANNOTATE_USBPWR_c3809_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c3809 WPP_ANNOTATE_USBPWR_c3809_FINAL("TMF:", "USBPWR.c", "USBPWR_c3809", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c3819_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 180 \"%0<%10!s!> _DeviceChange: err - wrong file obj 0x%11!p!/0x%12!p!\" //   FLAG=QCUSB_DBG_MASK_POWER LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c3819_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 180 \"%0<%10!s!> _DeviceChange: err - wrong file obj 0x%11!p!/0x%12!p!\" //   FLAG=QCUSB_DBG_MASK_POWER LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c3819
    #define WPP_ANNOTATE_USBPWR_c3819 WPP_ANNOTATE_USBPWR_c3819_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemPtr -- 11" , L"Arg, ItemPtr -- 12" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c3819 WPP_ANNOTATE_USBPWR_c3819_FINAL("TMF:", "USBPWR.c", "USBPWR_c3819", L"{", L"pDevExt->PortName, ItemString -- 10" , L"removalNotification->FileObject, ItemPtr -- 11" , L"pDevExt->ExFileObject, ItemPtr -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c3832_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 181 \"%0<%10!s!> _DeviceChange: EX_WDM_REMOVE_COMPLETE\" //   FLAG=QCUSB_DBG_MASK_POWER LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c3832_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 181 \"%0<%10!s!> _DeviceChange: EX_WDM_REMOVE_COMPLETE\" //   FLAG=QCUSB_DBG_MASK_POWER LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c3832
    #define WPP_ANNOTATE_USBPWR_c3832 WPP_ANNOTATE_USBPWR_c3832_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c3832 WPP_ANNOTATE_USBPWR_c3832_FINAL("TMF:", "USBPWR.c", "USBPWR_c3832", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c3845_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 182 \"%0<%10!s!> _DeviceChange: EX_WDM_REMOVE_CANCELLED\" //   FLAG=QCUSB_DBG_MASK_POWER LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c3845_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 182 \"%0<%10!s!> _DeviceChange: EX_WDM_REMOVE_CANCELLED\" //   FLAG=QCUSB_DBG_MASK_POWER LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c3845
    #define WPP_ANNOTATE_USBPWR_c3845 WPP_ANNOTATE_USBPWR_c3845_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c3845 WPP_ANNOTATE_USBPWR_c3845_FINAL("TMF:", "USBPWR.c", "USBPWR_c3845", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c3856_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 183 \"%0<%10!s!> _DeviceChange: err - FileObj not NUL 0x%11!p!\" //   FLAG=QCUSB_DBG_MASK_POWER LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c3856_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 183 \"%0<%10!s!> _DeviceChange: err - FileObj not NUL 0x%11!p!\" //   FLAG=QCUSB_DBG_MASK_POWER LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c3856
    #define WPP_ANNOTATE_USBPWR_c3856 WPP_ANNOTATE_USBPWR_c3856_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemPtr -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c3856 WPP_ANNOTATE_USBPWR_c3856_FINAL("TMF:", "USBPWR.c", "USBPWR_c3856", L"{", L"pDevExt->PortName, ItemString -- 10" , L"pDevExt->ExFileObject, ItemPtr -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c3870_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 184 \"%0<%10!s!> _DeviceChange: UNKNOWN_NOTIFICATION\" //   FLAG=QCUSB_DBG_MASK_POWER LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c3870_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 184 \"%0<%10!s!> _DeviceChange: UNKNOWN_NOTIFICATION\" //   FLAG=QCUSB_DBG_MASK_POWER LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c3870
    #define WPP_ANNOTATE_USBPWR_c3870 WPP_ANNOTATE_USBPWR_c3870_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c3870 WPP_ANNOTATE_USBPWR_c3870_FINAL("TMF:", "USBPWR.c", "USBPWR_c3870", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c3878_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 185 \"%0<%10!s!> <--_DeviceChange\" //   FLAG=QCUSB_DBG_MASK_POWER LEVEL=QCUSB_DBG_LEVEL_TRACE" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c3878_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 185 \"%0<%10!s!> <--_DeviceChange\" //   FLAG=QCUSB_DBG_MASK_POWER LEVEL=QCUSB_DBG_LEVEL_TRACE" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c3878
    #define WPP_ANNOTATE_USBPWR_c3878 WPP_ANNOTATE_USBPWR_c3878_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c3878 WPP_ANNOTATE_USBPWR_c3878_FINAL("TMF:", "USBPWR.c", "USBPWR_c3878", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c3896_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 186 \"%0<%10!s!> -->_OpenExWdmDevice\" //   FLAG=QCUSB_DBG_MASK_POWER LEVEL=QCUSB_DBG_LEVEL_TRACE" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c3896_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 186 \"%0<%10!s!> -->_OpenExWdmDevice\" //   FLAG=QCUSB_DBG_MASK_POWER LEVEL=QCUSB_DBG_LEVEL_TRACE" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c3896
    #define WPP_ANNOTATE_USBPWR_c3896 WPP_ANNOTATE_USBPWR_c3896_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c3896 WPP_ANNOTATE_USBPWR_c3896_FINAL("TMF:", "USBPWR.c", "USBPWR_c3896", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c3908_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 187 \"%0<%10!s!> _OpenExWdmDevice: DUP 0x%11!p!\" //   FLAG=QCUSB_DBG_MASK_POWER LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c3908_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 187 \"%0<%10!s!> _OpenExWdmDevice: DUP 0x%11!p!\" //   FLAG=QCUSB_DBG_MASK_POWER LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c3908
    #define WPP_ANNOTATE_USBPWR_c3908 WPP_ANNOTATE_USBPWR_c3908_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemPtr -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c3908 WPP_ANNOTATE_USBPWR_c3908_FINAL("TMF:", "USBPWR.c", "USBPWR_c3908", L"{", L"pDevExt->PortName, ItemString -- 10" , L"pDevExt->ExFileObject, ItemPtr -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c3920_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 188 \"%0<%10!s!> _OpenExWdmDevice: err - no dev name\" //   FLAG=QCUSB_DBG_MASK_POWER LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c3920_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 188 \"%0<%10!s!> _OpenExWdmDevice: err - no dev name\" //   FLAG=QCUSB_DBG_MASK_POWER LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c3920
    #define WPP_ANNOTATE_USBPWR_c3920 WPP_ANNOTATE_USBPWR_c3920_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c3920 WPP_ANNOTATE_USBPWR_c3920_FINAL("TMF:", "USBPWR.c", "USBPWR_c3920", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c3932_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 189 \"%0<%10!s!> _OpenExWdmDevice: err - dev busy\" //   FLAG=QCUSB_DBG_MASK_POWER LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c3932_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 189 \"%0<%10!s!> _OpenExWdmDevice: err - dev busy\" //   FLAG=QCUSB_DBG_MASK_POWER LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c3932
    #define WPP_ANNOTATE_USBPWR_c3932 WPP_ANNOTATE_USBPWR_c3932_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c3932 WPP_ANNOTATE_USBPWR_c3932_FINAL("TMF:", "USBPWR.c", "USBPWR_c3932", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c395_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 23 \"%0<%10!s!> QuerySystemPowerState: invalid state req1 - %11!u!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c395_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 23 \"%0<%10!s!> QuerySystemPowerState: invalid state req1 - %11!u!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c395
    #define WPP_ANNOTATE_USBPWR_c395 WPP_ANNOTATE_USBPWR_c395_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c395 WPP_ANNOTATE_USBPWR_c395_FINAL("TMF:", "USBPWR.c", "USBPWR_c395", L"{", L"pDevExt->PortName, ItemString -- 10" , L"PowerState, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c3968_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 190 \"%0<%10!s!> _OpenExWdmDevice: fail to reg for dev change 0x%11!p!\" //   FLAG=QCUSB_DBG_MASK_POWER LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c3968_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 190 \"%0<%10!s!> _OpenExWdmDevice: fail to reg for dev change 0x%11!p!\" //   FLAG=QCUSB_DBG_MASK_POWER LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c3968
    #define WPP_ANNOTATE_USBPWR_c3968 WPP_ANNOTATE_USBPWR_c3968_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemPtr -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c3968 WPP_ANNOTATE_USBPWR_c3968_FINAL("TMF:", "USBPWR.c", "USBPWR_c3968", L"{", L"pDevExt->PortName, ItemString -- 10" , L"pDevExt->ExFileObject, ItemPtr -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c3979_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 191 \"%0<%10!s!> _OpenExWdmDevice: dev 0x%11!p! fileObj 0x%12!p! hdl 0x%13!p!\" //   FLAG=QCUSB_DBG_MASK_POWER LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c3979_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 191 \"%0<%10!s!> _OpenExWdmDevice: dev 0x%11!p! fileObj 0x%12!p! hdl 0x%13!p!\" //   FLAG=QCUSB_DBG_MASK_POWER LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c3979
    #define WPP_ANNOTATE_USBPWR_c3979 WPP_ANNOTATE_USBPWR_c3979_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemPtr -- 11" , L"Arg, ItemPtr -- 12" , L"Arg, ItemPtr -- 13" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c3979 WPP_ANNOTATE_USBPWR_c3979_FINAL("TMF:", "USBPWR.c", "USBPWR_c3979", L"{", L"pDevExt->PortName, ItemString -- 10" , L"pDevExt->ExWdmDeviceObject, ItemPtr -- 11" , L"pDevExt->ExFileObject, ItemPtr -- 12" , L"pDevExt->ExWdmDevNotificationEntry, ItemPtr -- 13" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c3997_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 192 \"%0<%10!s!> _OpenExWdmDevice: fail to get dev ptr 0x%11!x!\" //   FLAG=QCUSB_DBG_MASK_POWER LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c3997_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 192 \"%0<%10!s!> _OpenExWdmDevice: fail to get dev ptr 0x%11!x!\" //   FLAG=QCUSB_DBG_MASK_POWER LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c3997
    #define WPP_ANNOTATE_USBPWR_c3997 WPP_ANNOTATE_USBPWR_c3997_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c3997 WPP_ANNOTATE_USBPWR_c3997_FINAL("TMF:", "USBPWR.c", "USBPWR_c3997", L"{", L"pDevExt->PortName, ItemString -- 10" , L"status, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c4005_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 193 \"%0<%10!s!> <--_OpenExWdmDevice 0x%11!x!\" //   FLAG=QCUSB_DBG_MASK_POWER LEVEL=QCUSB_DBG_LEVEL_TRACE" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c4005_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 193 \"%0<%10!s!> <--_OpenExWdmDevice 0x%11!x!\" //   FLAG=QCUSB_DBG_MASK_POWER LEVEL=QCUSB_DBG_LEVEL_TRACE" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c4005
    #define WPP_ANNOTATE_USBPWR_c4005 WPP_ANNOTATE_USBPWR_c4005_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c4005 WPP_ANNOTATE_USBPWR_c4005_FINAL("TMF:", "USBPWR.c", "USBPWR_c4005", L"{", L"pDevExt->PortName, ItemString -- 10" , L"status, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c4024_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 194 \"%0<%10!s!> -->_CloseExWdmDevice 0x%11!p!, 0x%12!p!, 0x%13!p!\" //   FLAG=QCUSB_DBG_MASK_POWER LEVEL=QCUSB_DBG_LEVEL_TRACE" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c4024_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 194 \"%0<%10!s!> -->_CloseExWdmDevice 0x%11!p!, 0x%12!p!, 0x%13!p!\" //   FLAG=QCUSB_DBG_MASK_POWER LEVEL=QCUSB_DBG_LEVEL_TRACE" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c4024
    #define WPP_ANNOTATE_USBPWR_c4024 WPP_ANNOTATE_USBPWR_c4024_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemPtr -- 11" , L"Arg, ItemPtr -- 12" , L"Arg, ItemPtr -- 13" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c4024 WPP_ANNOTATE_USBPWR_c4024_FINAL("TMF:", "USBPWR.c", "USBPWR_c4024", L"{", L"pDevExt->PortName, ItemString -- 10" , L"pDevExt->ExWdmDeviceObject, ItemPtr -- 11" , L"pDevExt->ExFileObject, ItemPtr -- 12" , L"pDevExt->ExWdmDevNotificationEntry, ItemPtr -- 13" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c4065_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 195 \"%0<%10!s!> <--_CloseExWdmDevice 0x%11!p!\" //   FLAG=QCUSB_DBG_MASK_POWER LEVEL=QCUSB_DBG_LEVEL_TRACE" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c4065_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 195 \"%0<%10!s!> <--_CloseExWdmDevice 0x%11!p!\" //   FLAG=QCUSB_DBG_MASK_POWER LEVEL=QCUSB_DBG_LEVEL_TRACE" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c4065
    #define WPP_ANNOTATE_USBPWR_c4065 WPP_ANNOTATE_USBPWR_c4065_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemPtr -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c4065 WPP_ANNOTATE_USBPWR_c4065_FINAL("TMF:", "USBPWR.c", "USBPWR_c4065", L"{", L"pDevExt->PortName, ItemString -- 10" , L"pDevExt->ExWdmDeviceObject, ItemPtr -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c4128_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 196 \"%0<%10!s!> _GetSystemPowerIrpComp: [%11!d!] %12!d!\" //   FLAG=QCUSB_DBG_MASK_POWER LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c4128_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 196 \"%0<%10!s!> _GetSystemPowerIrpComp: [%11!d!] %12!d!\" //   FLAG=QCUSB_DBG_MASK_POWER LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c4128
    #define WPP_ANNOTATE_USBPWR_c4128 WPP_ANNOTATE_USBPWR_c4128_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemLong -- 12" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c4128 WPP_ANNOTATE_USBPWR_c4128_FINAL("TMF:", "USBPWR.c", "USBPWR_c4128", L"{", L"pDevExt->PortName, ItemString -- 10" , L"pSysPwr->Type, ItemLong -- 11" , L"pSysPwr->State, ItemLong -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c4137_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 197 \"%0<%10!s!> _GetSystemPowerIrpComp: buf too small\" //   FLAG=QCUSB_DBG_MASK_POWER LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c4137_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 197 \"%0<%10!s!> _GetSystemPowerIrpComp: buf too small\" //   FLAG=QCUSB_DBG_MASK_POWER LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c4137
    #define WPP_ANNOTATE_USBPWR_c4137 WPP_ANNOTATE_USBPWR_c4137_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c4137 WPP_ANNOTATE_USBPWR_c4137_FINAL("TMF:", "USBPWR.c", "USBPWR_c4137", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c4148_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 198 \"%0<%10!s!> _GetSystemPowerIrpComp: failure 0x%11!x!\" //   FLAG=QCUSB_DBG_MASK_POWER LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c4148_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 198 \"%0<%10!s!> _GetSystemPowerIrpComp: failure 0x%11!x!\" //   FLAG=QCUSB_DBG_MASK_POWER LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c4148
    #define WPP_ANNOTATE_USBPWR_c4148 WPP_ANNOTATE_USBPWR_c4148_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c4148 WPP_ANNOTATE_USBPWR_c4148_FINAL("TMF:", "USBPWR.c", "USBPWR_c4148", L"{", L"pDevExt->PortName, ItemString -- 10" , L"Irp->IoStatus.Status, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c4184_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 199 \"%0<%10!s!> _GetSystemPowerState: ExWdm not open\" //   FLAG=QCUSB_DBG_MASK_POWER LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c4184_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 199 \"%0<%10!s!> _GetSystemPowerState: ExWdm not open\" //   FLAG=QCUSB_DBG_MASK_POWER LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c4184
    #define WPP_ANNOTATE_USBPWR_c4184 WPP_ANNOTATE_USBPWR_c4184_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c4184 WPP_ANNOTATE_USBPWR_c4184_FINAL("TMF:", "USBPWR.c", "USBPWR_c4184", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c419_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 24 \"%0<%10!s!> SystemPowerRequestCompletion: IRP 0x%11!p!(0x%12!x!)\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c419_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 24 \"%0<%10!s!> SystemPowerRequestCompletion: IRP 0x%11!p!(0x%12!x!)\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c419
    #define WPP_ANNOTATE_USBPWR_c419 WPP_ANNOTATE_USBPWR_c419_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemPtr -- 11" , L"Arg, ItemLong -- 12" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c419 WPP_ANNOTATE_USBPWR_c419_FINAL("TMF:", "USBPWR.c", "USBPWR_c419", L"{", L"pDevExt->PortName, ItemString -- 10" , L"Irp, ItemPtr -- 11" , L"ntStatus, ItemLong -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c4196_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 200 \"%0<%10!s!> _GetSystemPowerState: ExWdm ref failure\" //   FLAG=QCUSB_DBG_MASK_POWER LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c4196_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 200 \"%0<%10!s!> _GetSystemPowerState: ExWdm ref failure\" //   FLAG=QCUSB_DBG_MASK_POWER LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c4196
    #define WPP_ANNOTATE_USBPWR_c4196 WPP_ANNOTATE_USBPWR_c4196_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c4196 WPP_ANNOTATE_USBPWR_c4196_FINAL("TMF:", "USBPWR.c", "USBPWR_c4196", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c4210_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 201 \"%0<%10!s!> _GetSystemPowerState: NO_MEM Irp\" //   FLAG=QCUSB_DBG_MASK_POWER LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c4210_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 201 \"%0<%10!s!> _GetSystemPowerState: NO_MEM Irp\" //   FLAG=QCUSB_DBG_MASK_POWER LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c4210
    #define WPP_ANNOTATE_USBPWR_c4210 WPP_ANNOTATE_USBPWR_c4210_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c4210 WPP_ANNOTATE_USBPWR_c4210_FINAL("TMF:", "USBPWR.c", "USBPWR_c4210", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c4242_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 202 \"%0<%10!s!> _GetSystemPowerState: sysPwr %11!d!\" //   FLAG=QCUSB_DBG_MASK_POWER LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c4242_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 202 \"%0<%10!s!> _GetSystemPowerState: sysPwr %11!d!\" //   FLAG=QCUSB_DBG_MASK_POWER LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c4242
    #define WPP_ANNOTATE_USBPWR_c4242 WPP_ANNOTATE_USBPWR_c4242_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c4242 WPP_ANNOTATE_USBPWR_c4242_FINAL("TMF:", "USBPWR.c", "USBPWR_c4242", L"{", L"pDevExt->PortName, ItemString -- 10" , L"pDevExt->SystemPower, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c4283_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 203 \"%0<%10!s!> _RegisterNotification: NO_MEM Irp\" //   FLAG=QCUSB_DBG_MASK_POWER LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c4283_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 203 \"%0<%10!s!> _RegisterNotification: NO_MEM Irp\" //   FLAG=QCUSB_DBG_MASK_POWER LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c4283
    #define WPP_ANNOTATE_USBPWR_c4283 WPP_ANNOTATE_USBPWR_c4283_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c4283 WPP_ANNOTATE_USBPWR_c4283_FINAL("TMF:", "USBPWR.c", "USBPWR_c4283", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c431_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 25 \"%0<%10!s!> PIRP (Ce 0x%11!x!) 0x%12!p!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c431_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 25 \"%0<%10!s!> PIRP (Ce 0x%11!x!) 0x%12!p!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c431
    #define WPP_ANNOTATE_USBPWR_c431 WPP_ANNOTATE_USBPWR_c431_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemPtr -- 12" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c431 WPP_ANNOTATE_USBPWR_c431_FINAL("TMF:", "USBPWR.c", "USBPWR_c431", L"{", L"pDevExt->PortName, ItemString -- 10" , L"ntStatus, ItemLong -- 11" , L"Irp, ItemPtr -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c4310_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 204 \"%0<%10!s!> _RegisterNotification: ST 0x%11!x!\" //   FLAG=QCUSB_DBG_MASK_POWER LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c4310_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 204 \"%0<%10!s!> _RegisterNotification: ST 0x%11!x!\" //   FLAG=QCUSB_DBG_MASK_POWER LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c4310
    #define WPP_ANNOTATE_USBPWR_c4310 WPP_ANNOTATE_USBPWR_c4310_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c4310 WPP_ANNOTATE_USBPWR_c4310_FINAL("TMF:", "USBPWR.c", "USBPWR_c4310", L"{", L"pDevExt->PortName, ItemString -- 10" , L"ntStatus, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c4330_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 205 \"%0<%10!s!> _CancelXwdmNotification: 0x%11!p!\" //   FLAG=QCUSB_DBG_MASK_POWER LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c4330_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 205 \"%0<%10!s!> _CancelXwdmNotification: 0x%11!p!\" //   FLAG=QCUSB_DBG_MASK_POWER LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c4330
    #define WPP_ANNOTATE_USBPWR_c4330 WPP_ANNOTATE_USBPWR_c4330_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemPtr -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c4330 WPP_ANNOTATE_USBPWR_c4330_FINAL("TMF:", "USBPWR.c", "USBPWR_c4330", L"{", L"pDevExt->PortName, ItemString -- 10" , L"pDevExt->XwdmNotificationIrp, ItemPtr -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c452_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 26 \"%0<%10!s!> SysPwrReqCompletion: 0x%11!p! [PrepareToPowerDown 0]\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c452_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 26 \"%0<%10!s!> SysPwrReqCompletion: 0x%11!p! [PrepareToPowerDown 0]\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c452
    #define WPP_ANNOTATE_USBPWR_c452 WPP_ANNOTATE_USBPWR_c452_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemPtr -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c452 WPP_ANNOTATE_USBPWR_c452_FINAL("TMF:", "USBPWR.c", "USBPWR_c452", L"{", L"pDevExt->PortName, ItemString -- 10" , L"Irp, ItemPtr -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c482_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 27 \"%0<%10!s!> ReqDevicePowerIrp: SysPwrIRP 0x%11!p!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c482_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 27 \"%0<%10!s!> ReqDevicePowerIrp: SysPwrIRP 0x%11!p!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c482
    #define WPP_ANNOTATE_USBPWR_c482 WPP_ANNOTATE_USBPWR_c482_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemPtr -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c482 WPP_ANNOTATE_USBPWR_c482_FINAL("TMF:", "USBPWR.c", "USBPWR_c482", L"{", L"pDevExt->PortName, ItemString -- 10" , L"Irp, ItemPtr -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c495_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 28 \"%0<%10!s!> ReqDevicePowerIrp: unexpected pwr map (sys[%11!u!]<->dev[%12!u!])\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c495_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 28 \"%0<%10!s!> ReqDevicePowerIrp: unexpected pwr map (sys[%11!u!]<->dev[%12!u!])\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c495
    #define WPP_ANNOTATE_USBPWR_c495 WPP_ANNOTATE_USBPWR_c495_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemLong -- 12" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c495 WPP_ANNOTATE_USBPWR_c495_FINAL("TMF:", "USBPWR.c", "USBPWR_c495", L"{", L"pDevExt->PortName, ItemString -- 10" , L"systemState, ItemLong -- 11" , L"devState, ItemLong -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c529_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 29 \"%0<%10!s!> LONGHORN fast resume: to complete SysIrp 0x%11!p!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c529_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 29 \"%0<%10!s!> LONGHORN fast resume: to complete SysIrp 0x%11!p!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c529
    #define WPP_ANNOTATE_USBPWR_c529 WPP_ANNOTATE_USBPWR_c529_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemPtr -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c529 WPP_ANNOTATE_USBPWR_c529_FINAL("TMF:", "USBPWR.c", "USBPWR_c529", L"{", L"pDevExt->PortName, ItemString -- 10" , L"Irp, ItemPtr -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c552_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 30 \"%0<%10!s!> PIRP (Csys 0) 0x%11!p! dev req2 0x%12!x!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c552_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 30 \"%0<%10!s!> PIRP (Csys 0) 0x%11!p! dev req2 0x%12!x!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c552
    #define WPP_ANNOTATE_USBPWR_c552 WPP_ANNOTATE_USBPWR_c552_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemPtr -- 11" , L"Arg, ItemLong -- 12" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c552 WPP_ANNOTATE_USBPWR_c552_FINAL("TMF:", "USBPWR.c", "USBPWR_c552", L"{", L"pDevExt->PortName, ItemString -- 10" , L"Irp, ItemPtr -- 11" , L"ntStatus, ItemLong -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c583_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 31 \"%0<%10!s!> PIRP (Csys 0) 0x%11!p! dev req 0x%12!x!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c583_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 31 \"%0<%10!s!> PIRP (Csys 0) 0x%11!p! dev req 0x%12!x!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c583
    #define WPP_ANNOTATE_USBPWR_c583 WPP_ANNOTATE_USBPWR_c583_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemPtr -- 11" , L"Arg, ItemLong -- 12" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c583 WPP_ANNOTATE_USBPWR_c583_FINAL("TMF:", "USBPWR.c", "USBPWR_c583", L"{", L"pDevExt->PortName, ItemString -- 10" , L"Irp, ItemPtr -- 11" , L"ntStatus, ItemLong -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c614_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 32 \"%0<%10!s!> TopDevicePowerIrpCompletion: sIRP 0x%11!p! DevObj 0x%12!p!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c614_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 32 \"%0<%10!s!> TopDevicePowerIrpCompletion: sIRP 0x%11!p! DevObj 0x%12!p!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c614
    #define WPP_ANNOTATE_USBPWR_c614 WPP_ANNOTATE_USBPWR_c614_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemPtr -- 11" , L"Arg, ItemPtr -- 12" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c614 WPP_ANNOTATE_USBPWR_c614_FINAL("TMF:", "USBPWR.c", "USBPWR_c614", L"{", L"pDevExt->PortName, ItemString -- 10" , L"systemPwrIrp, ItemPtr -- 11" , L"DeviceObject, ItemPtr -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c649_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 33 \"%0<%10!s!> PIRP (Csys 0x%11!x!) 0x%12!p! [PrepareToPowerDown %13!u!]\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c649_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 33 \"%0<%10!s!> PIRP (Csys 0x%11!x!) 0x%12!p! [PrepareToPowerDown %13!u!]\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c649
    #define WPP_ANNOTATE_USBPWR_c649 WPP_ANNOTATE_USBPWR_c649_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemPtr -- 12" , L"Arg, ItemLong -- 13" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c649 WPP_ANNOTATE_USBPWR_c649_FINAL("TMF:", "USBPWR.c", "USBPWR_c649", L"{", L"pDevExt->PortName, ItemString -- 10" , L"IoStatus->Status, ItemLong -- 11" , L"systemPwrIrp, ItemPtr -- 12" , L"pDevExt->PrepareToPowerDown, ItemLong -- 13" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c678_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 34 \"%0<%10!s!> QueryDevicePowerState: dev in service, reject.\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c678_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 34 \"%0<%10!s!> QueryDevicePowerState: dev in service, reject.\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c678
    #define WPP_ANNOTATE_USBPWR_c678 WPP_ANNOTATE_USBPWR_c678_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c678 WPP_ANNOTATE_USBPWR_c678_FINAL("TMF:", "USBPWR.c", "USBPWR_c678", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c707_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 35 \"%0<%10!s!> QueryDevicePowerState: D%11!u!, no action\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c707_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 35 \"%0<%10!s!> QueryDevicePowerState: D%11!u!, no action\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c707
    #define WPP_ANNOTATE_USBPWR_c707 WPP_ANNOTATE_USBPWR_c707_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c707 WPP_ANNOTATE_USBPWR_c707_FINAL("TMF:", "USBPWR.c", "USBPWR_c707", L"{", L"pDevExt->PortName, ItemString -- 10" , L"PowerState-1, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c720_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 36 \"%0<%10!s!> QueryDevicePowerState: invalid state req1 - D%11!u!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c720_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 36 \"%0<%10!s!> QueryDevicePowerState: invalid state req1 - D%11!u!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c720
    #define WPP_ANNOTATE_USBPWR_c720 WPP_ANNOTATE_USBPWR_c720_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c720 WPP_ANNOTATE_USBPWR_c720_FINAL("TMF:", "USBPWR.c", "USBPWR_c720", L"{", L"pDevExt->PortName, ItemString -- 10" , L"PowerState-1, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c743_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 37 \"%0<%10!s!> DevicePowerDownIrpCompletion: IRP 0x%11!p!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c743_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 37 \"%0<%10!s!> DevicePowerDownIrpCompletion: IRP 0x%11!p!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c743
    #define WPP_ANNOTATE_USBPWR_c743 WPP_ANNOTATE_USBPWR_c743_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemPtr -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c743 WPP_ANNOTATE_USBPWR_c743_FINAL("TMF:", "USBPWR.c", "USBPWR_c743", L"{", L"pDevExt->PortName, ItemString -- 10" , L"Irp, ItemPtr -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c765_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 38 \"%0<%10!s!> PIRP (Cdev 0x%11!x!) 0x%12!p!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c765_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 38 \"%0<%10!s!> PIRP (Cdev 0x%11!x!) 0x%12!p!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c765
    #define WPP_ANNOTATE_USBPWR_c765 WPP_ANNOTATE_USBPWR_c765_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemPtr -- 12" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c765 WPP_ANNOTATE_USBPWR_c765_FINAL("TMF:", "USBPWR.c", "USBPWR_c765", L"{", L"pDevExt->PortName, ItemString -- 10" , L"Irp->IoStatus.Status, ItemLong -- 11" , L"Irp, ItemPtr -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c792_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 39 \"%0<%10!s!> -->SetSystemPowerState: %11!u!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_TRACE" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c792_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 39 \"%0<%10!s!> -->SetSystemPowerState: %11!u!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_TRACE" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c792
    #define WPP_ANNOTATE_USBPWR_c792 WPP_ANNOTATE_USBPWR_c792_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c792 WPP_ANNOTATE_USBPWR_c792_FINAL("TMF:", "USBPWR.c", "USBPWR_c792", L"{", L"pDevExt->PortName, ItemString -- 10" , L"PowerState, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c816_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 40 \"%0<%10!s!> <--SetSystemPowerState: %11!u!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_TRACE" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c816_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 40 \"%0<%10!s!> <--SetSystemPowerState: %11!u!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_TRACE" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c816
    #define WPP_ANNOTATE_USBPWR_c816 WPP_ANNOTATE_USBPWR_c816_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c816 WPP_ANNOTATE_USBPWR_c816_FINAL("TMF:", "USBPWR.c", "USBPWR_c816", L"{", L"pDevExt->PortName, ItemString -- 10" , L"PowerState, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c841_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 41 \"%0<%10!s!> -->CancelPendingIrps: %11!u!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_TRACE" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c841_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 41 \"%0<%10!s!> -->CancelPendingIrps: %11!u!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_TRACE" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c841
    #define WPP_ANNOTATE_USBPWR_c841 WPP_ANNOTATE_USBPWR_c841_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c841 WPP_ANNOTATE_USBPWR_c841_FINAL("TMF:", "USBPWR.c", "USBPWR_c841", L"{", L"pDevExt->PortName, ItemString -- 10" , L"PowerState, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c869_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 42 \"%0<%10!s!> WTO-a\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c869_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 42 \"%0<%10!s!> WTO-a\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c869
    #define WPP_ANNOTATE_USBPWR_c869 WPP_ANNOTATE_USBPWR_c869_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c869 WPP_ANNOTATE_USBPWR_c869_FINAL("TMF:", "USBPWR.c", "USBPWR_c869", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c87_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 10 \"%0<%10!s!> IRP_MN_QUERY_POWER: SystemPowerState %11!d!\" //   FLAG=QCUSB_DBG_MASK_POWER LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c87_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 10 \"%0<%10!s!> IRP_MN_QUERY_POWER: SystemPowerState %11!d!\" //   FLAG=QCUSB_DBG_MASK_POWER LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c87
    #define WPP_ANNOTATE_USBPWR_c87 WPP_ANNOTATE_USBPWR_c87_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c87 WPP_ANNOTATE_USBPWR_c87_FINAL("TMF:", "USBPWR.c", "USBPWR_c87", L"{", L"pDevExt->PortName, ItemString -- 10" , L"pwrState, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c890_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 43 \"%0<%10!s!> <--CancelPendingIrps: %11!u!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_TRACE" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c890_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 43 \"%0<%10!s!> <--CancelPendingIrps: %11!u!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_TRACE" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c890
    #define WPP_ANNOTATE_USBPWR_c890 WPP_ANNOTATE_USBPWR_c890_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c890 WPP_ANNOTATE_USBPWR_c890_FINAL("TMF:", "USBPWR.c", "USBPWR_c890", L"{", L"pDevExt->PortName, ItemString -- 10" , L"PowerState, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c927_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 44 \"%0<%10!s!> SetDevicePowerState: already in D0, no act(0x%11!p!)\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c927_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 44 \"%0<%10!s!> SetDevicePowerState: already in D0, no act(0x%11!p!)\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c927
    #define WPP_ANNOTATE_USBPWR_c927 WPP_ANNOTATE_USBPWR_c927_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemPtr -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c927 WPP_ANNOTATE_USBPWR_c927_FINAL("TMF:", "USBPWR.c", "USBPWR_c927", L"{", L"pDevExt->PortName, ItemString -- 10" , L"Irp, ItemPtr -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c957_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 45 \"%0<%10!s!> DevicePowerUpIrpCompletion: 0x%11!p!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c957_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 45 \"%0<%10!s!> DevicePowerUpIrpCompletion: 0x%11!p!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c957
    #define WPP_ANNOTATE_USBPWR_c957 WPP_ANNOTATE_USBPWR_c957_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemPtr -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c957 WPP_ANNOTATE_USBPWR_c957_FINAL("TMF:", "USBPWR.c", "USBPWR_c957", L"{", L"pDevExt->PortName, ItemString -- 10" , L"Irp, ItemPtr -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c971_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 46 \"%0<%10!s!> DevicePowerUpIrpCompletion failure 0x%11!x!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c971_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 46 \"%0<%10!s!> DevicePowerUpIrpCompletion failure 0x%11!x!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c971
    #define WPP_ANNOTATE_USBPWR_c971 WPP_ANNOTATE_USBPWR_c971_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c971 WPP_ANNOTATE_USBPWR_c971_FINAL("TMF:", "USBPWR.c", "USBPWR_c971", L"{", L"pDevExt->PortName, ItemString -- 10" , L"ntStatus, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPWR_c991_FINAL(P, File, Name, ...)    __annotation(L ## P, L"78a3e374-4d4e-3853-317b-f7d3db21d4c1 ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 47 \"%0<%10!s!> PIRP (Cdev-s0 0x%11!x!) 0x%12!p!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPWR_c991_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 47 \"%0<%10!s!> PIRP (Cdev-s0 0x%11!x!) 0x%12!p!\" //   FLAG=QCUSB_DBG_MASK_PIRP LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPWR_c991
    #define WPP_ANNOTATE_USBPWR_c991 WPP_ANNOTATE_USBPWR_c991_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemPtr -- 12" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPWR_c991 WPP_ANNOTATE_USBPWR_c991_FINAL("TMF:", "USBPWR.c", "USBPWR_c991", L"{", L"pDevExt->PortName, ItemString -- 10" , L"Irp->IoStatus.Status, ItemLong -- 11" , L"Irp, ItemPtr -- 12" , L"}")
#endif
# define WPP_ANNOTATE(x) WPP_ANNOTATE_ ## x,

#else
# define WPP_ANNOTATE(x)
#endif


#if 1
#if !defined(WPP_USER_MSG_GUID)

#define WPP_LOCAL_TraceGuids WPP_78a3e3744d4e3853317bf7d3db21d4c1_Traceguids
extern const __declspec(selectany) GUID WPP_LOCAL_TraceGuids[] = { {0x78a3e374,0x4d4e,0x3853,{0x31,0x7b,0xf7,0xd3,0xdb,0x21,0xd4,0xc1}}, };

#else

#define WPP_LOCAL_MSG_VAR(Guid) WPP_XGLUE3(WPP_, WPP_GUID_NORM Guid, _Traceguids)

#define WPP_LOCAL_MSG_GUID(Guid) \
extern const __declspec(selectany) GUID WPP_LOCAL_MSG_VAR(Guid)[] = { WPP_GUID_STRUCT Guid }

WPP_LOCAL_MSG_GUID(WPP_USER_MSG_GUID);
#define WPP_LOCAL_TraceGuids WPP_LOCAL_MSG_VAR(WPP_USER_MSG_GUID)

#endif
#endif


#ifndef WPP_ALREADY_INCLUDED

#if !defined(WPP_TRACE_OPTIONS)
enum {WPP_TRACE_OPTIONS = TRACE_MESSAGE_SEQUENCE   | TRACE_MESSAGE_GUID
                        | TRACE_MESSAGE_SYSTEMINFO | TRACE_MESSAGE_TIMESTAMP };
#endif

#ifndef WPP_LOGPAIR_SEPARATOR
# define WPP_LOGPAIR_SEPARATOR ,
#endif

#ifndef WPP_LOGPAIR_SIZET
# define WPP_LOGPAIR_SIZET SIZE_T
#endif

#if !defined(WPP_LOGPAIR)
# define WPP_LOGPAIR(_Size, _Addr)     (_Addr),((WPP_LOGPAIR_SIZET)(_Size))WPP_LOGPAIR_SEPARATOR
#endif

#define WPP_LOGTYPEVAL(_Type, _Value) WPP_LOGPAIR(sizeof(_Type), &(_Value))
#define WPP_LOGTYPEPTR(_Value)        WPP_LOGPAIR(sizeof(*(_Value)), (_Value))

// Marshalling macros.

#if !defined(WPP_LOGASTR)
# if !defined(WPP_CHECK_FOR_NULL_STRING)
#  define WPP_LOGASTR(_value)  WPP_LOGPAIR(strlen(_value) + 1, _value )
# else
#  define WPP_LOGASTR(_value)  WPP_LOGPAIR( (_value)?strlen(_value) + 1:5, (_value)?(_value):"NULL" )
# endif
#endif

#if !defined(WPP_LOGWSTR)
# if !defined(WPP_CHECK_FOR_NULL_STRING)
#  define WPP_LOGWSTR(_value)  WPP_LOGPAIR( (wcslen(_value)+1) * sizeof(WCHAR), _value)
# else
#  define WPP_LOGWSTR(_value)  WPP_LOGPAIR( ((_value)?wcslen(_value) + 1:5) * sizeof(WCHAR), (_value)?(_value):L"NULL" )
# endif
#endif

#if !defined(WPP_LOGPGUID)
# define WPP_LOGPGUID(_value) WPP_LOGPAIR( sizeof(GUID), (_value) )
#endif


#if !defined(WPP_LOGPSID)
# if !defined(WPP_CHECK_FOR_NULL_STRING)
# define WPP_LOGPSID(_value)  WPP_LOGPAIR( WPP_GetLengthSid(_value), (_value) )
# else
# define WPP_LOGPSID(_value)  WPP_LOGPAIR( (_value)? (WPP_IsValidSid(_value)? \
                                                                        WPP_GetLengthSid(_value):5):5, \
                                                                        (_value)? (WPP_IsValidSid(_value)?\
                                                                        (_value):"NULL"):"NULL")
#endif
#endif

#if !defined(WPP_LOGCSTR)
# define WPP_LOGCSTR(_x) \
    WPP_LOGPAIR( sizeof((_x).Length), &(_x).Length ) WPP_LOGPAIR( (_x).Length, (_x).Buffer )
#endif

#if !defined(WPP_LOGUSTR)
# define WPP_LOGUSTR(_x) \
    WPP_LOGPAIR( sizeof((_x).Length), &(_x).Length ) WPP_LOGPAIR( (_x).Length, (_x).Buffer )
#endif

#if !defined(WPP_LOGPUSTR)
#if !defined(WPP_CHECK_FOR_NULL_STRING)
# define WPP_LOGPUSTR(_x) WPP_LOGUSTR(*(_x))
#else
# define WPP_LOGPUSTR(_x) WPP_LOGPAIR( sizeof(USHORT), (_x)?&(_x)->Length:L"\x08" ) \
                          WPP_LOGPAIR( (_x)?(_x)->Length:0x08, (_x)?(_x)->Buffer:L"NULL" )
#endif
#endif

#if !defined(WPP_LOGPCSTR)
#if !defined(WPP_CHECK_FOR_NULL_STRING)
# define WPP_LOGPCSTR(_x) WPP_LOGCSTR(*(_x))
#else
# define WPP_LOGPCSTR(_x) WPP_LOGPAIR( sizeof(USHORT), (_x)?&(_x)->Length:L"\x04" ) \
                          WPP_LOGPAIR( (_x)?(_x)->Length:0x04, (_x)?(_x)->Buffer:"NULL" )
#endif
#endif

#if !defined(WPP_LOGSTDSTR)
#define WPP_LOGSTDSTR(_value)  WPP_LOGPAIR( (_value).size()+1, (_value).c_str() )
#endif

#endif  //  #ifndef WPP_ALREADY_INCLUDED

#if !defined(WPP_CHECK_INIT)
# define WPP_CHECK_INIT (WPP_CB != (WPP_CB_TYPE*)&WPP_CB) && 
#endif


#ifndef WPP_SF_s_def
#       define WPP_SF_s_def
WPP_INLINE void WPP_SF_s(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, const char* _a1)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGASTR(_a1)  0); }
#endif  // #ifndef WPP_SF_s_def
#ifndef WPP_SF_sD_def
#       define WPP_SF_sD_def
WPP_INLINE void WPP_SF_sD(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, const char* _a1, unsigned int _a2)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(unsigned int,_a2)  0); }
#endif  // #ifndef WPP_SF_sD_def
#ifndef WPP_SF_sDD_def
#       define WPP_SF_sDD_def
WPP_INLINE void WPP_SF_sDD(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, const char* _a1, unsigned int _a2, unsigned int _a3)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(unsigned int,_a2) WPP_LOGTYPEVAL(unsigned int,_a3)  0); }
#endif  // #ifndef WPP_SF_sDD_def
#ifndef WPP_SF_sDDDDD_def
#       define WPP_SF_sDDDDD_def
WPP_INLINE void WPP_SF_sDDDDD(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, const char* _a1, unsigned int _a2, unsigned int _a3, unsigned int _a4, unsigned int _a5, unsigned int _a6)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(unsigned int,_a2) WPP_LOGTYPEVAL(unsigned int,_a3) WPP_LOGTYPEVAL(unsigned int,_a4) WPP_LOGTYPEVAL(unsigned int,_a5) WPP_LOGTYPEVAL(unsigned int,_a6)  0); }
#endif  // #ifndef WPP_SF_sDDDDD_def
#ifndef WPP_SF_sDDq_def
#       define WPP_SF_sDDq_def
WPP_INLINE void WPP_SF_sDDq(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, const char* _a1, unsigned int _a2, unsigned int _a3, const void* _a4)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(unsigned int,_a2) WPP_LOGTYPEVAL(unsigned int,_a3) WPP_LOGTYPEVAL(const void*,_a4)  0); }
#endif  // #ifndef WPP_SF_sDDq_def
#ifndef WPP_SF_sDDqD_def
#       define WPP_SF_sDDqD_def
WPP_INLINE void WPP_SF_sDDqD(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, const char* _a1, unsigned int _a2, unsigned int _a3, const void* _a4, unsigned int _a5)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(unsigned int,_a2) WPP_LOGTYPEVAL(unsigned int,_a3) WPP_LOGTYPEVAL(const void*,_a4) WPP_LOGTYPEVAL(unsigned int,_a5)  0); }
#endif  // #ifndef WPP_SF_sDDqD_def
#ifndef WPP_SF_sDd_def
#       define WPP_SF_sDd_def
WPP_INLINE void WPP_SF_sDd(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, const char* _a1, unsigned int _a2, signed int _a3)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(unsigned int,_a2) WPP_LOGTYPEVAL(signed int,_a3)  0); }
#endif  // #ifndef WPP_SF_sDd_def
#ifndef WPP_SF_sDq_def
#       define WPP_SF_sDq_def
WPP_INLINE void WPP_SF_sDq(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, const char* _a1, unsigned int _a2, const void* _a3)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(unsigned int,_a2) WPP_LOGTYPEVAL(const void*,_a3)  0); }
#endif  // #ifndef WPP_SF_sDq_def
#ifndef WPP_SF_sDqD_def
#       define WPP_SF_sDqD_def
WPP_INLINE void WPP_SF_sDqD(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, const char* _a1, unsigned int _a2, const void* _a3, unsigned int _a4)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(unsigned int,_a2) WPP_LOGTYPEVAL(const void*,_a3) WPP_LOGTYPEVAL(unsigned int,_a4)  0); }
#endif  // #ifndef WPP_SF_sDqD_def
#ifndef WPP_SF_sDqDD_def
#       define WPP_SF_sDqDD_def
WPP_INLINE void WPP_SF_sDqDD(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, const char* _a1, unsigned int _a2, const void* _a3, unsigned int _a4, unsigned int _a5)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(unsigned int,_a2) WPP_LOGTYPEVAL(const void*,_a3) WPP_LOGTYPEVAL(unsigned int,_a4) WPP_LOGTYPEVAL(unsigned int,_a5)  0); }
#endif  // #ifndef WPP_SF_sDqDD_def
#ifndef WPP_SF_sd_def
#       define WPP_SF_sd_def
WPP_INLINE void WPP_SF_sd(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, const char* _a1, signed int _a2)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(signed int,_a2)  0); }
#endif  // #ifndef WPP_SF_sd_def
#ifndef WPP_SF_sdD_def
#       define WPP_SF_sdD_def
WPP_INLINE void WPP_SF_sdD(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, const char* _a1, signed int _a2, unsigned int _a3)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(signed int,_a2) WPP_LOGTYPEVAL(unsigned int,_a3)  0); }
#endif  // #ifndef WPP_SF_sdD_def
#ifndef WPP_SF_sdd_def
#       define WPP_SF_sdd_def
WPP_INLINE void WPP_SF_sdd(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, const char* _a1, signed int _a2, signed int _a3)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(signed int,_a2) WPP_LOGTYPEVAL(signed int,_a3)  0); }
#endif  // #ifndef WPP_SF_sdd_def
#ifndef WPP_SF_sq_def
#       define WPP_SF_sq_def
WPP_INLINE void WPP_SF_sq(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, const char* _a1, const void* _a2)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(const void*,_a2)  0); }
#endif  // #ifndef WPP_SF_sq_def
#ifndef WPP_SF_sqD_def
#       define WPP_SF_sqD_def
WPP_INLINE void WPP_SF_sqD(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, const char* _a1, const void* _a2, unsigned int _a3)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(const void*,_a2) WPP_LOGTYPEVAL(unsigned int,_a3)  0); }
#endif  // #ifndef WPP_SF_sqD_def
#ifndef WPP_SF_sqDD_def
#       define WPP_SF_sqDD_def
WPP_INLINE void WPP_SF_sqDD(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, const char* _a1, const void* _a2, unsigned int _a3, unsigned int _a4)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(const void*,_a2) WPP_LOGTYPEVAL(unsigned int,_a3) WPP_LOGTYPEVAL(unsigned int,_a4)  0); }
#endif  // #ifndef WPP_SF_sqDD_def
#ifndef WPP_SF_sqDDD_def
#       define WPP_SF_sqDDD_def
WPP_INLINE void WPP_SF_sqDDD(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, const char* _a1, const void* _a2, unsigned int _a3, unsigned int _a4, unsigned int _a5)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(const void*,_a2) WPP_LOGTYPEVAL(unsigned int,_a3) WPP_LOGTYPEVAL(unsigned int,_a4) WPP_LOGTYPEVAL(unsigned int,_a5)  0); }
#endif  // #ifndef WPP_SF_sqDDD_def
#ifndef WPP_SF_sqDDDD_def
#       define WPP_SF_sqDDDD_def
WPP_INLINE void WPP_SF_sqDDDD(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, const char* _a1, const void* _a2, unsigned int _a3, unsigned int _a4, unsigned int _a5, unsigned int _a6)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(const void*,_a2) WPP_LOGTYPEVAL(unsigned int,_a3) WPP_LOGTYPEVAL(unsigned int,_a4) WPP_LOGTYPEVAL(unsigned int,_a5) WPP_LOGTYPEVAL(unsigned int,_a6)  0); }
#endif  // #ifndef WPP_SF_sqDDDD_def
#ifndef WPP_SF_sqDDd_def
#       define WPP_SF_sqDDd_def
WPP_INLINE void WPP_SF_sqDDd(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, const char* _a1, const void* _a2, unsigned int _a3, unsigned int _a4, signed int _a5)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(const void*,_a2) WPP_LOGTYPEVAL(unsigned int,_a3) WPP_LOGTYPEVAL(unsigned int,_a4) WPP_LOGTYPEVAL(signed int,_a5)  0); }
#endif  // #ifndef WPP_SF_sqDDd_def
#ifndef WPP_SF_sqDd_def
#       define WPP_SF_sqDd_def
WPP_INLINE void WPP_SF_sqDd(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, const char* _a1, const void* _a2, unsigned int _a3, signed int _a4)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(const void*,_a2) WPP_LOGTYPEVAL(unsigned int,_a3) WPP_LOGTYPEVAL(signed int,_a4)  0); }
#endif  // #ifndef WPP_SF_sqDd_def
#ifndef WPP_SF_sqd_def
#       define WPP_SF_sqd_def
WPP_INLINE void WPP_SF_sqd(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, const char* _a1, const void* _a2, signed int _a3)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(const void*,_a2) WPP_LOGTYPEVAL(signed int,_a3)  0); }
#endif  // #ifndef WPP_SF_sqd_def
#ifndef WPP_SF_sqq_def
#       define WPP_SF_sqq_def
WPP_INLINE void WPP_SF_sqq(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, const char* _a1, const void* _a2, const void* _a3)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(const void*,_a2) WPP_LOGTYPEVAL(const void*,_a3)  0); }
#endif  // #ifndef WPP_SF_sqq_def
#ifndef WPP_SF_sqqD_def
#       define WPP_SF_sqqD_def
WPP_INLINE void WPP_SF_sqqD(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, const char* _a1, const void* _a2, const void* _a3, unsigned int _a4)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(const void*,_a2) WPP_LOGTYPEVAL(const void*,_a3) WPP_LOGTYPEVAL(unsigned int,_a4)  0); }
#endif  // #ifndef WPP_SF_sqqD_def
#ifndef WPP_SF_sqqq_def
#       define WPP_SF_sqqq_def
WPP_INLINE void WPP_SF_sqqq(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, const char* _a1, const void* _a2, const void* _a3, const void* _a4)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(const void*,_a2) WPP_LOGTYPEVAL(const void*,_a3) WPP_LOGTYPEVAL(const void*,_a4)  0); }
#endif  // #ifndef WPP_SF_sqqq_def
#ifndef WPP_POST
#  define WPP_POST()
#endif

#ifndef WPP_PRE
#  define WPP_PRE()
#endif

#ifndef WPP_LOG_ALWAYS
#  define WPP_LOG_ALWAYS(...)
#endif      

#ifdef WPP_DEBUG
#else
#endif


#ifdef WPP_DEBUG
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c1016(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c1016) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sq(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 48,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c1039(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c1039) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sq(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 49,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c1073(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c1073) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sq(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 50,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c1106(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c1106) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 51,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c1118(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c1118) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 52,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c1127(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c1127) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sqD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 53,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c1148(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c1148) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sq(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 54,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c116(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c116) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sd(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 11,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c1177(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c1177) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sDq(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 55,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c1208(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c1208) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sDD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 56,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c1225(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c1225) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sd(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 57,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c1244(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c1244) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sDD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 58,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c1280(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c1280) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sDD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 59,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c1298(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c1298) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sDDDDD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 60,WPP_LOCAL_TraceGuids+0 WPP_R012345 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c1307(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c1307) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 61,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c1319(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c1319) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 62,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c1332(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c1332) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sDq(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 63,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c1345(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c1345) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 64,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c1364(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c1364) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sd(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 65,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c1380(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c1380) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 66,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c1406(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c1406) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 67,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c1416(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c1416) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sDd(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 68,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c1445(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c1445) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sq(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 69,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c1459(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c1459) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sq(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 70,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c1484(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c1484) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 71,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c149(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c149) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 12,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c1503(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c1503) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 72,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c1513(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c1513) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 73,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c1532(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c1532) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 74,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c1544(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c1544) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 75,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c1557(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c1557) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 76,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c1571(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c1571) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sqD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 77,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c1598(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c1598) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 78,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c1660(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c1660) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 79,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c1670(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c1670) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sDq(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 80,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c1691(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c1691) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 81,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c1707(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c1707) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sDd(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 82,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c1719(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c1719) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 83,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c1728(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c1728) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 84,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c1742(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c1742) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 85,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c1764(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c1764) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 86,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c177(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c177) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sd(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 13,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c1773(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c1773) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 87,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c1785(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c1785) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 88,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c1809(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c1809) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 89,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c1825(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c1825) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 90,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c1841(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c1841) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 91,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c1875(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c1875) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sDD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 92,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c1918(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c1918) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sd(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 93,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c1927(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c1927) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sd(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 94,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c1937(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c1937) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 95,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c1956(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c1956) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 96,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c1981(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c1981) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 97,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c2015(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c2015) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sqqD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 98,WPP_LOCAL_TraceGuids+0 WPP_R0123 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c202(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c202) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sd(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 14,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c2031(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c2031) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 99,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c2056(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c2056) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sd(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 100,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c2097(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c2097) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 101,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c2128(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c2128) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sqqD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 102,WPP_LOCAL_TraceGuids+0 WPP_R0123 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c2163(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c2163) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 103,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c217(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c217) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 15,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c2186(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c2186) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 104,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c2221(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c2221) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 105,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c2245(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c2245) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 106,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c2260(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c2260) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 107,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c2279(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c2279) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 108,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c2291(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c2291) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sdD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 109,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c2317(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c2317) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 110,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c2343(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c2343) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sDqD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 111,WPP_LOCAL_TraceGuids+0 WPP_R0123 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c2354(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c2354) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 112,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c2371(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c2371) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sDD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 113,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c2386(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c2386) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sq(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 114,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c2419(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c2419) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sq(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 115,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c245(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c245) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 16,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c2450(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c2450) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sDDq(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 116,WPP_LOCAL_TraceGuids+0 WPP_R0123 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c2459(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c2459) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sqD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 117,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c2480(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c2480) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 118,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c2489(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c2489) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 119,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c2505(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c2505) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 120,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c2528(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c2528) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 121,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c2555(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c2555) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sq(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 122,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c2584(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c2584) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sqD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 123,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c2598(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c2598) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sqD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 124,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c261(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c261) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sDq(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 17,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c2612(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c2612) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 125,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c2636(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c2636) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 126,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c2666(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c2666) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sDD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 127,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c2689(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c2689) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 128,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c272(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c272) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sq(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 18,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c2731(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c2731) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sd(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 129,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c2759(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c2759) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sDDqD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 130,WPP_LOCAL_TraceGuids+0 WPP_R01234 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c281(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c281) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sqD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 19,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c2844(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c2844) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sDqDD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 131,WPP_LOCAL_TraceGuids+0 WPP_R01234 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c2857(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c2857) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 132,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c2866(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c2866) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 133,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c2887(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c2887) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 134,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c2897(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c2897) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 135,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c2926(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c2926) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 136,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c2936(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c2936) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 137,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c2949(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c2949) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 138,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c2966(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c2966) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sq(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 139,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c2982(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c2982) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sqDD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 140,WPP_LOCAL_TraceGuids+0 WPP_R0123 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c2998(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c2998) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sDq(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 141,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c3021(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c3021) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sqD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 142,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c3042(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c3042) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 143,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c3053(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c3053) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 144,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c3081(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c3081) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sqDDD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 145,WPP_LOCAL_TraceGuids+0 WPP_R01234 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c310(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c310) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sq(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 20,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c3114(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c3114) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sqD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 146,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c3125(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c3125) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sqD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 147,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c3141(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c3141) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sDDq(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 148,WPP_LOCAL_TraceGuids+0 WPP_R0123 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c3157(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c3157) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sqDDDD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 149,WPP_LOCAL_TraceGuids+0 WPP_R012345 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c3183(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c3183) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sqDD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 150,WPP_LOCAL_TraceGuids+0 WPP_R0123 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c3224(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c3224) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sDDq(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 151,WPP_LOCAL_TraceGuids+0 WPP_R0123 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c3240(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c3240) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sqDDD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 152,WPP_LOCAL_TraceGuids+0 WPP_R01234 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c325(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c325) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sDq(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 21,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c3269(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c3269) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sqDDD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 153,WPP_LOCAL_TraceGuids+0 WPP_R01234 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c3305(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c3305) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sDDq(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 154,WPP_LOCAL_TraceGuids+0 WPP_R0123 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c3321(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c3321) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sqDDDD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 155,WPP_LOCAL_TraceGuids+0 WPP_R012345 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c3338(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c3338) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 156,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c3381(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c3381) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sDD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 157,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c3399(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c3399) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 158,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c3438(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c3438) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sDD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 159,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c3460(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c3460) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 160,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c3474(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c3474) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 161,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c3488(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c3488) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 162,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c3502(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c3502) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 163,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c352(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c352) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 22,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c3535(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c3535) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sq(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 164,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c3558(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c3558) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sqDd(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 165,WPP_LOCAL_TraceGuids+0 WPP_R0123 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c3571(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c3571) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sqDDd(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 166,WPP_LOCAL_TraceGuids+0 WPP_R01234 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c3585(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c3585) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sqd(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 167,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c3619(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c3619) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 168,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c3628(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c3628) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 169,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c3651(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c3651) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sDq(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 170,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c3664(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c3664) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sDq(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 171,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c3676(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c3676) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 172,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c3714(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c3714) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 173,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c3726(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c3726) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 174,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c3735(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c3735) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 175,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c3757(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c3757) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 176,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c3773(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c3773) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 177,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c3794(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c3794) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 178,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c3809(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c3809) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 179,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c3819(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c3819) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sqq(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 180,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c3832(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c3832) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 181,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c3845(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c3845) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 182,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c3856(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c3856) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sq(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 183,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c3870(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c3870) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 184,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c3878(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c3878) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 185,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c3896(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c3896) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 186,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c3908(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c3908) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sq(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 187,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c3920(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c3920) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 188,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c3932(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c3932) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 189,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c395(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c395) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 23,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c3968(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c3968) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sq(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 190,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c3979(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c3979) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sqqq(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 191,WPP_LOCAL_TraceGuids+0 WPP_R0123 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c3997(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c3997) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 192,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c4005(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c4005) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 193,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c4024(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c4024) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sqqq(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 194,WPP_LOCAL_TraceGuids+0 WPP_R0123 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c4065(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c4065) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sq(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 195,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c4128(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c4128) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sdd(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 196,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c4137(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c4137) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 197,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c4148(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c4148) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 198,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c4184(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c4184) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 199,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c419(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c419) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sqD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 24,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c4196(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c4196) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 200,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c4210(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c4210) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 201,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c4242(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c4242) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sd(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 202,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c4283(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c4283) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 203,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c431(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c431) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sDq(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 25,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c4310(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c4310) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 204,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c4330(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c4330) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sq(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 205,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c452(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c452) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sq(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 26,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c482(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c482) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sq(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 27,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c495(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c495) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sDD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 28,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c529(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c529) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sq(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 29,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c552(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c552) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sqD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 30,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c583(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c583) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sqD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 31,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c614(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c614) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sqq(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 32,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c649(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c649) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sDqD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 33,WPP_LOCAL_TraceGuids+0 WPP_R0123 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c678(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c678) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 34,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c707(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c707) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 35,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c720(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c720) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 36,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c743(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c743) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sq(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 37,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c765(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c765) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sDq(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 38,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c792(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c792) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 39,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c816(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c816) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 40,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c841(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c841) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 41,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c869(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c869) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 42,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c87(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c87) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sd(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 10,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c890(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c890) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 43,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c927(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c927) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sq(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 44,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c957(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c957) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sq(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 45,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c971(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c971) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 46,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c991(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c991) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sDq(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 47,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#else
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c1016(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c1016) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sq(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 48,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c1039(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c1039) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sq(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 49,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c1073(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c1073) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sq(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 50,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c1106(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c1106) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 51,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c1118(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c1118) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 52,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c1127(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c1127) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sqD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 53,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c1148(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c1148) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sq(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 54,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c116(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c116) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sd(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 11,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c1177(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c1177) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sDq(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 55,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c1208(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c1208) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sDD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 56,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c1225(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c1225) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sd(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 57,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c1244(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c1244) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sDD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 58,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c1280(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c1280) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sDD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 59,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c1298(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c1298) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sDDDDD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 60,WPP_LOCAL_TraceGuids+0 WPP_R012345 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c1307(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c1307) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 61,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c1319(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c1319) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 62,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c1332(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c1332) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sDq(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 63,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c1345(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c1345) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 64,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c1364(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c1364) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sd(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 65,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c1380(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c1380) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 66,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c1406(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c1406) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 67,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c1416(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c1416) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sDd(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 68,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c1445(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c1445) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sq(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 69,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c1459(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c1459) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sq(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 70,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c1484(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c1484) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 71,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c149(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c149) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 12,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c1503(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c1503) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 72,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c1513(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c1513) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 73,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c1532(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c1532) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 74,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c1544(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c1544) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 75,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c1557(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c1557) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 76,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c1571(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c1571) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sqD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 77,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c1598(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c1598) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 78,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c1660(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c1660) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 79,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c1670(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c1670) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sDq(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 80,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c1691(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c1691) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 81,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c1707(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c1707) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sDd(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 82,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c1719(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c1719) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 83,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c1728(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c1728) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 84,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c1742(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c1742) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 85,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c1764(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c1764) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 86,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c177(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c177) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sd(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 13,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c1773(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c1773) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 87,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c1785(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c1785) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 88,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c1809(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c1809) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 89,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c1825(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c1825) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 90,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c1841(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c1841) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 91,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c1875(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c1875) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sDD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 92,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c1918(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c1918) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sd(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 93,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c1927(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c1927) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sd(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 94,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c1937(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c1937) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 95,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c1956(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c1956) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 96,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c1981(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c1981) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 97,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c2015(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c2015) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sqqD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 98,WPP_LOCAL_TraceGuids+0 WPP_R0123 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c202(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c202) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sd(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 14,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c2031(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c2031) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 99,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c2056(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c2056) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sd(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 100,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c2097(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c2097) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 101,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c2128(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c2128) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sqqD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 102,WPP_LOCAL_TraceGuids+0 WPP_R0123 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c2163(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c2163) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 103,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c217(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c217) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 15,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c2186(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c2186) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 104,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c2221(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c2221) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 105,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c2245(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c2245) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 106,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c2260(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c2260) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 107,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c2279(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c2279) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 108,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c2291(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c2291) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sdD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 109,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c2317(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c2317) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 110,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c2343(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c2343) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sDqD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 111,WPP_LOCAL_TraceGuids+0 WPP_R0123 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c2354(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c2354) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 112,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c2371(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c2371) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sDD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 113,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c2386(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c2386) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sq(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 114,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c2419(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c2419) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sq(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 115,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c245(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c245) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 16,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c2450(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c2450) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sDDq(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 116,WPP_LOCAL_TraceGuids+0 WPP_R0123 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c2459(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c2459) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sqD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 117,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c2480(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c2480) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 118,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c2489(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c2489) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 119,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c2505(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c2505) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 120,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c2528(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c2528) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 121,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c2555(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c2555) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sq(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 122,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c2584(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c2584) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sqD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 123,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c2598(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c2598) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sqD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 124,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c261(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c261) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sDq(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 17,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c2612(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c2612) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 125,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c2636(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c2636) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 126,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c2666(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c2666) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sDD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 127,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c2689(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c2689) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 128,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c272(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c272) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sq(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 18,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c2731(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c2731) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sd(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 129,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c2759(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c2759) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sDDqD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 130,WPP_LOCAL_TraceGuids+0 WPP_R01234 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c281(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c281) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sqD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 19,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c2844(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c2844) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sDqDD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 131,WPP_LOCAL_TraceGuids+0 WPP_R01234 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c2857(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c2857) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 132,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c2866(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c2866) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 133,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c2887(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c2887) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 134,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c2897(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c2897) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 135,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c2926(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c2926) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 136,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c2936(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c2936) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 137,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c2949(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c2949) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 138,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c2966(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c2966) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sq(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 139,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c2982(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c2982) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sqDD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 140,WPP_LOCAL_TraceGuids+0 WPP_R0123 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c2998(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c2998) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sDq(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 141,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c3021(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c3021) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sqD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 142,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c3042(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c3042) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 143,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c3053(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c3053) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 144,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c3081(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c3081) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sqDDD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 145,WPP_LOCAL_TraceGuids+0 WPP_R01234 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c310(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c310) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sq(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 20,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c3114(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c3114) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sqD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 146,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c3125(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c3125) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sqD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 147,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c3141(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c3141) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sDDq(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 148,WPP_LOCAL_TraceGuids+0 WPP_R0123 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c3157(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c3157) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sqDDDD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 149,WPP_LOCAL_TraceGuids+0 WPP_R012345 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c3183(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c3183) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sqDD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 150,WPP_LOCAL_TraceGuids+0 WPP_R0123 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c3224(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c3224) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sDDq(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 151,WPP_LOCAL_TraceGuids+0 WPP_R0123 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c3240(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c3240) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sqDDD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 152,WPP_LOCAL_TraceGuids+0 WPP_R01234 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c325(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c325) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sDq(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 21,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c3269(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c3269) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sqDDD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 153,WPP_LOCAL_TraceGuids+0 WPP_R01234 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c3305(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c3305) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sDDq(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 154,WPP_LOCAL_TraceGuids+0 WPP_R0123 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c3321(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c3321) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sqDDDD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 155,WPP_LOCAL_TraceGuids+0 WPP_R012345 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c3338(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c3338) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 156,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c3381(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c3381) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sDD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 157,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c3399(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c3399) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 158,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c3438(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c3438) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sDD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 159,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c3460(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c3460) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 160,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c3474(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c3474) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 161,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c3488(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c3488) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 162,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c3502(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c3502) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 163,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c352(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c352) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 22,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c3535(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c3535) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sq(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 164,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c3558(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c3558) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sqDd(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 165,WPP_LOCAL_TraceGuids+0 WPP_R0123 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c3571(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c3571) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sqDDd(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 166,WPP_LOCAL_TraceGuids+0 WPP_R01234 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c3585(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c3585) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sqd(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 167,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c3619(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c3619) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 168,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c3628(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c3628) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 169,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c3651(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c3651) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sDq(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 170,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c3664(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c3664) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sDq(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 171,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c3676(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c3676) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 172,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c3714(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c3714) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 173,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c3726(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c3726) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 174,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c3735(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c3735) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 175,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c3757(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c3757) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 176,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c3773(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c3773) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 177,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c3794(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c3794) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 178,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c3809(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c3809) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 179,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c3819(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c3819) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sqq(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 180,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c3832(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c3832) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 181,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c3845(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c3845) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 182,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c3856(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c3856) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sq(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 183,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c3870(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c3870) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 184,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c3878(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c3878) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 185,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c3896(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c3896) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 186,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c3908(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c3908) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sq(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 187,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c3920(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c3920) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 188,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c3932(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c3932) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 189,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c395(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c395) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 23,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c3968(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c3968) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sq(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 190,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c3979(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c3979) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sqqq(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 191,WPP_LOCAL_TraceGuids+0 WPP_R0123 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c3997(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c3997) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 192,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c4005(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c4005) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 193,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c4024(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c4024) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sqqq(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 194,WPP_LOCAL_TraceGuids+0 WPP_R0123 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c4065(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c4065) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sq(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 195,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c4128(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c4128) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sdd(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 196,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c4137(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c4137) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 197,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c4148(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c4148) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 198,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c4184(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c4184) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 199,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c419(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c419) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sqD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 24,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c4196(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c4196) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 200,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c4210(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c4210) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 201,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c4242(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c4242) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sd(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 202,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c4283(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c4283) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 203,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c431(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c431) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sDq(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 25,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c4310(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c4310) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 204,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c4330(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c4330) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sq(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 205,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c452(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c452) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sq(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 26,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c482(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c482) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sq(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 27,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c495(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c495) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sDD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 28,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c529(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c529) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sq(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 29,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c552(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c552) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sqD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 30,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c583(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c583) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sqD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 31,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c614(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c614) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sqq(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 32,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c649(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c649) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sDqD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 33,WPP_LOCAL_TraceGuids+0 WPP_R0123 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c678(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c678) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 34,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c707(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c707) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 35,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c720(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c720) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 36,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c743(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c743) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sq(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 37,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c765(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c765) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sDq(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 38,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c792(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c792) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 39,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c816(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c816) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 40,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c841(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c841) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 41,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c869(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c869) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 42,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c87(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c87) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sd(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 10,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c890(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c890) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 43,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c927(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c927) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sq(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 44,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c957(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c957) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sq(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 45,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c971(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c971) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 46,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPWR_c991(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPWR_c991) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sDq(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 47,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#endif



#if defined(__cplusplus)
};
#endif

#endif

//
// Tracing Macro name redefinition
//

// NoMsgArgs

#undef DbgPrint
#define DbgPrint WPP_(CALL)
#undef DoDebugTrace
#define DoDebugTrace WPP_(CALL)
#undef DoTraceMessage
#define DoTraceMessage WPP_(CALL)
#undef KdPrint
#define KdPrint(ARGS) WPP_(CALL) ARGS
#undef QCNET_DbgPrintG
#define QCNET_DbgPrintG(ARGS) WPP_(CALL) ARGS
// MsgArgs

#undef QCNET_DbgPrint
#define QCNET_DbgPrint(MASK, LEVEL,  MSGARGS) WPP_(CALL)(MASK, LEVEL,  MSGARGS)
#undef QCUSB_DbgPrint
#define QCUSB_DbgPrint(FLAG, LEVEL,  MSGARGS) WPP_(CALL)(FLAG, LEVEL,  MSGARGS)
#undef QCUSB_DbgPrintG
#define QCUSB_DbgPrintG(GFLAG, GLEVEL,  MSGARGS) WPP_(CALL)(GFLAG, GLEVEL,  MSGARGS)
#undef QCUSB_DbgPrintX
#define QCUSB_DbgPrintX(X, XFLAG, XLEVEL,  MSGARGS) WPP_(CALL)(X, XFLAG, XLEVEL,  MSGARGS)
#undef  WPP_R
#define WPP_R(MSG) 
#undef  WPP_R0
#define WPP_R0(MSG, a0) , a0
#undef  WPP_R01
#define WPP_R01(MSG, a0, a1) , a0, a1
#undef  WPP_R012
#define WPP_R012(MSG, a0, a1, a2) , a0, a1, a2
#undef  WPP_R0123
#define WPP_R0123(MSG, a0, a1, a2, a3) , a0, a1, a2, a3
#undef  WPP_R01234
#define WPP_R01234(MSG, a0, a1, a2, a3, a4) , a0, a1, a2, a3, a4
#undef  WPP_R012345
#define WPP_R012345(MSG, a0, a1, a2, a3, a4, a5) , a0, a1, a2, a3, a4, a5
#undef  WPP_R0123456
#define WPP_R0123456(MSG, a0, a1, a2, a3, a4, a5, a6) , a0, a1, a2, a3, a4, a5, a6
#undef  WPP_R01234567
#define WPP_R01234567(MSG, a0, a1, a2, a3, a4, a5, a6, a7) , a0, a1, a2, a3, a4, a5, a6, a7
#undef  WPP_R012345678
#define WPP_R012345678(MSG, a0, a1, a2, a3, a4, a5, a6, a7, a8) , a0, a1, a2, a3, a4, a5, a6, a7, a8
#undef  WPP_R0123456789
#define WPP_R0123456789(MSG, a0, a1, a2, a3, a4, a5, a6, a7, a8, a9) , a0, a1, a2, a3, a4, a5, a6, a7, a8, a9
#undef  WPP_R0123456789a
#define WPP_R0123456789a(MSG, a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10) , a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10
#undef  WPP_R0123456789abc
#define WPP_R0123456789abc(MSG, a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12) , a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12
#undef  WPP_R0a0b0c0d0e0f000102030405060708090a
#define WPP_R0a0b0c0d0e0f000102030405060708090a(MSG, a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16) , a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16
