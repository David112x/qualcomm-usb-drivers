// edc7437fc5c96d8eab2d0cad5c47535e Generated file. Do not edit.
// File created by WPP compiler version 10.0.15063-Wed Feb 18 19:04:42 2037
// from template km-default.tpl

//
// Define anything which is needed but missing from 
// older versions of the DDK.
//
#include <evntrace.h>
#include <stddef.h>
#include <stdarg.h>
#include <wmistr.h>

#if !defined(TRACE_LEVEL_NONE)
  #define TRACE_LEVEL_NONE        0  
  #define TRACE_LEVEL_CRITICAL    1  
  #define TRACE_LEVEL_FATAL       1  
  #define TRACE_LEVEL_ERROR       2  
  #define TRACE_LEVEL_WARNING     3  
  #define TRACE_LEVEL_INFORMATION 4  
  #define TRACE_LEVEL_VERBOSE     5  
  #define TRACE_LEVEL_RESERVED6   6
  #define TRACE_LEVEL_RESERVED7   7
  #define TRACE_LEVEL_RESERVED8   8
  #define TRACE_LEVEL_RESERVED9   9
#endif
    
#if !defined(TRACE_INFORMATION_CLASS_DEFINE)
typedef enum _TRACE_INFORMATION_CLASS {
    TraceIdClass,
    TraceHandleClass,
    TraceEnableFlagsClass,
    TraceEnableLevelClass,
    GlobalLoggerHandleClass,
    EventLoggerHandleClass,
    AllLoggerHandlesClass,
    TraceHandleByNameClass
} TRACE_INFORMATION_CLASS;
  
#define TRACE_MESSAGE_SEQUENCE               1
#define TRACE_MESSAGE_GUID                   2         
#define TRACE_MESSAGE_COMPONENTID            4           
#define TRACE_MESSAGE_TIMESTAMP              8         
#define TRACE_MESSAGE_PERFORMANCE_TIMESTAMP 16  
#define TRACE_MESSAGE_SYSTEMINFO            32          

#endif // !defined(TRACE_INFORMATION_CLASS_DEFINE)


//
// Advanced tracing APIs (XP and later) will be indirectly called.
//
typedef
LONG
(*PFN_WPPQUERYTRACEINFORMATION) (
    IN  TRACE_INFORMATION_CLASS TraceInformationClass,
    OUT PVOID  TraceInformation,
    IN  ULONG  TraceInformationLength,
    OUT PULONG RequiredLength OPTIONAL,
    IN  PVOID  Buffer OPTIONAL
    );

typedef
LONG
(*PFN_WPPTRACEMESSAGE)(
    IN ULONG64  LoggerHandle,
    IN ULONG   MessageFlags,
    IN LPCGUID MessageGuid,
    IN USHORT  MessageNumber,
    IN ...
    );

// template km-header.tpl

#ifdef  WPP_THIS_FILE
// included twice
#       define  WPP_ALREADY_INCLUDED
#       undef   WPP_THIS_FILE
#endif  // #ifdef WPP_THIS_FILE

#define WPP_THIS_FILE USBPNP_c

#ifndef WPP_ALREADY_INCLUDED

#define WPP_KERNEL_MODE 
#define WPP_THIS_FILE USBPNP_c

#if defined(__cplusplus)
extern "C" {
#endif


typedef enum _WPP_TRACE_API_SUITE {
    WppTraceDisabledSuite,
    WppTraceWin2K,
    WppTraceWinXP,
    WppTraceTraceLH,
    WppTraceServer08,
    WppTraceMaxSuite
} WPP_TRACE_API_SUITE;

_IRQL_requires_same_
typedef
VOID
(NTAPI *PETW_CLASSIC_CALLBACK)(
    _In_ LPCGUID Guid,
    _In_ UCHAR ControlCode,
    _In_ PVOID EnableContext, 
    _In_opt_ PVOID CallbackContext
    );

_IRQL_requires_same_
typedef
NTSTATUS
NTKERNELAPI
(FN_ETWREGISTERCLASSICPROVIDER)(
    _In_ LPCGUID ProviderGuid,
    _In_ ULONG Type,
    _In_ PETW_CLASSIC_CALLBACK EnableCallback,
    _In_opt_ PVOID CallbackContext,
    _Out_ PREGHANDLE RegHandle
    );

typedef FN_ETWREGISTERCLASSICPROVIDER *PFN_ETWREGISTERCLASSICPROVIDER;

typedef
BOOLEAN
NTKERNELAPI
(FN_WPPGETVERSION)(
    _Out_opt_ PULONG MajorVersion,
    _Out_opt_ PULONG MinorVersion,
    _Out_opt_ PULONG BuildNumber,
    _Out_opt_ PUNICODE_STRING CSDVersion
    );

typedef FN_WPPGETVERSION *PFN_WPPGETVERSION;

typedef
NTSTATUS
NTKERNELAPI
(FN_ETWUNREGISTER)(
    _In_ REGHANDLE RegHandle
    );

typedef FN_ETWUNREGISTER *PFN_ETWUNREGISTER;

#pragma prefast(suppress:__WARNING_ENCODE_GLOBAL_FUNCTION_POINTER, "this pointer can not be encoded");
__declspec(selectany) PFN_WPPQUERYTRACEINFORMATION   pfnWppQueryTraceInformation = NULL;

#pragma prefast(suppress:__WARNING_ENCODE_GLOBAL_FUNCTION_POINTER, "this pointer can not be encoded");
__declspec(selectany) PFN_WPPTRACEMESSAGE            pfnWppTraceMessage = NULL;

#pragma prefast(suppress:__WARNING_ENCODE_GLOBAL_FUNCTION_POINTER, "this pointer can not be encoded");
__declspec(selectany) PFN_ETWUNREGISTER              pfnEtwUnregister = NULL;

#pragma prefast(suppress:__WARNING_ENCODE_GLOBAL_FUNCTION_POINTER, "this pointer can not be encoded");
__declspec(selectany) PFN_ETWREGISTERCLASSICPROVIDER pfnEtwRegisterClassicProvider = NULL;

#pragma prefast(suppress:__WARNING_ENCODE_GLOBAL_FUNCTION_POINTER, "this pointer can not be encoded");
__declspec(selectany) PFN_WPPGETVERSION              pfnWppGetVersion = NULL;


__declspec(selectany) WPP_TRACE_API_SUITE            WPPTraceSuite = WppTraceDisabledSuite;


#if !defined(_NTRTL_)
#if !defined(_NTHAL_) 
      // fake RTL_TIME_ZONE_INFORMATION //
    typedef int RTL_TIME_ZONE_INFORMATION;
#endif
#   define _WMIKM_  
#endif
#ifndef WPP_TRACE
#define WPP_TRACE pfnWppTraceMessage
#endif

#if ENABLE_WPP_RECORDER

#define _ENABLE_WPP_RECORDER TRUE

#ifndef WPP_RECORDER
#define WPP_RECORDER WppAutoLogTrace
#endif

#if !defined(WPP_RECORDER_LEVEL_FLAGS_ARGS)
#define WPP_RECORDER_LEVEL_FLAGS_ARGS(lvl, flags) WPP_CONTROL(WPP_BIT_ ## flags).AutoLogContext, lvl, WPP_BIT_ ## flags
#define WPP_RECORDER_LEVEL_FLAGS_FILTER(lvl,flags) (lvl < TRACE_LEVEL_VERBOSE || WPP_CONTROL(WPP_BIT_ ## flags).AutoLogVerboseEnabled)
#endif


#if !defined(WPP_RECORDER_LEVEL_ARGS)
#define WPP_RECORDER_LEVEL_ARGS(lvl) WPP_CONTROL(WPP_BIT_ ## lvl).AutoLogContext, 0, WPP_BIT_ ## lvl
#define WPP_RECORDER_LEVEL_FILTER(lvl) (WPP_CONTROL(WPP_BIT_ ## lvl).AutoLogVerboseEnabled)
#endif

NTSTATUS
WppAutoLogTrace(
    IN PVOID              AutoLogContext,
    IN UCHAR              MessageLevel,
    IN ULONG              MessageFlags,
    IN LPGUID             MessageGuid,
    IN USHORT             MessageNumber,
    IN ...
    );

#else
#define _ENABLE_WPP_RECORDER FALSE
#endif

VOID
WppLoadTracingSupport(
    VOID
    );

NTSTATUS
WppTraceCallback(
    _In_ UCHAR MinorFunction,
    _In_opt_ PVOID DataPath,
    _In_ ULONG BufferLength,
    _Inout_updates_bytes_(BufferLength) PVOID Buffer,
    _Inout_ PVOID Context,
    _Out_ PULONG Size
    );
#if !defined(WPP_TRACE_CONTROL_NULL_GUID)
DEFINE_GUID(WPP_TRACE_CONTROL_NULL_GUID, 0x00000000L, 0x0000, 0x0000, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00);
#endif
#define WPP_TRACE_CONTROL(Function,Buffer,BufferSize,ReturnSize) WppTraceCallback(Function,NULL,BufferSize,Buffer,&WPP_CB[0],&ReturnSize);
    

__inline ULONG64 WppQueryLogger(_In_opt_ PCWSTR LoggerName)
{

    if (WppTraceWinXP == WPPTraceSuite) {

        ULONG ReturnLength ;
        LONG Status ;
        ULONG64 TraceHandle ;
        UNICODE_STRING  Buffer  ;
           
        RtlInitUnicodeString(&Buffer, LoggerName ? LoggerName : L"stdout");

        Status = pfnWppQueryTraceInformation(
                                            TraceHandleByNameClass,
                                            (PVOID)&TraceHandle,
                                            sizeof(TraceHandle),
                                            &ReturnLength,
                                            (PVOID)&Buffer
                                            );
        if (Status != STATUS_SUCCESS) {
           return (ULONG64)0 ;
        }
        
        return TraceHandle ;
    } else {
        return (ULONG64) 0 ;
    }
}

typedef LONG (*WMIENTRY_NEW)(
    _In_ UCHAR MinorFunction,
    _In_opt_ PVOID DataPath,
    _In_ ULONG BufferLength,
    _Inout_updates_bytes_(BufferLength) PVOID Buffer,
    _In_ PVOID Context,
    _Out_ PULONG Size
    );

typedef struct _WPP_TRACE_CONTROL_BLOCK
{
    WMIENTRY_NEW                        Callback;
    LPCGUID                             ControlGuid;
    struct _WPP_TRACE_CONTROL_BLOCK    *Next;
    __int64                             Logger;
    PUNICODE_STRING                     RegistryPath;
    UCHAR                               FlagsLen; 
    UCHAR                               Level; 
    USHORT                              Reserved;
    ULONG                               Flags[1];
    ULONG                               ReservedFlags;
    REGHANDLE                           RegHandle;
#if ENABLE_WPP_RECORDER    
    PVOID                               AutoLogContext;
    USHORT                              AutoLogVerboseEnabled;
    USHORT                              AutoLogAttachToMiniDump;
#endif    
} WPP_TRACE_CONTROL_BLOCK, *PWPP_TRACE_CONTROL_BLOCK;

VOID WppCleanupKm(_When_(_ENABLE_WPP_RECORDER, _In_) _When_(!_ENABLE_WPP_RECORDER, _In_opt_) PDRIVER_OBJECT DriverObject);

#define WPP_CLEANUP(DriverObject) WppCleanupKm((PDRIVER_OBJECT)DriverObject)

#define WPP_IsValidSid RtlValidSid
#define WPP_GetLengthSid RtlLengthSid

//
// Callback routine to be defined by the driver, which will be called from WPP callback
// WPP will pass current valued of : GUID, Logger, Enable, Flags, and Level
// 
// To activate driver must define WPP_PRIVATE_ENABLE_CALLBACK in their code, sample below 
// #define WPP_PRIVATE_ENABLE_CALLBACK MyPrivateCallback;
//
typedef
VOID
(*PFN_WPP_PRIVATE_ENABLE_CALLBACK)(
    _In_ LPCGUID Guid,   
    _In_ __int64 Logger, 
    _In_ BOOLEAN Enable, 
    _In_ ULONG Flags,    
    _In_ UCHAR Level);   

#if defined(__cplusplus)
};
#endif

#endif  // #ifndef WPP_ALREADY_INCLUDED


 
// template control.tpl

//
//     Defines a set of macro that expand control model specified
//     with WPP_CONTROL_GUIDS (example shown below)
//     into an enum of trace levels and required structures that
//     contain the mask of levels, logger handle and some information
//     required for registration.
//

#ifndef WPP_ALREADY_INCLUDED

#define WPP_EVAL(x) x
#define WPP_STR(x)  #x
#define WPP_STRINGIZE(x) WPP_STR(x)
#define WPP_GLUE(a, b)  a ## b
#define WPP_GLUE3(a, b, c)  a ## b ## c
#define WPP_GLUE4(a, b, c, d)  a ## b ## c ## d
#define WPP_XGLUE(a, b) WPP_GLUE(a, b)
#define WPP_XGLUE3(a, b, c) WPP_GLUE3(a, b, c)
#define WPP_XGLUE4(a, b, c, d) WPP_GLUE4(a, b, c, d)

///////////////////////////////////////////////////////////////////////////////////
//
// #define WPP_CONTROL_GUIDS \
//     WPP_DEFINE_CONTROL_GUID(Regular,(81b20fea,73a8,4b62,95bc,354477c97a6f), \
//       WPP_DEFINE_BIT(Error)      \
//       WPP_DEFINE_BIT(Unusual)    \
//       WPP_DEFINE_BIT(Noise)      \
//    )        \
//    WPP_DEFINE_CONTROL_GUID(HiFreq,(91b20fea,73a8,4b62,95bc,354477c97a6f), \
//       WPP_DEFINE_BIT(Entry)      \
//       WPP_DEFINE_BIT(Exit)       \
//       WPP_DEFINE_BIT(ApiCalls)   \
//       WPP_DEFINE_BIT(RandomJunk) \
//       WPP_DEFINE_BIT(LovePoem)   \
//    )        

#if defined(__cplusplus)
extern "C" {
#endif

#if !defined(WPP_CONTROL_GUIDS)  && defined(WPP_ETW_PROVIDER)
#define WPP_NO_CONTROL_GUIDS
#endif

#if !defined(WPP_NO_CONTROL_GUIDS)

#if defined(WPP_DEFAULT_CONTROL_GUID)
#  if defined(WPP_CONTROL_GUIDS)
#     pragma message(__FILE__ " : error : WPP_DEFAULT_CONTROL_GUID cannot be used together with WPP_CONTROL_GUIDS")
#     stop
#  else
#     define WPP_CONTROL_GUIDS \
         WPP_DEFINE_CONTROL_GUID(Default,(WPP_DEFAULT_CONTROL_GUID), \
         WPP_DEFINE_BIT(Error)   \
         WPP_DEFINE_BIT(Unusual) \
         WPP_DEFINE_BIT(Noise)   \
      )
#  endif      
#endif

#if !defined(WPP_CONTROL_GUIDS)
#  pragma message(__FILE__ " : error : Please define control model via WPP_CONTROL_GUIDS or WPP_DEFAULT_CONTROL_GUID macros")
#  pragma message(__FILE__ " : error : don't forget to call WPP_INIT_TRACING and WPP_CLEANUP in your main, DriverEntry or DllInit")
#  pragma message(__FILE__ " : error : see tracewpp.doc for further information")
stop.
#endif
// a set of macro to convert a guid in a form x(81b20fea,73a8,4b62,95bc,354477c97a6f)
// into either a a struct or text string

#define _WPPW(x) WPP_GLUE(L, x)

#define WPP_GUID_NORM(l,w1,w2,w3,ll) l ## w1 ## w2 ## w3 ## ll
#define WPP_GUID_TEXT(l,w1,w2,w3,ll) #l "-" #w1 "-" #w2 "-" #w3 "-" #ll
#define WPP_GUID_WTEXT(l,w1,w2,w3,ll) _WPPW(#l) L"-" _WPPW(#w1) L"-" _WPPW(#w2) L"-" _WPPW(#w3) L"-" _WPPW(#ll)
#define WPP_EXTRACT_BYTE(val,n) (((ULONGLONG)(0x ## val) >> (8 * n)) & 0xFF)
#define WPP_GUID_STRUCT(l,w1,w2,w3,ll) {0x ## l, 0x ## w1, 0x ## w2,\
     {WPP_EXTRACT_BYTE(w3, 1), WPP_EXTRACT_BYTE(w3, 0),\
      WPP_EXTRACT_BYTE(ll, 5), WPP_EXTRACT_BYTE(ll, 4),\
      WPP_EXTRACT_BYTE(ll, 3), WPP_EXTRACT_BYTE(ll, 2),\
      WPP_EXTRACT_BYTE(ll, 1), WPP_EXTRACT_BYTE(ll, 0)} }

#ifndef WPP_FORCEINLINE
#if !defined(WPP_OLDCC)
#define WPP_FORCEINLINE __forceinline
#else
#define WPP_FORCEINLINE __inline
#endif
#endif


// define an enum of control block names
//////
#define WPP_DEFINE_CONTROL_GUID(Name,Guid,Bits) WPP_XGLUE(WPP_CTL_, WPP_EVAL(Name)),
enum WPP_CTL_NAMES { WPP_CONTROL_GUIDS WPP_LAST_CTL};
#undef WPP_DEFINE_CONTROL_GUID

// define control guids
//////
#define WPP_DEFINE_CONTROL_GUID(Name,Guid,Bits) \
extern __declspec(selectany) const GUID WPP_XGLUE4(WPP_, ThisDir, _CTLGUID_, WPP_EVAL(Name)) = WPP_GUID_STRUCT Guid;
WPP_CONTROL_GUIDS
#undef WPP_DEFINE_CONTROL_GUID

// define enums of individual bits
/////
#define WPP_DEFINE_CONTROL_GUID(Name,Guid,Bits) \
    WPP_XGLUE(WPP_BLOCK_START_, WPP_EVAL(Name)) = WPP_XGLUE(WPP_CTL_, WPP_EVAL(Name)) * 0x10000, Bits WPP_XGLUE(WPP_BLOCK_END_, WPP_EVAL(Name)), 
# define WPP_DEFINE_BIT(Name) WPP_BIT_ ## Name,
enum WPP_DEFINE_BIT_NAMES { WPP_CONTROL_GUIDS };
# undef WPP_DEFINE_BIT
#undef WPP_DEFINE_CONTROL_GUID

#define WPP_MASK(CTL)    (1 << ( ((CTL)-1) & 31 ))
#define WPP_FLAG_NO(CTL) ( (0xFFFF & ((CTL)-1) ) / 32)
#define WPP_CTRL_NO(CTL) ((CTL) >> 16)

// calculate how many DWORDs we need to get the required number of bits
// upper estimate. Sometimes will be off by one
#define WPP_DEFINE_CONTROL_GUID(Name,Guid,Bits) | WPP_XGLUE(WPP_BLOCK_END_, WPP_EVAL(Name))
enum _WPP_FLAG_LEN_ENUM { WPP_FLAG_LEN = 1 | ((0 WPP_CONTROL_GUIDS) & 0xFFFF) / 32 };
#undef WPP_DEFINE_CONTROL_GUID

//
// Check that maximum number of flags does not exceed 32
//
#ifndef C_ASSERT
#define C_ASSERT(e) typedef char __C_ASSERT__[(e)?1:-1]
#endif

#define MAX_NUMBER_OF_ETW_FLAGS 34 // 32 flags plus 2 separators
#define WPP_DEFINE_CONTROL_GUID(Name,Guid,Bits) && ((WPP_XGLUE(WPP_BLOCK_END_, WPP_EVAL(Name) & 0xFFFF)) < MAX_NUMBER_OF_ETW_FLAGS)
enum _WPP_FLAG_LEN_ENUM_MAX { WPP_MAX_FLAG_LEN_CHECK = (1 WPP_CONTROL_GUIDS) }; 
#undef WPP_DEFINE_CONTROL_GUID

#ifndef WPP_CB
#  define WPP_CB      WPP_GLOBAL_Control
#endif
#ifndef WPP_CB_TYPE
#define WPP_CB_TYPE WPP_PROJECT_CONTROL_BLOCK
#endif

typedef union {
    WPP_TRACE_CONTROL_BLOCK Control;      
    UCHAR ReserveSpace[ sizeof(WPP_TRACE_CONTROL_BLOCK) + sizeof(ULONG) * (WPP_FLAG_LEN - 1) ];
} WPP_CB_TYPE ;

 
extern __declspec(selectany) WPP_CB_TYPE *WPP_CB = (WPP_CB_TYPE*)&WPP_CB;

#define WPP_CONTROL(CTL) (WPP_CB[WPP_CTRL_NO(CTL)].Control)

#ifndef WPP_USE_TRACE_LEVELS
// For historical reasons the use of LEVEL could imply flags, this was a bad choice but very difficult
// to undo.
#if !defined(WPP_LEVEL_LOGGER)
#  define WPP_LEVEL_LOGGER(CTL)  (WPP_CONTROL(WPP_BIT_ ## CTL).Logger), 
#endif

#if !defined(WPP_LEVEL_ENABLED)
#  define WPP_LEVEL_ENABLED(CTL) (WPP_CONTROL(WPP_BIT_ ## CTL).Flags[WPP_FLAG_NO(WPP_BIT_ ## CTL)] & WPP_MASK(WPP_BIT_ ## CTL)) 
#endif
#else  //  #ifndef WPP_USE_TRACE_LEVELS
#if !defined(WPP_LEVEL_LOGGER)
#define WPP_LEVEL_LOGGER(lvl) (WPP_CONTROL(WPP_BIT_ ## DUMMY).Logger),
#endif

#if !defined(WPP_LEVEL_ENABLED)
#define WPP_LEVEL_ENABLED(lvl) (WPP_CONTROL(WPP_BIT_ ## DUMMY).Level >= lvl)
#endif
#endif  // #ifndef WPP_USE_TRACE_LEVELS

#if !defined(WPP_FLAG_LOGGER)
#  define WPP_FLAG_LOGGER(CTL)  (WPP_CONTROL(WPP_BIT_ ## CTL).Logger), 
#endif


#if !defined(WPP_FLAG_ENABLED)
#  define WPP_FLAG_ENABLED(CTL) (WPP_CONTROL(WPP_BIT_ ## CTL).Flags[WPP_FLAG_NO(WPP_BIT_ ## CTL)] & WPP_MASK(WPP_BIT_ ## CTL)) 
#endif


#ifndef WPP_ENABLED
#  define WPP_ENABLED() 1
#endif
#ifndef WPP_LOGGER
#  define WPP_LOGGER() (WPP_CB[0].Control.Logger),
#endif

#endif // WPP_NO_CONTROL_GUIDS

#if !defined(WPP_GET_LOGGER)
#  define WPP_GET_LOGGER Logger
#endif

#if !defined(WPP_LOGGER_ARG)
#  define WPP_LOGGER_ARG TRACEHANDLE Logger,
#endif

#if defined(__cplusplus)
};
#endif

#endif  // #ifndef WPP_ALREADY_INCLUDED


#if ENABLE_WPP_RECORDER
// template tracemacro-ifr.tpl

// This template expects:
//      WPP_THIS_FILE defined (see header.tpl)
//      WPP_LOGGER_ARG  defined
//      WPP_GET_LOGGER  defined
//      WPP_ENABLED() defined

#if defined(__cplusplus)
extern "C" {
#endif

#ifndef WPP_ALREADY_INCLUDED

#ifndef NO_CHECK_FOR_NULL_STRING
#ifndef WPP_CHECK_FOR_NULL_STRING
#define WPP_CHECK_FOR_NULL_STRING 1
#endif
#endif

#define WPP_EVAL(_value_) _value_
#define WPP_(Id) WPP_EVAL(WPP_) ## WPP_EVAL(Id) ## WPP_EVAL(_) ## WPP_EVAL(WPP_THIS_FILE) ## WPP_EVAL(__LINE__)

#if !defined(WPP_INLINE)
#define WPP_INLINE DECLSPEC_NOINLINE __inline
#endif

#else   // #ifndef WPP_ALREADY_INCLUDED

#undef WPP_LOCAL_TraceGuids

#endif  // #ifndef WPP_ALREADY_INCLUDED

#if !defined(WPP_NO_ANNOTATIONS)

#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c1057
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c106
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c1126
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c1132
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c1133
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c1134
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c1135
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c1136
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c1137
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c1138
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c1139
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c1140
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c1141
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c1142
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c1143
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c1144
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c1145
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c1146
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c1147
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c1158
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c1168
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c1177
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c1207
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c1217
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c1229
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c1240
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c1296
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c1311
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c1322
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c1336
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c135
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c1357
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c1369
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c146
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c1535
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c1537
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c1607
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c1608
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c1609
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c1610
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c1611
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c1612
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c1666
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c1684
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c173
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c1738
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c1743
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c1744
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c1745
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c1746
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c1747
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c1748
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c1749
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c1750
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c1751
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c1782
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c1799
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c182
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c1829
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c1841
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c1857
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c1867
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c1871
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c1878
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c1892
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c1916
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c1942
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c1946
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c1951
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c1955
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c2026
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c2027
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c2028
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c2029
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c2030
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c2031
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c2042
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c2067
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c2068
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c2069
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c2070
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c2071
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c2073
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c2081
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c2082
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c2090
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c2091
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c2092
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c2093
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c2094
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c2096
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c2102
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c2103
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c2112
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c2119
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c2120
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c2121
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c2145
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c2187
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c2207
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c2219
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c2307
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c2346
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c2375
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c2403
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c2970
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c3014
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c3036
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c3048
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c3060
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c3072
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c3093
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c3105
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c3122
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c3136
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c314
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c3150
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c323
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c331
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c343
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c355
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c362
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c458
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c467
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c533
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c544
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c610
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c621
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c640
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c684
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c700
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c721
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c95
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c963
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c964
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c965
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c966
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c967
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c968
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c969
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c970
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c971
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c972
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c973
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c974
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c975
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c976
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c977
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c978
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c979
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c1057_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 49 \"%0<%10!s!> StartDevice enter-%11!d!: fdo 0x%12!p! ext 0x%13!p!\" //   FLAG=QCUSB_DBG_MASK_CONTROL LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c1057_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 49 \"%0<%10!s!> StartDevice enter-%11!d!: fdo 0x%12!p! ext 0x%13!p!\" //   FLAG=QCUSB_DBG_MASK_CONTROL LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c1057
    #define WPP_ANNOTATE_USBPNP_c1057 WPP_ANNOTATE_USBPNP_c1057_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemPtr -- 12" , L"Arg, ItemPtr -- 13" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c1057 WPP_ANNOTATE_USBPNP_c1057_FINAL("TMF:", "USBPNP.c", "USBPNP_c1057", L"{", L"pDevExt->PortName, ItemString -- 10" , L"cookie, ItemLong -- 11" , L"DeviceObject, ItemPtr -- 12" , L"pDevExt, ItemPtr -- 13" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c106_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 11 \"%0<%10!s!> AddDevice: <%11!d!+%12!d!>\n   DRVO=0x%13!p!, PHYDEVO=0x%14!p!\" //   GFLAG=QCUSB_DBG_MASK_CONTROL GLEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c106_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 11 \"%0<%10!s!> AddDevice: <%11!d!+%12!d!>\n   DRVO=0x%13!p!, PHYDEVO=0x%14!p!\" //   GFLAG=QCUSB_DBG_MASK_CONTROL GLEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c106
    #define WPP_ANNOTATE_USBPNP_c106 WPP_ANNOTATE_USBPNP_c106_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemLong -- 12" , L"Arg, ItemPtr -- 13" , L"Arg, ItemPtr -- 14" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c106 WPP_ANNOTATE_USBPNP_c106_FINAL("TMF:", "USBPNP.c", "USBPNP_c106", L"{", L"gDeviceName, ItemString -- 10" , L"sizeof(struct _DEVICE_OBJECT), ItemLong -- 11" , L"sizeof(DEVICE_EXTENSION), ItemLong -- 12" , L"pDriverObject, ItemPtr -- 13" , L"pdo, ItemPtr -- 14" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c1126_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 50 \"%0Device Descriptor = %10!p!, len %11!u!\" //  ", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c1126_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 50 \"%0Device Descriptor = %10!p!, len %11!u!\" //  ", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c1126
    #define WPP_ANNOTATE_USBPNP_c1126 WPP_ANNOTATE_USBPNP_c1126_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemPtr -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c1126 WPP_ANNOTATE_USBPNP_c1126_FINAL("TMF:", "USBPNP.c", "USBPNP_c1126", L"{", L"deviceDesc, ItemPtr -- 10" , L"pUrb->UrbControlDescriptorRequest.TransferBufferLength, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c1132_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 51 \"%0Sample Device Descriptor:\" //  ", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c1132_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 51 \"%0Sample Device Descriptor:\" //  ", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c1132
    #define WPP_ANNOTATE_USBPNP_c1132 WPP_ANNOTATE_USBPNP_c1132_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c1132 WPP_ANNOTATE_USBPNP_c1132_FINAL("TMF:", "USBPNP.c", "USBPNP_c1132", L"{", L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c1133_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 52 \"%0-------------------------\" //  ", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c1133_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 52 \"%0-------------------------\" //  ", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c1133
    #define WPP_ANNOTATE_USBPNP_c1133 WPP_ANNOTATE_USBPNP_c1133_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c1133 WPP_ANNOTATE_USBPNP_c1133_FINAL("TMF:", "USBPNP.c", "USBPNP_c1133", L"{", L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c1134_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 53 \"%0bLength %10!d!\" //  ", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c1134_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 53 \"%0bLength %10!d!\" //  ", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c1134
    #define WPP_ANNOTATE_USBPNP_c1134 WPP_ANNOTATE_USBPNP_c1134_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemLong -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c1134 WPP_ANNOTATE_USBPNP_c1134_FINAL("TMF:", "USBPNP.c", "USBPNP_c1134", L"{", L"deviceDesc->bLength, ItemLong -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c1135_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 54 \"%0bDescriptorType 0x%10!x!\" //  ", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c1135_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 54 \"%0bDescriptorType 0x%10!x!\" //  ", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c1135
    #define WPP_ANNOTATE_USBPNP_c1135 WPP_ANNOTATE_USBPNP_c1135_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemLong -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c1135 WPP_ANNOTATE_USBPNP_c1135_FINAL("TMF:", "USBPNP.c", "USBPNP_c1135", L"{", L"deviceDesc->bDescriptorType, ItemLong -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c1136_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 55 \"%0bcdUSB 0x%10!x!\" //  ", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c1136_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 55 \"%0bcdUSB 0x%10!x!\" //  ", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c1136
    #define WPP_ANNOTATE_USBPNP_c1136 WPP_ANNOTATE_USBPNP_c1136_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemLong -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c1136 WPP_ANNOTATE_USBPNP_c1136_FINAL("TMF:", "USBPNP.c", "USBPNP_c1136", L"{", L"deviceDesc->bcdUSB, ItemLong -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c1137_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 56 \"%0bDeviceClass 0x%10!x!\" //  ", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c1137_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 56 \"%0bDeviceClass 0x%10!x!\" //  ", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c1137
    #define WPP_ANNOTATE_USBPNP_c1137 WPP_ANNOTATE_USBPNP_c1137_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemLong -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c1137 WPP_ANNOTATE_USBPNP_c1137_FINAL("TMF:", "USBPNP.c", "USBPNP_c1137", L"{", L"deviceDesc->bDeviceClass, ItemLong -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c1138_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 57 \"%0bDeviceSubClass 0x%10!x!\" //  ", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c1138_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 57 \"%0bDeviceSubClass 0x%10!x!\" //  ", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c1138
    #define WPP_ANNOTATE_USBPNP_c1138 WPP_ANNOTATE_USBPNP_c1138_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemLong -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c1138 WPP_ANNOTATE_USBPNP_c1138_FINAL("TMF:", "USBPNP.c", "USBPNP_c1138", L"{", L"deviceDesc->bDeviceSubClass, ItemLong -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c1139_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 58 \"%0bDeviceProtocol 0x%10!x!\" //  ", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c1139_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 58 \"%0bDeviceProtocol 0x%10!x!\" //  ", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c1139
    #define WPP_ANNOTATE_USBPNP_c1139 WPP_ANNOTATE_USBPNP_c1139_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemLong -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c1139 WPP_ANNOTATE_USBPNP_c1139_FINAL("TMF:", "USBPNP.c", "USBPNP_c1139", L"{", L"deviceDesc->bDeviceProtocol, ItemLong -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c1140_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 59 \"%0bMaxPacketSize0 0x%10!x!\" //  ", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c1140_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 59 \"%0bMaxPacketSize0 0x%10!x!\" //  ", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c1140
    #define WPP_ANNOTATE_USBPNP_c1140 WPP_ANNOTATE_USBPNP_c1140_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemLong -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c1140 WPP_ANNOTATE_USBPNP_c1140_FINAL("TMF:", "USBPNP.c", "USBPNP_c1140", L"{", L"deviceDesc->bMaxPacketSize0, ItemLong -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c1141_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 60 \"%0idVendor 0x%10!x!\" //  ", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c1141_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 60 \"%0idVendor 0x%10!x!\" //  ", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c1141
    #define WPP_ANNOTATE_USBPNP_c1141 WPP_ANNOTATE_USBPNP_c1141_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemLong -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c1141 WPP_ANNOTATE_USBPNP_c1141_FINAL("TMF:", "USBPNP.c", "USBPNP_c1141", L"{", L"deviceDesc->idVendor, ItemLong -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c1142_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 61 \"%0idProduct 0x%10!x!\" //  ", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c1142_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 61 \"%0idProduct 0x%10!x!\" //  ", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c1142
    #define WPP_ANNOTATE_USBPNP_c1142 WPP_ANNOTATE_USBPNP_c1142_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemLong -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c1142 WPP_ANNOTATE_USBPNP_c1142_FINAL("TMF:", "USBPNP.c", "USBPNP_c1142", L"{", L"deviceDesc->idProduct, ItemLong -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c1143_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 62 \"%0bcdDevice 0x%10!x!\" //  ", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c1143_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 62 \"%0bcdDevice 0x%10!x!\" //  ", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c1143
    #define WPP_ANNOTATE_USBPNP_c1143 WPP_ANNOTATE_USBPNP_c1143_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemLong -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c1143 WPP_ANNOTATE_USBPNP_c1143_FINAL("TMF:", "USBPNP.c", "USBPNP_c1143", L"{", L"deviceDesc->bcdDevice, ItemLong -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c1144_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 63 \"%0iManufacturer 0x%10!x!\" //  ", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c1144_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 63 \"%0iManufacturer 0x%10!x!\" //  ", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c1144
    #define WPP_ANNOTATE_USBPNP_c1144 WPP_ANNOTATE_USBPNP_c1144_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemLong -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c1144 WPP_ANNOTATE_USBPNP_c1144_FINAL("TMF:", "USBPNP.c", "USBPNP_c1144", L"{", L"deviceDesc->iManufacturer, ItemLong -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c1145_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 64 \"%0iProduct 0x%10!x!\" //  ", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c1145_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 64 \"%0iProduct 0x%10!x!\" //  ", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c1145
    #define WPP_ANNOTATE_USBPNP_c1145 WPP_ANNOTATE_USBPNP_c1145_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemLong -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c1145 WPP_ANNOTATE_USBPNP_c1145_FINAL("TMF:", "USBPNP.c", "USBPNP_c1145", L"{", L"deviceDesc->iProduct, ItemLong -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c1146_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 65 \"%0iSerialNumber 0x%10!x!\" //  ", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c1146_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 65 \"%0iSerialNumber 0x%10!x!\" //  ", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c1146
    #define WPP_ANNOTATE_USBPNP_c1146 WPP_ANNOTATE_USBPNP_c1146_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemLong -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c1146 WPP_ANNOTATE_USBPNP_c1146_FINAL("TMF:", "USBPNP.c", "USBPNP_c1146", L"{", L"deviceDesc->iSerialNumber, ItemLong -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c1147_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 66 \"%0bNumConfigurations 0x%10!x!\" //  ", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c1147_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 66 \"%0bNumConfigurations 0x%10!x!\" //  ", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c1147
    #define WPP_ANNOTATE_USBPNP_c1147 WPP_ANNOTATE_USBPNP_c1147_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemLong -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c1147 WPP_ANNOTATE_USBPNP_c1147_FINAL("TMF:", "USBPNP.c", "USBPNP_c1147", L"{", L"deviceDesc->bNumConfigurations, ItemLong -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c1158_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 67 \"%0<%10!s!> StartDevice: _SERN: Failed with iProduct: 0x%11!x!, try default\" //   FLAG=QCUSB_DBG_MASK_CONTROL LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c1158_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 67 \"%0<%10!s!> StartDevice: _SERN: Failed with iProduct: 0x%11!x!, try default\" //   FLAG=QCUSB_DBG_MASK_CONTROL LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c1158
    #define WPP_ANNOTATE_USBPNP_c1158 WPP_ANNOTATE_USBPNP_c1158_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c1158 WPP_ANNOTATE_USBPNP_c1158_FINAL("TMF:", "USBPNP.c", "USBPNP_c1158", L"{", L"pDevExt->PortName, ItemString -- 10" , L"deviceDesc->iProduct, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c1168_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 68 \"%0<%10!s!> StartDevice: _SERN: tried iProduct: ST(0x%11!x!)\" //   FLAG=QCUSB_DBG_MASK_CONTROL LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c1168_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 68 \"%0<%10!s!> StartDevice: _SERN: tried iProduct: ST(0x%11!x!)\" //   FLAG=QCUSB_DBG_MASK_CONTROL LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c1168
    #define WPP_ANNOTATE_USBPNP_c1168 WPP_ANNOTATE_USBPNP_c1168_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c1168 WPP_ANNOTATE_USBPNP_c1168_FINAL("TMF:", "USBPNP.c", "USBPNP_c1168", L"{", L"pDevExt->PortName, ItemString -- 10" , L"ntStatus, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c1177_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 69 \"%0<%10!s!> StartDevice: _SERN: tried iSerialNumber: 0x%11!x! ST(0x%12!x!)\" //   FLAG=QCUSB_DBG_MASK_CONTROL LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c1177_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 69 \"%0<%10!s!> StartDevice: _SERN: tried iSerialNumber: 0x%11!x! ST(0x%12!x!)\" //   FLAG=QCUSB_DBG_MASK_CONTROL LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c1177
    #define WPP_ANNOTATE_USBPNP_c1177 WPP_ANNOTATE_USBPNP_c1177_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemLong -- 12" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c1177 WPP_ANNOTATE_USBPNP_c1177_FINAL("TMF:", "USBPNP.c", "USBPNP_c1177", L"{", L"pDevExt->PortName, ItemString -- 10" , L"deviceDesc->iSerialNumber, ItemLong -- 11" , L"ntStatus, ItemLong -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c1207_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 70 \"%0<%10!s!> StartDevice: dev not ready\" //   FLAG=QCUSB_DBG_MASK_CONTROL LEVEL=QCUSB_DBG_LEVEL_CRITICAL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c1207_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 70 \"%0<%10!s!> StartDevice: dev not ready\" //   FLAG=QCUSB_DBG_MASK_CONTROL LEVEL=QCUSB_DBG_LEVEL_CRITICAL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c1207
    #define WPP_ANNOTATE_USBPNP_c1207 WPP_ANNOTATE_USBPNP_c1207_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c1207 WPP_ANNOTATE_USBPNP_c1207_FINAL("TMF:", "USBPNP.c", "USBPNP_c1207", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c1217_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 71 \"%0<%10!s!> StartDevice: dev err-0 0x%11!x!\" //   FLAG=QCUSB_DBG_MASK_CONTROL LEVEL=QCUSB_DBG_LEVEL_CRITICAL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c1217_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 71 \"%0<%10!s!> StartDevice: dev err-0 0x%11!x!\" //   FLAG=QCUSB_DBG_MASK_CONTROL LEVEL=QCUSB_DBG_LEVEL_CRITICAL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c1217
    #define WPP_ANNOTATE_USBPNP_c1217 WPP_ANNOTATE_USBPNP_c1217_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c1217 WPP_ANNOTATE_USBPNP_c1217_FINAL("TMF:", "USBPNP.c", "USBPNP_c1217", L"{", L"pDevExt->PortName, ItemString -- 10" , L"ntStatus, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c1229_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 72 \"%0<%10!s!> StartDevice: STATUS_NO_MEMORY-0\" //   FLAG=QCUSB_DBG_MASK_CONTROL LEVEL=QCUSB_DBG_LEVEL_CRITICAL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c1229_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 72 \"%0<%10!s!> StartDevice: STATUS_NO_MEMORY-0\" //   FLAG=QCUSB_DBG_MASK_CONTROL LEVEL=QCUSB_DBG_LEVEL_CRITICAL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c1229
    #define WPP_ANNOTATE_USBPNP_c1229 WPP_ANNOTATE_USBPNP_c1229_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c1229 WPP_ANNOTATE_USBPNP_c1229_FINAL("TMF:", "USBPNP.c", "USBPNP_c1229", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c1240_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 73 \"%0<%10!s!> StartDevice: STATUS_NO_MEMORY-1\" //   FLAG=QCUSB_DBG_MASK_CONTROL LEVEL=QCUSB_DBG_LEVEL_CRITICAL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c1240_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 73 \"%0<%10!s!> StartDevice: STATUS_NO_MEMORY-1\" //   FLAG=QCUSB_DBG_MASK_CONTROL LEVEL=QCUSB_DBG_LEVEL_CRITICAL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c1240
    #define WPP_ANNOTATE_USBPNP_c1240 WPP_ANNOTATE_USBPNP_c1240_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c1240 WPP_ANNOTATE_USBPNP_c1240_FINAL("TMF:", "USBPNP.c", "USBPNP_c1240", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c1296_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 74 \"%0<%10!s!> StartDevice: ResetInput/Output ResetPort %11!d! err 0x%12!x!\" //   FLAG=QCUSB_DBG_MASK_CONTROL LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c1296_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 74 \"%0<%10!s!> StartDevice: ResetInput/Output ResetPort %11!d! err 0x%12!x!\" //   FLAG=QCUSB_DBG_MASK_CONTROL LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c1296
    #define WPP_ANNOTATE_USBPNP_c1296 WPP_ANNOTATE_USBPNP_c1296_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemLong -- 12" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c1296 WPP_ANNOTATE_USBPNP_c1296_FINAL("TMF:", "USBPNP.c", "USBPNP_c1296", L"{", L"pDevExt->PortName, ItemString -- 10" , L"i, ItemLong -- 11" , L"ntStatus, ItemLong -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c1311_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 75 \"%0<%10!s!> StartDevice: ResetInput/Output ResetPort failed ALL RETRIES err 0x%11!x!\" //   FLAG=QCUSB_DBG_MASK_CONTROL LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c1311_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 75 \"%0<%10!s!> StartDevice: ResetInput/Output ResetPort failed ALL RETRIES err 0x%11!x!\" //   FLAG=QCUSB_DBG_MASK_CONTROL LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c1311
    #define WPP_ANNOTATE_USBPNP_c1311 WPP_ANNOTATE_USBPNP_c1311_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c1311 WPP_ANNOTATE_USBPNP_c1311_FINAL("TMF:", "USBPNP.c", "USBPNP_c1311", L"{", L"pDevExt->PortName, ItemString -- 10" , L"ntStatus, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c1322_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 76 \"%0<%10!s!> StartDevice: Broken USB detected, fail\" //   FLAG=QCUSB_DBG_MASK_CONTROL LEVEL=QCUSB_DBG_LEVEL_FORCE", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c1322_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 76 \"%0<%10!s!> StartDevice: Broken USB detected, fail\" //   FLAG=QCUSB_DBG_MASK_CONTROL LEVEL=QCUSB_DBG_LEVEL_FORCE", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c1322
    #define WPP_ANNOTATE_USBPNP_c1322 WPP_ANNOTATE_USBPNP_c1322_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c1322 WPP_ANNOTATE_USBPNP_c1322_FINAL("TMF:", "USBPNP.c", "USBPNP_c1322", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c1336_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 77 \"%0<%10!s!> StartDevice: DeviceId err 0x%11!x!\" //   FLAG=QCUSB_DBG_MASK_CONTROL LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c1336_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 77 \"%0<%10!s!> StartDevice: DeviceId err 0x%11!x!\" //   FLAG=QCUSB_DBG_MASK_CONTROL LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c1336
    #define WPP_ANNOTATE_USBPNP_c1336 WPP_ANNOTATE_USBPNP_c1336_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c1336 WPP_ANNOTATE_USBPNP_c1336_FINAL("TMF:", "USBPNP.c", "USBPNP_c1336", L"{", L"pDevExt->PortName, ItemString -- 10" , L"ntStatus, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c135_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 12 \"%0<%10!s!> AddDevice: new FDO 0x%11!p!\" //   GFLAG=QCUSB_DBG_MASK_CONTROL GLEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c135_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 12 \"%0<%10!s!> AddDevice: new FDO 0x%11!p!\" //   GFLAG=QCUSB_DBG_MASK_CONTROL GLEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c135
    #define WPP_ANNOTATE_USBPNP_c135 WPP_ANNOTATE_USBPNP_c135_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemPtr -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c135 WPP_ANNOTATE_USBPNP_c135_FINAL("TMF:", "USBPNP.c", "USBPNP_c135", L"{", L"myPortName, ItemString -- 10" , L"fdo, ItemPtr -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c1357_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 78 \"%0<%10!s!> StartDevice: DL bundling err 0x%11!x!\" //   FLAG=QCUSB_DBG_MASK_CONTROL LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c1357_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 78 \"%0<%10!s!> StartDevice: DL bundling err 0x%11!x!\" //   FLAG=QCUSB_DBG_MASK_CONTROL LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c1357
    #define WPP_ANNOTATE_USBPNP_c1357 WPP_ANNOTATE_USBPNP_c1357_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c1357 WPP_ANNOTATE_USBPNP_c1357_FINAL("TMF:", "USBPNP.c", "USBPNP_c1357", L"{", L"pDevExt->PortName, ItemString -- 10" , L"ntStatus, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c1369_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 79 \"%0<%10!s!> StartDevice: L2 NO MEM\" //   FLAG=QCUSB_DBG_MASK_CONTROL LEVEL=QCUSB_DBG_LEVEL_FORCE", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c1369_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 79 \"%0<%10!s!> StartDevice: L2 NO MEM\" //   FLAG=QCUSB_DBG_MASK_CONTROL LEVEL=QCUSB_DBG_LEVEL_FORCE", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c1369
    #define WPP_ANNOTATE_USBPNP_c1369 WPP_ANNOTATE_USBPNP_c1369_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c1369 WPP_ANNOTATE_USBPNP_c1369_FINAL("TMF:", "USBPNP.c", "USBPNP_c1369", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c146_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 13 \"%0<%10!s!> AddDevice: FDO failure 0x%11!x!\" //   GFLAG=QCUSB_DBG_MASK_CONTROL GLEVEL=QCUSB_DBG_LEVEL_CRITICAL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c146_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 13 \"%0<%10!s!> AddDevice: FDO failure 0x%11!x!\" //   GFLAG=QCUSB_DBG_MASK_CONTROL GLEVEL=QCUSB_DBG_LEVEL_CRITICAL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c146
    #define WPP_ANNOTATE_USBPNP_c146 WPP_ANNOTATE_USBPNP_c146_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c146 WPP_ANNOTATE_USBPNP_c146_FINAL("TMF:", "USBPNP.c", "USBPNP_c146", L"{", L"myPortName, ItemString -- 10" , L"ntStatus, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c1535_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 80 \"%0 (%10!d!, 0x%11!x!)-\" //  ", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c1535_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 80 \"%0 (%10!d!, 0x%11!x!)-\" //  ", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c1535
    #define WPP_ANNOTATE_USBPNP_c1535 WPP_ANNOTATE_USBPNP_c1535_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemLong -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c1535 WPP_ANNOTATE_USBPNP_c1535_FINAL("TMF:", "USBPNP.c", "USBPNP_c1535", L"{", L"i, ItemLong -- 10" , L"p[i], ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c1537_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 81 \"%0\" //  ", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c1537_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 81 \"%0\" //  ", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c1537
    #define WPP_ANNOTATE_USBPNP_c1537 WPP_ANNOTATE_USBPNP_c1537_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c1537 WPP_ANNOTATE_USBPNP_c1537_FINAL("TMF:", "USBPNP.c", "USBPNP_c1537", L"{", L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c1607_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 82 \"%0selectinterface: Cfg->bLength=0x%10!x!\" //  ", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c1607_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 82 \"%0selectinterface: Cfg->bLength=0x%10!x!\" //  ", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c1607
    #define WPP_ANNOTATE_USBPNP_c1607 WPP_ANNOTATE_USBPNP_c1607_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemLong -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c1607 WPP_ANNOTATE_USBPNP_c1607_FINAL("TMF:", "USBPNP.c", "USBPNP_c1607", L"{", L"(UCHAR)pConfigDesc->bLength, ItemLong -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c1608_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 83 \"%0selectinterface: Cfg->bDescType=0x%10!x!\" //  ", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c1608_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 83 \"%0selectinterface: Cfg->bDescType=0x%10!x!\" //  ", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c1608
    #define WPP_ANNOTATE_USBPNP_c1608 WPP_ANNOTATE_USBPNP_c1608_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemLong -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c1608 WPP_ANNOTATE_USBPNP_c1608_FINAL("TMF:", "USBPNP.c", "USBPNP_c1608", L"{", L"(UCHAR)pConfigDesc->bDescriptorType, ItemLong -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c1609_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 84 \"%0selectinterface: Cfg->wTotalLen=0x%10!x!\" //  ", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c1609_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 84 \"%0selectinterface: Cfg->wTotalLen=0x%10!x!\" //  ", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c1609
    #define WPP_ANNOTATE_USBPNP_c1609 WPP_ANNOTATE_USBPNP_c1609_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemLong -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c1609 WPP_ANNOTATE_USBPNP_c1609_FINAL("TMF:", "USBPNP.c", "USBPNP_c1609", L"{", L"(USHORT)pConfigDesc->wTotalLength, ItemLong -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c1610_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 85 \"%0selectinterface: Cfg->bNumInfs=0x%10!x!\" //  ", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c1610_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 85 \"%0selectinterface: Cfg->bNumInfs=0x%10!x!\" //  ", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c1610
    #define WPP_ANNOTATE_USBPNP_c1610 WPP_ANNOTATE_USBPNP_c1610_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemLong -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c1610 WPP_ANNOTATE_USBPNP_c1610_FINAL("TMF:", "USBPNP.c", "USBPNP_c1610", L"{", L"(UCHAR)lTotalInterfaces, ItemLong -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c1611_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 86 \"%0selectinterface: Cfg->bmAttr=0x%10!x!\" //  ", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c1611_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 86 \"%0selectinterface: Cfg->bmAttr=0x%10!x!\" //  ", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c1611
    #define WPP_ANNOTATE_USBPNP_c1611 WPP_ANNOTATE_USBPNP_c1611_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemLong -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c1611 WPP_ANNOTATE_USBPNP_c1611_FINAL("TMF:", "USBPNP.c", "USBPNP_c1611", L"{", L"(UCHAR)pConfigDesc->bmAttributes, ItemLong -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c1612_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 87 \"%0selectinterface: Cfg->MaxPower=0x%10!x!\" //  ", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c1612_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 87 \"%0selectinterface: Cfg->MaxPower=0x%10!x!\" //  ", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c1612
    #define WPP_ANNOTATE_USBPNP_c1612 WPP_ANNOTATE_USBPNP_c1612_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemLong -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c1612 WPP_ANNOTATE_USBPNP_c1612_FINAL("TMF:", "USBPNP.c", "USBPNP_c1612", L"{", L"(UCHAR)pConfigDesc->MaxPower, ItemLong -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c1666_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 88 \"%0<%10!s!>: VendorFeature ON\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_CRITICAL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c1666_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 88 \"%0<%10!s!>: VendorFeature ON\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_CRITICAL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c1666
    #define WPP_ANNOTATE_USBPNP_c1666 WPP_ANNOTATE_USBPNP_c1666_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c1666 WPP_ANNOTATE_USBPNP_c1666_FINAL("TMF:", "USBPNP.c", "USBPNP_c1666", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c1684_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 89 \"%0<%10!s!>: CtrlCap 0x%11!x! DataCap 0x%12!x!\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_CRITICAL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c1684_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 89 \"%0<%10!s!>: CtrlCap 0x%11!x! DataCap 0x%12!x!\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_CRITICAL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c1684
    #define WPP_ANNOTATE_USBPNP_c1684 WPP_ANNOTATE_USBPNP_c1684_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemLong -- 12" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c1684 WPP_ANNOTATE_USBPNP_c1684_FINAL("TMF:", "USBPNP.c", "USBPNP_c1684", L"{", L"pDevExt->PortName, ItemString -- 10" , L"bmControlCapabilities, ItemLong -- 11" , L"bmDataCapabilities, ItemLong -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c173_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 14 \"%0<%10!s!> AddDevice: Attached: lrPtr=0x%11!p! upPtr=0x%12!p!\" //   FLAG=QCUSB_DBG_MASK_CONTROL LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c173_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 14 \"%0<%10!s!> AddDevice: Attached: lrPtr=0x%11!p! upPtr=0x%12!p!\" //   FLAG=QCUSB_DBG_MASK_CONTROL LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c173
    #define WPP_ANNOTATE_USBPNP_c173 WPP_ANNOTATE_USBPNP_c173_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemPtr -- 11" , L"Arg, ItemPtr -- 12" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c173 WPP_ANNOTATE_USBPNP_c173_FINAL("TMF:", "USBPNP.c", "USBPNP_c173", L"{", L"myPortName, ItemString -- 10" , L"pDevExt->StackDeviceObject, ItemPtr -- 11" , L"pDevExt->StackDeviceObject->AttachedDevice, ItemPtr -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c1738_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 90 \"%0<%10!s!> _SelectInterfaces: parse done, totalIF=%11!d!\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_CRITICAL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c1738_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 90 \"%0<%10!s!> _SelectInterfaces: parse done, totalIF=%11!d!\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_CRITICAL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c1738
    #define WPP_ANNOTATE_USBPNP_c1738 WPP_ANNOTATE_USBPNP_c1738_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c1738 WPP_ANNOTATE_USBPNP_c1738_FINAL("TMF:", "USBPNP.c", "USBPNP_c1738", L"{", L"pDevExt->PortName, ItemString -- 10" , L"lTotalInterfaces, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c1743_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 91 \"%0 --- SEARCH %10!d! ---\" //  ", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c1743_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 91 \"%0 --- SEARCH %10!d! ---\" //  ", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c1743
    #define WPP_ANNOTATE_USBPNP_c1743 WPP_ANNOTATE_USBPNP_c1743_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemLong -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c1743 WPP_ANNOTATE_USBPNP_c1743_FINAL("TMF:", "USBPNP.c", "USBPNP_c1743", L"{", L"x-1, ItemLong -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c1744_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 92 \"%0 - INF.bLength = 0x%10!x!\" //  ", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c1744_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 92 \"%0 - INF.bLength = 0x%10!x!\" //  ", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c1744
    #define WPP_ANNOTATE_USBPNP_c1744 WPP_ANNOTATE_USBPNP_c1744_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemLong -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c1744 WPP_ANNOTATE_USBPNP_c1744_FINAL("TMF:", "USBPNP.c", "USBPNP_c1744", L"{", L"(UCHAR)pIntdesc->bLength, ItemLong -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c1745_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 93 \"%0 - INF.bDescriptorType = 0x%10!x!\" //  ", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c1745_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 93 \"%0 - INF.bDescriptorType = 0x%10!x!\" //  ", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c1745
    #define WPP_ANNOTATE_USBPNP_c1745 WPP_ANNOTATE_USBPNP_c1745_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemLong -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c1745 WPP_ANNOTATE_USBPNP_c1745_FINAL("TMF:", "USBPNP.c", "USBPNP_c1745", L"{", L"(UCHAR)pIntdesc->bDescriptorType, ItemLong -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c1746_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 94 \"%0 - INF.bInterfaceNumber = 0x%10!x!\" //  ", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c1746_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 94 \"%0 - INF.bInterfaceNumber = 0x%10!x!\" //  ", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c1746
    #define WPP_ANNOTATE_USBPNP_c1746 WPP_ANNOTATE_USBPNP_c1746_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemLong -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c1746 WPP_ANNOTATE_USBPNP_c1746_FINAL("TMF:", "USBPNP.c", "USBPNP_c1746", L"{", L"(UCHAR)pIntdesc->bInterfaceNumber, ItemLong -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c1747_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 95 \"%0 - INF.bAlternateSetting = 0x%10!x!\" //  ", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c1747_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 95 \"%0 - INF.bAlternateSetting = 0x%10!x!\" //  ", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c1747
    #define WPP_ANNOTATE_USBPNP_c1747 WPP_ANNOTATE_USBPNP_c1747_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemLong -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c1747 WPP_ANNOTATE_USBPNP_c1747_FINAL("TMF:", "USBPNP.c", "USBPNP_c1747", L"{", L"(UCHAR)pIntdesc->bAlternateSetting, ItemLong -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c1748_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 96 \"%0 - INF.bNumEndpoints = 0x%10!x!\" //  ", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c1748_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 96 \"%0 - INF.bNumEndpoints = 0x%10!x!\" //  ", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c1748
    #define WPP_ANNOTATE_USBPNP_c1748 WPP_ANNOTATE_USBPNP_c1748_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemLong -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c1748 WPP_ANNOTATE_USBPNP_c1748_FINAL("TMF:", "USBPNP.c", "USBPNP_c1748", L"{", L"(UCHAR)pIntdesc->bNumEndpoints, ItemLong -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c1749_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 97 \"%0 - INF.bInterfaceClass = 0x%10!x!\" //  ", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c1749_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 97 \"%0 - INF.bInterfaceClass = 0x%10!x!\" //  ", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c1749
    #define WPP_ANNOTATE_USBPNP_c1749 WPP_ANNOTATE_USBPNP_c1749_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemLong -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c1749 WPP_ANNOTATE_USBPNP_c1749_FINAL("TMF:", "USBPNP.c", "USBPNP_c1749", L"{", L"(UCHAR)pIntdesc->bInterfaceClass, ItemLong -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c1750_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 98 \"%0 - INF.bInterfaceSubClass = 0x%10!x!\" //  ", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c1750_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 98 \"%0 - INF.bInterfaceSubClass = 0x%10!x!\" //  ", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c1750
    #define WPP_ANNOTATE_USBPNP_c1750 WPP_ANNOTATE_USBPNP_c1750_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemLong -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c1750 WPP_ANNOTATE_USBPNP_c1750_FINAL("TMF:", "USBPNP.c", "USBPNP_c1750", L"{", L"(UCHAR)pIntdesc->bInterfaceSubClass, ItemLong -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c1751_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 99 \"%0 - INF.bInterfaceProtocol = 0x%10!x!\" //  ", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c1751_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 99 \"%0 - INF.bInterfaceProtocol = 0x%10!x!\" //  ", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c1751
    #define WPP_ANNOTATE_USBPNP_c1751 WPP_ANNOTATE_USBPNP_c1751_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemLong -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c1751 WPP_ANNOTATE_USBPNP_c1751_FINAL("TMF:", "USBPNP.c", "USBPNP_c1751", L"{", L"(UCHAR)pIntdesc->bInterfaceProtocol, ItemLong -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c1782_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 100 \"%0<%10!s!> _SelectInterfaces: ignore ECM reset IF (%11!u! EP)\" //   FLAG=QCUSB_DBG_MASK_CONTROL LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c1782_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 100 \"%0<%10!s!> _SelectInterfaces: ignore ECM reset IF (%11!u! EP)\" //   FLAG=QCUSB_DBG_MASK_CONTROL LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c1782
    #define WPP_ANNOTATE_USBPNP_c1782 WPP_ANNOTATE_USBPNP_c1782_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c1782 WPP_ANNOTATE_USBPNP_c1782_FINAL("TMF:", "USBPNP.c", "USBPNP_c1782", L"{", L"pDevExt->PortName, ItemString -- 10" , L"pIntdesc->bNumEndpoints, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c1799_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 101 \"%0<%10!s!> _SelectInterfaces-a: IF %11!u! alt %12!u! added to config[%13!u!] (%14!u! EP)\" //   FLAG=QCUSB_DBG_MASK_CONTROL LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c1799_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 101 \"%0<%10!s!> _SelectInterfaces-a: IF %11!u! alt %12!u! added to config[%13!u!] (%14!u! EP)\" //   FLAG=QCUSB_DBG_MASK_CONTROL LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c1799
    #define WPP_ANNOTATE_USBPNP_c1799 WPP_ANNOTATE_USBPNP_c1799_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemLong -- 12" , L"Arg, ItemLong -- 13" , L"Arg, ItemLong -- 14" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c1799 WPP_ANNOTATE_USBPNP_c1799_FINAL("TMF:", "USBPNP.c", "USBPNP_c1799", L"{", L"pDevExt->PortName, ItemString -- 10" , L"pIntdesc->bInterfaceNumber, ItemLong -- 11" , L"pIntdesc->bAlternateSetting, ItemLong -- 12" , L"x, ItemLong -- 13" , L"pIntdesc->bNumEndpoints, ItemLong -- 14" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c182_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 15 \"%0<%10!s!> AddDevice: IoAttachDeviceToDeviceStack failure\" //   FLAG=QCUSB_DBG_MASK_CONTROL LEVEL=QCUSB_DBG_LEVEL_CRITICAL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c182_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 15 \"%0<%10!s!> AddDevice: IoAttachDeviceToDeviceStack failure\" //   FLAG=QCUSB_DBG_MASK_CONTROL LEVEL=QCUSB_DBG_LEVEL_CRITICAL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c182
    #define WPP_ANNOTATE_USBPNP_c182 WPP_ANNOTATE_USBPNP_c182_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c182 WPP_ANNOTATE_USBPNP_c182_FINAL("TMF:", "USBPNP.c", "USBPNP_c182", L"{", L"myPortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c1829_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 102 \"%0<%10!s!> _SelectInterfaces-b: IF %11!u! alt %12!u! added to config[%13!u!] (%14!u! EP)\" //   FLAG=QCUSB_DBG_MASK_CONTROL LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c1829_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 102 \"%0<%10!s!> _SelectInterfaces-b: IF %11!u! alt %12!u! added to config[%13!u!] (%14!u! EP)\" //   FLAG=QCUSB_DBG_MASK_CONTROL LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c1829
    #define WPP_ANNOTATE_USBPNP_c1829 WPP_ANNOTATE_USBPNP_c1829_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemLong -- 12" , L"Arg, ItemLong -- 13" , L"Arg, ItemLong -- 14" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c1829 WPP_ANNOTATE_USBPNP_c1829_FINAL("TMF:", "USBPNP.c", "USBPNP_c1829", L"{", L"pDevExt->PortName, ItemString -- 10" , L"pIntdesc->bInterfaceNumber, ItemLong -- 11" , L"pIntdesc->bAlternateSetting, ItemLong -- 12" , L"x, ItemLong -- 13" , L"pIntdesc->bNumEndpoints, ItemLong -- 14" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c1841_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 103 \"%0<%10!s!> _SelectInterfaces: error -- too many interfaces\" //   FLAG=QCUSB_DBG_MASK_CONTROL LEVEL=QCUSB_DBG_LEVEL_CRITICAL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c1841_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 103 \"%0<%10!s!> _SelectInterfaces: error -- too many interfaces\" //   FLAG=QCUSB_DBG_MASK_CONTROL LEVEL=QCUSB_DBG_LEVEL_CRITICAL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c1841
    #define WPP_ANNOTATE_USBPNP_c1841 WPP_ANNOTATE_USBPNP_c1841_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c1841 WPP_ANNOTATE_USBPNP_c1841_FINAL("TMF:", "USBPNP.c", "USBPNP_c1841", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c1857_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 104 \"%0<%10!s!> _SelectInterfaces: err - USBD_CreateConfigurationRequestEx\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_CRITICAL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c1857_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 104 \"%0<%10!s!> _SelectInterfaces: err - USBD_CreateConfigurationRequestEx\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_CRITICAL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c1857
    #define WPP_ANNOTATE_USBPNP_c1857 WPP_ANNOTATE_USBPNP_c1857_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c1857 WPP_ANNOTATE_USBPNP_c1857_FINAL("TMF:", "USBPNP.c", "USBPNP_c1857", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c1867_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 105 \"%0 <%10!d!> - Interface is NULL \" //  ", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c1867_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 105 \"%0 <%10!d!> - Interface is NULL \" //  ", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c1867
    #define WPP_ANNOTATE_USBPNP_c1867 WPP_ANNOTATE_USBPNP_c1867_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemLong -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c1867 WPP_ANNOTATE_USBPNP_c1867_FINAL("TMF:", "USBPNP.c", "USBPNP_c1867", L"{", L"i, ItemLong -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c1871_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 106 \"%0 <%10!d!> - Interface is NOT NULL!!! \" //  ", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c1871_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 106 \"%0 <%10!d!> - Interface is NOT NULL!!! \" //  ", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c1871
    #define WPP_ANNOTATE_USBPNP_c1871 WPP_ANNOTATE_USBPNP_c1871_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemLong -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c1871 WPP_ANNOTATE_USBPNP_c1871_FINAL("TMF:", "USBPNP.c", "USBPNP_c1871", L"{", L"i, ItemLong -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c1878_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 107 \"%0 <%10!d!> - InterfaceDesc is NULL \" //  ", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c1878_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 107 \"%0 <%10!d!> - InterfaceDesc is NULL \" //  ", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c1878
    #define WPP_ANNOTATE_USBPNP_c1878 WPP_ANNOTATE_USBPNP_c1878_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemLong -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c1878 WPP_ANNOTATE_USBPNP_c1878_FINAL("TMF:", "USBPNP.c", "USBPNP_c1878", L"{", L"i, ItemLong -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c1892_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 108 \"%0 pIntinfo is NULL, FAILED!!!\" //   FLAG=QCUSB_DBG_MASK_CONTROL LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c1892_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 108 \"%0 pIntinfo is NULL, FAILED!!!\" //   FLAG=QCUSB_DBG_MASK_CONTROL LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c1892
    #define WPP_ANNOTATE_USBPNP_c1892 WPP_ANNOTATE_USBPNP_c1892_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c1892 WPP_ANNOTATE_USBPNP_c1892_FINAL("TMF:", "USBPNP.c", "USBPNP_c1892", L"{", L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c1916_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 109 \"%0<%10!s!> _SelectInterfaces: Too many pipes, %11!d!\" //   FLAG=QCUSB_DBG_MASK_CONTROL LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c1916_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 109 \"%0<%10!s!> _SelectInterfaces: Too many pipes, %11!d!\" //   FLAG=QCUSB_DBG_MASK_CONTROL LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c1916
    #define WPP_ANNOTATE_USBPNP_c1916 WPP_ANNOTATE_USBPNP_c1916_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c1916 WPP_ANNOTATE_USBPNP_c1916_FINAL("TMF:", "USBPNP.c", "USBPNP_c1916", L"{", L"pDevExt->PortName, ItemString -- 10" , L"ucNumPipes, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c1942_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 110 \"%0 CONFIG NTSTATUS = SUCCESS!!\" //  ", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c1942_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 110 \"%0 CONFIG NTSTATUS = SUCCESS!!\" //  ", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c1942
    #define WPP_ANNOTATE_USBPNP_c1942 WPP_ANNOTATE_USBPNP_c1942_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c1942 WPP_ANNOTATE_USBPNP_c1942_FINAL("TMF:", "USBPNP.c", "USBPNP_c1942", L"{", L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c1946_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 111 \"%0 CONFIG Failed NTSTATUS = 0x%10!x!...\" //  ", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c1946_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 111 \"%0 CONFIG Failed NTSTATUS = 0x%10!x!...\" //  ", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c1946
    #define WPP_ANNOTATE_USBPNP_c1946 WPP_ANNOTATE_USBPNP_c1946_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemLong -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c1946 WPP_ANNOTATE_USBPNP_c1946_FINAL("TMF:", "USBPNP.c", "USBPNP_c1946", L"{", L"ntStatus, ItemLong -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c1951_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 112 \"%0 CONFIG Purb NTSTATUS_SUCCESS\n\" //  ", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c1951_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 112 \"%0 CONFIG Purb NTSTATUS_SUCCESS\n\" //  ", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c1951
    #define WPP_ANNOTATE_USBPNP_c1951 WPP_ANNOTATE_USBPNP_c1951_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c1951 WPP_ANNOTATE_USBPNP_c1951_FINAL("TMF:", "USBPNP.c", "USBPNP_c1951", L"{", L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c1955_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 113 \"%0 CONFIG URB Failed NTSTATUS = 0x%10!x!...\n\" //  ", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c1955_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 113 \"%0 CONFIG URB Failed NTSTATUS = 0x%10!x!...\n\" //  ", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c1955
    #define WPP_ANNOTATE_USBPNP_c1955 WPP_ANNOTATE_USBPNP_c1955_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemLong -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c1955 WPP_ANNOTATE_USBPNP_c1955_FINAL("TMF:", "USBPNP.c", "USBPNP_c1955", L"{", L"pUrb->UrbSelectConfiguration.Hdr.Status, ItemLong -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c2026_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 114 \"%0---------\" //  ", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c2026_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 114 \"%0---------\" //  ", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c2026
    #define WPP_ANNOTATE_USBPNP_c2026 WPP_ANNOTATE_USBPNP_c2026_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c2026 WPP_ANNOTATE_USBPNP_c2026_FINAL("TMF:", "USBPNP.c", "USBPNP_c2026", L"{", L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c2027_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 115 \"%0PipeType 0x%10!x!\" //  ", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c2027_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 115 \"%0PipeType 0x%10!x!\" //  ", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c2027
    #define WPP_ANNOTATE_USBPNP_c2027 WPP_ANNOTATE_USBPNP_c2027_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemLong -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c2027 WPP_ANNOTATE_USBPNP_c2027_FINAL("TMF:", "USBPNP.c", "USBPNP_c2027", L"{", L"pipeInformation->PipeType, ItemLong -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c2028_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 116 \"%0EndpointAddress 0x%10!x!\" //  ", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c2028_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 116 \"%0EndpointAddress 0x%10!x!\" //  ", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c2028
    #define WPP_ANNOTATE_USBPNP_c2028 WPP_ANNOTATE_USBPNP_c2028_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemLong -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c2028 WPP_ANNOTATE_USBPNP_c2028_FINAL("TMF:", "USBPNP.c", "USBPNP_c2028", L"{", L"pipeInformation->EndpointAddress, ItemLong -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c2029_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 117 \"%0MaxPacketSize 0x%10!x!\" //  ", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c2029_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 117 \"%0MaxPacketSize 0x%10!x!\" //  ", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c2029
    #define WPP_ANNOTATE_USBPNP_c2029 WPP_ANNOTATE_USBPNP_c2029_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemLong -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c2029 WPP_ANNOTATE_USBPNP_c2029_FINAL("TMF:", "USBPNP.c", "USBPNP_c2029", L"{", L"pipeInformation->MaximumPacketSize, ItemLong -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c2030_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 118 \"%0Interval 0x%10!x!\" //  ", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c2030_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 118 \"%0Interval 0x%10!x!\" //  ", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c2030
    #define WPP_ANNOTATE_USBPNP_c2030 WPP_ANNOTATE_USBPNP_c2030_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemLong -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c2030 WPP_ANNOTATE_USBPNP_c2030_FINAL("TMF:", "USBPNP.c", "USBPNP_c2030", L"{", L"pipeInformation->Interval, ItemLong -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c2031_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 119 \"%0Handle %10!p!\" //  ", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c2031_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 119 \"%0Handle %10!p!\" //  ", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c2031
    #define WPP_ANNOTATE_USBPNP_c2031 WPP_ANNOTATE_USBPNP_c2031_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemPtr -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c2031 WPP_ANNOTATE_USBPNP_c2031_FINAL("TMF:", "USBPNP.c", "USBPNP_c2031", L"{", L"pipeInformation->PipeHandle, ItemPtr -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c2042_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 120 \"%0<%10!s!> _SelectInterfaces: no mem - if\" //   FLAG=QCUSB_DBG_MASK_CONTROL LEVEL=QCUSB_DBG_LEVEL_CRITICAL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c2042_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 120 \"%0<%10!s!> _SelectInterfaces: no mem - if\" //   FLAG=QCUSB_DBG_MASK_CONTROL LEVEL=QCUSB_DBG_LEVEL_CRITICAL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c2042
    #define WPP_ANNOTATE_USBPNP_c2042 WPP_ANNOTATE_USBPNP_c2042_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c2042 WPP_ANNOTATE_USBPNP_c2042_FINAL("TMF:", "USBPNP.c", "USBPNP_c2042", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c2067_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 121 \"%0\n   ============ Loaded ==========\" //  ", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c2067_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 121 \"%0\n   ============ Loaded ==========\" //  ", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c2067
    #define WPP_ANNOTATE_USBPNP_c2067 WPP_ANNOTATE_USBPNP_c2067_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c2067 WPP_ANNOTATE_USBPNP_c2067_FINAL("TMF:", "USBPNP.c", "USBPNP_c2067", L"{", L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c2068_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 122 \"%0   | Device Type: CDC(%10!02X!)       |\" //  ", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c2068_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 122 \"%0   | Device Type: CDC(%10!02X!)       |\" //  ", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c2068
    #define WPP_ANNOTATE_USBPNP_c2068 WPP_ANNOTATE_USBPNP_c2068_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemLong -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c2068 WPP_ANNOTATE_USBPNP_c2068_FINAL("TMF:", "USBPNP.c", "USBPNP_c2068", L"{", L"pDevExt->DataInterface, ItemLong -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c2069_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 123 \"%0   |   Version: %10!-10s!      |\" //  ", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c2069_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 123 \"%0   |   Version: %10!-10s!      |\" //  ", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c2069
    #define WPP_ANNOTATE_USBPNP_c2069 WPP_ANNOTATE_USBPNP_c2069_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c2069 WPP_ANNOTATE_USBPNP_c2069_FINAL("TMF:", "USBPNP.c", "USBPNP_c2069", L"{", L"gVendorConfig.DriverVersion, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c2070_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 124 \"%0   |   Device:  %10!-10s!      |\" //  ", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c2070_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 124 \"%0   |   Device:  %10!-10s!      |\" //  ", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c2070
    #define WPP_ANNOTATE_USBPNP_c2070 WPP_ANNOTATE_USBPNP_c2070_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c2070 WPP_ANNOTATE_USBPNP_c2070_FINAL("TMF:", "USBPNP.c", "USBPNP_c2070", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c2071_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 125 \"%0   |   IF: CT%10!02d!-CC%11!02d!-DA%12!02d!       |\" //  ", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c2071_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 125 \"%0   |   IF: CT%10!02d!-CC%11!02d!-DA%12!02d!       |\" //  ", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c2071
    #define WPP_ANNOTATE_USBPNP_c2071 WPP_ANNOTATE_USBPNP_c2071_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemLong -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemLong -- 12" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c2071 WPP_ANNOTATE_USBPNP_c2071_FINAL("TMF:", "USBPNP.c", "USBPNP_c2071", L"{", L"pDevExt->ControlInterface, ItemLong -- 10" , L"pDevExt->usCommClassInterface, ItemLong -- 11" , L"pDevExt->DataInterface, ItemLong -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c2073_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 126 \"%0   |   EP(0x%10!x!, 0x%11!x!, 0x%12!x!) HS 0x%13!x!  ATTR : 0x%14!x! |\" //  ", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c2073_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 126 \"%0   |   EP(0x%10!x!, 0x%11!x!, 0x%12!x!) HS 0x%13!x!  ATTR : 0x%14!x! |\" //  ", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c2073
    #define WPP_ANNOTATE_USBPNP_c2073 WPP_ANNOTATE_USBPNP_c2073_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemLong -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemLong -- 12" , L"Arg, ItemLong -- 13" , L"Arg, ItemLong -- 14" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c2073 WPP_ANNOTATE_USBPNP_c2073_FINAL("TMF:", "USBPNP.c", "USBPNP_c2073", L"{", L"pDevExt->Interface[pDevExt->DataInterface]                              ->Pipes[pDevExt->BulkPipeInput].EndpointAddress, ItemLong -- 10" , L"pDevExt->Interface[pDevExt->DataInterface]                              ->Pipes[pDevExt->BulkPipeOutput].EndpointAddress, ItemLong -- 11" , L"pDevExt->Interface[pDevExt->usCommClassInterface]                              ->Pipes[pDevExt->InterruptPipe].EndpointAddress, ItemLong -- 12" , L"pDevExt->HighSpeedUsbOk, ItemLong -- 13" , L"pDevExt->bmAttributes, ItemLong -- 14" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c2081_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 127 \"%0Driver Version %10!s!\" //  ", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c2081_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 127 \"%0Driver Version %10!s!\" //  ", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c2081
    #define WPP_ANNOTATE_USBPNP_c2081 WPP_ANNOTATE_USBPNP_c2081_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c2081 WPP_ANNOTATE_USBPNP_c2081_FINAL("TMF:", "USBPNP.c", "USBPNP_c2081", L"{", L"'4.0.4.9', ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c2082_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 128 \"%0   |============================|\" //  ", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c2082_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 128 \"%0   |============================|\" //  ", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c2082
    #define WPP_ANNOTATE_USBPNP_c2082 WPP_ANNOTATE_USBPNP_c2082_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c2082 WPP_ANNOTATE_USBPNP_c2082_FINAL("TMF:", "USBPNP.c", "USBPNP_c2082", L"{", L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c2090_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 129 \"%0\n   ============== Loaded ===========\" //  ", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c2090_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 129 \"%0\n   ============== Loaded ===========\" //  ", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c2090
    #define WPP_ANNOTATE_USBPNP_c2090 WPP_ANNOTATE_USBPNP_c2090_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c2090 WPP_ANNOTATE_USBPNP_c2090_FINAL("TMF:", "USBPNP.c", "USBPNP_c2090", L"{", L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c2091_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 130 \"%0   | DeviceType: NET0(%10!02X!)          |\" //  ", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c2091_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 130 \"%0   | DeviceType: NET0(%10!02X!)          |\" //  ", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c2091
    #define WPP_ANNOTATE_USBPNP_c2091 WPP_ANNOTATE_USBPNP_c2091_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemLong -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c2091 WPP_ANNOTATE_USBPNP_c2091_FINAL("TMF:", "USBPNP.c", "USBPNP_c2091", L"{", L"pDevExt->DataInterface, ItemLong -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c2092_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 131 \"%0   |   Version: %10!-10s!         |\" //  ", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c2092_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 131 \"%0   |   Version: %10!-10s!         |\" //  ", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c2092
    #define WPP_ANNOTATE_USBPNP_c2092 WPP_ANNOTATE_USBPNP_c2092_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c2092 WPP_ANNOTATE_USBPNP_c2092_FINAL("TMF:", "USBPNP.c", "USBPNP_c2092", L"{", L"gVendorConfig.DriverVersion, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c2093_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 132 \"%0   |   Device:  %10!-10s!         |\" //  ", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c2093_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 132 \"%0   |   Device:  %10!-10s!         |\" //  ", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c2093
    #define WPP_ANNOTATE_USBPNP_c2093 WPP_ANNOTATE_USBPNP_c2093_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c2093 WPP_ANNOTATE_USBPNP_c2093_FINAL("TMF:", "USBPNP.c", "USBPNP_c2093", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c2094_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 133 \"%0   |   IF: CT%10!02d!-CC%11!02d!-DA%12!02d!          |\" //  ", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c2094_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 133 \"%0   |   IF: CT%10!02d!-CC%11!02d!-DA%12!02d!          |\" //  ", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c2094
    #define WPP_ANNOTATE_USBPNP_c2094 WPP_ANNOTATE_USBPNP_c2094_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemLong -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemLong -- 12" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c2094 WPP_ANNOTATE_USBPNP_c2094_FINAL("TMF:", "USBPNP.c", "USBPNP_c2094", L"{", L"pDevExt->ControlInterface, ItemLong -- 10" , L"pDevExt->usCommClassInterface, ItemLong -- 11" , L"pDevExt->DataInterface, ItemLong -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c2096_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 134 \"%0   |   EP(0x%10!x!, 0x%11!x!) HS 0x%12!x!  ATTR : 0x%13!x! |\" //  ", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c2096_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 134 \"%0   |   EP(0x%10!x!, 0x%11!x!) HS 0x%12!x!  ATTR : 0x%13!x! |\" //  ", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c2096
    #define WPP_ANNOTATE_USBPNP_c2096 WPP_ANNOTATE_USBPNP_c2096_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemLong -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemLong -- 12" , L"Arg, ItemLong -- 13" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c2096 WPP_ANNOTATE_USBPNP_c2096_FINAL("TMF:", "USBPNP.c", "USBPNP_c2096", L"{", L"pDevExt->Interface[pDevExt->DataInterface]                              ->Pipes[pDevExt->BulkPipeInput].EndpointAddress, ItemLong -- 10" , L"pDevExt->Interface[pDevExt->DataInterface]                              ->Pipes[pDevExt->BulkPipeOutput].EndpointAddress, ItemLong -- 11" , L"pDevExt->HighSpeedUsbOk, ItemLong -- 12" , L"pDevExt->bmAttributes, ItemLong -- 13" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c2102_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 135 \"%0Driver Version %10!s!\" //  ", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c2102_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 135 \"%0Driver Version %10!s!\" //  ", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c2102
    #define WPP_ANNOTATE_USBPNP_c2102 WPP_ANNOTATE_USBPNP_c2102_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c2102 WPP_ANNOTATE_USBPNP_c2102_FINAL("TMF:", "USBPNP.c", "USBPNP_c2102", L"{", L"'4.0.4.9', ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c2103_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 136 \"%0   |===============================|\" //  ", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c2103_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 136 \"%0   |===============================|\" //  ", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c2103
    #define WPP_ANNOTATE_USBPNP_c2103 WPP_ANNOTATE_USBPNP_c2103_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c2103 WPP_ANNOTATE_USBPNP_c2103_FINAL("TMF:", "USBPNP.c", "USBPNP_c2103", L"{", L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c2112_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 137 \"%0     MaxPipeXfer: %10!u! Bytes\n\" //   FLAG=QCUSB_DBG_MASK_CONTROL LEVEL=QCUSB_DBG_LEVEL_INFO", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c2112_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 137 \"%0     MaxPipeXfer: %10!u! Bytes\n\" //   FLAG=QCUSB_DBG_MASK_CONTROL LEVEL=QCUSB_DBG_LEVEL_INFO", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c2112
    #define WPP_ANNOTATE_USBPNP_c2112 WPP_ANNOTATE_USBPNP_c2112_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemLong -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c2112 WPP_ANNOTATE_USBPNP_c2112_FINAL("TMF:", "USBPNP.c", "USBPNP_c2112", L"{", L"pDevExt->MaxPipeXferSize, ItemLong -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c2119_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 138 \"%0\n   ==============================\" //  ", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c2119_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 138 \"%0\n   ==============================\" //  ", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c2119
    #define WPP_ANNOTATE_USBPNP_c2119 WPP_ANNOTATE_USBPNP_c2119_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c2119 WPP_ANNOTATE_USBPNP_c2119_FINAL("TMF:", "USBPNP.c", "USBPNP_c2119", L"{", L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c2120_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 139 \"%0   | Modem Type: NONE(%10!02X!)       |\" //  ", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c2120_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 139 \"%0   | Modem Type: NONE(%10!02X!)       |\" //  ", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c2120
    #define WPP_ANNOTATE_USBPNP_c2120 WPP_ANNOTATE_USBPNP_c2120_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemLong -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c2120 WPP_ANNOTATE_USBPNP_c2120_FINAL("TMF:", "USBPNP.c", "USBPNP_c2120", L"{", L"pDevExt->DataInterface, ItemLong -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c2121_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 140 \"%0   |============================|\n\" //  ", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c2121_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 140 \"%0   |============================|\n\" //  ", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c2121
    #define WPP_ANNOTATE_USBPNP_c2121 WPP_ANNOTATE_USBPNP_c2121_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c2121 WPP_ANNOTATE_USBPNP_c2121_FINAL("TMF:", "USBPNP.c", "USBPNP_c2121", L"{", L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c2145_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 141 \"%0<%10!s!> failed to identify device type!\" //  ", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c2145_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 141 \"%0<%10!s!> failed to identify device type!\" //  ", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c2145
    #define WPP_ANNOTATE_USBPNP_c2145 WPP_ANNOTATE_USBPNP_c2145_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c2145 WPP_ANNOTATE_USBPNP_c2145_FINAL("TMF:", "USBPNP.c", "USBPNP_c2145", L"{", L"gDeviceName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c2187_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 142 \"%0<%10!s!> USBPNP_HandleRemoveDevice: FDO 0x%11!p!\" //   FLAG=QCUSB_DBG_MASK_CONTROL LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c2187_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 142 \"%0<%10!s!> USBPNP_HandleRemoveDevice: FDO 0x%11!p!\" //   FLAG=QCUSB_DBG_MASK_CONTROL LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c2187
    #define WPP_ANNOTATE_USBPNP_c2187 WPP_ANNOTATE_USBPNP_c2187_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemPtr -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c2187 WPP_ANNOTATE_USBPNP_c2187_FINAL("TMF:", "USBPNP.c", "USBPNP_c2187", L"{", L"pDevExt->PortName, ItemString -- 10" , L"DeviceObject, ItemPtr -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c2207_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 143 \"%0<%10!s!> USBPNP_HandleRemoveDevice: IoCallDriver 0x%11!p!\" //   FLAG=QCUSB_DBG_MASK_CONTROL LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c2207_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 143 \"%0<%10!s!> USBPNP_HandleRemoveDevice: IoCallDriver 0x%11!p!\" //   FLAG=QCUSB_DBG_MASK_CONTROL LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c2207
    #define WPP_ANNOTATE_USBPNP_c2207 WPP_ANNOTATE_USBPNP_c2207_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemPtr -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c2207 WPP_ANNOTATE_USBPNP_c2207_FINAL("TMF:", "USBPNP.c", "USBPNP_c2207", L"{", L"pDevExt->PortName, ItemString -- 10" , L"pDevExt->StackDeviceObject, ItemPtr -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c2219_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 144 \"%0<%10!s!> USBPNP_HandleRemoveDevice: IoCallDriver st 0x%11!x! \" //   FLAG=QCUSB_DBG_MASK_CONTROL LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c2219_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 144 \"%0<%10!s!> USBPNP_HandleRemoveDevice: IoCallDriver st 0x%11!x! \" //   FLAG=QCUSB_DBG_MASK_CONTROL LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c2219
    #define WPP_ANNOTATE_USBPNP_c2219 WPP_ANNOTATE_USBPNP_c2219_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c2219 WPP_ANNOTATE_USBPNP_c2219_FINAL("TMF:", "USBPNP.c", "USBPNP_c2219", L"{", L"pDevExt->PortName, ItemString -- 10" , L"ntStatus, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c2307_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 145 \"%0<%10!s!> USBPNP_InitDevExt: 0x%11!p!\" //   GFLAG=QCUSB_DBG_MASK_CONTROL GLEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c2307_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 145 \"%0<%10!s!> USBPNP_InitDevExt: 0x%11!p!\" //   GFLAG=QCUSB_DBG_MASK_CONTROL GLEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c2307
    #define WPP_ANNOTATE_USBPNP_c2307 WPP_ANNOTATE_USBPNP_c2307_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemPtr -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c2307 WPP_ANNOTATE_USBPNP_c2307_FINAL("TMF:", "USBPNP.c", "USBPNP_c2307", L"{", L"myPortName, ItemString -- 10" , L"deviceObject, ItemPtr -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c2346_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 146 \"%0<%10!s!> USBPNP_InitDevExt: NO MEM - A\" //   FLAG=QCUSB_DBG_MASK_CONTROL LEVEL=QCUSB_DBG_LEVEL_FORCE", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c2346_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 146 \"%0<%10!s!> USBPNP_InitDevExt: NO MEM - A\" //   FLAG=QCUSB_DBG_MASK_CONTROL LEVEL=QCUSB_DBG_LEVEL_FORCE", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c2346
    #define WPP_ANNOTATE_USBPNP_c2346 WPP_ANNOTATE_USBPNP_c2346_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c2346 WPP_ANNOTATE_USBPNP_c2346_FINAL("TMF:", "USBPNP.c", "USBPNP_c2346", L"{", L"myPortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c2375_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 147 \"%0<%10!s!> USBPNP_InitDevExt: NO MEM - 0\" //   FLAG=QCUSB_DBG_MASK_CONTROL LEVEL=QCUSB_DBG_LEVEL_FORCE", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c2375_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 147 \"%0<%10!s!> USBPNP_InitDevExt: NO MEM - 0\" //   FLAG=QCUSB_DBG_MASK_CONTROL LEVEL=QCUSB_DBG_LEVEL_FORCE", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c2375
    #define WPP_ANNOTATE_USBPNP_c2375 WPP_ANNOTATE_USBPNP_c2375_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c2375 WPP_ANNOTATE_USBPNP_c2375_FINAL("TMF:", "USBPNP.c", "USBPNP_c2375", L"{", L"myPortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c2403_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 148 \"%0<%10!s!> USBPNP: MWT NO MEM\" //   GFLAG=QCUSB_DBG_MASK_CONTROL GLEVEL=QCUSB_DBG_LEVEL_FORCE", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c2403_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 148 \"%0<%10!s!> USBPNP: MWT NO MEM\" //   GFLAG=QCUSB_DBG_MASK_CONTROL GLEVEL=QCUSB_DBG_LEVEL_FORCE", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c2403
    #define WPP_ANNOTATE_USBPNP_c2403 WPP_ANNOTATE_USBPNP_c2403_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c2403 WPP_ANNOTATE_USBPNP_c2403_FINAL("TMF:", "USBPNP.c", "USBPNP_c2403", L"{", L"myPortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c2970_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 149 \"%0<%10!s!> USBUTL_GetServiceRegValue: returned 0x%11!x! Value 0x%12!x!\" //   FLAG=QCUSB_DBG_MASK_CONTROL LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c2970_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 149 \"%0<%10!s!> USBUTL_GetServiceRegValue: returned 0x%11!x! Value 0x%12!x!\" //   FLAG=QCUSB_DBG_MASK_CONTROL LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c2970
    #define WPP_ANNOTATE_USBPNP_c2970 WPP_ANNOTATE_USBPNP_c2970_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemLong -- 12" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c2970 WPP_ANNOTATE_USBPNP_c2970_FINAL("TMF:", "USBPNP.c", "USBPNP_c2970", L"{", L"myPortName, ItemString -- 10" , L"ntStatus, ItemLong -- 11" , L"selectiveSuspendIdleTime, ItemLong -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c3014_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 150 \"%0<%10!s!> USBPNP_InitDevExt: exit 0x%11!x!\" //   FLAG=QCUSB_DBG_MASK_CONTROL LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c3014_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 150 \"%0<%10!s!> USBPNP_InitDevExt: exit 0x%11!x!\" //   FLAG=QCUSB_DBG_MASK_CONTROL LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c3014
    #define WPP_ANNOTATE_USBPNP_c3014 WPP_ANNOTATE_USBPNP_c3014_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c3014 WPP_ANNOTATE_USBPNP_c3014_FINAL("TMF:", "USBPNP.c", "USBPNP_c3014", L"{", L"myPortName, ItemString -- 10" , L"ntStatus, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c3036_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 151 \"%0<%10!s!> _ValidateConfigDescriptor: bad length: %11!u!B, %12!u!B\" //   FLAG=QCUSB_DBG_MASK_CONTROL LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c3036_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 151 \"%0<%10!s!> _ValidateConfigDescriptor: bad length: %11!u!B, %12!u!B\" //   FLAG=QCUSB_DBG_MASK_CONTROL LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c3036
    #define WPP_ANNOTATE_USBPNP_c3036 WPP_ANNOTATE_USBPNP_c3036_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemLong -- 12" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c3036 WPP_ANNOTATE_USBPNP_c3036_FINAL("TMF:", "USBPNP.c", "USBPNP_c3036", L"{", L"pDevExt->PortName, ItemString -- 10" , L"ConfigDesc->bLength, ItemLong -- 11" , L"ConfigDesc->wTotalLength, ItemLong -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c3048_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 152 \"%0<%10!s!> _ValidateConfigDescriptor: bad bNumInterfaces 0x%11!x!\" //   FLAG=QCUSB_DBG_MASK_CONTROL LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c3048_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 152 \"%0<%10!s!> _ValidateConfigDescriptor: bad bNumInterfaces 0x%11!x!\" //   FLAG=QCUSB_DBG_MASK_CONTROL LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c3048
    #define WPP_ANNOTATE_USBPNP_c3048 WPP_ANNOTATE_USBPNP_c3048_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c3048 WPP_ANNOTATE_USBPNP_c3048_FINAL("TMF:", "USBPNP.c", "USBPNP_c3048", L"{", L"pDevExt->PortName, ItemString -- 10" , L"ConfigDesc->bNumInterfaces, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c3060_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 153 \"%0<%10!s!> _ValidateConfigDescriptor: bad bDescriptorType 0x%11!x!\" //   FLAG=QCUSB_DBG_MASK_CONTROL LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c3060_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 153 \"%0<%10!s!> _ValidateConfigDescriptor: bad bDescriptorType 0x%11!x!\" //   FLAG=QCUSB_DBG_MASK_CONTROL LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c3060
    #define WPP_ANNOTATE_USBPNP_c3060 WPP_ANNOTATE_USBPNP_c3060_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c3060 WPP_ANNOTATE_USBPNP_c3060_FINAL("TMF:", "USBPNP.c", "USBPNP_c3060", L"{", L"pDevExt->PortName, ItemString -- 10" , L"ConfigDesc->bDescriptorType, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c3072_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 154 \"%0<%10!s!> _ValidateConfigDescriptor: bad bConfigurationValue 0x%11!x!\" //   FLAG=QCUSB_DBG_MASK_CONTROL LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c3072_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 154 \"%0<%10!s!> _ValidateConfigDescriptor: bad bConfigurationValue 0x%11!x!\" //   FLAG=QCUSB_DBG_MASK_CONTROL LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c3072
    #define WPP_ANNOTATE_USBPNP_c3072 WPP_ANNOTATE_USBPNP_c3072_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c3072 WPP_ANNOTATE_USBPNP_c3072_FINAL("TMF:", "USBPNP.c", "USBPNP_c3072", L"{", L"pDevExt->PortName, ItemString -- 10" , L"ConfigDesc->bConfigurationValue, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c3093_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 155 \"%0<%10!s!> _ValidateDeviceDescriptor: 0 bLength\" //   FLAG=QCUSB_DBG_MASK_CONTROL LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c3093_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 155 \"%0<%10!s!> _ValidateDeviceDescriptor: 0 bLength\" //   FLAG=QCUSB_DBG_MASK_CONTROL LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c3093
    #define WPP_ANNOTATE_USBPNP_c3093 WPP_ANNOTATE_USBPNP_c3093_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c3093 WPP_ANNOTATE_USBPNP_c3093_FINAL("TMF:", "USBPNP.c", "USBPNP_c3093", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c3105_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 156 \"%0<%10!s!> _ValidateDeviceDescriptor: bad bDescriptorType 0x%11!x!\" //   FLAG=QCUSB_DBG_MASK_CONTROL LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c3105_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 156 \"%0<%10!s!> _ValidateDeviceDescriptor: bad bDescriptorType 0x%11!x!\" //   FLAG=QCUSB_DBG_MASK_CONTROL LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c3105
    #define WPP_ANNOTATE_USBPNP_c3105 WPP_ANNOTATE_USBPNP_c3105_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c3105 WPP_ANNOTATE_USBPNP_c3105_FINAL("TMF:", "USBPNP.c", "USBPNP_c3105", L"{", L"pDevExt->PortName, ItemString -- 10" , L"DevDesc->bDescriptorType, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c3122_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 157 \"%0<%10!s!> _ValidateDeviceDescriptor: bad bMaxPacketSize0 0x%11!x!\" //   FLAG=QCUSB_DBG_MASK_CONTROL LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c3122_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 157 \"%0<%10!s!> _ValidateDeviceDescriptor: bad bMaxPacketSize0 0x%11!x!\" //   FLAG=QCUSB_DBG_MASK_CONTROL LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c3122
    #define WPP_ANNOTATE_USBPNP_c3122 WPP_ANNOTATE_USBPNP_c3122_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c3122 WPP_ANNOTATE_USBPNP_c3122_FINAL("TMF:", "USBPNP.c", "USBPNP_c3122", L"{", L"pDevExt->PortName, ItemString -- 10" , L"DevDesc->bMaxPacketSize0, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c3136_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 158 \"%0<%10!s!> _ValidateDeviceDescriptor: bad SS bMaxPacketSize0 0x%11!x!\" //   FLAG=QCUSB_DBG_MASK_CONTROL LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c3136_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 158 \"%0<%10!s!> _ValidateDeviceDescriptor: bad SS bMaxPacketSize0 0x%11!x!\" //   FLAG=QCUSB_DBG_MASK_CONTROL LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c3136
    #define WPP_ANNOTATE_USBPNP_c3136 WPP_ANNOTATE_USBPNP_c3136_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c3136 WPP_ANNOTATE_USBPNP_c3136_FINAL("TMF:", "USBPNP.c", "USBPNP_c3136", L"{", L"pDevExt->PortName, ItemString -- 10" , L"DevDesc->bMaxPacketSize0, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c314_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 16 \"%0WakeFromD0/1/2/3 = %10!u!, %11!u!, %12!u!, %13!u!\" //   GFLAG=QCUSB_DBG_MASK_CONTROL GLEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c314_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 16 \"%0WakeFromD0/1/2/3 = %10!u!, %11!u!, %12!u!, %13!u!\" //   GFLAG=QCUSB_DBG_MASK_CONTROL GLEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c314
    #define WPP_ANNOTATE_USBPNP_c314 WPP_ANNOTATE_USBPNP_c314_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemLong -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemLong -- 12" , L"Arg, ItemLong -- 13" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c314 WPP_ANNOTATE_USBPNP_c314_FINAL("TMF:", "USBPNP.c", "USBPNP_c314", L"{", L"deviceExtension->DeviceCapabilities.WakeFromD0, ItemLong -- 10" , L"deviceExtension->DeviceCapabilities.WakeFromD1, ItemLong -- 11" , L"deviceExtension->DeviceCapabilities.WakeFromD2, ItemLong -- 12" , L"deviceExtension->DeviceCapabilities.WakeFromD3, ItemLong -- 13" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c3150_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 159 \"%0<%10!s!> _ValidateDeviceDescriptor: bad bNumConfigurations 0x%11!x!\" //   FLAG=QCUSB_DBG_MASK_CONTROL LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c3150_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 159 \"%0<%10!s!> _ValidateDeviceDescriptor: bad bNumConfigurations 0x%11!x!\" //   FLAG=QCUSB_DBG_MASK_CONTROL LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c3150
    #define WPP_ANNOTATE_USBPNP_c3150 WPP_ANNOTATE_USBPNP_c3150_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c3150 WPP_ANNOTATE_USBPNP_c3150_FINAL("TMF:", "USBPNP.c", "USBPNP_c3150", L"{", L"pDevExt->PortName, ItemString -- 10" , L"DevDesc->bNumConfigurations, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c323_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 17 \"%0SystemWake = %10!s!\" //   GFLAG=QCUSB_DBG_MASK_CONTROL GLEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c323_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 17 \"%0SystemWake = %10!s!\" //   GFLAG=QCUSB_DBG_MASK_CONTROL GLEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c323
    #define WPP_ANNOTATE_USBPNP_c323 WPP_ANNOTATE_USBPNP_c323_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c323 WPP_ANNOTATE_USBPNP_c323_FINAL("TMF:", "USBPNP.c", "USBPNP_c323", L"{", L"QCUSB_StringForSysState(deviceExtension->DeviceCapabilities.SystemWake), ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c331_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 18 \"%0DeviceWake = %10!s!\" //   GFLAG=QCUSB_DBG_MASK_CONTROL GLEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c331_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 18 \"%0DeviceWake = %10!s!\" //   GFLAG=QCUSB_DBG_MASK_CONTROL GLEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c331
    #define WPP_ANNOTATE_USBPNP_c331 WPP_ANNOTATE_USBPNP_c331_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c331 WPP_ANNOTATE_USBPNP_c331_FINAL("TMF:", "USBPNP.c", "USBPNP_c331", L"{", L"QCUSB_StringForDevState(deviceExtension->DeviceCapabilities.DeviceWake), ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c343_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 19 \"%0 Device State Map: sysstate %10!s! = devstate %11!s!\" //   GFLAG=QCUSB_DBG_MASK_CONTROL GLEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c343_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 19 \"%0 Device State Map: sysstate %10!s! = devstate %11!s!\" //   GFLAG=QCUSB_DBG_MASK_CONTROL GLEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c343
    #define WPP_ANNOTATE_USBPNP_c343 WPP_ANNOTATE_USBPNP_c343_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemString -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c343 WPP_ANNOTATE_USBPNP_c343_FINAL("TMF:", "USBPNP.c", "USBPNP_c343", L"{", L"QCUSB_StringForSysState(i), ItemString -- 10" , L"QCUSB_StringForDevState(deviceExtension->DeviceCapabilities.DeviceState[i]), ItemString -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c355_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 20 \"%0D1-D3 Latency = %10!u!, %11!u!, %12!u! (x 100us)\" //   GFLAG=QCUSB_DBG_MASK_CONTROL GLEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c355_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 20 \"%0D1-D3 Latency = %10!u!, %11!u!, %12!u! (x 100us)\" //   GFLAG=QCUSB_DBG_MASK_CONTROL GLEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c355
    #define WPP_ANNOTATE_USBPNP_c355 WPP_ANNOTATE_USBPNP_c355_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemLong -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemLong -- 12" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c355 WPP_ANNOTATE_USBPNP_c355_FINAL("TMF:", "USBPNP.c", "USBPNP_c355", L"{", L"deviceExtension->DeviceCapabilities.D1Latency, ItemLong -- 10" , L"deviceExtension->DeviceCapabilities.D2Latency, ItemLong -- 11" , L"deviceExtension->DeviceCapabilities.D3Latency, ItemLong -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c362_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 21 \"%0DeviceCapabilities: PowerDownLevel = %10!s! (PM %11!d!)\" //   GFLAG=QCUSB_DBG_MASK_CONTROL GLEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c362_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 21 \"%0DeviceCapabilities: PowerDownLevel = %10!s! (PM %11!d!)\" //   GFLAG=QCUSB_DBG_MASK_CONTROL GLEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c362
    #define WPP_ANNOTATE_USBPNP_c362 WPP_ANNOTATE_USBPNP_c362_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c362 WPP_ANNOTATE_USBPNP_c362_FINAL("TMF:", "USBPNP.c", "USBPNP_c362", L"{", L"QCUSB_StringForDevState(deviceExtension->PowerDownLevel), ItemString -- 10" , L"bPowerManagement, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c458_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 22 \"%0<%10!s!> -->_GetStringDescriptor DO 0x%11!p! idx %12!d!\" //   FLAG=QCUSB_DBG_MASK_CONTROL LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c458_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 22 \"%0<%10!s!> -->_GetStringDescriptor DO 0x%11!p! idx %12!d!\" //   FLAG=QCUSB_DBG_MASK_CONTROL LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c458
    #define WPP_ANNOTATE_USBPNP_c458 WPP_ANNOTATE_USBPNP_c458_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemPtr -- 11" , L"Arg, ItemLong -- 12" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c458 WPP_ANNOTATE_USBPNP_c458_FINAL("TMF:", "USBPNP.c", "USBPNP_c458", L"{", L"pDevExt->PortName, ItemString -- 10" , L"DeviceObject, ItemPtr -- 11" , L"Index, ItemLong -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c467_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 23 \"%0<%10!s!> <--_GetStringDescriptor: index is NULL\" //   FLAG=QCUSB_DBG_MASK_CONTROL LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c467_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 23 \"%0<%10!s!> <--_GetStringDescriptor: index is NULL\" //   FLAG=QCUSB_DBG_MASK_CONTROL LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c467
    #define WPP_ANNOTATE_USBPNP_c467 WPP_ANNOTATE_USBPNP_c467_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c467 WPP_ANNOTATE_USBPNP_c467_FINAL("TMF:", "USBPNP.c", "USBPNP_c467", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c533_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 24 \"%0<%10!s!> _GetStringDescriptor DO 0x%11!p! failure NTS 0x%12!x!\" //   FLAG=QCUSB_DBG_MASK_CONTROL LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c533_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 24 \"%0<%10!s!> _GetStringDescriptor DO 0x%11!p! failure NTS 0x%12!x!\" //   FLAG=QCUSB_DBG_MASK_CONTROL LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c533
    #define WPP_ANNOTATE_USBPNP_c533 WPP_ANNOTATE_USBPNP_c533_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemPtr -- 11" , L"Arg, ItemLong -- 12" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c533 WPP_ANNOTATE_USBPNP_c533_FINAL("TMF:", "USBPNP.c", "USBPNP_c533", L"{", L"pDevExt->PortName, ItemString -- 10" , L"DeviceObject, ItemPtr -- 11" , L"ntStatus, ItemLong -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c544_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 25 \"%0<%10!s!> _GetStringDescriptor DO 0x%11!p! NTS 0x%12!x! (%13!d!B)\" //   FLAG=QCUSB_DBG_MASK_CONTROL LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c544_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 25 \"%0<%10!s!> _GetStringDescriptor DO 0x%11!p! NTS 0x%12!x! (%13!d!B)\" //   FLAG=QCUSB_DBG_MASK_CONTROL LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c544
    #define WPP_ANNOTATE_USBPNP_c544 WPP_ANNOTATE_USBPNP_c544_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemPtr -- 11" , L"Arg, ItemLong -- 12" , L"Arg, ItemLong -- 13" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c544 WPP_ANNOTATE_USBPNP_c544_FINAL("TMF:", "USBPNP.c", "USBPNP_c544", L"{", L"pDevExt->PortName, ItemString -- 10" , L"DeviceObject, ItemPtr -- 11" , L"ntStatus, ItemLong -- 12" , L"pSerNum->bLength, ItemLong -- 13" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c610_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 26 \"%0<%10!s!> <--QDBPNP_GetDeviceSerialNumber: no SN found\" //   FLAG=QCUSB_DBG_MASK_CONTROL LEVEL=QCUSB_DBG_LEVEL_TRACE", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c610_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 26 \"%0<%10!s!> <--QDBPNP_GetDeviceSerialNumber: no SN found\" //   FLAG=QCUSB_DBG_MASK_CONTROL LEVEL=QCUSB_DBG_LEVEL_TRACE", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c610
    #define WPP_ANNOTATE_USBPNP_c610 WPP_ANNOTATE_USBPNP_c610_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c610 WPP_ANNOTATE_USBPNP_c610_FINAL("TMF:", "USBPNP.c", "USBPNP_c610", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c621_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 27 \"%0<%10!s!> _GetDeviceSerialNumber: strLen %11!d!\" //   FLAG=QCUSB_DBG_MASK_CONTROL LEVEL=QCUSB_DBG_LEVEL_TRACE", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c621_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 27 \"%0<%10!s!> _GetDeviceSerialNumber: strLen %11!d!\" //   FLAG=QCUSB_DBG_MASK_CONTROL LEVEL=QCUSB_DBG_LEVEL_TRACE", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c621
    #define WPP_ANNOTATE_USBPNP_c621 WPP_ANNOTATE_USBPNP_c621_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c621 WPP_ANNOTATE_USBPNP_c621_FINAL("TMF:", "USBPNP.c", "USBPNP_c621", L"{", L"pDevExt->PortName, ItemString -- 10" , L"strLen, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c640_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 28 \"%0<%10!s!> QDBPNP_GetDeviceSerialNumber: reg access failure 0x%11!x!\" //   FLAG=QCUSB_DBG_MASK_CONTROL LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c640_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 28 \"%0<%10!s!> QDBPNP_GetDeviceSerialNumber: reg access failure 0x%11!x!\" //   FLAG=QCUSB_DBG_MASK_CONTROL LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c640
    #define WPP_ANNOTATE_USBPNP_c640 WPP_ANNOTATE_USBPNP_c640_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c640 WPP_ANNOTATE_USBPNP_c640_FINAL("TMF:", "USBPNP.c", "USBPNP_c640", L"{", L"pDevExt->PortName, ItemString -- 10" , L"ntStatus, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c684_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 29 \"%0<%10!s!> --> _SetFunctionProtocolnter 0x%11!x!\" //   FLAG=QCUSB_DBG_MASK_CONTROL LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c684_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 29 \"%0<%10!s!> --> _SetFunctionProtocolnter 0x%11!x!\" //   FLAG=QCUSB_DBG_MASK_CONTROL LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c684
    #define WPP_ANNOTATE_USBPNP_c684 WPP_ANNOTATE_USBPNP_c684_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c684 WPP_ANNOTATE_USBPNP_c684_FINAL("TMF:", "USBPNP.c", "USBPNP_c684", L"{", L"pDevExt->PortName, ItemString -- 10" , L"ProtocolCode, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c700_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 30 \"%0<%10!s!> <-- _SetFunctionProtocolnter: failed to open registry 0x%11!x!\" //   FLAG=QCUSB_DBG_MASK_CONTROL LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c700_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 30 \"%0<%10!s!> <-- _SetFunctionProtocolnter: failed to open registry 0x%11!x!\" //   FLAG=QCUSB_DBG_MASK_CONTROL LEVEL=QCUSB_DBG_LEVEL_ERROR", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c700
    #define WPP_ANNOTATE_USBPNP_c700 WPP_ANNOTATE_USBPNP_c700_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c700 WPP_ANNOTATE_USBPNP_c700_FINAL("TMF:", "USBPNP.c", "USBPNP_c700", L"{", L"pDevExt->PortName, ItemString -- 10" , L"ntStatus, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c721_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 31 \"%0<%10!s!> <-- _SetFunctionProtocolnter 0x%11!x! ST 0x%12!x!\" //   FLAG=QCUSB_DBG_MASK_CONTROL LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c721_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 31 \"%0<%10!s!> <-- _SetFunctionProtocolnter 0x%11!x! ST 0x%12!x!\" //   FLAG=QCUSB_DBG_MASK_CONTROL LEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c721
    #define WPP_ANNOTATE_USBPNP_c721 WPP_ANNOTATE_USBPNP_c721_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemLong -- 12" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c721 WPP_ANNOTATE_USBPNP_c721_FINAL("TMF:", "USBPNP.c", "USBPNP_c721", L"{", L"pDevExt->PortName, ItemString -- 10" , L"ProtocolCode, ItemLong -- 11" , L"ntStatus, ItemLong -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c95_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 10 \"%0<%10!s!> AddDevice: reg access failure.\" //   GFLAG=QCUSB_DBG_MASK_CONTROL GLEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c95_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 10 \"%0<%10!s!> AddDevice: reg access failure.\" //   GFLAG=QCUSB_DBG_MASK_CONTROL GLEVEL=QCUSB_DBG_LEVEL_DETAIL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c95
    #define WPP_ANNOTATE_USBPNP_c95 WPP_ANNOTATE_USBPNP_c95_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c95 WPP_ANNOTATE_USBPNP_c95_FINAL("TMF:", "USBPNP.c", "USBPNP_c95", L"{", L"gDeviceName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c963_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 32 \"%0<%10!s!> Vendor Config Info ------ \" //  ", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c963_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 32 \"%0<%10!s!> Vendor Config Info ------ \" //  ", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c963
    #define WPP_ANNOTATE_USBPNP_c963 WPP_ANNOTATE_USBPNP_c963_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c963 WPP_ANNOTATE_USBPNP_c963_FINAL("TMF:", "USBPNP.c", "USBPNP_c963", L"{", L"gDeviceName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c964_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 33 \"%0    ContinueOnOverflow:  0x%10!x!\" //  ", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c964_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 33 \"%0    ContinueOnOverflow:  0x%10!x!\" //  ", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c964
    #define WPP_ANNOTATE_USBPNP_c964 WPP_ANNOTATE_USBPNP_c964_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemLong -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c964 WPP_ANNOTATE_USBPNP_c964_FINAL("TMF:", "USBPNP.c", "USBPNP_c964", L"{", L"gVendorConfig.ContinueOnOverflow, ItemLong -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c965_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 34 \"%0    ContinueOnDataError: 0x%10!x!\" //  ", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c965_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 34 \"%0    ContinueOnDataError: 0x%10!x!\" //  ", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c965
    #define WPP_ANNOTATE_USBPNP_c965 WPP_ANNOTATE_USBPNP_c965_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemLong -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c965 WPP_ANNOTATE_USBPNP_c965_FINAL("TMF:", "USBPNP.c", "USBPNP_c965", L"{", L"gVendorConfig.ContinueOnDataError, ItemLong -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c966_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 35 \"%0    Use1600ByteInPkt:    0x%10!x!\" //  ", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c966_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 35 \"%0    Use1600ByteInPkt:    0x%10!x!\" //  ", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c966
    #define WPP_ANNOTATE_USBPNP_c966 WPP_ANNOTATE_USBPNP_c966_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemLong -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c966 WPP_ANNOTATE_USBPNP_c966_FINAL("TMF:", "USBPNP.c", "USBPNP_c966", L"{", L"gVendorConfig.Use1600ByteInPkt, ItemLong -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c967_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 36 \"%0    Use2048ByteInPkt:    0x%10!x!\" //  ", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c967_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 36 \"%0    Use2048ByteInPkt:    0x%10!x!\" //  ", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c967
    #define WPP_ANNOTATE_USBPNP_c967 WPP_ANNOTATE_USBPNP_c967_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemLong -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c967 WPP_ANNOTATE_USBPNP_c967_FINAL("TMF:", "USBPNP.c", "USBPNP_c967", L"{", L"gVendorConfig.Use2048ByteInPkt, ItemLong -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c968_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 37 \"%0    Use4096ByteInPkt:    0x%10!x!\" //  ", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c968_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 37 \"%0    Use4096ByteInPkt:    0x%10!x!\" //  ", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c968
    #define WPP_ANNOTATE_USBPNP_c968 WPP_ANNOTATE_USBPNP_c968_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemLong -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c968 WPP_ANNOTATE_USBPNP_c968_FINAL("TMF:", "USBPNP.c", "USBPNP_c968", L"{", L"gVendorConfig.Use4096ByteInPkt, ItemLong -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c969_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 38 \"%0    NoTimeoutOnCtlReq:   0x%10!x!\" //  ", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c969_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 38 \"%0    NoTimeoutOnCtlReq:   0x%10!x!\" //  ", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c969
    #define WPP_ANNOTATE_USBPNP_c969 WPP_ANNOTATE_USBPNP_c969_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemLong -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c969 WPP_ANNOTATE_USBPNP_c969_FINAL("TMF:", "USBPNP.c", "USBPNP_c969", L"{", L"gVendorConfig.NoTimeoutOnCtlReq, ItemLong -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c970_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 39 \"%0    EnableLogging:       0x%10!x!\" //  ", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c970_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 39 \"%0    EnableLogging:       0x%10!x!\" //  ", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c970
    #define WPP_ANNOTATE_USBPNP_c970 WPP_ANNOTATE_USBPNP_c970_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemLong -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c970 WPP_ANNOTATE_USBPNP_c970_FINAL("TMF:", "USBPNP.c", "USBPNP_c970", L"{", L"gVendorConfig.EnableLogging, ItemLong -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c971_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 40 \"%0    UseMultiReads        0x%10!x!\" //  ", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c971_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 40 \"%0    UseMultiReads        0x%10!x!\" //  ", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c971
    #define WPP_ANNOTATE_USBPNP_c971 WPP_ANNOTATE_USBPNP_c971_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemLong -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c971 WPP_ANNOTATE_USBPNP_c971_FINAL("TMF:", "USBPNP.c", "USBPNP_c971", L"{", L"gVendorConfig.UseMultiReads, ItemLong -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c972_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 41 \"%0    UseMultiWrites       0x%10!x!\" //  ", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c972_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 41 \"%0    UseMultiWrites       0x%10!x!\" //  ", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c972
    #define WPP_ANNOTATE_USBPNP_c972 WPP_ANNOTATE_USBPNP_c972_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemLong -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c972 WPP_ANNOTATE_USBPNP_c972_FINAL("TMF:", "USBPNP.c", "USBPNP_c972", L"{", L"gVendorConfig.UseMultiWrites, ItemLong -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c973_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 42 \"%0    MinInPktSize:        %10!ld!\" //  ", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c973_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 42 \"%0    MinInPktSize:        %10!ld!\" //  ", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c973
    #define WPP_ANNOTATE_USBPNP_c973 WPP_ANNOTATE_USBPNP_c973_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemLong -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c973 WPP_ANNOTATE_USBPNP_c973_FINAL("TMF:", "USBPNP.c", "USBPNP_c973", L"{", L"gVendorConfig.MinInPktSize, ItemLong -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c974_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 43 \"%0    MaxPipeXferSize      %10!ld!\" //  ", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c974_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 43 \"%0    MaxPipeXferSize      %10!ld!\" //  ", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c974
    #define WPP_ANNOTATE_USBPNP_c974 WPP_ANNOTATE_USBPNP_c974_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemLong -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c974 WPP_ANNOTATE_USBPNP_c974_FINAL("TMF:", "USBPNP.c", "USBPNP_c974", L"{", L"gVendorConfig.MaxPipeXferSize, ItemLong -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c975_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 44 \"%0    NumOfRetriesOnError: %10!ld!\" //  ", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c975_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 44 \"%0    NumOfRetriesOnError: %10!ld!\" //  ", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c975
    #define WPP_ANNOTATE_USBPNP_c975 WPP_ANNOTATE_USBPNP_c975_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemLong -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c975 WPP_ANNOTATE_USBPNP_c975_FINAL("TMF:", "USBPNP.c", "USBPNP_c975", L"{", L"gVendorConfig.NumOfRetriesOnError, ItemLong -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c976_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 45 \"%0    NumberOfL2Buffers:   %10!ld!\" //  ", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c976_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 45 \"%0    NumberOfL2Buffers:   %10!ld!\" //  ", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c976
    #define WPP_ANNOTATE_USBPNP_c976 WPP_ANNOTATE_USBPNP_c976_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemLong -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c976 WPP_ANNOTATE_USBPNP_c976_FINAL("TMF:", "USBPNP.c", "USBPNP_c976", L"{", L"gVendorConfig.NumberOfL2Buffers, ItemLong -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c977_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 46 \"%0    DebugMask:           0x%10!x!\" //  ", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c977_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 46 \"%0    DebugMask:           0x%10!x!\" //  ", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c977
    #define WPP_ANNOTATE_USBPNP_c977 WPP_ANNOTATE_USBPNP_c977_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemLong -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c977 WPP_ANNOTATE_USBPNP_c977_FINAL("TMF:", "USBPNP.c", "USBPNP_c977", L"{", L"gVendorConfig.DebugMask, ItemLong -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c978_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 47 \"%0    DebugLevel:          %10!ld!\" //  ", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c978_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 47 \"%0    DebugLevel:          %10!ld!\" //  ", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c978
    #define WPP_ANNOTATE_USBPNP_c978 WPP_ANNOTATE_USBPNP_c978_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemLong -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c978 WPP_ANNOTATE_USBPNP_c978_FINAL("TMF:", "USBPNP.c", "USBPNP_c978", L"{", L"gVendorConfig.DebugLevel, ItemLong -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c979_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 48 \"%0    ThreadPriority       %10!ld!\" //  ", __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c979_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 48 \"%0    ThreadPriority       %10!ld!\" //  ", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c979
    #define WPP_ANNOTATE_USBPNP_c979 WPP_ANNOTATE_USBPNP_c979_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemLong -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c979 WPP_ANNOTATE_USBPNP_c979_FINAL("TMF:", "USBPNP.c", "USBPNP_c979", L"{", L"gVendorConfig.ThreadPriority, ItemLong -- 10" , L"}")
#endif
# define WPP_ANNOTATE(x) WPP_ANNOTATE_ ## x,

#else
# define WPP_ANNOTATE(x)
#endif

#define WPP_LOCAL_TraceGuids WPP_bc05bf340f313678a8a7ed34964dd1ef_Traceguids

#if 1
extern const __declspec(selectany) GUID WPP_LOCAL_TraceGuids[] = { {0xbc05bf34,0x0f31,0x3678,{0xa8,0xa7,0xed,0x34,0x96,0x4d,0xd1,0xef}}, };
#endif

#ifndef WPP_ALREADY_INCLUDED

#if !defined(WPP_TRACE_OPTIONS)
enum {WPP_TRACE_OPTIONS = TRACE_MESSAGE_SEQUENCE   | TRACE_MESSAGE_GUID
                        | TRACE_MESSAGE_SYSTEMINFO | TRACE_MESSAGE_TIMESTAMP };
#endif

#if !defined(WPP_LOGPAIR)
# define WPP_LOGPAIR(_Size, _Addr)     (_Addr),((SIZE_T)(_Size)),
#endif

#define WPP_LOGTYPEVAL(_Type, _Value) WPP_LOGPAIR(sizeof(_Type), &(_Value))
#define WPP_LOGTYPEPTR(_Value)        WPP_LOGPAIR(sizeof(*(_Value)), (_Value))

// Marshalling macros.

#if !defined(WPP_LOGASTR)
# if !defined(WPP_CHECK_FOR_NULL_STRING)
#  define WPP_LOGASTR(_value)  WPP_LOGPAIR(strlen(_value) + 1, _value )
# else
#  define WPP_LOGASTR(_value)  WPP_LOGPAIR( (_value)?strlen(_value) + 1:5, (_value)?(_value):"NULL" )
# endif
#endif

#if !defined(WPP_LOGWSTR)
# if !defined(WPP_CHECK_FOR_NULL_STRING)
#  define WPP_LOGWSTR(_value)  WPP_LOGPAIR( (wcslen(_value)+1) * sizeof(WCHAR), _value)
# else
#  define WPP_LOGWSTR(_value)  WPP_LOGPAIR( ((_value)?wcslen(_value) + 1:5) * sizeof(WCHAR), (_value)?(_value):L"NULL" )
# endif
#endif

#if !defined(WPP_LOGPGUID)
# define WPP_LOGPGUID(_value) WPP_LOGPAIR( sizeof(GUID), (_value) )
#endif


#if !defined(WPP_LOGPSID)
# if !defined(WPP_CHECK_FOR_NULL_STRING)
# define WPP_LOGPSID(_value)  WPP_LOGPAIR( WPP_GetLengthSid(_value), (_value) )
# else
# define WPP_LOGPSID(_value)  WPP_LOGPAIR( (_value)? (WPP_IsValidSid(_value)? \
                                                                        WPP_GetLengthSid(_value):5):5, \
                                                                        (_value)? (WPP_IsValidSid(_value)?\
                                                                        (_value):"NULL"):"NULL")
#endif
#endif

#if !defined(WPP_LOGCSTR)
# define WPP_LOGCSTR(_x) \
    WPP_LOGPAIR( sizeof((_x).Length), &(_x).Length ) WPP_LOGPAIR( (_x).Length, (_x).Buffer )
#endif

#if !defined(WPP_LOGUSTR)
# define WPP_LOGUSTR(_x) \
    WPP_LOGPAIR( sizeof((_x).Length), &(_x).Length ) WPP_LOGPAIR( (_x).Length, (_x).Buffer )
#endif

#if !defined(WPP_LOGPUSTR)
#if !defined(WPP_CHECK_FOR_NULL_STRING)
# define WPP_LOGPUSTR(_x) WPP_LOGUSTR(*(_x))
#else
# define WPP_LOGPUSTR(_x) WPP_LOGPAIR( sizeof(USHORT), (_x)?&(_x)->Length:L"\x08" ) \
                          WPP_LOGPAIR( (_x)?(_x)->Length:0x08, (_x)?(_x)->Buffer:L"NULL" )
#endif
#endif

#if !defined(WPP_LOGPCSTR)
#if !defined(WPP_CHECK_FOR_NULL_STRING)
# define WPP_LOGPCSTR(_x) WPP_LOGCSTR(*(_x))
#else
# define WPP_LOGPCSTR(_x) WPP_LOGPAIR( sizeof(USHORT), (_x)?&(_x)->Length:L"\x04" ) \
                          WPP_LOGPAIR( (_x)?(_x)->Length:0x04, (_x)?(_x)->Buffer:"NULL" )
#endif
#endif

#if !defined(WPP_LOGSTDSTR)
#define WPP_LOGSTDSTR(_value)  WPP_LOGPAIR( (_value).size()+1, (_value).c_str() )
#endif

#endif  //  #ifndef WPP_ALREADY_INCLUDED

#if !defined(WPP_ENABLE_FLAG_BIT)
#define WPP_ENABLE_FLAG_BIT(flag) (WPP_CB[((flag) >> 16)].Control).Flags[( (0xFFFF & ((flag)-1) ) / 32)] & (1 << ( ((flag)-1) & 31 )) 
#endif

#ifndef WPP_SF__def
#       define WPP_SF__def
WPP_INLINE void WPP_SF_(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id,  0); }
#endif  // #ifndef WPP_SF__def


//
// Generate the WPP_RECORDER_SP_ function    2
//
#ifndef WPP_RECORDER_SF__def
#       define WPP_RECORDER_SF__def
WPP_INLINE
VOID
WPP_RECORDER_SF_(
    PVOID    AutoLogContext,
    UCHAR    level,
    ULONG    flags,
    USHORT   id,
    LPCGUID  traceGuid
    
    )
{
    if (WPP_ENABLE_FLAG_BIT(flags) && 
       (WPP_CONTROL(flags).Level >= level)) {
        WPP_TRACE( WPP_CONTROL(flags).Logger,
                   WPP_TRACE_OPTIONS,
                   (LPGUID)traceGuid,
                   id,
                    0);

    }
    
    WPP_RECORDER( AutoLogContext, level, flags, (LPGUID) traceGuid, id,  0);
}
#endif  // #ifndef WPP_RECORDER_SF__def


#ifndef WPP_SF_D_def
#       define WPP_SF_D_def
WPP_INLINE void WPP_SF_D(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, unsigned int _a1)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGTYPEVAL(unsigned int,_a1)  0); }
#endif  // #ifndef WPP_SF_D_def


//
// Generate the WPP_RECORDER_SP_D function    2
//
#ifndef WPP_RECORDER_SF_D_def
#       define WPP_RECORDER_SF_D_def
WPP_INLINE
VOID
WPP_RECORDER_SF_D(
    PVOID    AutoLogContext,
    UCHAR    level,
    ULONG    flags,
    USHORT   id,
    LPCGUID  traceGuid
    , unsigned int _a1
    )
{
    if (WPP_ENABLE_FLAG_BIT(flags) && 
       (WPP_CONTROL(flags).Level >= level)) {
        WPP_TRACE( WPP_CONTROL(flags).Logger,
                   WPP_TRACE_OPTIONS,
                   (LPGUID)traceGuid,
                   id,
                   WPP_LOGTYPEVAL(unsigned int,_a1)  0);

    }
    
    WPP_RECORDER( AutoLogContext, level, flags, (LPGUID) traceGuid, id, WPP_LOGTYPEVAL(unsigned int,_a1)  0);
}
#endif  // #ifndef WPP_RECORDER_SF_D_def


#ifndef WPP_SF_DDD_def
#       define WPP_SF_DDD_def
WPP_INLINE void WPP_SF_DDD(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, unsigned int _a1, unsigned int _a2, unsigned int _a3)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGTYPEVAL(unsigned int,_a1) WPP_LOGTYPEVAL(unsigned int,_a2) WPP_LOGTYPEVAL(unsigned int,_a3)  0); }
#endif  // #ifndef WPP_SF_DDD_def


//
// Generate the WPP_RECORDER_SP_DDD function    2
//
#ifndef WPP_RECORDER_SF_DDD_def
#       define WPP_RECORDER_SF_DDD_def
WPP_INLINE
VOID
WPP_RECORDER_SF_DDD(
    PVOID    AutoLogContext,
    UCHAR    level,
    ULONG    flags,
    USHORT   id,
    LPCGUID  traceGuid
    , unsigned int _a1, unsigned int _a2, unsigned int _a3
    )
{
    if (WPP_ENABLE_FLAG_BIT(flags) && 
       (WPP_CONTROL(flags).Level >= level)) {
        WPP_TRACE( WPP_CONTROL(flags).Logger,
                   WPP_TRACE_OPTIONS,
                   (LPGUID)traceGuid,
                   id,
                   WPP_LOGTYPEVAL(unsigned int,_a1) WPP_LOGTYPEVAL(unsigned int,_a2) WPP_LOGTYPEVAL(unsigned int,_a3)  0);

    }
    
    WPP_RECORDER( AutoLogContext, level, flags, (LPGUID) traceGuid, id, WPP_LOGTYPEVAL(unsigned int,_a1) WPP_LOGTYPEVAL(unsigned int,_a2) WPP_LOGTYPEVAL(unsigned int,_a3)  0);
}
#endif  // #ifndef WPP_RECORDER_SF_DDD_def


#ifndef WPP_SF_DDDD_def
#       define WPP_SF_DDDD_def
WPP_INLINE void WPP_SF_DDDD(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, unsigned int _a1, unsigned int _a2, unsigned int _a3, unsigned int _a4)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGTYPEVAL(unsigned int,_a1) WPP_LOGTYPEVAL(unsigned int,_a2) WPP_LOGTYPEVAL(unsigned int,_a3) WPP_LOGTYPEVAL(unsigned int,_a4)  0); }
#endif  // #ifndef WPP_SF_DDDD_def


//
// Generate the WPP_RECORDER_SP_DDDD function    2
//
#ifndef WPP_RECORDER_SF_DDDD_def
#       define WPP_RECORDER_SF_DDDD_def
WPP_INLINE
VOID
WPP_RECORDER_SF_DDDD(
    PVOID    AutoLogContext,
    UCHAR    level,
    ULONG    flags,
    USHORT   id,
    LPCGUID  traceGuid
    , unsigned int _a1, unsigned int _a2, unsigned int _a3, unsigned int _a4
    )
{
    if (WPP_ENABLE_FLAG_BIT(flags) && 
       (WPP_CONTROL(flags).Level >= level)) {
        WPP_TRACE( WPP_CONTROL(flags).Logger,
                   WPP_TRACE_OPTIONS,
                   (LPGUID)traceGuid,
                   id,
                   WPP_LOGTYPEVAL(unsigned int,_a1) WPP_LOGTYPEVAL(unsigned int,_a2) WPP_LOGTYPEVAL(unsigned int,_a3) WPP_LOGTYPEVAL(unsigned int,_a4)  0);

    }
    
    WPP_RECORDER( AutoLogContext, level, flags, (LPGUID) traceGuid, id, WPP_LOGTYPEVAL(unsigned int,_a1) WPP_LOGTYPEVAL(unsigned int,_a2) WPP_LOGTYPEVAL(unsigned int,_a3) WPP_LOGTYPEVAL(unsigned int,_a4)  0);
}
#endif  // #ifndef WPP_RECORDER_SF_DDDD_def


#ifndef WPP_SF_DDDDD_def
#       define WPP_SF_DDDDD_def
WPP_INLINE void WPP_SF_DDDDD(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, unsigned int _a1, unsigned int _a2, unsigned int _a3, unsigned int _a4, unsigned int _a5)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGTYPEVAL(unsigned int,_a1) WPP_LOGTYPEVAL(unsigned int,_a2) WPP_LOGTYPEVAL(unsigned int,_a3) WPP_LOGTYPEVAL(unsigned int,_a4) WPP_LOGTYPEVAL(unsigned int,_a5)  0); }
#endif  // #ifndef WPP_SF_DDDDD_def


//
// Generate the WPP_RECORDER_SP_DDDDD function    2
//
#ifndef WPP_RECORDER_SF_DDDDD_def
#       define WPP_RECORDER_SF_DDDDD_def
WPP_INLINE
VOID
WPP_RECORDER_SF_DDDDD(
    PVOID    AutoLogContext,
    UCHAR    level,
    ULONG    flags,
    USHORT   id,
    LPCGUID  traceGuid
    , unsigned int _a1, unsigned int _a2, unsigned int _a3, unsigned int _a4, unsigned int _a5
    )
{
    if (WPP_ENABLE_FLAG_BIT(flags) && 
       (WPP_CONTROL(flags).Level >= level)) {
        WPP_TRACE( WPP_CONTROL(flags).Logger,
                   WPP_TRACE_OPTIONS,
                   (LPGUID)traceGuid,
                   id,
                   WPP_LOGTYPEVAL(unsigned int,_a1) WPP_LOGTYPEVAL(unsigned int,_a2) WPP_LOGTYPEVAL(unsigned int,_a3) WPP_LOGTYPEVAL(unsigned int,_a4) WPP_LOGTYPEVAL(unsigned int,_a5)  0);

    }
    
    WPP_RECORDER( AutoLogContext, level, flags, (LPGUID) traceGuid, id, WPP_LOGTYPEVAL(unsigned int,_a1) WPP_LOGTYPEVAL(unsigned int,_a2) WPP_LOGTYPEVAL(unsigned int,_a3) WPP_LOGTYPEVAL(unsigned int,_a4) WPP_LOGTYPEVAL(unsigned int,_a5)  0);
}
#endif  // #ifndef WPP_RECORDER_SF_DDDDD_def


#ifndef WPP_SF_d_def
#       define WPP_SF_d_def
WPP_INLINE void WPP_SF_d(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, signed int _a1)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGTYPEVAL(signed int,_a1)  0); }
#endif  // #ifndef WPP_SF_d_def


//
// Generate the WPP_RECORDER_SP_d function    2
//
#ifndef WPP_RECORDER_SF_d_def
#       define WPP_RECORDER_SF_d_def
WPP_INLINE
VOID
WPP_RECORDER_SF_d(
    PVOID    AutoLogContext,
    UCHAR    level,
    ULONG    flags,
    USHORT   id,
    LPCGUID  traceGuid
    , signed int _a1
    )
{
    if (WPP_ENABLE_FLAG_BIT(flags) && 
       (WPP_CONTROL(flags).Level >= level)) {
        WPP_TRACE( WPP_CONTROL(flags).Logger,
                   WPP_TRACE_OPTIONS,
                   (LPGUID)traceGuid,
                   id,
                   WPP_LOGTYPEVAL(signed int,_a1)  0);

    }
    
    WPP_RECORDER( AutoLogContext, level, flags, (LPGUID) traceGuid, id, WPP_LOGTYPEVAL(signed int,_a1)  0);
}
#endif  // #ifndef WPP_RECORDER_SF_d_def


#ifndef WPP_SF_dD_def
#       define WPP_SF_dD_def
WPP_INLINE void WPP_SF_dD(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, signed int _a1, unsigned int _a2)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGTYPEVAL(signed int,_a1) WPP_LOGTYPEVAL(unsigned int,_a2)  0); }
#endif  // #ifndef WPP_SF_dD_def


//
// Generate the WPP_RECORDER_SP_dD function    2
//
#ifndef WPP_RECORDER_SF_dD_def
#       define WPP_RECORDER_SF_dD_def
WPP_INLINE
VOID
WPP_RECORDER_SF_dD(
    PVOID    AutoLogContext,
    UCHAR    level,
    ULONG    flags,
    USHORT   id,
    LPCGUID  traceGuid
    , signed int _a1, unsigned int _a2
    )
{
    if (WPP_ENABLE_FLAG_BIT(flags) && 
       (WPP_CONTROL(flags).Level >= level)) {
        WPP_TRACE( WPP_CONTROL(flags).Logger,
                   WPP_TRACE_OPTIONS,
                   (LPGUID)traceGuid,
                   id,
                   WPP_LOGTYPEVAL(signed int,_a1) WPP_LOGTYPEVAL(unsigned int,_a2)  0);

    }
    
    WPP_RECORDER( AutoLogContext, level, flags, (LPGUID) traceGuid, id, WPP_LOGTYPEVAL(signed int,_a1) WPP_LOGTYPEVAL(unsigned int,_a2)  0);
}
#endif  // #ifndef WPP_RECORDER_SF_dD_def


#ifndef WPP_SF_ddd_def
#       define WPP_SF_ddd_def
WPP_INLINE void WPP_SF_ddd(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, signed int _a1, signed int _a2, signed int _a3)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGTYPEVAL(signed int,_a1) WPP_LOGTYPEVAL(signed int,_a2) WPP_LOGTYPEVAL(signed int,_a3)  0); }
#endif  // #ifndef WPP_SF_ddd_def


//
// Generate the WPP_RECORDER_SP_ddd function    2
//
#ifndef WPP_RECORDER_SF_ddd_def
#       define WPP_RECORDER_SF_ddd_def
WPP_INLINE
VOID
WPP_RECORDER_SF_ddd(
    PVOID    AutoLogContext,
    UCHAR    level,
    ULONG    flags,
    USHORT   id,
    LPCGUID  traceGuid
    , signed int _a1, signed int _a2, signed int _a3
    )
{
    if (WPP_ENABLE_FLAG_BIT(flags) && 
       (WPP_CONTROL(flags).Level >= level)) {
        WPP_TRACE( WPP_CONTROL(flags).Logger,
                   WPP_TRACE_OPTIONS,
                   (LPGUID)traceGuid,
                   id,
                   WPP_LOGTYPEVAL(signed int,_a1) WPP_LOGTYPEVAL(signed int,_a2) WPP_LOGTYPEVAL(signed int,_a3)  0);

    }
    
    WPP_RECORDER( AutoLogContext, level, flags, (LPGUID) traceGuid, id, WPP_LOGTYPEVAL(signed int,_a1) WPP_LOGTYPEVAL(signed int,_a2) WPP_LOGTYPEVAL(signed int,_a3)  0);
}
#endif  // #ifndef WPP_RECORDER_SF_ddd_def


#ifndef WPP_SF_l_def
#       define WPP_SF_l_def
WPP_INLINE void WPP_SF_l(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, signed long _a1)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGTYPEVAL(signed long,_a1)  0); }
#endif  // #ifndef WPP_SF_l_def


//
// Generate the WPP_RECORDER_SP_l function    2
//
#ifndef WPP_RECORDER_SF_l_def
#       define WPP_RECORDER_SF_l_def
WPP_INLINE
VOID
WPP_RECORDER_SF_l(
    PVOID    AutoLogContext,
    UCHAR    level,
    ULONG    flags,
    USHORT   id,
    LPCGUID  traceGuid
    , signed long _a1
    )
{
    if (WPP_ENABLE_FLAG_BIT(flags) && 
       (WPP_CONTROL(flags).Level >= level)) {
        WPP_TRACE( WPP_CONTROL(flags).Logger,
                   WPP_TRACE_OPTIONS,
                   (LPGUID)traceGuid,
                   id,
                   WPP_LOGTYPEVAL(signed long,_a1)  0);

    }
    
    WPP_RECORDER( AutoLogContext, level, flags, (LPGUID) traceGuid, id, WPP_LOGTYPEVAL(signed long,_a1)  0);
}
#endif  // #ifndef WPP_RECORDER_SF_l_def


#ifndef WPP_SF_q_def
#       define WPP_SF_q_def
WPP_INLINE void WPP_SF_q(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, const void* _a1)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGTYPEVAL(const void*,_a1)  0); }
#endif  // #ifndef WPP_SF_q_def


//
// Generate the WPP_RECORDER_SP_q function    2
//
#ifndef WPP_RECORDER_SF_q_def
#       define WPP_RECORDER_SF_q_def
WPP_INLINE
VOID
WPP_RECORDER_SF_q(
    PVOID    AutoLogContext,
    UCHAR    level,
    ULONG    flags,
    USHORT   id,
    LPCGUID  traceGuid
    , const void* _a1
    )
{
    if (WPP_ENABLE_FLAG_BIT(flags) && 
       (WPP_CONTROL(flags).Level >= level)) {
        WPP_TRACE( WPP_CONTROL(flags).Logger,
                   WPP_TRACE_OPTIONS,
                   (LPGUID)traceGuid,
                   id,
                   WPP_LOGTYPEVAL(const void*,_a1)  0);

    }
    
    WPP_RECORDER( AutoLogContext, level, flags, (LPGUID) traceGuid, id, WPP_LOGTYPEVAL(const void*,_a1)  0);
}
#endif  // #ifndef WPP_RECORDER_SF_q_def


#ifndef WPP_SF_qD_def
#       define WPP_SF_qD_def
WPP_INLINE void WPP_SF_qD(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, const void* _a1, unsigned int _a2)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGTYPEVAL(const void*,_a1) WPP_LOGTYPEVAL(unsigned int,_a2)  0); }
#endif  // #ifndef WPP_SF_qD_def


//
// Generate the WPP_RECORDER_SP_qD function    2
//
#ifndef WPP_RECORDER_SF_qD_def
#       define WPP_RECORDER_SF_qD_def
WPP_INLINE
VOID
WPP_RECORDER_SF_qD(
    PVOID    AutoLogContext,
    UCHAR    level,
    ULONG    flags,
    USHORT   id,
    LPCGUID  traceGuid
    , const void* _a1, unsigned int _a2
    )
{
    if (WPP_ENABLE_FLAG_BIT(flags) && 
       (WPP_CONTROL(flags).Level >= level)) {
        WPP_TRACE( WPP_CONTROL(flags).Logger,
                   WPP_TRACE_OPTIONS,
                   (LPGUID)traceGuid,
                   id,
                   WPP_LOGTYPEVAL(const void*,_a1) WPP_LOGTYPEVAL(unsigned int,_a2)  0);

    }
    
    WPP_RECORDER( AutoLogContext, level, flags, (LPGUID) traceGuid, id, WPP_LOGTYPEVAL(const void*,_a1) WPP_LOGTYPEVAL(unsigned int,_a2)  0);
}
#endif  // #ifndef WPP_RECORDER_SF_qD_def


#ifndef WPP_SF_s_def
#       define WPP_SF_s_def
WPP_INLINE void WPP_SF_s(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, const char* _a1)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGASTR(_a1)  0); }
#endif  // #ifndef WPP_SF_s_def


//
// Generate the WPP_RECORDER_SP_s function    2
//
#ifndef WPP_RECORDER_SF_s_def
#       define WPP_RECORDER_SF_s_def
WPP_INLINE
VOID
WPP_RECORDER_SF_s(
    PVOID    AutoLogContext,
    UCHAR    level,
    ULONG    flags,
    USHORT   id,
    LPCGUID  traceGuid
    , const char* _a1
    )
{
    if (WPP_ENABLE_FLAG_BIT(flags) && 
       (WPP_CONTROL(flags).Level >= level)) {
        WPP_TRACE( WPP_CONTROL(flags).Logger,
                   WPP_TRACE_OPTIONS,
                   (LPGUID)traceGuid,
                   id,
                   WPP_LOGASTR(_a1)  0);

    }
    
    WPP_RECORDER( AutoLogContext, level, flags, (LPGUID) traceGuid, id, WPP_LOGASTR(_a1)  0);
}
#endif  // #ifndef WPP_RECORDER_SF_s_def


#ifndef WPP_SF_sD_def
#       define WPP_SF_sD_def
WPP_INLINE void WPP_SF_sD(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, const char* _a1, unsigned int _a2)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(unsigned int,_a2)  0); }
#endif  // #ifndef WPP_SF_sD_def


//
// Generate the WPP_RECORDER_SP_sD function    2
//
#ifndef WPP_RECORDER_SF_sD_def
#       define WPP_RECORDER_SF_sD_def
WPP_INLINE
VOID
WPP_RECORDER_SF_sD(
    PVOID    AutoLogContext,
    UCHAR    level,
    ULONG    flags,
    USHORT   id,
    LPCGUID  traceGuid
    , const char* _a1, unsigned int _a2
    )
{
    if (WPP_ENABLE_FLAG_BIT(flags) && 
       (WPP_CONTROL(flags).Level >= level)) {
        WPP_TRACE( WPP_CONTROL(flags).Logger,
                   WPP_TRACE_OPTIONS,
                   (LPGUID)traceGuid,
                   id,
                   WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(unsigned int,_a2)  0);

    }
    
    WPP_RECORDER( AutoLogContext, level, flags, (LPGUID) traceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(unsigned int,_a2)  0);
}
#endif  // #ifndef WPP_RECORDER_SF_sD_def


#ifndef WPP_SF_sDD_def
#       define WPP_SF_sDD_def
WPP_INLINE void WPP_SF_sDD(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, const char* _a1, unsigned int _a2, unsigned int _a3)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(unsigned int,_a2) WPP_LOGTYPEVAL(unsigned int,_a3)  0); }
#endif  // #ifndef WPP_SF_sDD_def


//
// Generate the WPP_RECORDER_SP_sDD function    2
//
#ifndef WPP_RECORDER_SF_sDD_def
#       define WPP_RECORDER_SF_sDD_def
WPP_INLINE
VOID
WPP_RECORDER_SF_sDD(
    PVOID    AutoLogContext,
    UCHAR    level,
    ULONG    flags,
    USHORT   id,
    LPCGUID  traceGuid
    , const char* _a1, unsigned int _a2, unsigned int _a3
    )
{
    if (WPP_ENABLE_FLAG_BIT(flags) && 
       (WPP_CONTROL(flags).Level >= level)) {
        WPP_TRACE( WPP_CONTROL(flags).Logger,
                   WPP_TRACE_OPTIONS,
                   (LPGUID)traceGuid,
                   id,
                   WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(unsigned int,_a2) WPP_LOGTYPEVAL(unsigned int,_a3)  0);

    }
    
    WPP_RECORDER( AutoLogContext, level, flags, (LPGUID) traceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(unsigned int,_a2) WPP_LOGTYPEVAL(unsigned int,_a3)  0);
}
#endif  // #ifndef WPP_RECORDER_SF_sDD_def


#ifndef WPP_SF_sDDDD_def
#       define WPP_SF_sDDDD_def
WPP_INLINE void WPP_SF_sDDDD(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, const char* _a1, unsigned int _a2, unsigned int _a3, unsigned int _a4, unsigned int _a5)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(unsigned int,_a2) WPP_LOGTYPEVAL(unsigned int,_a3) WPP_LOGTYPEVAL(unsigned int,_a4) WPP_LOGTYPEVAL(unsigned int,_a5)  0); }
#endif  // #ifndef WPP_SF_sDDDD_def


//
// Generate the WPP_RECORDER_SP_sDDDD function    2
//
#ifndef WPP_RECORDER_SF_sDDDD_def
#       define WPP_RECORDER_SF_sDDDD_def
WPP_INLINE
VOID
WPP_RECORDER_SF_sDDDD(
    PVOID    AutoLogContext,
    UCHAR    level,
    ULONG    flags,
    USHORT   id,
    LPCGUID  traceGuid
    , const char* _a1, unsigned int _a2, unsigned int _a3, unsigned int _a4, unsigned int _a5
    )
{
    if (WPP_ENABLE_FLAG_BIT(flags) && 
       (WPP_CONTROL(flags).Level >= level)) {
        WPP_TRACE( WPP_CONTROL(flags).Logger,
                   WPP_TRACE_OPTIONS,
                   (LPGUID)traceGuid,
                   id,
                   WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(unsigned int,_a2) WPP_LOGTYPEVAL(unsigned int,_a3) WPP_LOGTYPEVAL(unsigned int,_a4) WPP_LOGTYPEVAL(unsigned int,_a5)  0);

    }
    
    WPP_RECORDER( AutoLogContext, level, flags, (LPGUID) traceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(unsigned int,_a2) WPP_LOGTYPEVAL(unsigned int,_a3) WPP_LOGTYPEVAL(unsigned int,_a4) WPP_LOGTYPEVAL(unsigned int,_a5)  0);
}
#endif  // #ifndef WPP_RECORDER_SF_sDDDD_def


#ifndef WPP_SF_sd_def
#       define WPP_SF_sd_def
WPP_INLINE void WPP_SF_sd(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, const char* _a1, signed int _a2)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(signed int,_a2)  0); }
#endif  // #ifndef WPP_SF_sd_def


//
// Generate the WPP_RECORDER_SP_sd function    2
//
#ifndef WPP_RECORDER_SF_sd_def
#       define WPP_RECORDER_SF_sd_def
WPP_INLINE
VOID
WPP_RECORDER_SF_sd(
    PVOID    AutoLogContext,
    UCHAR    level,
    ULONG    flags,
    USHORT   id,
    LPCGUID  traceGuid
    , const char* _a1, signed int _a2
    )
{
    if (WPP_ENABLE_FLAG_BIT(flags) && 
       (WPP_CONTROL(flags).Level >= level)) {
        WPP_TRACE( WPP_CONTROL(flags).Logger,
                   WPP_TRACE_OPTIONS,
                   (LPGUID)traceGuid,
                   id,
                   WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(signed int,_a2)  0);

    }
    
    WPP_RECORDER( AutoLogContext, level, flags, (LPGUID) traceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(signed int,_a2)  0);
}
#endif  // #ifndef WPP_RECORDER_SF_sd_def


#ifndef WPP_SF_sdD_def
#       define WPP_SF_sdD_def
WPP_INLINE void WPP_SF_sdD(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, const char* _a1, signed int _a2, unsigned int _a3)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(signed int,_a2) WPP_LOGTYPEVAL(unsigned int,_a3)  0); }
#endif  // #ifndef WPP_SF_sdD_def


//
// Generate the WPP_RECORDER_SP_sdD function    2
//
#ifndef WPP_RECORDER_SF_sdD_def
#       define WPP_RECORDER_SF_sdD_def
WPP_INLINE
VOID
WPP_RECORDER_SF_sdD(
    PVOID    AutoLogContext,
    UCHAR    level,
    ULONG    flags,
    USHORT   id,
    LPCGUID  traceGuid
    , const char* _a1, signed int _a2, unsigned int _a3
    )
{
    if (WPP_ENABLE_FLAG_BIT(flags) && 
       (WPP_CONTROL(flags).Level >= level)) {
        WPP_TRACE( WPP_CONTROL(flags).Logger,
                   WPP_TRACE_OPTIONS,
                   (LPGUID)traceGuid,
                   id,
                   WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(signed int,_a2) WPP_LOGTYPEVAL(unsigned int,_a3)  0);

    }
    
    WPP_RECORDER( AutoLogContext, level, flags, (LPGUID) traceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(signed int,_a2) WPP_LOGTYPEVAL(unsigned int,_a3)  0);
}
#endif  // #ifndef WPP_RECORDER_SF_sdD_def


#ifndef WPP_SF_sddqq_def
#       define WPP_SF_sddqq_def
WPP_INLINE void WPP_SF_sddqq(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, const char* _a1, signed int _a2, signed int _a3, const void* _a4, const void* _a5)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(signed int,_a2) WPP_LOGTYPEVAL(signed int,_a3) WPP_LOGTYPEVAL(const void*,_a4) WPP_LOGTYPEVAL(const void*,_a5)  0); }
#endif  // #ifndef WPP_SF_sddqq_def


//
// Generate the WPP_RECORDER_SP_sddqq function    2
//
#ifndef WPP_RECORDER_SF_sddqq_def
#       define WPP_RECORDER_SF_sddqq_def
WPP_INLINE
VOID
WPP_RECORDER_SF_sddqq(
    PVOID    AutoLogContext,
    UCHAR    level,
    ULONG    flags,
    USHORT   id,
    LPCGUID  traceGuid
    , const char* _a1, signed int _a2, signed int _a3, const void* _a4, const void* _a5
    )
{
    if (WPP_ENABLE_FLAG_BIT(flags) && 
       (WPP_CONTROL(flags).Level >= level)) {
        WPP_TRACE( WPP_CONTROL(flags).Logger,
                   WPP_TRACE_OPTIONS,
                   (LPGUID)traceGuid,
                   id,
                   WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(signed int,_a2) WPP_LOGTYPEVAL(signed int,_a3) WPP_LOGTYPEVAL(const void*,_a4) WPP_LOGTYPEVAL(const void*,_a5)  0);

    }
    
    WPP_RECORDER( AutoLogContext, level, flags, (LPGUID) traceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(signed int,_a2) WPP_LOGTYPEVAL(signed int,_a3) WPP_LOGTYPEVAL(const void*,_a4) WPP_LOGTYPEVAL(const void*,_a5)  0);
}
#endif  // #ifndef WPP_RECORDER_SF_sddqq_def


#ifndef WPP_SF_sdqq_def
#       define WPP_SF_sdqq_def
WPP_INLINE void WPP_SF_sdqq(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, const char* _a1, signed int _a2, const void* _a3, const void* _a4)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(signed int,_a2) WPP_LOGTYPEVAL(const void*,_a3) WPP_LOGTYPEVAL(const void*,_a4)  0); }
#endif  // #ifndef WPP_SF_sdqq_def


//
// Generate the WPP_RECORDER_SP_sdqq function    2
//
#ifndef WPP_RECORDER_SF_sdqq_def
#       define WPP_RECORDER_SF_sdqq_def
WPP_INLINE
VOID
WPP_RECORDER_SF_sdqq(
    PVOID    AutoLogContext,
    UCHAR    level,
    ULONG    flags,
    USHORT   id,
    LPCGUID  traceGuid
    , const char* _a1, signed int _a2, const void* _a3, const void* _a4
    )
{
    if (WPP_ENABLE_FLAG_BIT(flags) && 
       (WPP_CONTROL(flags).Level >= level)) {
        WPP_TRACE( WPP_CONTROL(flags).Logger,
                   WPP_TRACE_OPTIONS,
                   (LPGUID)traceGuid,
                   id,
                   WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(signed int,_a2) WPP_LOGTYPEVAL(const void*,_a3) WPP_LOGTYPEVAL(const void*,_a4)  0);

    }
    
    WPP_RECORDER( AutoLogContext, level, flags, (LPGUID) traceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(signed int,_a2) WPP_LOGTYPEVAL(const void*,_a3) WPP_LOGTYPEVAL(const void*,_a4)  0);
}
#endif  // #ifndef WPP_RECORDER_SF_sdqq_def


#ifndef WPP_SF_sq_def
#       define WPP_SF_sq_def
WPP_INLINE void WPP_SF_sq(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, const char* _a1, const void* _a2)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(const void*,_a2)  0); }
#endif  // #ifndef WPP_SF_sq_def


//
// Generate the WPP_RECORDER_SP_sq function    2
//
#ifndef WPP_RECORDER_SF_sq_def
#       define WPP_RECORDER_SF_sq_def
WPP_INLINE
VOID
WPP_RECORDER_SF_sq(
    PVOID    AutoLogContext,
    UCHAR    level,
    ULONG    flags,
    USHORT   id,
    LPCGUID  traceGuid
    , const char* _a1, const void* _a2
    )
{
    if (WPP_ENABLE_FLAG_BIT(flags) && 
       (WPP_CONTROL(flags).Level >= level)) {
        WPP_TRACE( WPP_CONTROL(flags).Logger,
                   WPP_TRACE_OPTIONS,
                   (LPGUID)traceGuid,
                   id,
                   WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(const void*,_a2)  0);

    }
    
    WPP_RECORDER( AutoLogContext, level, flags, (LPGUID) traceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(const void*,_a2)  0);
}
#endif  // #ifndef WPP_RECORDER_SF_sq_def


#ifndef WPP_SF_sqD_def
#       define WPP_SF_sqD_def
WPP_INLINE void WPP_SF_sqD(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, const char* _a1, const void* _a2, unsigned int _a3)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(const void*,_a2) WPP_LOGTYPEVAL(unsigned int,_a3)  0); }
#endif  // #ifndef WPP_SF_sqD_def


//
// Generate the WPP_RECORDER_SP_sqD function    2
//
#ifndef WPP_RECORDER_SF_sqD_def
#       define WPP_RECORDER_SF_sqD_def
WPP_INLINE
VOID
WPP_RECORDER_SF_sqD(
    PVOID    AutoLogContext,
    UCHAR    level,
    ULONG    flags,
    USHORT   id,
    LPCGUID  traceGuid
    , const char* _a1, const void* _a2, unsigned int _a3
    )
{
    if (WPP_ENABLE_FLAG_BIT(flags) && 
       (WPP_CONTROL(flags).Level >= level)) {
        WPP_TRACE( WPP_CONTROL(flags).Logger,
                   WPP_TRACE_OPTIONS,
                   (LPGUID)traceGuid,
                   id,
                   WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(const void*,_a2) WPP_LOGTYPEVAL(unsigned int,_a3)  0);

    }
    
    WPP_RECORDER( AutoLogContext, level, flags, (LPGUID) traceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(const void*,_a2) WPP_LOGTYPEVAL(unsigned int,_a3)  0);
}
#endif  // #ifndef WPP_RECORDER_SF_sqD_def


#ifndef WPP_SF_sqDd_def
#       define WPP_SF_sqDd_def
WPP_INLINE void WPP_SF_sqDd(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, const char* _a1, const void* _a2, unsigned int _a3, signed int _a4)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(const void*,_a2) WPP_LOGTYPEVAL(unsigned int,_a3) WPP_LOGTYPEVAL(signed int,_a4)  0); }
#endif  // #ifndef WPP_SF_sqDd_def


//
// Generate the WPP_RECORDER_SP_sqDd function    2
//
#ifndef WPP_RECORDER_SF_sqDd_def
#       define WPP_RECORDER_SF_sqDd_def
WPP_INLINE
VOID
WPP_RECORDER_SF_sqDd(
    PVOID    AutoLogContext,
    UCHAR    level,
    ULONG    flags,
    USHORT   id,
    LPCGUID  traceGuid
    , const char* _a1, const void* _a2, unsigned int _a3, signed int _a4
    )
{
    if (WPP_ENABLE_FLAG_BIT(flags) && 
       (WPP_CONTROL(flags).Level >= level)) {
        WPP_TRACE( WPP_CONTROL(flags).Logger,
                   WPP_TRACE_OPTIONS,
                   (LPGUID)traceGuid,
                   id,
                   WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(const void*,_a2) WPP_LOGTYPEVAL(unsigned int,_a3) WPP_LOGTYPEVAL(signed int,_a4)  0);

    }
    
    WPP_RECORDER( AutoLogContext, level, flags, (LPGUID) traceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(const void*,_a2) WPP_LOGTYPEVAL(unsigned int,_a3) WPP_LOGTYPEVAL(signed int,_a4)  0);
}
#endif  // #ifndef WPP_RECORDER_SF_sqDd_def


#ifndef WPP_SF_sqd_def
#       define WPP_SF_sqd_def
WPP_INLINE void WPP_SF_sqd(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, const char* _a1, const void* _a2, signed int _a3)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(const void*,_a2) WPP_LOGTYPEVAL(signed int,_a3)  0); }
#endif  // #ifndef WPP_SF_sqd_def


//
// Generate the WPP_RECORDER_SP_sqd function    2
//
#ifndef WPP_RECORDER_SF_sqd_def
#       define WPP_RECORDER_SF_sqd_def
WPP_INLINE
VOID
WPP_RECORDER_SF_sqd(
    PVOID    AutoLogContext,
    UCHAR    level,
    ULONG    flags,
    USHORT   id,
    LPCGUID  traceGuid
    , const char* _a1, const void* _a2, signed int _a3
    )
{
    if (WPP_ENABLE_FLAG_BIT(flags) && 
       (WPP_CONTROL(flags).Level >= level)) {
        WPP_TRACE( WPP_CONTROL(flags).Logger,
                   WPP_TRACE_OPTIONS,
                   (LPGUID)traceGuid,
                   id,
                   WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(const void*,_a2) WPP_LOGTYPEVAL(signed int,_a3)  0);

    }
    
    WPP_RECORDER( AutoLogContext, level, flags, (LPGUID) traceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(const void*,_a2) WPP_LOGTYPEVAL(signed int,_a3)  0);
}
#endif  // #ifndef WPP_RECORDER_SF_sqd_def


#ifndef WPP_SF_sqq_def
#       define WPP_SF_sqq_def
WPP_INLINE void WPP_SF_sqq(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, const char* _a1, const void* _a2, const void* _a3)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(const void*,_a2) WPP_LOGTYPEVAL(const void*,_a3)  0); }
#endif  // #ifndef WPP_SF_sqq_def


//
// Generate the WPP_RECORDER_SP_sqq function    2
//
#ifndef WPP_RECORDER_SF_sqq_def
#       define WPP_RECORDER_SF_sqq_def
WPP_INLINE
VOID
WPP_RECORDER_SF_sqq(
    PVOID    AutoLogContext,
    UCHAR    level,
    ULONG    flags,
    USHORT   id,
    LPCGUID  traceGuid
    , const char* _a1, const void* _a2, const void* _a3
    )
{
    if (WPP_ENABLE_FLAG_BIT(flags) && 
       (WPP_CONTROL(flags).Level >= level)) {
        WPP_TRACE( WPP_CONTROL(flags).Logger,
                   WPP_TRACE_OPTIONS,
                   (LPGUID)traceGuid,
                   id,
                   WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(const void*,_a2) WPP_LOGTYPEVAL(const void*,_a3)  0);

    }
    
    WPP_RECORDER( AutoLogContext, level, flags, (LPGUID) traceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(const void*,_a2) WPP_LOGTYPEVAL(const void*,_a3)  0);
}
#endif  // #ifndef WPP_RECORDER_SF_sqq_def


#ifndef WPP_SF_ss_def
#       define WPP_SF_ss_def
WPP_INLINE void WPP_SF_ss(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, const char* _a1, const char* _a2)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGASTR(_a1) WPP_LOGASTR(_a2)  0); }
#endif  // #ifndef WPP_SF_ss_def


//
// Generate the WPP_RECORDER_SP_ss function    2
//
#ifndef WPP_RECORDER_SF_ss_def
#       define WPP_RECORDER_SF_ss_def
WPP_INLINE
VOID
WPP_RECORDER_SF_ss(
    PVOID    AutoLogContext,
    UCHAR    level,
    ULONG    flags,
    USHORT   id,
    LPCGUID  traceGuid
    , const char* _a1, const char* _a2
    )
{
    if (WPP_ENABLE_FLAG_BIT(flags) && 
       (WPP_CONTROL(flags).Level >= level)) {
        WPP_TRACE( WPP_CONTROL(flags).Logger,
                   WPP_TRACE_OPTIONS,
                   (LPGUID)traceGuid,
                   id,
                   WPP_LOGASTR(_a1) WPP_LOGASTR(_a2)  0);

    }
    
    WPP_RECORDER( AutoLogContext, level, flags, (LPGUID) traceGuid, id, WPP_LOGASTR(_a1) WPP_LOGASTR(_a2)  0);
}
#endif  // #ifndef WPP_RECORDER_SF_ss_def


#ifndef WPP_POST
#  define WPP_POST()
#endif

#ifndef WPP_PRE
#  define WPP_PRE()
#endif


#ifdef WPP_DEBUG
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c1126(MSG,a10,a11) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c1126) \
     ((\
       WPP_RECORDER_FILTER() ? \
        WPP_RECORDER_SF_qD(WPP_RECORDER_ARGS(), \
                             50,WPP_LOCAL_TraceGuids+0, a10, a11), \
          WPP_DEBUG((MSG,a10,a11)), \
          1:0  \
      ))\
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c1132(MSG) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c1132) \
     ((\
       WPP_RECORDER_FILTER() ? \
        WPP_RECORDER_SF_(WPP_RECORDER_ARGS(), \
                             51,WPP_LOCAL_TraceGuids+0), \
          WPP_DEBUG((MSG)), \
          1:0  \
      ))\
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c1133(MSG) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c1133) \
     ((\
       WPP_RECORDER_FILTER() ? \
        WPP_RECORDER_SF_(WPP_RECORDER_ARGS(), \
                             52,WPP_LOCAL_TraceGuids+0), \
          WPP_DEBUG((MSG)), \
          1:0  \
      ))\
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c1134(MSG,a10) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c1134) \
     ((\
       WPP_RECORDER_FILTER() ? \
        WPP_RECORDER_SF_d(WPP_RECORDER_ARGS(), \
                             53,WPP_LOCAL_TraceGuids+0, a10), \
          WPP_DEBUG((MSG,a10)), \
          1:0  \
      ))\
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c1135(MSG,a10) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c1135) \
     ((\
       WPP_RECORDER_FILTER() ? \
        WPP_RECORDER_SF_D(WPP_RECORDER_ARGS(), \
                             54,WPP_LOCAL_TraceGuids+0, a10), \
          WPP_DEBUG((MSG,a10)), \
          1:0  \
      ))\
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c1136(MSG,a10) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c1136) \
     ((\
       WPP_RECORDER_FILTER() ? \
        WPP_RECORDER_SF_D(WPP_RECORDER_ARGS(), \
                             55,WPP_LOCAL_TraceGuids+0, a10), \
          WPP_DEBUG((MSG,a10)), \
          1:0  \
      ))\
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c1137(MSG,a10) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c1137) \
     ((\
       WPP_RECORDER_FILTER() ? \
        WPP_RECORDER_SF_D(WPP_RECORDER_ARGS(), \
                             56,WPP_LOCAL_TraceGuids+0, a10), \
          WPP_DEBUG((MSG,a10)), \
          1:0  \
      ))\
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c1138(MSG,a10) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c1138) \
     ((\
       WPP_RECORDER_FILTER() ? \
        WPP_RECORDER_SF_D(WPP_RECORDER_ARGS(), \
                             57,WPP_LOCAL_TraceGuids+0, a10), \
          WPP_DEBUG((MSG,a10)), \
          1:0  \
      ))\
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c1139(MSG,a10) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c1139) \
     ((\
       WPP_RECORDER_FILTER() ? \
        WPP_RECORDER_SF_D(WPP_RECORDER_ARGS(), \
                             58,WPP_LOCAL_TraceGuids+0, a10), \
          WPP_DEBUG((MSG,a10)), \
          1:0  \
      ))\
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c1140(MSG,a10) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c1140) \
     ((\
       WPP_RECORDER_FILTER() ? \
        WPP_RECORDER_SF_D(WPP_RECORDER_ARGS(), \
                             59,WPP_LOCAL_TraceGuids+0, a10), \
          WPP_DEBUG((MSG,a10)), \
          1:0  \
      ))\
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c1141(MSG,a10) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c1141) \
     ((\
       WPP_RECORDER_FILTER() ? \
        WPP_RECORDER_SF_D(WPP_RECORDER_ARGS(), \
                             60,WPP_LOCAL_TraceGuids+0, a10), \
          WPP_DEBUG((MSG,a10)), \
          1:0  \
      ))\
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c1142(MSG,a10) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c1142) \
     ((\
       WPP_RECORDER_FILTER() ? \
        WPP_RECORDER_SF_D(WPP_RECORDER_ARGS(), \
                             61,WPP_LOCAL_TraceGuids+0, a10), \
          WPP_DEBUG((MSG,a10)), \
          1:0  \
      ))\
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c1143(MSG,a10) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c1143) \
     ((\
       WPP_RECORDER_FILTER() ? \
        WPP_RECORDER_SF_D(WPP_RECORDER_ARGS(), \
                             62,WPP_LOCAL_TraceGuids+0, a10), \
          WPP_DEBUG((MSG,a10)), \
          1:0  \
      ))\
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c1144(MSG,a10) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c1144) \
     ((\
       WPP_RECORDER_FILTER() ? \
        WPP_RECORDER_SF_D(WPP_RECORDER_ARGS(), \
                             63,WPP_LOCAL_TraceGuids+0, a10), \
          WPP_DEBUG((MSG,a10)), \
          1:0  \
      ))\
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c1145(MSG,a10) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c1145) \
     ((\
       WPP_RECORDER_FILTER() ? \
        WPP_RECORDER_SF_D(WPP_RECORDER_ARGS(), \
                             64,WPP_LOCAL_TraceGuids+0, a10), \
          WPP_DEBUG((MSG,a10)), \
          1:0  \
      ))\
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c1146(MSG,a10) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c1146) \
     ((\
       WPP_RECORDER_FILTER() ? \
        WPP_RECORDER_SF_D(WPP_RECORDER_ARGS(), \
                             65,WPP_LOCAL_TraceGuids+0, a10), \
          WPP_DEBUG((MSG,a10)), \
          1:0  \
      ))\
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c1147(MSG,a10) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c1147) \
     ((\
       WPP_RECORDER_FILTER() ? \
        WPP_RECORDER_SF_D(WPP_RECORDER_ARGS(), \
                             66,WPP_LOCAL_TraceGuids+0, a10), \
          WPP_DEBUG((MSG,a10)), \
          1:0  \
      ))\
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c1535(MSG,a10,a11) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c1535) \
     ((\
       WPP_RECORDER_FILTER() ? \
        WPP_RECORDER_SF_dD(WPP_RECORDER_ARGS(), \
                             80,WPP_LOCAL_TraceGuids+0, a10, a11), \
          WPP_DEBUG((MSG,a10,a11)), \
          1:0  \
      ))\
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c1537(MSG) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c1537) \
     ((\
       WPP_RECORDER_FILTER() ? \
        WPP_RECORDER_SF_(WPP_RECORDER_ARGS(), \
                             81,WPP_LOCAL_TraceGuids+0), \
          WPP_DEBUG((MSG)), \
          1:0  \
      ))\
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c1607(MSG,a10) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c1607) \
     ((\
       WPP_RECORDER_FILTER() ? \
        WPP_RECORDER_SF_D(WPP_RECORDER_ARGS(), \
                             82,WPP_LOCAL_TraceGuids+0, a10), \
          WPP_DEBUG((MSG,a10)), \
          1:0  \
      ))\
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c1608(MSG,a10) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c1608) \
     ((\
       WPP_RECORDER_FILTER() ? \
        WPP_RECORDER_SF_D(WPP_RECORDER_ARGS(), \
                             83,WPP_LOCAL_TraceGuids+0, a10), \
          WPP_DEBUG((MSG,a10)), \
          1:0  \
      ))\
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c1609(MSG,a10) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c1609) \
     ((\
       WPP_RECORDER_FILTER() ? \
        WPP_RECORDER_SF_D(WPP_RECORDER_ARGS(), \
                             84,WPP_LOCAL_TraceGuids+0, a10), \
          WPP_DEBUG((MSG,a10)), \
          1:0  \
      ))\
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c1610(MSG,a10) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c1610) \
     ((\
       WPP_RECORDER_FILTER() ? \
        WPP_RECORDER_SF_D(WPP_RECORDER_ARGS(), \
                             85,WPP_LOCAL_TraceGuids+0, a10), \
          WPP_DEBUG((MSG,a10)), \
          1:0  \
      ))\
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c1611(MSG,a10) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c1611) \
     ((\
       WPP_RECORDER_FILTER() ? \
        WPP_RECORDER_SF_D(WPP_RECORDER_ARGS(), \
                             86,WPP_LOCAL_TraceGuids+0, a10), \
          WPP_DEBUG((MSG,a10)), \
          1:0  \
      ))\
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c1612(MSG,a10) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c1612) \
     ((\
       WPP_RECORDER_FILTER() ? \
        WPP_RECORDER_SF_D(WPP_RECORDER_ARGS(), \
                             87,WPP_LOCAL_TraceGuids+0, a10), \
          WPP_DEBUG((MSG,a10)), \
          1:0  \
      ))\
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c1743(MSG,a10) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c1743) \
     ((\
       WPP_RECORDER_FILTER() ? \
        WPP_RECORDER_SF_d(WPP_RECORDER_ARGS(), \
                             91,WPP_LOCAL_TraceGuids+0, a10), \
          WPP_DEBUG((MSG,a10)), \
          1:0  \
      ))\
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c1744(MSG,a10) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c1744) \
     ((\
       WPP_RECORDER_FILTER() ? \
        WPP_RECORDER_SF_D(WPP_RECORDER_ARGS(), \
                             92,WPP_LOCAL_TraceGuids+0, a10), \
          WPP_DEBUG((MSG,a10)), \
          1:0  \
      ))\
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c1745(MSG,a10) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c1745) \
     ((\
       WPP_RECORDER_FILTER() ? \
        WPP_RECORDER_SF_D(WPP_RECORDER_ARGS(), \
                             93,WPP_LOCAL_TraceGuids+0, a10), \
          WPP_DEBUG((MSG,a10)), \
          1:0  \
      ))\
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c1746(MSG,a10) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c1746) \
     ((\
       WPP_RECORDER_FILTER() ? \
        WPP_RECORDER_SF_D(WPP_RECORDER_ARGS(), \
                             94,WPP_LOCAL_TraceGuids+0, a10), \
          WPP_DEBUG((MSG,a10)), \
          1:0  \
      ))\
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c1747(MSG,a10) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c1747) \
     ((\
       WPP_RECORDER_FILTER() ? \
        WPP_RECORDER_SF_D(WPP_RECORDER_ARGS(), \
                             95,WPP_LOCAL_TraceGuids+0, a10), \
          WPP_DEBUG((MSG,a10)), \
          1:0  \
      ))\
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c1748(MSG,a10) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c1748) \
     ((\
       WPP_RECORDER_FILTER() ? \
        WPP_RECORDER_SF_D(WPP_RECORDER_ARGS(), \
                             96,WPP_LOCAL_TraceGuids+0, a10), \
          WPP_DEBUG((MSG,a10)), \
          1:0  \
      ))\
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c1749(MSG,a10) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c1749) \
     ((\
       WPP_RECORDER_FILTER() ? \
        WPP_RECORDER_SF_D(WPP_RECORDER_ARGS(), \
                             97,WPP_LOCAL_TraceGuids+0, a10), \
          WPP_DEBUG((MSG,a10)), \
          1:0  \
      ))\
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c1750(MSG,a10) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c1750) \
     ((\
       WPP_RECORDER_FILTER() ? \
        WPP_RECORDER_SF_D(WPP_RECORDER_ARGS(), \
                             98,WPP_LOCAL_TraceGuids+0, a10), \
          WPP_DEBUG((MSG,a10)), \
          1:0  \
      ))\
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c1751(MSG,a10) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c1751) \
     ((\
       WPP_RECORDER_FILTER() ? \
        WPP_RECORDER_SF_D(WPP_RECORDER_ARGS(), \
                             99,WPP_LOCAL_TraceGuids+0, a10), \
          WPP_DEBUG((MSG,a10)), \
          1:0  \
      ))\
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c1867(MSG,a10) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c1867) \
     ((\
       WPP_RECORDER_FILTER() ? \
        WPP_RECORDER_SF_d(WPP_RECORDER_ARGS(), \
                             105,WPP_LOCAL_TraceGuids+0, a10), \
          WPP_DEBUG((MSG,a10)), \
          1:0  \
      ))\
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c1871(MSG,a10) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c1871) \
     ((\
       WPP_RECORDER_FILTER() ? \
        WPP_RECORDER_SF_d(WPP_RECORDER_ARGS(), \
                             106,WPP_LOCAL_TraceGuids+0, a10), \
          WPP_DEBUG((MSG,a10)), \
          1:0  \
      ))\
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c1878(MSG,a10) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c1878) \
     ((\
       WPP_RECORDER_FILTER() ? \
        WPP_RECORDER_SF_d(WPP_RECORDER_ARGS(), \
                             107,WPP_LOCAL_TraceGuids+0, a10), \
          WPP_DEBUG((MSG,a10)), \
          1:0  \
      ))\
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c1942(MSG) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c1942) \
     ((\
       WPP_RECORDER_FILTER() ? \
        WPP_RECORDER_SF_(WPP_RECORDER_ARGS(), \
                             110,WPP_LOCAL_TraceGuids+0), \
          WPP_DEBUG((MSG)), \
          1:0  \
      ))\
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c1946(MSG,a10) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c1946) \
     ((\
       WPP_RECORDER_FILTER() ? \
        WPP_RECORDER_SF_D(WPP_RECORDER_ARGS(), \
                             111,WPP_LOCAL_TraceGuids+0, a10), \
          WPP_DEBUG((MSG,a10)), \
          1:0  \
      ))\
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c1951(MSG) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c1951) \
     ((\
       WPP_RECORDER_FILTER() ? \
        WPP_RECORDER_SF_(WPP_RECORDER_ARGS(), \
                             112,WPP_LOCAL_TraceGuids+0), \
          WPP_DEBUG((MSG)), \
          1:0  \
      ))\
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c1955(MSG,a10) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c1955) \
     ((\
       WPP_RECORDER_FILTER() ? \
        WPP_RECORDER_SF_D(WPP_RECORDER_ARGS(), \
                             113,WPP_LOCAL_TraceGuids+0, a10), \
          WPP_DEBUG((MSG,a10)), \
          1:0  \
      ))\
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c2026(MSG) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c2026) \
     ((\
       WPP_RECORDER_FILTER() ? \
        WPP_RECORDER_SF_(WPP_RECORDER_ARGS(), \
                             114,WPP_LOCAL_TraceGuids+0), \
          WPP_DEBUG((MSG)), \
          1:0  \
      ))\
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c2027(MSG,a10) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c2027) \
     ((\
       WPP_RECORDER_FILTER() ? \
        WPP_RECORDER_SF_D(WPP_RECORDER_ARGS(), \
                             115,WPP_LOCAL_TraceGuids+0, a10), \
          WPP_DEBUG((MSG,a10)), \
          1:0  \
      ))\
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c2028(MSG,a10) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c2028) \
     ((\
       WPP_RECORDER_FILTER() ? \
        WPP_RECORDER_SF_D(WPP_RECORDER_ARGS(), \
                             116,WPP_LOCAL_TraceGuids+0, a10), \
          WPP_DEBUG((MSG,a10)), \
          1:0  \
      ))\
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c2029(MSG,a10) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c2029) \
     ((\
       WPP_RECORDER_FILTER() ? \
        WPP_RECORDER_SF_D(WPP_RECORDER_ARGS(), \
                             117,WPP_LOCAL_TraceGuids+0, a10), \
          WPP_DEBUG((MSG,a10)), \
          1:0  \
      ))\
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c2030(MSG,a10) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c2030) \
     ((\
       WPP_RECORDER_FILTER() ? \
        WPP_RECORDER_SF_D(WPP_RECORDER_ARGS(), \
                             118,WPP_LOCAL_TraceGuids+0, a10), \
          WPP_DEBUG((MSG,a10)), \
          1:0  \
      ))\
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c2031(MSG,a10) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c2031) \
     ((\
       WPP_RECORDER_FILTER() ? \
        WPP_RECORDER_SF_q(WPP_RECORDER_ARGS(), \
                             119,WPP_LOCAL_TraceGuids+0, a10), \
          WPP_DEBUG((MSG,a10)), \
          1:0  \
      ))\
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c2067(MSG) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c2067) \
     ((\
       WPP_RECORDER_FILTER() ? \
        WPP_RECORDER_SF_(WPP_RECORDER_ARGS(), \
                             121,WPP_LOCAL_TraceGuids+0), \
          WPP_DEBUG((MSG)), \
          1:0  \
      ))\
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c2068(MSG,a10) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c2068) \
     ((\
       WPP_RECORDER_FILTER() ? \
        WPP_RECORDER_SF_D(WPP_RECORDER_ARGS(), \
                             122,WPP_LOCAL_TraceGuids+0, a10), \
          WPP_DEBUG((MSG,a10)), \
          1:0  \
      ))\
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c2069(MSG,a10) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c2069) \
     ((\
       WPP_RECORDER_FILTER() ? \
        WPP_RECORDER_SF_s(WPP_RECORDER_ARGS(), \
                             123,WPP_LOCAL_TraceGuids+0, a10), \
          WPP_DEBUG((MSG,a10)), \
          1:0  \
      ))\
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c2070(MSG,a10) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c2070) \
     ((\
       WPP_RECORDER_FILTER() ? \
        WPP_RECORDER_SF_s(WPP_RECORDER_ARGS(), \
                             124,WPP_LOCAL_TraceGuids+0, a10), \
          WPP_DEBUG((MSG,a10)), \
          1:0  \
      ))\
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c2071(MSG,a10,a11,a12) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c2071) \
     ((\
       WPP_RECORDER_FILTER() ? \
        WPP_RECORDER_SF_ddd(WPP_RECORDER_ARGS(), \
                             125,WPP_LOCAL_TraceGuids+0, a10, a11, a12), \
          WPP_DEBUG((MSG,a10,a11,a12)), \
          1:0  \
      ))\
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c2073(MSG,a10,a11,a12,a13,a14) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c2073) \
     ((\
       WPP_RECORDER_FILTER() ? \
        WPP_RECORDER_SF_DDDDD(WPP_RECORDER_ARGS(), \
                             126,WPP_LOCAL_TraceGuids+0, a10, a11, a12, a13, a14), \
          WPP_DEBUG((MSG,a10,a11,a12,a13,a14)), \
          1:0  \
      ))\
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c2081(MSG,a10) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c2081) \
     ((\
       WPP_RECORDER_FILTER() ? \
        WPP_RECORDER_SF_s(WPP_RECORDER_ARGS(), \
                             127,WPP_LOCAL_TraceGuids+0, a10), \
          WPP_DEBUG((MSG,a10)), \
          1:0  \
      ))\
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c2082(MSG) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c2082) \
     ((\
       WPP_RECORDER_FILTER() ? \
        WPP_RECORDER_SF_(WPP_RECORDER_ARGS(), \
                             128,WPP_LOCAL_TraceGuids+0), \
          WPP_DEBUG((MSG)), \
          1:0  \
      ))\
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c2090(MSG) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c2090) \
     ((\
       WPP_RECORDER_FILTER() ? \
        WPP_RECORDER_SF_(WPP_RECORDER_ARGS(), \
                             129,WPP_LOCAL_TraceGuids+0), \
          WPP_DEBUG((MSG)), \
          1:0  \
      ))\
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c2091(MSG,a10) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c2091) \
     ((\
       WPP_RECORDER_FILTER() ? \
        WPP_RECORDER_SF_D(WPP_RECORDER_ARGS(), \
                             130,WPP_LOCAL_TraceGuids+0, a10), \
          WPP_DEBUG((MSG,a10)), \
          1:0  \
      ))\
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c2092(MSG,a10) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c2092) \
     ((\
       WPP_RECORDER_FILTER() ? \
        WPP_RECORDER_SF_s(WPP_RECORDER_ARGS(), \
                             131,WPP_LOCAL_TraceGuids+0, a10), \
          WPP_DEBUG((MSG,a10)), \
          1:0  \
      ))\
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c2093(MSG,a10) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c2093) \
     ((\
       WPP_RECORDER_FILTER() ? \
        WPP_RECORDER_SF_s(WPP_RECORDER_ARGS(), \
                             132,WPP_LOCAL_TraceGuids+0, a10), \
          WPP_DEBUG((MSG,a10)), \
          1:0  \
      ))\
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c2094(MSG,a10,a11,a12) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c2094) \
     ((\
       WPP_RECORDER_FILTER() ? \
        WPP_RECORDER_SF_ddd(WPP_RECORDER_ARGS(), \
                             133,WPP_LOCAL_TraceGuids+0, a10, a11, a12), \
          WPP_DEBUG((MSG,a10,a11,a12)), \
          1:0  \
      ))\
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c2096(MSG,a10,a11,a12,a13) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c2096) \
     ((\
       WPP_RECORDER_FILTER() ? \
        WPP_RECORDER_SF_DDDD(WPP_RECORDER_ARGS(), \
                             134,WPP_LOCAL_TraceGuids+0, a10, a11, a12, a13), \
          WPP_DEBUG((MSG,a10,a11,a12,a13)), \
          1:0  \
      ))\
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c2102(MSG,a10) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c2102) \
     ((\
       WPP_RECORDER_FILTER() ? \
        WPP_RECORDER_SF_s(WPP_RECORDER_ARGS(), \
                             135,WPP_LOCAL_TraceGuids+0, a10), \
          WPP_DEBUG((MSG,a10)), \
          1:0  \
      ))\
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c2103(MSG) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c2103) \
     ((\
       WPP_RECORDER_FILTER() ? \
        WPP_RECORDER_SF_(WPP_RECORDER_ARGS(), \
                             136,WPP_LOCAL_TraceGuids+0), \
          WPP_DEBUG((MSG)), \
          1:0  \
      ))\
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c2119(MSG) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c2119) \
     ((\
       WPP_RECORDER_FILTER() ? \
        WPP_RECORDER_SF_(WPP_RECORDER_ARGS(), \
                             138,WPP_LOCAL_TraceGuids+0), \
          WPP_DEBUG((MSG)), \
          1:0  \
      ))\
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c2120(MSG,a10) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c2120) \
     ((\
       WPP_RECORDER_FILTER() ? \
        WPP_RECORDER_SF_D(WPP_RECORDER_ARGS(), \
                             139,WPP_LOCAL_TraceGuids+0, a10), \
          WPP_DEBUG((MSG,a10)), \
          1:0  \
      ))\
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c2121(MSG) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c2121) \
     ((\
       WPP_RECORDER_FILTER() ? \
        WPP_RECORDER_SF_(WPP_RECORDER_ARGS(), \
                             140,WPP_LOCAL_TraceGuids+0), \
          WPP_DEBUG((MSG)), \
          1:0  \
      ))\
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c2145(MSG,a10) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c2145) \
     ((\
       WPP_RECORDER_FILTER() ? \
        WPP_RECORDER_SF_s(WPP_RECORDER_ARGS(), \
                             141,WPP_LOCAL_TraceGuids+0, a10), \
          WPP_DEBUG((MSG,a10)), \
          1:0  \
      ))\
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c963(MSG,a10) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c963) \
     ((\
       WPP_RECORDER_FILTER() ? \
        WPP_RECORDER_SF_s(WPP_RECORDER_ARGS(), \
                             32,WPP_LOCAL_TraceGuids+0, a10), \
          WPP_DEBUG((MSG,a10)), \
          1:0  \
      ))\
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c964(MSG,a10) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c964) \
     ((\
       WPP_RECORDER_FILTER() ? \
        WPP_RECORDER_SF_D(WPP_RECORDER_ARGS(), \
                             33,WPP_LOCAL_TraceGuids+0, a10), \
          WPP_DEBUG((MSG,a10)), \
          1:0  \
      ))\
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c965(MSG,a10) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c965) \
     ((\
       WPP_RECORDER_FILTER() ? \
        WPP_RECORDER_SF_D(WPP_RECORDER_ARGS(), \
                             34,WPP_LOCAL_TraceGuids+0, a10), \
          WPP_DEBUG((MSG,a10)), \
          1:0  \
      ))\
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c966(MSG,a10) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c966) \
     ((\
       WPP_RECORDER_FILTER() ? \
        WPP_RECORDER_SF_D(WPP_RECORDER_ARGS(), \
                             35,WPP_LOCAL_TraceGuids+0, a10), \
          WPP_DEBUG((MSG,a10)), \
          1:0  \
      ))\
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c967(MSG,a10) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c967) \
     ((\
       WPP_RECORDER_FILTER() ? \
        WPP_RECORDER_SF_D(WPP_RECORDER_ARGS(), \
                             36,WPP_LOCAL_TraceGuids+0, a10), \
          WPP_DEBUG((MSG,a10)), \
          1:0  \
      ))\
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c968(MSG,a10) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c968) \
     ((\
       WPP_RECORDER_FILTER() ? \
        WPP_RECORDER_SF_D(WPP_RECORDER_ARGS(), \
                             37,WPP_LOCAL_TraceGuids+0, a10), \
          WPP_DEBUG((MSG,a10)), \
          1:0  \
      ))\
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c969(MSG,a10) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c969) \
     ((\
       WPP_RECORDER_FILTER() ? \
        WPP_RECORDER_SF_D(WPP_RECORDER_ARGS(), \
                             38,WPP_LOCAL_TraceGuids+0, a10), \
          WPP_DEBUG((MSG,a10)), \
          1:0  \
      ))\
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c970(MSG,a10) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c970) \
     ((\
       WPP_RECORDER_FILTER() ? \
        WPP_RECORDER_SF_D(WPP_RECORDER_ARGS(), \
                             39,WPP_LOCAL_TraceGuids+0, a10), \
          WPP_DEBUG((MSG,a10)), \
          1:0  \
      ))\
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c971(MSG,a10) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c971) \
     ((\
       WPP_RECORDER_FILTER() ? \
        WPP_RECORDER_SF_D(WPP_RECORDER_ARGS(), \
                             40,WPP_LOCAL_TraceGuids+0, a10), \
          WPP_DEBUG((MSG,a10)), \
          1:0  \
      ))\
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c972(MSG,a10) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c972) \
     ((\
       WPP_RECORDER_FILTER() ? \
        WPP_RECORDER_SF_D(WPP_RECORDER_ARGS(), \
                             41,WPP_LOCAL_TraceGuids+0, a10), \
          WPP_DEBUG((MSG,a10)), \
          1:0  \
      ))\
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c973(MSG,a10) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c973) \
     ((\
       WPP_RECORDER_FILTER() ? \
        WPP_RECORDER_SF_l(WPP_RECORDER_ARGS(), \
                             42,WPP_LOCAL_TraceGuids+0, a10), \
          WPP_DEBUG((MSG,a10)), \
          1:0  \
      ))\
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c974(MSG,a10) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c974) \
     ((\
       WPP_RECORDER_FILTER() ? \
        WPP_RECORDER_SF_l(WPP_RECORDER_ARGS(), \
                             43,WPP_LOCAL_TraceGuids+0, a10), \
          WPP_DEBUG((MSG,a10)), \
          1:0  \
      ))\
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c975(MSG,a10) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c975) \
     ((\
       WPP_RECORDER_FILTER() ? \
        WPP_RECORDER_SF_l(WPP_RECORDER_ARGS(), \
                             44,WPP_LOCAL_TraceGuids+0, a10), \
          WPP_DEBUG((MSG,a10)), \
          1:0  \
      ))\
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c976(MSG,a10) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c976) \
     ((\
       WPP_RECORDER_FILTER() ? \
        WPP_RECORDER_SF_l(WPP_RECORDER_ARGS(), \
                             45,WPP_LOCAL_TraceGuids+0, a10), \
          WPP_DEBUG((MSG,a10)), \
          1:0  \
      ))\
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c977(MSG,a10) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c977) \
     ((\
       WPP_RECORDER_FILTER() ? \
        WPP_RECORDER_SF_D(WPP_RECORDER_ARGS(), \
                             46,WPP_LOCAL_TraceGuids+0, a10), \
          WPP_DEBUG((MSG,a10)), \
          1:0  \
      ))\
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c978(MSG,a10) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c978) \
     ((\
       WPP_RECORDER_FILTER() ? \
        WPP_RECORDER_SF_l(WPP_RECORDER_ARGS(), \
                             47,WPP_LOCAL_TraceGuids+0, a10), \
          WPP_DEBUG((MSG,a10)), \
          1:0  \
      ))\
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c979(MSG,a10) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c979) \
     ((\
       WPP_RECORDER_FILTER() ? \
        WPP_RECORDER_SF_l(WPP_RECORDER_ARGS(), \
                             48,WPP_LOCAL_TraceGuids+0, a10), \
          WPP_DEBUG((MSG,a10)), \
          1:0  \
      ))\
     WPP_POST()
#else
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c1126(MSG,a10,a11) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c1126) \
     ((\
       WPP_RECORDER_FILTER() ? \
        WPP_RECORDER_SF_qD(WPP_RECORDER_ARGS(), \
                             50,WPP_LOCAL_TraceGuids+0, a10, a11), 1:0\
      ))\
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c1132(MSG) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c1132) \
     ((\
       WPP_RECORDER_FILTER() ? \
        WPP_RECORDER_SF_(WPP_RECORDER_ARGS(), \
                             51,WPP_LOCAL_TraceGuids+0), 1:0\
      ))\
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c1133(MSG) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c1133) \
     ((\
       WPP_RECORDER_FILTER() ? \
        WPP_RECORDER_SF_(WPP_RECORDER_ARGS(), \
                             52,WPP_LOCAL_TraceGuids+0), 1:0\
      ))\
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c1134(MSG,a10) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c1134) \
     ((\
       WPP_RECORDER_FILTER() ? \
        WPP_RECORDER_SF_d(WPP_RECORDER_ARGS(), \
                             53,WPP_LOCAL_TraceGuids+0, a10), 1:0\
      ))\
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c1135(MSG,a10) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c1135) \
     ((\
       WPP_RECORDER_FILTER() ? \
        WPP_RECORDER_SF_D(WPP_RECORDER_ARGS(), \
                             54,WPP_LOCAL_TraceGuids+0, a10), 1:0\
      ))\
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c1136(MSG,a10) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c1136) \
     ((\
       WPP_RECORDER_FILTER() ? \
        WPP_RECORDER_SF_D(WPP_RECORDER_ARGS(), \
                             55,WPP_LOCAL_TraceGuids+0, a10), 1:0\
      ))\
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c1137(MSG,a10) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c1137) \
     ((\
       WPP_RECORDER_FILTER() ? \
        WPP_RECORDER_SF_D(WPP_RECORDER_ARGS(), \
                             56,WPP_LOCAL_TraceGuids+0, a10), 1:0\
      ))\
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c1138(MSG,a10) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c1138) \
     ((\
       WPP_RECORDER_FILTER() ? \
        WPP_RECORDER_SF_D(WPP_RECORDER_ARGS(), \
                             57,WPP_LOCAL_TraceGuids+0, a10), 1:0\
      ))\
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c1139(MSG,a10) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c1139) \
     ((\
       WPP_RECORDER_FILTER() ? \
        WPP_RECORDER_SF_D(WPP_RECORDER_ARGS(), \
                             58,WPP_LOCAL_TraceGuids+0, a10), 1:0\
      ))\
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c1140(MSG,a10) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c1140) \
     ((\
       WPP_RECORDER_FILTER() ? \
        WPP_RECORDER_SF_D(WPP_RECORDER_ARGS(), \
                             59,WPP_LOCAL_TraceGuids+0, a10), 1:0\
      ))\
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c1141(MSG,a10) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c1141) \
     ((\
       WPP_RECORDER_FILTER() ? \
        WPP_RECORDER_SF_D(WPP_RECORDER_ARGS(), \
                             60,WPP_LOCAL_TraceGuids+0, a10), 1:0\
      ))\
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c1142(MSG,a10) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c1142) \
     ((\
       WPP_RECORDER_FILTER() ? \
        WPP_RECORDER_SF_D(WPP_RECORDER_ARGS(), \
                             61,WPP_LOCAL_TraceGuids+0, a10), 1:0\
      ))\
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c1143(MSG,a10) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c1143) \
     ((\
       WPP_RECORDER_FILTER() ? \
        WPP_RECORDER_SF_D(WPP_RECORDER_ARGS(), \
                             62,WPP_LOCAL_TraceGuids+0, a10), 1:0\
      ))\
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c1144(MSG,a10) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c1144) \
     ((\
       WPP_RECORDER_FILTER() ? \
        WPP_RECORDER_SF_D(WPP_RECORDER_ARGS(), \
                             63,WPP_LOCAL_TraceGuids+0, a10), 1:0\
      ))\
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c1145(MSG,a10) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c1145) \
     ((\
       WPP_RECORDER_FILTER() ? \
        WPP_RECORDER_SF_D(WPP_RECORDER_ARGS(), \
                             64,WPP_LOCAL_TraceGuids+0, a10), 1:0\
      ))\
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c1146(MSG,a10) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c1146) \
     ((\
       WPP_RECORDER_FILTER() ? \
        WPP_RECORDER_SF_D(WPP_RECORDER_ARGS(), \
                             65,WPP_LOCAL_TraceGuids+0, a10), 1:0\
      ))\
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c1147(MSG,a10) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c1147) \
     ((\
       WPP_RECORDER_FILTER() ? \
        WPP_RECORDER_SF_D(WPP_RECORDER_ARGS(), \
                             66,WPP_LOCAL_TraceGuids+0, a10), 1:0\
      ))\
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c1535(MSG,a10,a11) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c1535) \
     ((\
       WPP_RECORDER_FILTER() ? \
        WPP_RECORDER_SF_dD(WPP_RECORDER_ARGS(), \
                             80,WPP_LOCAL_TraceGuids+0, a10, a11), 1:0\
      ))\
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c1537(MSG) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c1537) \
     ((\
       WPP_RECORDER_FILTER() ? \
        WPP_RECORDER_SF_(WPP_RECORDER_ARGS(), \
                             81,WPP_LOCAL_TraceGuids+0), 1:0\
      ))\
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c1607(MSG,a10) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c1607) \
     ((\
       WPP_RECORDER_FILTER() ? \
        WPP_RECORDER_SF_D(WPP_RECORDER_ARGS(), \
                             82,WPP_LOCAL_TraceGuids+0, a10), 1:0\
      ))\
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c1608(MSG,a10) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c1608) \
     ((\
       WPP_RECORDER_FILTER() ? \
        WPP_RECORDER_SF_D(WPP_RECORDER_ARGS(), \
                             83,WPP_LOCAL_TraceGuids+0, a10), 1:0\
      ))\
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c1609(MSG,a10) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c1609) \
     ((\
       WPP_RECORDER_FILTER() ? \
        WPP_RECORDER_SF_D(WPP_RECORDER_ARGS(), \
                             84,WPP_LOCAL_TraceGuids+0, a10), 1:0\
      ))\
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c1610(MSG,a10) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c1610) \
     ((\
       WPP_RECORDER_FILTER() ? \
        WPP_RECORDER_SF_D(WPP_RECORDER_ARGS(), \
                             85,WPP_LOCAL_TraceGuids+0, a10), 1:0\
      ))\
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c1611(MSG,a10) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c1611) \
     ((\
       WPP_RECORDER_FILTER() ? \
        WPP_RECORDER_SF_D(WPP_RECORDER_ARGS(), \
                             86,WPP_LOCAL_TraceGuids+0, a10), 1:0\
      ))\
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c1612(MSG,a10) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c1612) \
     ((\
       WPP_RECORDER_FILTER() ? \
        WPP_RECORDER_SF_D(WPP_RECORDER_ARGS(), \
                             87,WPP_LOCAL_TraceGuids+0, a10), 1:0\
      ))\
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c1743(MSG,a10) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c1743) \
     ((\
       WPP_RECORDER_FILTER() ? \
        WPP_RECORDER_SF_d(WPP_RECORDER_ARGS(), \
                             91,WPP_LOCAL_TraceGuids+0, a10), 1:0\
      ))\
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c1744(MSG,a10) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c1744) \
     ((\
       WPP_RECORDER_FILTER() ? \
        WPP_RECORDER_SF_D(WPP_RECORDER_ARGS(), \
                             92,WPP_LOCAL_TraceGuids+0, a10), 1:0\
      ))\
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c1745(MSG,a10) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c1745) \
     ((\
       WPP_RECORDER_FILTER() ? \
        WPP_RECORDER_SF_D(WPP_RECORDER_ARGS(), \
                             93,WPP_LOCAL_TraceGuids+0, a10), 1:0\
      ))\
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c1746(MSG,a10) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c1746) \
     ((\
       WPP_RECORDER_FILTER() ? \
        WPP_RECORDER_SF_D(WPP_RECORDER_ARGS(), \
                             94,WPP_LOCAL_TraceGuids+0, a10), 1:0\
      ))\
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c1747(MSG,a10) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c1747) \
     ((\
       WPP_RECORDER_FILTER() ? \
        WPP_RECORDER_SF_D(WPP_RECORDER_ARGS(), \
                             95,WPP_LOCAL_TraceGuids+0, a10), 1:0\
      ))\
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c1748(MSG,a10) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c1748) \
     ((\
       WPP_RECORDER_FILTER() ? \
        WPP_RECORDER_SF_D(WPP_RECORDER_ARGS(), \
                             96,WPP_LOCAL_TraceGuids+0, a10), 1:0\
      ))\
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c1749(MSG,a10) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c1749) \
     ((\
       WPP_RECORDER_FILTER() ? \
        WPP_RECORDER_SF_D(WPP_RECORDER_ARGS(), \
                             97,WPP_LOCAL_TraceGuids+0, a10), 1:0\
      ))\
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c1750(MSG,a10) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c1750) \
     ((\
       WPP_RECORDER_FILTER() ? \
        WPP_RECORDER_SF_D(WPP_RECORDER_ARGS(), \
                             98,WPP_LOCAL_TraceGuids+0, a10), 1:0\
      ))\
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c1751(MSG,a10) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c1751) \
     ((\
       WPP_RECORDER_FILTER() ? \
        WPP_RECORDER_SF_D(WPP_RECORDER_ARGS(), \
                             99,WPP_LOCAL_TraceGuids+0, a10), 1:0\
      ))\
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c1867(MSG,a10) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c1867) \
     ((\
       WPP_RECORDER_FILTER() ? \
        WPP_RECORDER_SF_d(WPP_RECORDER_ARGS(), \
                             105,WPP_LOCAL_TraceGuids+0, a10), 1:0\
      ))\
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c1871(MSG,a10) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c1871) \
     ((\
       WPP_RECORDER_FILTER() ? \
        WPP_RECORDER_SF_d(WPP_RECORDER_ARGS(), \
                             106,WPP_LOCAL_TraceGuids+0, a10), 1:0\
      ))\
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c1878(MSG,a10) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c1878) \
     ((\
       WPP_RECORDER_FILTER() ? \
        WPP_RECORDER_SF_d(WPP_RECORDER_ARGS(), \
                             107,WPP_LOCAL_TraceGuids+0, a10), 1:0\
      ))\
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c1942(MSG) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c1942) \
     ((\
       WPP_RECORDER_FILTER() ? \
        WPP_RECORDER_SF_(WPP_RECORDER_ARGS(), \
                             110,WPP_LOCAL_TraceGuids+0), 1:0\
      ))\
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c1946(MSG,a10) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c1946) \
     ((\
       WPP_RECORDER_FILTER() ? \
        WPP_RECORDER_SF_D(WPP_RECORDER_ARGS(), \
                             111,WPP_LOCAL_TraceGuids+0, a10), 1:0\
      ))\
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c1951(MSG) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c1951) \
     ((\
       WPP_RECORDER_FILTER() ? \
        WPP_RECORDER_SF_(WPP_RECORDER_ARGS(), \
                             112,WPP_LOCAL_TraceGuids+0), 1:0\
      ))\
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c1955(MSG,a10) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c1955) \
     ((\
       WPP_RECORDER_FILTER() ? \
        WPP_RECORDER_SF_D(WPP_RECORDER_ARGS(), \
                             113,WPP_LOCAL_TraceGuids+0, a10), 1:0\
      ))\
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c2026(MSG) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c2026) \
     ((\
       WPP_RECORDER_FILTER() ? \
        WPP_RECORDER_SF_(WPP_RECORDER_ARGS(), \
                             114,WPP_LOCAL_TraceGuids+0), 1:0\
      ))\
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c2027(MSG,a10) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c2027) \
     ((\
       WPP_RECORDER_FILTER() ? \
        WPP_RECORDER_SF_D(WPP_RECORDER_ARGS(), \
                             115,WPP_LOCAL_TraceGuids+0, a10), 1:0\
      ))\
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c2028(MSG,a10) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c2028) \
     ((\
       WPP_RECORDER_FILTER() ? \
        WPP_RECORDER_SF_D(WPP_RECORDER_ARGS(), \
                             116,WPP_LOCAL_TraceGuids+0, a10), 1:0\
      ))\
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c2029(MSG,a10) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c2029) \
     ((\
       WPP_RECORDER_FILTER() ? \
        WPP_RECORDER_SF_D(WPP_RECORDER_ARGS(), \
                             117,WPP_LOCAL_TraceGuids+0, a10), 1:0\
      ))\
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c2030(MSG,a10) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c2030) \
     ((\
       WPP_RECORDER_FILTER() ? \
        WPP_RECORDER_SF_D(WPP_RECORDER_ARGS(), \
                             118,WPP_LOCAL_TraceGuids+0, a10), 1:0\
      ))\
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c2031(MSG,a10) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c2031) \
     ((\
       WPP_RECORDER_FILTER() ? \
        WPP_RECORDER_SF_q(WPP_RECORDER_ARGS(), \
                             119,WPP_LOCAL_TraceGuids+0, a10), 1:0\
      ))\
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c2067(MSG) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c2067) \
     ((\
       WPP_RECORDER_FILTER() ? \
        WPP_RECORDER_SF_(WPP_RECORDER_ARGS(), \
                             121,WPP_LOCAL_TraceGuids+0), 1:0\
      ))\
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c2068(MSG,a10) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c2068) \
     ((\
       WPP_RECORDER_FILTER() ? \
        WPP_RECORDER_SF_D(WPP_RECORDER_ARGS(), \
                             122,WPP_LOCAL_TraceGuids+0, a10), 1:0\
      ))\
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c2069(MSG,a10) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c2069) \
     ((\
       WPP_RECORDER_FILTER() ? \
        WPP_RECORDER_SF_s(WPP_RECORDER_ARGS(), \
                             123,WPP_LOCAL_TraceGuids+0, a10), 1:0\
      ))\
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c2070(MSG,a10) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c2070) \
     ((\
       WPP_RECORDER_FILTER() ? \
        WPP_RECORDER_SF_s(WPP_RECORDER_ARGS(), \
                             124,WPP_LOCAL_TraceGuids+0, a10), 1:0\
      ))\
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c2071(MSG,a10,a11,a12) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c2071) \
     ((\
       WPP_RECORDER_FILTER() ? \
        WPP_RECORDER_SF_ddd(WPP_RECORDER_ARGS(), \
                             125,WPP_LOCAL_TraceGuids+0, a10, a11, a12), 1:0\
      ))\
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c2073(MSG,a10,a11,a12,a13,a14) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c2073) \
     ((\
       WPP_RECORDER_FILTER() ? \
        WPP_RECORDER_SF_DDDDD(WPP_RECORDER_ARGS(), \
                             126,WPP_LOCAL_TraceGuids+0, a10, a11, a12, a13, a14), 1:0\
      ))\
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c2081(MSG,a10) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c2081) \
     ((\
       WPP_RECORDER_FILTER() ? \
        WPP_RECORDER_SF_s(WPP_RECORDER_ARGS(), \
                             127,WPP_LOCAL_TraceGuids+0, a10), 1:0\
      ))\
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c2082(MSG) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c2082) \
     ((\
       WPP_RECORDER_FILTER() ? \
        WPP_RECORDER_SF_(WPP_RECORDER_ARGS(), \
                             128,WPP_LOCAL_TraceGuids+0), 1:0\
      ))\
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c2090(MSG) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c2090) \
     ((\
       WPP_RECORDER_FILTER() ? \
        WPP_RECORDER_SF_(WPP_RECORDER_ARGS(), \
                             129,WPP_LOCAL_TraceGuids+0), 1:0\
      ))\
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c2091(MSG,a10) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c2091) \
     ((\
       WPP_RECORDER_FILTER() ? \
        WPP_RECORDER_SF_D(WPP_RECORDER_ARGS(), \
                             130,WPP_LOCAL_TraceGuids+0, a10), 1:0\
      ))\
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c2092(MSG,a10) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c2092) \
     ((\
       WPP_RECORDER_FILTER() ? \
        WPP_RECORDER_SF_s(WPP_RECORDER_ARGS(), \
                             131,WPP_LOCAL_TraceGuids+0, a10), 1:0\
      ))\
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c2093(MSG,a10) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c2093) \
     ((\
       WPP_RECORDER_FILTER() ? \
        WPP_RECORDER_SF_s(WPP_RECORDER_ARGS(), \
                             132,WPP_LOCAL_TraceGuids+0, a10), 1:0\
      ))\
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c2094(MSG,a10,a11,a12) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c2094) \
     ((\
       WPP_RECORDER_FILTER() ? \
        WPP_RECORDER_SF_ddd(WPP_RECORDER_ARGS(), \
                             133,WPP_LOCAL_TraceGuids+0, a10, a11, a12), 1:0\
      ))\
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c2096(MSG,a10,a11,a12,a13) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c2096) \
     ((\
       WPP_RECORDER_FILTER() ? \
        WPP_RECORDER_SF_DDDD(WPP_RECORDER_ARGS(), \
                             134,WPP_LOCAL_TraceGuids+0, a10, a11, a12, a13), 1:0\
      ))\
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c2102(MSG,a10) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c2102) \
     ((\
       WPP_RECORDER_FILTER() ? \
        WPP_RECORDER_SF_s(WPP_RECORDER_ARGS(), \
                             135,WPP_LOCAL_TraceGuids+0, a10), 1:0\
      ))\
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c2103(MSG) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c2103) \
     ((\
       WPP_RECORDER_FILTER() ? \
        WPP_RECORDER_SF_(WPP_RECORDER_ARGS(), \
                             136,WPP_LOCAL_TraceGuids+0), 1:0\
      ))\
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c2119(MSG) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c2119) \
     ((\
       WPP_RECORDER_FILTER() ? \
        WPP_RECORDER_SF_(WPP_RECORDER_ARGS(), \
                             138,WPP_LOCAL_TraceGuids+0), 1:0\
      ))\
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c2120(MSG,a10) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c2120) \
     ((\
       WPP_RECORDER_FILTER() ? \
        WPP_RECORDER_SF_D(WPP_RECORDER_ARGS(), \
                             139,WPP_LOCAL_TraceGuids+0, a10), 1:0\
      ))\
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c2121(MSG) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c2121) \
     ((\
       WPP_RECORDER_FILTER() ? \
        WPP_RECORDER_SF_(WPP_RECORDER_ARGS(), \
                             140,WPP_LOCAL_TraceGuids+0), 1:0\
      ))\
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c2145(MSG,a10) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c2145) \
     ((\
       WPP_RECORDER_FILTER() ? \
        WPP_RECORDER_SF_s(WPP_RECORDER_ARGS(), \
                             141,WPP_LOCAL_TraceGuids+0, a10), 1:0\
      ))\
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c963(MSG,a10) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c963) \
     ((\
       WPP_RECORDER_FILTER() ? \
        WPP_RECORDER_SF_s(WPP_RECORDER_ARGS(), \
                             32,WPP_LOCAL_TraceGuids+0, a10), 1:0\
      ))\
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c964(MSG,a10) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c964) \
     ((\
       WPP_RECORDER_FILTER() ? \
        WPP_RECORDER_SF_D(WPP_RECORDER_ARGS(), \
                             33,WPP_LOCAL_TraceGuids+0, a10), 1:0\
      ))\
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c965(MSG,a10) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c965) \
     ((\
       WPP_RECORDER_FILTER() ? \
        WPP_RECORDER_SF_D(WPP_RECORDER_ARGS(), \
                             34,WPP_LOCAL_TraceGuids+0, a10), 1:0\
      ))\
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c966(MSG,a10) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c966) \
     ((\
       WPP_RECORDER_FILTER() ? \
        WPP_RECORDER_SF_D(WPP_RECORDER_ARGS(), \
                             35,WPP_LOCAL_TraceGuids+0, a10), 1:0\
      ))\
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c967(MSG,a10) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c967) \
     ((\
       WPP_RECORDER_FILTER() ? \
        WPP_RECORDER_SF_D(WPP_RECORDER_ARGS(), \
                             36,WPP_LOCAL_TraceGuids+0, a10), 1:0\
      ))\
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c968(MSG,a10) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c968) \
     ((\
       WPP_RECORDER_FILTER() ? \
        WPP_RECORDER_SF_D(WPP_RECORDER_ARGS(), \
                             37,WPP_LOCAL_TraceGuids+0, a10), 1:0\
      ))\
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c969(MSG,a10) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c969) \
     ((\
       WPP_RECORDER_FILTER() ? \
        WPP_RECORDER_SF_D(WPP_RECORDER_ARGS(), \
                             38,WPP_LOCAL_TraceGuids+0, a10), 1:0\
      ))\
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c970(MSG,a10) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c970) \
     ((\
       WPP_RECORDER_FILTER() ? \
        WPP_RECORDER_SF_D(WPP_RECORDER_ARGS(), \
                             39,WPP_LOCAL_TraceGuids+0, a10), 1:0\
      ))\
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c971(MSG,a10) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c971) \
     ((\
       WPP_RECORDER_FILTER() ? \
        WPP_RECORDER_SF_D(WPP_RECORDER_ARGS(), \
                             40,WPP_LOCAL_TraceGuids+0, a10), 1:0\
      ))\
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c972(MSG,a10) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c972) \
     ((\
       WPP_RECORDER_FILTER() ? \
        WPP_RECORDER_SF_D(WPP_RECORDER_ARGS(), \
                             41,WPP_LOCAL_TraceGuids+0, a10), 1:0\
      ))\
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c973(MSG,a10) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c973) \
     ((\
       WPP_RECORDER_FILTER() ? \
        WPP_RECORDER_SF_l(WPP_RECORDER_ARGS(), \
                             42,WPP_LOCAL_TraceGuids+0, a10), 1:0\
      ))\
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c974(MSG,a10) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c974) \
     ((\
       WPP_RECORDER_FILTER() ? \
        WPP_RECORDER_SF_l(WPP_RECORDER_ARGS(), \
                             43,WPP_LOCAL_TraceGuids+0, a10), 1:0\
      ))\
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c975(MSG,a10) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c975) \
     ((\
       WPP_RECORDER_FILTER() ? \
        WPP_RECORDER_SF_l(WPP_RECORDER_ARGS(), \
                             44,WPP_LOCAL_TraceGuids+0, a10), 1:0\
      ))\
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c976(MSG,a10) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c976) \
     ((\
       WPP_RECORDER_FILTER() ? \
        WPP_RECORDER_SF_l(WPP_RECORDER_ARGS(), \
                             45,WPP_LOCAL_TraceGuids+0, a10), 1:0\
      ))\
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c977(MSG,a10) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c977) \
     ((\
       WPP_RECORDER_FILTER() ? \
        WPP_RECORDER_SF_D(WPP_RECORDER_ARGS(), \
                             46,WPP_LOCAL_TraceGuids+0, a10), 1:0\
      ))\
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c978(MSG,a10) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c978) \
     ((\
       WPP_RECORDER_FILTER() ? \
        WPP_RECORDER_SF_l(WPP_RECORDER_ARGS(), \
                             47,WPP_LOCAL_TraceGuids+0, a10), 1:0\
      ))\
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c979(MSG,a10) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c979) \
     ((\
       WPP_RECORDER_FILTER() ? \
        WPP_RECORDER_SF_l(WPP_RECORDER_ARGS(), \
                             48,WPP_LOCAL_TraceGuids+0, a10), 1:0\
      ))\
     WPP_POST()
#endif


#ifdef WPP_DEBUG
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPNP_c1057(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPNP_c1057) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sdqq(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 49,WPP_LOCAL_TraceGuids+0 WPP_R0123 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_GFLAG_GLEVEL_POST
#  define WPP_GFLAG_GLEVEL_POST(GFLAG,GLEVEL)
#endif
#ifndef WPP_GFLAG_GLEVEL_PRE
#  define WPP_GFLAG_GLEVEL_PRE(GFLAG,GLEVEL)
#endif
#define WPP_CALL_USBPNP_c106(GFLAG, GLEVEL,  MSGARGS) \
            WPP_GFLAG_GLEVEL_PRE(GFLAG, GLEVEL) \
            WPP_ANNOTATE(USBPNP_c106) \
            (( \
                WPP_RECORDER_GFLAG_GLEVEL_FILTER(GFLAG, GLEVEL) ? \
                WPP_RECORDER_SF_sddqq(WPP_RECORDER_GFLAG_GLEVEL_ARGS(GFLAG, GLEVEL), \
                                 11,WPP_LOCAL_TraceGuids+0 WPP_R01234 MSGARGS), 1:0  \
             )) \
             WPP_GFLAG_GLEVEL_POST(GFLAG, GLEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPNP_c1158(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPNP_c1158) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 67,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPNP_c1168(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPNP_c1168) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 68,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPNP_c1177(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPNP_c1177) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sDD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 69,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPNP_c1207(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPNP_c1207) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 70,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPNP_c1217(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPNP_c1217) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 71,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPNP_c1229(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPNP_c1229) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 72,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPNP_c1240(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPNP_c1240) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 73,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPNP_c1296(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPNP_c1296) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sdD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 74,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPNP_c1311(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPNP_c1311) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 75,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPNP_c1322(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPNP_c1322) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 76,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPNP_c1336(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPNP_c1336) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 77,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_GFLAG_GLEVEL_POST
#  define WPP_GFLAG_GLEVEL_POST(GFLAG,GLEVEL)
#endif
#ifndef WPP_GFLAG_GLEVEL_PRE
#  define WPP_GFLAG_GLEVEL_PRE(GFLAG,GLEVEL)
#endif
#define WPP_CALL_USBPNP_c135(GFLAG, GLEVEL,  MSGARGS) \
            WPP_GFLAG_GLEVEL_PRE(GFLAG, GLEVEL) \
            WPP_ANNOTATE(USBPNP_c135) \
            (( \
                WPP_RECORDER_GFLAG_GLEVEL_FILTER(GFLAG, GLEVEL) ? \
                WPP_RECORDER_SF_sq(WPP_RECORDER_GFLAG_GLEVEL_ARGS(GFLAG, GLEVEL), \
                                 12,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
             )) \
             WPP_GFLAG_GLEVEL_POST(GFLAG, GLEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPNP_c1357(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPNP_c1357) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 78,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPNP_c1369(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPNP_c1369) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 79,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_GFLAG_GLEVEL_POST
#  define WPP_GFLAG_GLEVEL_POST(GFLAG,GLEVEL)
#endif
#ifndef WPP_GFLAG_GLEVEL_PRE
#  define WPP_GFLAG_GLEVEL_PRE(GFLAG,GLEVEL)
#endif
#define WPP_CALL_USBPNP_c146(GFLAG, GLEVEL,  MSGARGS) \
            WPP_GFLAG_GLEVEL_PRE(GFLAG, GLEVEL) \
            WPP_ANNOTATE(USBPNP_c146) \
            (( \
                WPP_RECORDER_GFLAG_GLEVEL_FILTER(GFLAG, GLEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_GFLAG_GLEVEL_ARGS(GFLAG, GLEVEL), \
                                 13,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
             )) \
             WPP_GFLAG_GLEVEL_POST(GFLAG, GLEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPNP_c1666(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPNP_c1666) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 88,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPNP_c1684(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPNP_c1684) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sDD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 89,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPNP_c173(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPNP_c173) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sqq(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 14,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPNP_c1738(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPNP_c1738) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sd(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 90,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPNP_c1782(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPNP_c1782) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 100,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPNP_c1799(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPNP_c1799) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sDDDD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 101,WPP_LOCAL_TraceGuids+0 WPP_R01234 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPNP_c182(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPNP_c182) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 15,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPNP_c1829(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPNP_c1829) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sDDDD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 102,WPP_LOCAL_TraceGuids+0 WPP_R01234 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPNP_c1841(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPNP_c1841) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 103,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPNP_c1857(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPNP_c1857) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 104,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPNP_c1892(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPNP_c1892) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 108,WPP_LOCAL_TraceGuids+0 WPP_R MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPNP_c1916(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPNP_c1916) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sd(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 109,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPNP_c2042(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPNP_c2042) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 120,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPNP_c2112(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPNP_c2112) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_D(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 137,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPNP_c2187(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPNP_c2187) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sq(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 142,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPNP_c2207(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPNP_c2207) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sq(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 143,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPNP_c2219(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPNP_c2219) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 144,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_GFLAG_GLEVEL_POST
#  define WPP_GFLAG_GLEVEL_POST(GFLAG,GLEVEL)
#endif
#ifndef WPP_GFLAG_GLEVEL_PRE
#  define WPP_GFLAG_GLEVEL_PRE(GFLAG,GLEVEL)
#endif
#define WPP_CALL_USBPNP_c2307(GFLAG, GLEVEL,  MSGARGS) \
            WPP_GFLAG_GLEVEL_PRE(GFLAG, GLEVEL) \
            WPP_ANNOTATE(USBPNP_c2307) \
            (( \
                WPP_RECORDER_GFLAG_GLEVEL_FILTER(GFLAG, GLEVEL) ? \
                WPP_RECORDER_SF_sq(WPP_RECORDER_GFLAG_GLEVEL_ARGS(GFLAG, GLEVEL), \
                                 145,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
             )) \
             WPP_GFLAG_GLEVEL_POST(GFLAG, GLEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPNP_c2346(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPNP_c2346) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 146,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPNP_c2375(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPNP_c2375) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 147,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_GFLAG_GLEVEL_POST
#  define WPP_GFLAG_GLEVEL_POST(GFLAG,GLEVEL)
#endif
#ifndef WPP_GFLAG_GLEVEL_PRE
#  define WPP_GFLAG_GLEVEL_PRE(GFLAG,GLEVEL)
#endif
#define WPP_CALL_USBPNP_c2403(GFLAG, GLEVEL,  MSGARGS) \
            WPP_GFLAG_GLEVEL_PRE(GFLAG, GLEVEL) \
            WPP_ANNOTATE(USBPNP_c2403) \
            (( \
                WPP_RECORDER_GFLAG_GLEVEL_FILTER(GFLAG, GLEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_GFLAG_GLEVEL_ARGS(GFLAG, GLEVEL), \
                                 148,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
             )) \
             WPP_GFLAG_GLEVEL_POST(GFLAG, GLEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPNP_c2970(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPNP_c2970) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sDD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 149,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPNP_c3014(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPNP_c3014) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 150,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPNP_c3036(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPNP_c3036) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sDD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 151,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPNP_c3048(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPNP_c3048) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 152,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPNP_c3060(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPNP_c3060) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 153,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPNP_c3072(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPNP_c3072) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 154,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPNP_c3093(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPNP_c3093) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 155,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPNP_c3105(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPNP_c3105) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 156,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPNP_c3122(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPNP_c3122) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 157,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPNP_c3136(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPNP_c3136) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 158,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_GFLAG_GLEVEL_POST
#  define WPP_GFLAG_GLEVEL_POST(GFLAG,GLEVEL)
#endif
#ifndef WPP_GFLAG_GLEVEL_PRE
#  define WPP_GFLAG_GLEVEL_PRE(GFLAG,GLEVEL)
#endif
#define WPP_CALL_USBPNP_c314(GFLAG, GLEVEL,  MSGARGS) \
            WPP_GFLAG_GLEVEL_PRE(GFLAG, GLEVEL) \
            WPP_ANNOTATE(USBPNP_c314) \
            (( \
                WPP_RECORDER_GFLAG_GLEVEL_FILTER(GFLAG, GLEVEL) ? \
                WPP_RECORDER_SF_DDDD(WPP_RECORDER_GFLAG_GLEVEL_ARGS(GFLAG, GLEVEL), \
                                 16,WPP_LOCAL_TraceGuids+0 WPP_R0123 MSGARGS), 1:0  \
             )) \
             WPP_GFLAG_GLEVEL_POST(GFLAG, GLEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPNP_c3150(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPNP_c3150) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 159,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_GFLAG_GLEVEL_POST
#  define WPP_GFLAG_GLEVEL_POST(GFLAG,GLEVEL)
#endif
#ifndef WPP_GFLAG_GLEVEL_PRE
#  define WPP_GFLAG_GLEVEL_PRE(GFLAG,GLEVEL)
#endif
#define WPP_CALL_USBPNP_c323(GFLAG, GLEVEL,  MSGARGS) \
            WPP_GFLAG_GLEVEL_PRE(GFLAG, GLEVEL) \
            WPP_ANNOTATE(USBPNP_c323) \
            (( \
                WPP_RECORDER_GFLAG_GLEVEL_FILTER(GFLAG, GLEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_GFLAG_GLEVEL_ARGS(GFLAG, GLEVEL), \
                                 17,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
             )) \
             WPP_GFLAG_GLEVEL_POST(GFLAG, GLEVEL)
#ifndef WPP_GFLAG_GLEVEL_POST
#  define WPP_GFLAG_GLEVEL_POST(GFLAG,GLEVEL)
#endif
#ifndef WPP_GFLAG_GLEVEL_PRE
#  define WPP_GFLAG_GLEVEL_PRE(GFLAG,GLEVEL)
#endif
#define WPP_CALL_USBPNP_c331(GFLAG, GLEVEL,  MSGARGS) \
            WPP_GFLAG_GLEVEL_PRE(GFLAG, GLEVEL) \
            WPP_ANNOTATE(USBPNP_c331) \
            (( \
                WPP_RECORDER_GFLAG_GLEVEL_FILTER(GFLAG, GLEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_GFLAG_GLEVEL_ARGS(GFLAG, GLEVEL), \
                                 18,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
             )) \
             WPP_GFLAG_GLEVEL_POST(GFLAG, GLEVEL)
#ifndef WPP_GFLAG_GLEVEL_POST
#  define WPP_GFLAG_GLEVEL_POST(GFLAG,GLEVEL)
#endif
#ifndef WPP_GFLAG_GLEVEL_PRE
#  define WPP_GFLAG_GLEVEL_PRE(GFLAG,GLEVEL)
#endif
#define WPP_CALL_USBPNP_c343(GFLAG, GLEVEL,  MSGARGS) \
            WPP_GFLAG_GLEVEL_PRE(GFLAG, GLEVEL) \
            WPP_ANNOTATE(USBPNP_c343) \
            (( \
                WPP_RECORDER_GFLAG_GLEVEL_FILTER(GFLAG, GLEVEL) ? \
                WPP_RECORDER_SF_ss(WPP_RECORDER_GFLAG_GLEVEL_ARGS(GFLAG, GLEVEL), \
                                 19,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
             )) \
             WPP_GFLAG_GLEVEL_POST(GFLAG, GLEVEL)
#ifndef WPP_GFLAG_GLEVEL_POST
#  define WPP_GFLAG_GLEVEL_POST(GFLAG,GLEVEL)
#endif
#ifndef WPP_GFLAG_GLEVEL_PRE
#  define WPP_GFLAG_GLEVEL_PRE(GFLAG,GLEVEL)
#endif
#define WPP_CALL_USBPNP_c355(GFLAG, GLEVEL,  MSGARGS) \
            WPP_GFLAG_GLEVEL_PRE(GFLAG, GLEVEL) \
            WPP_ANNOTATE(USBPNP_c355) \
            (( \
                WPP_RECORDER_GFLAG_GLEVEL_FILTER(GFLAG, GLEVEL) ? \
                WPP_RECORDER_SF_DDD(WPP_RECORDER_GFLAG_GLEVEL_ARGS(GFLAG, GLEVEL), \
                                 20,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), 1:0  \
             )) \
             WPP_GFLAG_GLEVEL_POST(GFLAG, GLEVEL)
#ifndef WPP_GFLAG_GLEVEL_POST
#  define WPP_GFLAG_GLEVEL_POST(GFLAG,GLEVEL)
#endif
#ifndef WPP_GFLAG_GLEVEL_PRE
#  define WPP_GFLAG_GLEVEL_PRE(GFLAG,GLEVEL)
#endif
#define WPP_CALL_USBPNP_c362(GFLAG, GLEVEL,  MSGARGS) \
            WPP_GFLAG_GLEVEL_PRE(GFLAG, GLEVEL) \
            WPP_ANNOTATE(USBPNP_c362) \
            (( \
                WPP_RECORDER_GFLAG_GLEVEL_FILTER(GFLAG, GLEVEL) ? \
                WPP_RECORDER_SF_sd(WPP_RECORDER_GFLAG_GLEVEL_ARGS(GFLAG, GLEVEL), \
                                 21,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
             )) \
             WPP_GFLAG_GLEVEL_POST(GFLAG, GLEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPNP_c458(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPNP_c458) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sqd(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 22,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPNP_c467(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPNP_c467) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 23,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPNP_c533(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPNP_c533) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sqD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 24,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPNP_c544(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPNP_c544) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sqDd(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 25,WPP_LOCAL_TraceGuids+0 WPP_R0123 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPNP_c610(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPNP_c610) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 26,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPNP_c621(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPNP_c621) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sd(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 27,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPNP_c640(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPNP_c640) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 28,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPNP_c684(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPNP_c684) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 29,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPNP_c700(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPNP_c700) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 30,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPNP_c721(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPNP_c721) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sDD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 31,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_GFLAG_GLEVEL_POST
#  define WPP_GFLAG_GLEVEL_POST(GFLAG,GLEVEL)
#endif
#ifndef WPP_GFLAG_GLEVEL_PRE
#  define WPP_GFLAG_GLEVEL_PRE(GFLAG,GLEVEL)
#endif
#define WPP_CALL_USBPNP_c95(GFLAG, GLEVEL,  MSGARGS) \
            WPP_GFLAG_GLEVEL_PRE(GFLAG, GLEVEL) \
            WPP_ANNOTATE(USBPNP_c95) \
            (( \
                WPP_RECORDER_GFLAG_GLEVEL_FILTER(GFLAG, GLEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_GFLAG_GLEVEL_ARGS(GFLAG, GLEVEL), \
                                 10,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
             )) \
             WPP_GFLAG_GLEVEL_POST(GFLAG, GLEVEL)
#else
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPNP_c1057(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPNP_c1057) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sdqq(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 49,WPP_LOCAL_TraceGuids+0 WPP_R0123 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_GFLAG_GLEVEL_POST
#  define WPP_GFLAG_GLEVEL_POST(GFLAG,GLEVEL)
#endif
#ifndef WPP_GFLAG_GLEVEL_PRE
#  define WPP_GFLAG_GLEVEL_PRE(GFLAG,GLEVEL)
#endif
#define WPP_CALL_USBPNP_c106(GFLAG, GLEVEL,  MSGARGS) \
            WPP_GFLAG_GLEVEL_PRE(GFLAG, GLEVEL) \
            WPP_ANNOTATE(USBPNP_c106) \
            (( \
                WPP_RECORDER_GFLAG_GLEVEL_FILTER(GFLAG, GLEVEL) ? \
                WPP_RECORDER_SF_sddqq(WPP_RECORDER_GFLAG_GLEVEL_ARGS(GFLAG, GLEVEL), \
                                 11,WPP_LOCAL_TraceGuids+0 WPP_R01234 MSGARGS), 1:0  \
            )) \
            WPP_GFLAG_GLEVEL_POST(GFLAG, GLEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPNP_c1158(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPNP_c1158) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 67,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPNP_c1168(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPNP_c1168) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 68,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPNP_c1177(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPNP_c1177) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sDD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 69,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPNP_c1207(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPNP_c1207) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 70,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPNP_c1217(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPNP_c1217) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 71,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPNP_c1229(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPNP_c1229) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 72,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPNP_c1240(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPNP_c1240) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 73,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPNP_c1296(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPNP_c1296) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sdD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 74,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPNP_c1311(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPNP_c1311) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 75,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPNP_c1322(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPNP_c1322) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 76,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPNP_c1336(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPNP_c1336) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 77,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_GFLAG_GLEVEL_POST
#  define WPP_GFLAG_GLEVEL_POST(GFLAG,GLEVEL)
#endif
#ifndef WPP_GFLAG_GLEVEL_PRE
#  define WPP_GFLAG_GLEVEL_PRE(GFLAG,GLEVEL)
#endif
#define WPP_CALL_USBPNP_c135(GFLAG, GLEVEL,  MSGARGS) \
            WPP_GFLAG_GLEVEL_PRE(GFLAG, GLEVEL) \
            WPP_ANNOTATE(USBPNP_c135) \
            (( \
                WPP_RECORDER_GFLAG_GLEVEL_FILTER(GFLAG, GLEVEL) ? \
                WPP_RECORDER_SF_sq(WPP_RECORDER_GFLAG_GLEVEL_ARGS(GFLAG, GLEVEL), \
                                 12,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
            )) \
            WPP_GFLAG_GLEVEL_POST(GFLAG, GLEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPNP_c1357(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPNP_c1357) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 78,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPNP_c1369(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPNP_c1369) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 79,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_GFLAG_GLEVEL_POST
#  define WPP_GFLAG_GLEVEL_POST(GFLAG,GLEVEL)
#endif
#ifndef WPP_GFLAG_GLEVEL_PRE
#  define WPP_GFLAG_GLEVEL_PRE(GFLAG,GLEVEL)
#endif
#define WPP_CALL_USBPNP_c146(GFLAG, GLEVEL,  MSGARGS) \
            WPP_GFLAG_GLEVEL_PRE(GFLAG, GLEVEL) \
            WPP_ANNOTATE(USBPNP_c146) \
            (( \
                WPP_RECORDER_GFLAG_GLEVEL_FILTER(GFLAG, GLEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_GFLAG_GLEVEL_ARGS(GFLAG, GLEVEL), \
                                 13,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
            )) \
            WPP_GFLAG_GLEVEL_POST(GFLAG, GLEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPNP_c1666(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPNP_c1666) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 88,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPNP_c1684(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPNP_c1684) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sDD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 89,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPNP_c173(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPNP_c173) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sqq(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 14,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPNP_c1738(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPNP_c1738) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sd(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 90,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPNP_c1782(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPNP_c1782) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 100,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPNP_c1799(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPNP_c1799) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sDDDD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 101,WPP_LOCAL_TraceGuids+0 WPP_R01234 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPNP_c182(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPNP_c182) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 15,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPNP_c1829(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPNP_c1829) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sDDDD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 102,WPP_LOCAL_TraceGuids+0 WPP_R01234 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPNP_c1841(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPNP_c1841) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 103,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPNP_c1857(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPNP_c1857) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 104,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPNP_c1892(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPNP_c1892) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 108,WPP_LOCAL_TraceGuids+0 WPP_R MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPNP_c1916(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPNP_c1916) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sd(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 109,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPNP_c2042(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPNP_c2042) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 120,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPNP_c2112(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPNP_c2112) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_D(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 137,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPNP_c2187(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPNP_c2187) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sq(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 142,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPNP_c2207(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPNP_c2207) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sq(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 143,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPNP_c2219(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPNP_c2219) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 144,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_GFLAG_GLEVEL_POST
#  define WPP_GFLAG_GLEVEL_POST(GFLAG,GLEVEL)
#endif
#ifndef WPP_GFLAG_GLEVEL_PRE
#  define WPP_GFLAG_GLEVEL_PRE(GFLAG,GLEVEL)
#endif
#define WPP_CALL_USBPNP_c2307(GFLAG, GLEVEL,  MSGARGS) \
            WPP_GFLAG_GLEVEL_PRE(GFLAG, GLEVEL) \
            WPP_ANNOTATE(USBPNP_c2307) \
            (( \
                WPP_RECORDER_GFLAG_GLEVEL_FILTER(GFLAG, GLEVEL) ? \
                WPP_RECORDER_SF_sq(WPP_RECORDER_GFLAG_GLEVEL_ARGS(GFLAG, GLEVEL), \
                                 145,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
            )) \
            WPP_GFLAG_GLEVEL_POST(GFLAG, GLEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPNP_c2346(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPNP_c2346) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 146,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPNP_c2375(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPNP_c2375) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 147,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_GFLAG_GLEVEL_POST
#  define WPP_GFLAG_GLEVEL_POST(GFLAG,GLEVEL)
#endif
#ifndef WPP_GFLAG_GLEVEL_PRE
#  define WPP_GFLAG_GLEVEL_PRE(GFLAG,GLEVEL)
#endif
#define WPP_CALL_USBPNP_c2403(GFLAG, GLEVEL,  MSGARGS) \
            WPP_GFLAG_GLEVEL_PRE(GFLAG, GLEVEL) \
            WPP_ANNOTATE(USBPNP_c2403) \
            (( \
                WPP_RECORDER_GFLAG_GLEVEL_FILTER(GFLAG, GLEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_GFLAG_GLEVEL_ARGS(GFLAG, GLEVEL), \
                                 148,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
            )) \
            WPP_GFLAG_GLEVEL_POST(GFLAG, GLEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPNP_c2970(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPNP_c2970) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sDD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 149,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPNP_c3014(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPNP_c3014) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 150,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPNP_c3036(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPNP_c3036) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sDD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 151,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPNP_c3048(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPNP_c3048) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 152,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPNP_c3060(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPNP_c3060) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 153,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPNP_c3072(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPNP_c3072) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 154,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPNP_c3093(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPNP_c3093) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 155,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPNP_c3105(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPNP_c3105) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 156,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPNP_c3122(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPNP_c3122) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 157,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPNP_c3136(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPNP_c3136) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 158,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_GFLAG_GLEVEL_POST
#  define WPP_GFLAG_GLEVEL_POST(GFLAG,GLEVEL)
#endif
#ifndef WPP_GFLAG_GLEVEL_PRE
#  define WPP_GFLAG_GLEVEL_PRE(GFLAG,GLEVEL)
#endif
#define WPP_CALL_USBPNP_c314(GFLAG, GLEVEL,  MSGARGS) \
            WPP_GFLAG_GLEVEL_PRE(GFLAG, GLEVEL) \
            WPP_ANNOTATE(USBPNP_c314) \
            (( \
                WPP_RECORDER_GFLAG_GLEVEL_FILTER(GFLAG, GLEVEL) ? \
                WPP_RECORDER_SF_DDDD(WPP_RECORDER_GFLAG_GLEVEL_ARGS(GFLAG, GLEVEL), \
                                 16,WPP_LOCAL_TraceGuids+0 WPP_R0123 MSGARGS), 1:0  \
            )) \
            WPP_GFLAG_GLEVEL_POST(GFLAG, GLEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPNP_c3150(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPNP_c3150) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 159,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_GFLAG_GLEVEL_POST
#  define WPP_GFLAG_GLEVEL_POST(GFLAG,GLEVEL)
#endif
#ifndef WPP_GFLAG_GLEVEL_PRE
#  define WPP_GFLAG_GLEVEL_PRE(GFLAG,GLEVEL)
#endif
#define WPP_CALL_USBPNP_c323(GFLAG, GLEVEL,  MSGARGS) \
            WPP_GFLAG_GLEVEL_PRE(GFLAG, GLEVEL) \
            WPP_ANNOTATE(USBPNP_c323) \
            (( \
                WPP_RECORDER_GFLAG_GLEVEL_FILTER(GFLAG, GLEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_GFLAG_GLEVEL_ARGS(GFLAG, GLEVEL), \
                                 17,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
            )) \
            WPP_GFLAG_GLEVEL_POST(GFLAG, GLEVEL)
#ifndef WPP_GFLAG_GLEVEL_POST
#  define WPP_GFLAG_GLEVEL_POST(GFLAG,GLEVEL)
#endif
#ifndef WPP_GFLAG_GLEVEL_PRE
#  define WPP_GFLAG_GLEVEL_PRE(GFLAG,GLEVEL)
#endif
#define WPP_CALL_USBPNP_c331(GFLAG, GLEVEL,  MSGARGS) \
            WPP_GFLAG_GLEVEL_PRE(GFLAG, GLEVEL) \
            WPP_ANNOTATE(USBPNP_c331) \
            (( \
                WPP_RECORDER_GFLAG_GLEVEL_FILTER(GFLAG, GLEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_GFLAG_GLEVEL_ARGS(GFLAG, GLEVEL), \
                                 18,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
            )) \
            WPP_GFLAG_GLEVEL_POST(GFLAG, GLEVEL)
#ifndef WPP_GFLAG_GLEVEL_POST
#  define WPP_GFLAG_GLEVEL_POST(GFLAG,GLEVEL)
#endif
#ifndef WPP_GFLAG_GLEVEL_PRE
#  define WPP_GFLAG_GLEVEL_PRE(GFLAG,GLEVEL)
#endif
#define WPP_CALL_USBPNP_c343(GFLAG, GLEVEL,  MSGARGS) \
            WPP_GFLAG_GLEVEL_PRE(GFLAG, GLEVEL) \
            WPP_ANNOTATE(USBPNP_c343) \
            (( \
                WPP_RECORDER_GFLAG_GLEVEL_FILTER(GFLAG, GLEVEL) ? \
                WPP_RECORDER_SF_ss(WPP_RECORDER_GFLAG_GLEVEL_ARGS(GFLAG, GLEVEL), \
                                 19,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
            )) \
            WPP_GFLAG_GLEVEL_POST(GFLAG, GLEVEL)
#ifndef WPP_GFLAG_GLEVEL_POST
#  define WPP_GFLAG_GLEVEL_POST(GFLAG,GLEVEL)
#endif
#ifndef WPP_GFLAG_GLEVEL_PRE
#  define WPP_GFLAG_GLEVEL_PRE(GFLAG,GLEVEL)
#endif
#define WPP_CALL_USBPNP_c355(GFLAG, GLEVEL,  MSGARGS) \
            WPP_GFLAG_GLEVEL_PRE(GFLAG, GLEVEL) \
            WPP_ANNOTATE(USBPNP_c355) \
            (( \
                WPP_RECORDER_GFLAG_GLEVEL_FILTER(GFLAG, GLEVEL) ? \
                WPP_RECORDER_SF_DDD(WPP_RECORDER_GFLAG_GLEVEL_ARGS(GFLAG, GLEVEL), \
                                 20,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), 1:0  \
            )) \
            WPP_GFLAG_GLEVEL_POST(GFLAG, GLEVEL)
#ifndef WPP_GFLAG_GLEVEL_POST
#  define WPP_GFLAG_GLEVEL_POST(GFLAG,GLEVEL)
#endif
#ifndef WPP_GFLAG_GLEVEL_PRE
#  define WPP_GFLAG_GLEVEL_PRE(GFLAG,GLEVEL)
#endif
#define WPP_CALL_USBPNP_c362(GFLAG, GLEVEL,  MSGARGS) \
            WPP_GFLAG_GLEVEL_PRE(GFLAG, GLEVEL) \
            WPP_ANNOTATE(USBPNP_c362) \
            (( \
                WPP_RECORDER_GFLAG_GLEVEL_FILTER(GFLAG, GLEVEL) ? \
                WPP_RECORDER_SF_sd(WPP_RECORDER_GFLAG_GLEVEL_ARGS(GFLAG, GLEVEL), \
                                 21,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
            )) \
            WPP_GFLAG_GLEVEL_POST(GFLAG, GLEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPNP_c458(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPNP_c458) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sqd(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 22,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPNP_c467(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPNP_c467) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 23,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPNP_c533(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPNP_c533) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sqD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 24,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPNP_c544(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPNP_c544) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sqDd(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 25,WPP_LOCAL_TraceGuids+0 WPP_R0123 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPNP_c610(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPNP_c610) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 26,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPNP_c621(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPNP_c621) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sd(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 27,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPNP_c640(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPNP_c640) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 28,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPNP_c684(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPNP_c684) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 29,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPNP_c700(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPNP_c700) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 30,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPNP_c721(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPNP_c721) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sDD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 31,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_GFLAG_GLEVEL_POST
#  define WPP_GFLAG_GLEVEL_POST(GFLAG,GLEVEL)
#endif
#ifndef WPP_GFLAG_GLEVEL_PRE
#  define WPP_GFLAG_GLEVEL_PRE(GFLAG,GLEVEL)
#endif
#define WPP_CALL_USBPNP_c95(GFLAG, GLEVEL,  MSGARGS) \
            WPP_GFLAG_GLEVEL_PRE(GFLAG, GLEVEL) \
            WPP_ANNOTATE(USBPNP_c95) \
            (( \
                WPP_RECORDER_GFLAG_GLEVEL_FILTER(GFLAG, GLEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_GFLAG_GLEVEL_ARGS(GFLAG, GLEVEL), \
                                 10,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
            )) \
            WPP_GFLAG_GLEVEL_POST(GFLAG, GLEVEL)
#endif



#if defined(__cplusplus)
};
#endif


#else
// template tracemacro.tpl

// This template expects:
//      WPP_THIS_FILE defined (see header.tpl)
//      WPP_LOGGER_ARG  defined
//      WPP_GET_LOGGER  defined
//      WPP_ENABLED() defined

#if defined(__cplusplus)
extern "C" {
#endif

#ifndef WPP_ALREADY_INCLUDED

#ifndef NO_CHECK_FOR_NULL_STRING
#ifndef WPP_CHECK_FOR_NULL_STRING
#define WPP_CHECK_FOR_NULL_STRING 1
#endif
#endif

#define WPP_EVAL(_value_) _value_
#define WPP_(Id) WPP_EVAL(WPP_) ## WPP_EVAL(Id) ## WPP_EVAL(_) ## WPP_EVAL(WPP_THIS_FILE) ## WPP_EVAL(__LINE__)

#if !defined(WPP_INLINE)
#define WPP_INLINE DECLSPEC_NOINLINE __inline
#endif

#else   // #ifndef WPP_ALREADY_INCLUDED

#undef WPP_LOCAL_TraceGuids

#endif  // #ifndef WPP_ALREADY_INCLUDED

#if !defined(WPP_NO_ANNOTATIONS)

#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c1057
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c106
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c1126
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c1132
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c1133
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c1134
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c1135
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c1136
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c1137
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c1138
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c1139
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c1140
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c1141
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c1142
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c1143
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c1144
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c1145
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c1146
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c1147
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c1158
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c1168
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c1177
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c1207
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c1217
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c1229
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c1240
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c1296
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c1311
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c1322
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c1336
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c135
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c1357
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c1369
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c146
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c1535
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c1537
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c1607
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c1608
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c1609
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c1610
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c1611
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c1612
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c1666
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c1684
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c173
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c1738
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c1743
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c1744
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c1745
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c1746
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c1747
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c1748
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c1749
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c1750
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c1751
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c1782
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c1799
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c182
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c1829
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c1841
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c1857
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c1867
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c1871
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c1878
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c1892
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c1916
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c1942
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c1946
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c1951
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c1955
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c2026
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c2027
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c2028
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c2029
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c2030
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c2031
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c2042
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c2067
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c2068
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c2069
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c2070
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c2071
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c2073
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c2081
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c2082
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c2090
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c2091
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c2092
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c2093
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c2094
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c2096
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c2102
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c2103
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c2112
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c2119
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c2120
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c2121
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c2145
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c2187
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c2207
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c2219
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c2307
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c2346
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c2375
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c2403
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c2970
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c3014
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c3036
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c3048
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c3060
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c3072
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c3093
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c3105
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c3122
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c3136
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c314
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c3150
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c323
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c331
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c343
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c355
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c362
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c458
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c467
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c533
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c544
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c610
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c621
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c640
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c684
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c700
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c721
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c95
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c963
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c964
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c965
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c966
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c967
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c968
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c969
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c970
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c971
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c972
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c973
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c974
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c975
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c976
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c977
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c978
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_USBPNP_c979
#endif
#ifdef WPP_EMIT_FUNC_NAME
#define WPP_FUNC_NAME L" FUNC=" _WPPW(__FUNCTION__)
#else
#define WPP_FUNC_NAME
#endif

#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c1057_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 49 \"%0<%10!s!> StartDevice enter-%11!d!: fdo 0x%12!p! ext 0x%13!p!\" //   FLAG=QCUSB_DBG_MASK_CONTROL LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c1057_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 49 \"%0<%10!s!> StartDevice enter-%11!d!: fdo 0x%12!p! ext 0x%13!p!\" //   FLAG=QCUSB_DBG_MASK_CONTROL LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c1057
    #define WPP_ANNOTATE_USBPNP_c1057 WPP_ANNOTATE_USBPNP_c1057_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemPtr -- 12" , L"Arg, ItemPtr -- 13" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c1057 WPP_ANNOTATE_USBPNP_c1057_FINAL("TMF:", "USBPNP.c", "USBPNP_c1057", L"{", L"pDevExt->PortName, ItemString -- 10" , L"cookie, ItemLong -- 11" , L"DeviceObject, ItemPtr -- 12" , L"pDevExt, ItemPtr -- 13" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c106_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 11 \"%0<%10!s!> AddDevice: <%11!d!+%12!d!>\n   DRVO=0x%13!p!, PHYDEVO=0x%14!p!\" //   GFLAG=QCUSB_DBG_MASK_CONTROL GLEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c106_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 11 \"%0<%10!s!> AddDevice: <%11!d!+%12!d!>\n   DRVO=0x%13!p!, PHYDEVO=0x%14!p!\" //   GFLAG=QCUSB_DBG_MASK_CONTROL GLEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c106
    #define WPP_ANNOTATE_USBPNP_c106 WPP_ANNOTATE_USBPNP_c106_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemLong -- 12" , L"Arg, ItemPtr -- 13" , L"Arg, ItemPtr -- 14" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c106 WPP_ANNOTATE_USBPNP_c106_FINAL("TMF:", "USBPNP.c", "USBPNP_c106", L"{", L"gDeviceName, ItemString -- 10" , L"sizeof(struct _DEVICE_OBJECT), ItemLong -- 11" , L"sizeof(DEVICE_EXTENSION), ItemLong -- 12" , L"pDriverObject, ItemPtr -- 13" , L"pdo, ItemPtr -- 14" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c1126_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 50 \"%0Device Descriptor = %10!p!, len %11!u!\" //  " WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c1126_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 50 \"%0Device Descriptor = %10!p!, len %11!u!\" //  " WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c1126
    #define WPP_ANNOTATE_USBPNP_c1126 WPP_ANNOTATE_USBPNP_c1126_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemPtr -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c1126 WPP_ANNOTATE_USBPNP_c1126_FINAL("TMF:", "USBPNP.c", "USBPNP_c1126", L"{", L"deviceDesc, ItemPtr -- 10" , L"pUrb->UrbControlDescriptorRequest.TransferBufferLength, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c1132_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 51 \"%0Sample Device Descriptor:\" //  " WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c1132_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 51 \"%0Sample Device Descriptor:\" //  " WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c1132
    #define WPP_ANNOTATE_USBPNP_c1132 WPP_ANNOTATE_USBPNP_c1132_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c1132 WPP_ANNOTATE_USBPNP_c1132_FINAL("TMF:", "USBPNP.c", "USBPNP_c1132", L"{", L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c1133_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 52 \"%0-------------------------\" //  " WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c1133_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 52 \"%0-------------------------\" //  " WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c1133
    #define WPP_ANNOTATE_USBPNP_c1133 WPP_ANNOTATE_USBPNP_c1133_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c1133 WPP_ANNOTATE_USBPNP_c1133_FINAL("TMF:", "USBPNP.c", "USBPNP_c1133", L"{", L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c1134_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 53 \"%0bLength %10!d!\" //  " WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c1134_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 53 \"%0bLength %10!d!\" //  " WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c1134
    #define WPP_ANNOTATE_USBPNP_c1134 WPP_ANNOTATE_USBPNP_c1134_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemLong -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c1134 WPP_ANNOTATE_USBPNP_c1134_FINAL("TMF:", "USBPNP.c", "USBPNP_c1134", L"{", L"deviceDesc->bLength, ItemLong -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c1135_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 54 \"%0bDescriptorType 0x%10!x!\" //  " WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c1135_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 54 \"%0bDescriptorType 0x%10!x!\" //  " WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c1135
    #define WPP_ANNOTATE_USBPNP_c1135 WPP_ANNOTATE_USBPNP_c1135_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemLong -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c1135 WPP_ANNOTATE_USBPNP_c1135_FINAL("TMF:", "USBPNP.c", "USBPNP_c1135", L"{", L"deviceDesc->bDescriptorType, ItemLong -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c1136_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 55 \"%0bcdUSB 0x%10!x!\" //  " WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c1136_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 55 \"%0bcdUSB 0x%10!x!\" //  " WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c1136
    #define WPP_ANNOTATE_USBPNP_c1136 WPP_ANNOTATE_USBPNP_c1136_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemLong -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c1136 WPP_ANNOTATE_USBPNP_c1136_FINAL("TMF:", "USBPNP.c", "USBPNP_c1136", L"{", L"deviceDesc->bcdUSB, ItemLong -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c1137_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 56 \"%0bDeviceClass 0x%10!x!\" //  " WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c1137_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 56 \"%0bDeviceClass 0x%10!x!\" //  " WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c1137
    #define WPP_ANNOTATE_USBPNP_c1137 WPP_ANNOTATE_USBPNP_c1137_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemLong -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c1137 WPP_ANNOTATE_USBPNP_c1137_FINAL("TMF:", "USBPNP.c", "USBPNP_c1137", L"{", L"deviceDesc->bDeviceClass, ItemLong -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c1138_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 57 \"%0bDeviceSubClass 0x%10!x!\" //  " WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c1138_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 57 \"%0bDeviceSubClass 0x%10!x!\" //  " WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c1138
    #define WPP_ANNOTATE_USBPNP_c1138 WPP_ANNOTATE_USBPNP_c1138_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemLong -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c1138 WPP_ANNOTATE_USBPNP_c1138_FINAL("TMF:", "USBPNP.c", "USBPNP_c1138", L"{", L"deviceDesc->bDeviceSubClass, ItemLong -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c1139_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 58 \"%0bDeviceProtocol 0x%10!x!\" //  " WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c1139_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 58 \"%0bDeviceProtocol 0x%10!x!\" //  " WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c1139
    #define WPP_ANNOTATE_USBPNP_c1139 WPP_ANNOTATE_USBPNP_c1139_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemLong -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c1139 WPP_ANNOTATE_USBPNP_c1139_FINAL("TMF:", "USBPNP.c", "USBPNP_c1139", L"{", L"deviceDesc->bDeviceProtocol, ItemLong -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c1140_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 59 \"%0bMaxPacketSize0 0x%10!x!\" //  " WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c1140_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 59 \"%0bMaxPacketSize0 0x%10!x!\" //  " WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c1140
    #define WPP_ANNOTATE_USBPNP_c1140 WPP_ANNOTATE_USBPNP_c1140_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemLong -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c1140 WPP_ANNOTATE_USBPNP_c1140_FINAL("TMF:", "USBPNP.c", "USBPNP_c1140", L"{", L"deviceDesc->bMaxPacketSize0, ItemLong -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c1141_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 60 \"%0idVendor 0x%10!x!\" //  " WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c1141_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 60 \"%0idVendor 0x%10!x!\" //  " WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c1141
    #define WPP_ANNOTATE_USBPNP_c1141 WPP_ANNOTATE_USBPNP_c1141_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemLong -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c1141 WPP_ANNOTATE_USBPNP_c1141_FINAL("TMF:", "USBPNP.c", "USBPNP_c1141", L"{", L"deviceDesc->idVendor, ItemLong -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c1142_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 61 \"%0idProduct 0x%10!x!\" //  " WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c1142_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 61 \"%0idProduct 0x%10!x!\" //  " WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c1142
    #define WPP_ANNOTATE_USBPNP_c1142 WPP_ANNOTATE_USBPNP_c1142_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemLong -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c1142 WPP_ANNOTATE_USBPNP_c1142_FINAL("TMF:", "USBPNP.c", "USBPNP_c1142", L"{", L"deviceDesc->idProduct, ItemLong -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c1143_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 62 \"%0bcdDevice 0x%10!x!\" //  " WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c1143_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 62 \"%0bcdDevice 0x%10!x!\" //  " WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c1143
    #define WPP_ANNOTATE_USBPNP_c1143 WPP_ANNOTATE_USBPNP_c1143_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemLong -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c1143 WPP_ANNOTATE_USBPNP_c1143_FINAL("TMF:", "USBPNP.c", "USBPNP_c1143", L"{", L"deviceDesc->bcdDevice, ItemLong -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c1144_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 63 \"%0iManufacturer 0x%10!x!\" //  " WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c1144_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 63 \"%0iManufacturer 0x%10!x!\" //  " WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c1144
    #define WPP_ANNOTATE_USBPNP_c1144 WPP_ANNOTATE_USBPNP_c1144_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemLong -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c1144 WPP_ANNOTATE_USBPNP_c1144_FINAL("TMF:", "USBPNP.c", "USBPNP_c1144", L"{", L"deviceDesc->iManufacturer, ItemLong -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c1145_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 64 \"%0iProduct 0x%10!x!\" //  " WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c1145_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 64 \"%0iProduct 0x%10!x!\" //  " WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c1145
    #define WPP_ANNOTATE_USBPNP_c1145 WPP_ANNOTATE_USBPNP_c1145_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemLong -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c1145 WPP_ANNOTATE_USBPNP_c1145_FINAL("TMF:", "USBPNP.c", "USBPNP_c1145", L"{", L"deviceDesc->iProduct, ItemLong -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c1146_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 65 \"%0iSerialNumber 0x%10!x!\" //  " WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c1146_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 65 \"%0iSerialNumber 0x%10!x!\" //  " WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c1146
    #define WPP_ANNOTATE_USBPNP_c1146 WPP_ANNOTATE_USBPNP_c1146_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemLong -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c1146 WPP_ANNOTATE_USBPNP_c1146_FINAL("TMF:", "USBPNP.c", "USBPNP_c1146", L"{", L"deviceDesc->iSerialNumber, ItemLong -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c1147_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 66 \"%0bNumConfigurations 0x%10!x!\" //  " WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c1147_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 66 \"%0bNumConfigurations 0x%10!x!\" //  " WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c1147
    #define WPP_ANNOTATE_USBPNP_c1147 WPP_ANNOTATE_USBPNP_c1147_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemLong -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c1147 WPP_ANNOTATE_USBPNP_c1147_FINAL("TMF:", "USBPNP.c", "USBPNP_c1147", L"{", L"deviceDesc->bNumConfigurations, ItemLong -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c1158_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 67 \"%0<%10!s!> StartDevice: _SERN: Failed with iProduct: 0x%11!x!, try default\" //   FLAG=QCUSB_DBG_MASK_CONTROL LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c1158_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 67 \"%0<%10!s!> StartDevice: _SERN: Failed with iProduct: 0x%11!x!, try default\" //   FLAG=QCUSB_DBG_MASK_CONTROL LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c1158
    #define WPP_ANNOTATE_USBPNP_c1158 WPP_ANNOTATE_USBPNP_c1158_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c1158 WPP_ANNOTATE_USBPNP_c1158_FINAL("TMF:", "USBPNP.c", "USBPNP_c1158", L"{", L"pDevExt->PortName, ItemString -- 10" , L"deviceDesc->iProduct, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c1168_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 68 \"%0<%10!s!> StartDevice: _SERN: tried iProduct: ST(0x%11!x!)\" //   FLAG=QCUSB_DBG_MASK_CONTROL LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c1168_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 68 \"%0<%10!s!> StartDevice: _SERN: tried iProduct: ST(0x%11!x!)\" //   FLAG=QCUSB_DBG_MASK_CONTROL LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c1168
    #define WPP_ANNOTATE_USBPNP_c1168 WPP_ANNOTATE_USBPNP_c1168_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c1168 WPP_ANNOTATE_USBPNP_c1168_FINAL("TMF:", "USBPNP.c", "USBPNP_c1168", L"{", L"pDevExt->PortName, ItemString -- 10" , L"ntStatus, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c1177_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 69 \"%0<%10!s!> StartDevice: _SERN: tried iSerialNumber: 0x%11!x! ST(0x%12!x!)\" //   FLAG=QCUSB_DBG_MASK_CONTROL LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c1177_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 69 \"%0<%10!s!> StartDevice: _SERN: tried iSerialNumber: 0x%11!x! ST(0x%12!x!)\" //   FLAG=QCUSB_DBG_MASK_CONTROL LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c1177
    #define WPP_ANNOTATE_USBPNP_c1177 WPP_ANNOTATE_USBPNP_c1177_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemLong -- 12" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c1177 WPP_ANNOTATE_USBPNP_c1177_FINAL("TMF:", "USBPNP.c", "USBPNP_c1177", L"{", L"pDevExt->PortName, ItemString -- 10" , L"deviceDesc->iSerialNumber, ItemLong -- 11" , L"ntStatus, ItemLong -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c1207_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 70 \"%0<%10!s!> StartDevice: dev not ready\" //   FLAG=QCUSB_DBG_MASK_CONTROL LEVEL=QCUSB_DBG_LEVEL_CRITICAL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c1207_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 70 \"%0<%10!s!> StartDevice: dev not ready\" //   FLAG=QCUSB_DBG_MASK_CONTROL LEVEL=QCUSB_DBG_LEVEL_CRITICAL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c1207
    #define WPP_ANNOTATE_USBPNP_c1207 WPP_ANNOTATE_USBPNP_c1207_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c1207 WPP_ANNOTATE_USBPNP_c1207_FINAL("TMF:", "USBPNP.c", "USBPNP_c1207", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c1217_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 71 \"%0<%10!s!> StartDevice: dev err-0 0x%11!x!\" //   FLAG=QCUSB_DBG_MASK_CONTROL LEVEL=QCUSB_DBG_LEVEL_CRITICAL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c1217_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 71 \"%0<%10!s!> StartDevice: dev err-0 0x%11!x!\" //   FLAG=QCUSB_DBG_MASK_CONTROL LEVEL=QCUSB_DBG_LEVEL_CRITICAL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c1217
    #define WPP_ANNOTATE_USBPNP_c1217 WPP_ANNOTATE_USBPNP_c1217_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c1217 WPP_ANNOTATE_USBPNP_c1217_FINAL("TMF:", "USBPNP.c", "USBPNP_c1217", L"{", L"pDevExt->PortName, ItemString -- 10" , L"ntStatus, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c1229_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 72 \"%0<%10!s!> StartDevice: STATUS_NO_MEMORY-0\" //   FLAG=QCUSB_DBG_MASK_CONTROL LEVEL=QCUSB_DBG_LEVEL_CRITICAL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c1229_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 72 \"%0<%10!s!> StartDevice: STATUS_NO_MEMORY-0\" //   FLAG=QCUSB_DBG_MASK_CONTROL LEVEL=QCUSB_DBG_LEVEL_CRITICAL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c1229
    #define WPP_ANNOTATE_USBPNP_c1229 WPP_ANNOTATE_USBPNP_c1229_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c1229 WPP_ANNOTATE_USBPNP_c1229_FINAL("TMF:", "USBPNP.c", "USBPNP_c1229", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c1240_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 73 \"%0<%10!s!> StartDevice: STATUS_NO_MEMORY-1\" //   FLAG=QCUSB_DBG_MASK_CONTROL LEVEL=QCUSB_DBG_LEVEL_CRITICAL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c1240_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 73 \"%0<%10!s!> StartDevice: STATUS_NO_MEMORY-1\" //   FLAG=QCUSB_DBG_MASK_CONTROL LEVEL=QCUSB_DBG_LEVEL_CRITICAL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c1240
    #define WPP_ANNOTATE_USBPNP_c1240 WPP_ANNOTATE_USBPNP_c1240_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c1240 WPP_ANNOTATE_USBPNP_c1240_FINAL("TMF:", "USBPNP.c", "USBPNP_c1240", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c1296_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 74 \"%0<%10!s!> StartDevice: ResetInput/Output ResetPort %11!d! err 0x%12!x!\" //   FLAG=QCUSB_DBG_MASK_CONTROL LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c1296_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 74 \"%0<%10!s!> StartDevice: ResetInput/Output ResetPort %11!d! err 0x%12!x!\" //   FLAG=QCUSB_DBG_MASK_CONTROL LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c1296
    #define WPP_ANNOTATE_USBPNP_c1296 WPP_ANNOTATE_USBPNP_c1296_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemLong -- 12" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c1296 WPP_ANNOTATE_USBPNP_c1296_FINAL("TMF:", "USBPNP.c", "USBPNP_c1296", L"{", L"pDevExt->PortName, ItemString -- 10" , L"i, ItemLong -- 11" , L"ntStatus, ItemLong -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c1311_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 75 \"%0<%10!s!> StartDevice: ResetInput/Output ResetPort failed ALL RETRIES err 0x%11!x!\" //   FLAG=QCUSB_DBG_MASK_CONTROL LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c1311_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 75 \"%0<%10!s!> StartDevice: ResetInput/Output ResetPort failed ALL RETRIES err 0x%11!x!\" //   FLAG=QCUSB_DBG_MASK_CONTROL LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c1311
    #define WPP_ANNOTATE_USBPNP_c1311 WPP_ANNOTATE_USBPNP_c1311_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c1311 WPP_ANNOTATE_USBPNP_c1311_FINAL("TMF:", "USBPNP.c", "USBPNP_c1311", L"{", L"pDevExt->PortName, ItemString -- 10" , L"ntStatus, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c1322_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 76 \"%0<%10!s!> StartDevice: Broken USB detected, fail\" //   FLAG=QCUSB_DBG_MASK_CONTROL LEVEL=QCUSB_DBG_LEVEL_FORCE" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c1322_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 76 \"%0<%10!s!> StartDevice: Broken USB detected, fail\" //   FLAG=QCUSB_DBG_MASK_CONTROL LEVEL=QCUSB_DBG_LEVEL_FORCE" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c1322
    #define WPP_ANNOTATE_USBPNP_c1322 WPP_ANNOTATE_USBPNP_c1322_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c1322 WPP_ANNOTATE_USBPNP_c1322_FINAL("TMF:", "USBPNP.c", "USBPNP_c1322", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c1336_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 77 \"%0<%10!s!> StartDevice: DeviceId err 0x%11!x!\" //   FLAG=QCUSB_DBG_MASK_CONTROL LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c1336_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 77 \"%0<%10!s!> StartDevice: DeviceId err 0x%11!x!\" //   FLAG=QCUSB_DBG_MASK_CONTROL LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c1336
    #define WPP_ANNOTATE_USBPNP_c1336 WPP_ANNOTATE_USBPNP_c1336_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c1336 WPP_ANNOTATE_USBPNP_c1336_FINAL("TMF:", "USBPNP.c", "USBPNP_c1336", L"{", L"pDevExt->PortName, ItemString -- 10" , L"ntStatus, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c135_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 12 \"%0<%10!s!> AddDevice: new FDO 0x%11!p!\" //   GFLAG=QCUSB_DBG_MASK_CONTROL GLEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c135_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 12 \"%0<%10!s!> AddDevice: new FDO 0x%11!p!\" //   GFLAG=QCUSB_DBG_MASK_CONTROL GLEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c135
    #define WPP_ANNOTATE_USBPNP_c135 WPP_ANNOTATE_USBPNP_c135_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemPtr -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c135 WPP_ANNOTATE_USBPNP_c135_FINAL("TMF:", "USBPNP.c", "USBPNP_c135", L"{", L"myPortName, ItemString -- 10" , L"fdo, ItemPtr -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c1357_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 78 \"%0<%10!s!> StartDevice: DL bundling err 0x%11!x!\" //   FLAG=QCUSB_DBG_MASK_CONTROL LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c1357_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 78 \"%0<%10!s!> StartDevice: DL bundling err 0x%11!x!\" //   FLAG=QCUSB_DBG_MASK_CONTROL LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c1357
    #define WPP_ANNOTATE_USBPNP_c1357 WPP_ANNOTATE_USBPNP_c1357_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c1357 WPP_ANNOTATE_USBPNP_c1357_FINAL("TMF:", "USBPNP.c", "USBPNP_c1357", L"{", L"pDevExt->PortName, ItemString -- 10" , L"ntStatus, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c1369_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 79 \"%0<%10!s!> StartDevice: L2 NO MEM\" //   FLAG=QCUSB_DBG_MASK_CONTROL LEVEL=QCUSB_DBG_LEVEL_FORCE" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c1369_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 79 \"%0<%10!s!> StartDevice: L2 NO MEM\" //   FLAG=QCUSB_DBG_MASK_CONTROL LEVEL=QCUSB_DBG_LEVEL_FORCE" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c1369
    #define WPP_ANNOTATE_USBPNP_c1369 WPP_ANNOTATE_USBPNP_c1369_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c1369 WPP_ANNOTATE_USBPNP_c1369_FINAL("TMF:", "USBPNP.c", "USBPNP_c1369", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c146_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 13 \"%0<%10!s!> AddDevice: FDO failure 0x%11!x!\" //   GFLAG=QCUSB_DBG_MASK_CONTROL GLEVEL=QCUSB_DBG_LEVEL_CRITICAL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c146_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 13 \"%0<%10!s!> AddDevice: FDO failure 0x%11!x!\" //   GFLAG=QCUSB_DBG_MASK_CONTROL GLEVEL=QCUSB_DBG_LEVEL_CRITICAL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c146
    #define WPP_ANNOTATE_USBPNP_c146 WPP_ANNOTATE_USBPNP_c146_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c146 WPP_ANNOTATE_USBPNP_c146_FINAL("TMF:", "USBPNP.c", "USBPNP_c146", L"{", L"myPortName, ItemString -- 10" , L"ntStatus, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c1535_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 80 \"%0 (%10!d!, 0x%11!x!)-\" //  " WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c1535_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 80 \"%0 (%10!d!, 0x%11!x!)-\" //  " WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c1535
    #define WPP_ANNOTATE_USBPNP_c1535 WPP_ANNOTATE_USBPNP_c1535_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemLong -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c1535 WPP_ANNOTATE_USBPNP_c1535_FINAL("TMF:", "USBPNP.c", "USBPNP_c1535", L"{", L"i, ItemLong -- 10" , L"p[i], ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c1537_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 81 \"%0\" //  " WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c1537_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 81 \"%0\" //  " WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c1537
    #define WPP_ANNOTATE_USBPNP_c1537 WPP_ANNOTATE_USBPNP_c1537_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c1537 WPP_ANNOTATE_USBPNP_c1537_FINAL("TMF:", "USBPNP.c", "USBPNP_c1537", L"{", L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c1607_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 82 \"%0selectinterface: Cfg->bLength=0x%10!x!\" //  " WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c1607_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 82 \"%0selectinterface: Cfg->bLength=0x%10!x!\" //  " WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c1607
    #define WPP_ANNOTATE_USBPNP_c1607 WPP_ANNOTATE_USBPNP_c1607_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemLong -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c1607 WPP_ANNOTATE_USBPNP_c1607_FINAL("TMF:", "USBPNP.c", "USBPNP_c1607", L"{", L"(UCHAR)pConfigDesc->bLength, ItemLong -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c1608_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 83 \"%0selectinterface: Cfg->bDescType=0x%10!x!\" //  " WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c1608_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 83 \"%0selectinterface: Cfg->bDescType=0x%10!x!\" //  " WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c1608
    #define WPP_ANNOTATE_USBPNP_c1608 WPP_ANNOTATE_USBPNP_c1608_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemLong -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c1608 WPP_ANNOTATE_USBPNP_c1608_FINAL("TMF:", "USBPNP.c", "USBPNP_c1608", L"{", L"(UCHAR)pConfigDesc->bDescriptorType, ItemLong -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c1609_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 84 \"%0selectinterface: Cfg->wTotalLen=0x%10!x!\" //  " WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c1609_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 84 \"%0selectinterface: Cfg->wTotalLen=0x%10!x!\" //  " WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c1609
    #define WPP_ANNOTATE_USBPNP_c1609 WPP_ANNOTATE_USBPNP_c1609_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemLong -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c1609 WPP_ANNOTATE_USBPNP_c1609_FINAL("TMF:", "USBPNP.c", "USBPNP_c1609", L"{", L"(USHORT)pConfigDesc->wTotalLength, ItemLong -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c1610_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 85 \"%0selectinterface: Cfg->bNumInfs=0x%10!x!\" //  " WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c1610_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 85 \"%0selectinterface: Cfg->bNumInfs=0x%10!x!\" //  " WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c1610
    #define WPP_ANNOTATE_USBPNP_c1610 WPP_ANNOTATE_USBPNP_c1610_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemLong -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c1610 WPP_ANNOTATE_USBPNP_c1610_FINAL("TMF:", "USBPNP.c", "USBPNP_c1610", L"{", L"(UCHAR)lTotalInterfaces, ItemLong -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c1611_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 86 \"%0selectinterface: Cfg->bmAttr=0x%10!x!\" //  " WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c1611_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 86 \"%0selectinterface: Cfg->bmAttr=0x%10!x!\" //  " WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c1611
    #define WPP_ANNOTATE_USBPNP_c1611 WPP_ANNOTATE_USBPNP_c1611_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemLong -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c1611 WPP_ANNOTATE_USBPNP_c1611_FINAL("TMF:", "USBPNP.c", "USBPNP_c1611", L"{", L"(UCHAR)pConfigDesc->bmAttributes, ItemLong -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c1612_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 87 \"%0selectinterface: Cfg->MaxPower=0x%10!x!\" //  " WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c1612_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 87 \"%0selectinterface: Cfg->MaxPower=0x%10!x!\" //  " WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c1612
    #define WPP_ANNOTATE_USBPNP_c1612 WPP_ANNOTATE_USBPNP_c1612_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemLong -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c1612 WPP_ANNOTATE_USBPNP_c1612_FINAL("TMF:", "USBPNP.c", "USBPNP_c1612", L"{", L"(UCHAR)pConfigDesc->MaxPower, ItemLong -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c1666_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 88 \"%0<%10!s!>: VendorFeature ON\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_CRITICAL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c1666_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 88 \"%0<%10!s!>: VendorFeature ON\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_CRITICAL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c1666
    #define WPP_ANNOTATE_USBPNP_c1666 WPP_ANNOTATE_USBPNP_c1666_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c1666 WPP_ANNOTATE_USBPNP_c1666_FINAL("TMF:", "USBPNP.c", "USBPNP_c1666", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c1684_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 89 \"%0<%10!s!>: CtrlCap 0x%11!x! DataCap 0x%12!x!\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_CRITICAL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c1684_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 89 \"%0<%10!s!>: CtrlCap 0x%11!x! DataCap 0x%12!x!\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_CRITICAL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c1684
    #define WPP_ANNOTATE_USBPNP_c1684 WPP_ANNOTATE_USBPNP_c1684_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemLong -- 12" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c1684 WPP_ANNOTATE_USBPNP_c1684_FINAL("TMF:", "USBPNP.c", "USBPNP_c1684", L"{", L"pDevExt->PortName, ItemString -- 10" , L"bmControlCapabilities, ItemLong -- 11" , L"bmDataCapabilities, ItemLong -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c173_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 14 \"%0<%10!s!> AddDevice: Attached: lrPtr=0x%11!p! upPtr=0x%12!p!\" //   FLAG=QCUSB_DBG_MASK_CONTROL LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c173_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 14 \"%0<%10!s!> AddDevice: Attached: lrPtr=0x%11!p! upPtr=0x%12!p!\" //   FLAG=QCUSB_DBG_MASK_CONTROL LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c173
    #define WPP_ANNOTATE_USBPNP_c173 WPP_ANNOTATE_USBPNP_c173_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemPtr -- 11" , L"Arg, ItemPtr -- 12" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c173 WPP_ANNOTATE_USBPNP_c173_FINAL("TMF:", "USBPNP.c", "USBPNP_c173", L"{", L"myPortName, ItemString -- 10" , L"pDevExt->StackDeviceObject, ItemPtr -- 11" , L"pDevExt->StackDeviceObject->AttachedDevice, ItemPtr -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c1738_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 90 \"%0<%10!s!> _SelectInterfaces: parse done, totalIF=%11!d!\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_CRITICAL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c1738_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 90 \"%0<%10!s!> _SelectInterfaces: parse done, totalIF=%11!d!\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_CRITICAL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c1738
    #define WPP_ANNOTATE_USBPNP_c1738 WPP_ANNOTATE_USBPNP_c1738_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c1738 WPP_ANNOTATE_USBPNP_c1738_FINAL("TMF:", "USBPNP.c", "USBPNP_c1738", L"{", L"pDevExt->PortName, ItemString -- 10" , L"lTotalInterfaces, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c1743_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 91 \"%0 --- SEARCH %10!d! ---\" //  " WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c1743_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 91 \"%0 --- SEARCH %10!d! ---\" //  " WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c1743
    #define WPP_ANNOTATE_USBPNP_c1743 WPP_ANNOTATE_USBPNP_c1743_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemLong -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c1743 WPP_ANNOTATE_USBPNP_c1743_FINAL("TMF:", "USBPNP.c", "USBPNP_c1743", L"{", L"x-1, ItemLong -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c1744_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 92 \"%0 - INF.bLength = 0x%10!x!\" //  " WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c1744_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 92 \"%0 - INF.bLength = 0x%10!x!\" //  " WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c1744
    #define WPP_ANNOTATE_USBPNP_c1744 WPP_ANNOTATE_USBPNP_c1744_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemLong -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c1744 WPP_ANNOTATE_USBPNP_c1744_FINAL("TMF:", "USBPNP.c", "USBPNP_c1744", L"{", L"(UCHAR)pIntdesc->bLength, ItemLong -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c1745_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 93 \"%0 - INF.bDescriptorType = 0x%10!x!\" //  " WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c1745_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 93 \"%0 - INF.bDescriptorType = 0x%10!x!\" //  " WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c1745
    #define WPP_ANNOTATE_USBPNP_c1745 WPP_ANNOTATE_USBPNP_c1745_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemLong -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c1745 WPP_ANNOTATE_USBPNP_c1745_FINAL("TMF:", "USBPNP.c", "USBPNP_c1745", L"{", L"(UCHAR)pIntdesc->bDescriptorType, ItemLong -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c1746_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 94 \"%0 - INF.bInterfaceNumber = 0x%10!x!\" //  " WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c1746_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 94 \"%0 - INF.bInterfaceNumber = 0x%10!x!\" //  " WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c1746
    #define WPP_ANNOTATE_USBPNP_c1746 WPP_ANNOTATE_USBPNP_c1746_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemLong -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c1746 WPP_ANNOTATE_USBPNP_c1746_FINAL("TMF:", "USBPNP.c", "USBPNP_c1746", L"{", L"(UCHAR)pIntdesc->bInterfaceNumber, ItemLong -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c1747_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 95 \"%0 - INF.bAlternateSetting = 0x%10!x!\" //  " WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c1747_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 95 \"%0 - INF.bAlternateSetting = 0x%10!x!\" //  " WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c1747
    #define WPP_ANNOTATE_USBPNP_c1747 WPP_ANNOTATE_USBPNP_c1747_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemLong -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c1747 WPP_ANNOTATE_USBPNP_c1747_FINAL("TMF:", "USBPNP.c", "USBPNP_c1747", L"{", L"(UCHAR)pIntdesc->bAlternateSetting, ItemLong -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c1748_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 96 \"%0 - INF.bNumEndpoints = 0x%10!x!\" //  " WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c1748_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 96 \"%0 - INF.bNumEndpoints = 0x%10!x!\" //  " WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c1748
    #define WPP_ANNOTATE_USBPNP_c1748 WPP_ANNOTATE_USBPNP_c1748_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemLong -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c1748 WPP_ANNOTATE_USBPNP_c1748_FINAL("TMF:", "USBPNP.c", "USBPNP_c1748", L"{", L"(UCHAR)pIntdesc->bNumEndpoints, ItemLong -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c1749_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 97 \"%0 - INF.bInterfaceClass = 0x%10!x!\" //  " WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c1749_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 97 \"%0 - INF.bInterfaceClass = 0x%10!x!\" //  " WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c1749
    #define WPP_ANNOTATE_USBPNP_c1749 WPP_ANNOTATE_USBPNP_c1749_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemLong -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c1749 WPP_ANNOTATE_USBPNP_c1749_FINAL("TMF:", "USBPNP.c", "USBPNP_c1749", L"{", L"(UCHAR)pIntdesc->bInterfaceClass, ItemLong -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c1750_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 98 \"%0 - INF.bInterfaceSubClass = 0x%10!x!\" //  " WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c1750_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 98 \"%0 - INF.bInterfaceSubClass = 0x%10!x!\" //  " WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c1750
    #define WPP_ANNOTATE_USBPNP_c1750 WPP_ANNOTATE_USBPNP_c1750_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemLong -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c1750 WPP_ANNOTATE_USBPNP_c1750_FINAL("TMF:", "USBPNP.c", "USBPNP_c1750", L"{", L"(UCHAR)pIntdesc->bInterfaceSubClass, ItemLong -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c1751_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 99 \"%0 - INF.bInterfaceProtocol = 0x%10!x!\" //  " WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c1751_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 99 \"%0 - INF.bInterfaceProtocol = 0x%10!x!\" //  " WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c1751
    #define WPP_ANNOTATE_USBPNP_c1751 WPP_ANNOTATE_USBPNP_c1751_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemLong -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c1751 WPP_ANNOTATE_USBPNP_c1751_FINAL("TMF:", "USBPNP.c", "USBPNP_c1751", L"{", L"(UCHAR)pIntdesc->bInterfaceProtocol, ItemLong -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c1782_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 100 \"%0<%10!s!> _SelectInterfaces: ignore ECM reset IF (%11!u! EP)\" //   FLAG=QCUSB_DBG_MASK_CONTROL LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c1782_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 100 \"%0<%10!s!> _SelectInterfaces: ignore ECM reset IF (%11!u! EP)\" //   FLAG=QCUSB_DBG_MASK_CONTROL LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c1782
    #define WPP_ANNOTATE_USBPNP_c1782 WPP_ANNOTATE_USBPNP_c1782_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c1782 WPP_ANNOTATE_USBPNP_c1782_FINAL("TMF:", "USBPNP.c", "USBPNP_c1782", L"{", L"pDevExt->PortName, ItemString -- 10" , L"pIntdesc->bNumEndpoints, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c1799_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 101 \"%0<%10!s!> _SelectInterfaces-a: IF %11!u! alt %12!u! added to config[%13!u!] (%14!u! EP)\" //   FLAG=QCUSB_DBG_MASK_CONTROL LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c1799_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 101 \"%0<%10!s!> _SelectInterfaces-a: IF %11!u! alt %12!u! added to config[%13!u!] (%14!u! EP)\" //   FLAG=QCUSB_DBG_MASK_CONTROL LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c1799
    #define WPP_ANNOTATE_USBPNP_c1799 WPP_ANNOTATE_USBPNP_c1799_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemLong -- 12" , L"Arg, ItemLong -- 13" , L"Arg, ItemLong -- 14" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c1799 WPP_ANNOTATE_USBPNP_c1799_FINAL("TMF:", "USBPNP.c", "USBPNP_c1799", L"{", L"pDevExt->PortName, ItemString -- 10" , L"pIntdesc->bInterfaceNumber, ItemLong -- 11" , L"pIntdesc->bAlternateSetting, ItemLong -- 12" , L"x, ItemLong -- 13" , L"pIntdesc->bNumEndpoints, ItemLong -- 14" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c182_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 15 \"%0<%10!s!> AddDevice: IoAttachDeviceToDeviceStack failure\" //   FLAG=QCUSB_DBG_MASK_CONTROL LEVEL=QCUSB_DBG_LEVEL_CRITICAL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c182_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 15 \"%0<%10!s!> AddDevice: IoAttachDeviceToDeviceStack failure\" //   FLAG=QCUSB_DBG_MASK_CONTROL LEVEL=QCUSB_DBG_LEVEL_CRITICAL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c182
    #define WPP_ANNOTATE_USBPNP_c182 WPP_ANNOTATE_USBPNP_c182_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c182 WPP_ANNOTATE_USBPNP_c182_FINAL("TMF:", "USBPNP.c", "USBPNP_c182", L"{", L"myPortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c1829_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 102 \"%0<%10!s!> _SelectInterfaces-b: IF %11!u! alt %12!u! added to config[%13!u!] (%14!u! EP)\" //   FLAG=QCUSB_DBG_MASK_CONTROL LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c1829_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 102 \"%0<%10!s!> _SelectInterfaces-b: IF %11!u! alt %12!u! added to config[%13!u!] (%14!u! EP)\" //   FLAG=QCUSB_DBG_MASK_CONTROL LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c1829
    #define WPP_ANNOTATE_USBPNP_c1829 WPP_ANNOTATE_USBPNP_c1829_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemLong -- 12" , L"Arg, ItemLong -- 13" , L"Arg, ItemLong -- 14" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c1829 WPP_ANNOTATE_USBPNP_c1829_FINAL("TMF:", "USBPNP.c", "USBPNP_c1829", L"{", L"pDevExt->PortName, ItemString -- 10" , L"pIntdesc->bInterfaceNumber, ItemLong -- 11" , L"pIntdesc->bAlternateSetting, ItemLong -- 12" , L"x, ItemLong -- 13" , L"pIntdesc->bNumEndpoints, ItemLong -- 14" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c1841_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 103 \"%0<%10!s!> _SelectInterfaces: error -- too many interfaces\" //   FLAG=QCUSB_DBG_MASK_CONTROL LEVEL=QCUSB_DBG_LEVEL_CRITICAL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c1841_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 103 \"%0<%10!s!> _SelectInterfaces: error -- too many interfaces\" //   FLAG=QCUSB_DBG_MASK_CONTROL LEVEL=QCUSB_DBG_LEVEL_CRITICAL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c1841
    #define WPP_ANNOTATE_USBPNP_c1841 WPP_ANNOTATE_USBPNP_c1841_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c1841 WPP_ANNOTATE_USBPNP_c1841_FINAL("TMF:", "USBPNP.c", "USBPNP_c1841", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c1857_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 104 \"%0<%10!s!> _SelectInterfaces: err - USBD_CreateConfigurationRequestEx\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_CRITICAL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c1857_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 104 \"%0<%10!s!> _SelectInterfaces: err - USBD_CreateConfigurationRequestEx\" //   FLAG=QCUSB_DBG_MASK_READ LEVEL=QCUSB_DBG_LEVEL_CRITICAL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c1857
    #define WPP_ANNOTATE_USBPNP_c1857 WPP_ANNOTATE_USBPNP_c1857_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c1857 WPP_ANNOTATE_USBPNP_c1857_FINAL("TMF:", "USBPNP.c", "USBPNP_c1857", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c1867_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 105 \"%0 <%10!d!> - Interface is NULL \" //  " WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c1867_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 105 \"%0 <%10!d!> - Interface is NULL \" //  " WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c1867
    #define WPP_ANNOTATE_USBPNP_c1867 WPP_ANNOTATE_USBPNP_c1867_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemLong -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c1867 WPP_ANNOTATE_USBPNP_c1867_FINAL("TMF:", "USBPNP.c", "USBPNP_c1867", L"{", L"i, ItemLong -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c1871_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 106 \"%0 <%10!d!> - Interface is NOT NULL!!! \" //  " WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c1871_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 106 \"%0 <%10!d!> - Interface is NOT NULL!!! \" //  " WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c1871
    #define WPP_ANNOTATE_USBPNP_c1871 WPP_ANNOTATE_USBPNP_c1871_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemLong -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c1871 WPP_ANNOTATE_USBPNP_c1871_FINAL("TMF:", "USBPNP.c", "USBPNP_c1871", L"{", L"i, ItemLong -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c1878_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 107 \"%0 <%10!d!> - InterfaceDesc is NULL \" //  " WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c1878_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 107 \"%0 <%10!d!> - InterfaceDesc is NULL \" //  " WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c1878
    #define WPP_ANNOTATE_USBPNP_c1878 WPP_ANNOTATE_USBPNP_c1878_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemLong -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c1878 WPP_ANNOTATE_USBPNP_c1878_FINAL("TMF:", "USBPNP.c", "USBPNP_c1878", L"{", L"i, ItemLong -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c1892_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 108 \"%0 pIntinfo is NULL, FAILED!!!\" //   FLAG=QCUSB_DBG_MASK_CONTROL LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c1892_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 108 \"%0 pIntinfo is NULL, FAILED!!!\" //   FLAG=QCUSB_DBG_MASK_CONTROL LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c1892
    #define WPP_ANNOTATE_USBPNP_c1892 WPP_ANNOTATE_USBPNP_c1892_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c1892 WPP_ANNOTATE_USBPNP_c1892_FINAL("TMF:", "USBPNP.c", "USBPNP_c1892", L"{", L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c1916_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 109 \"%0<%10!s!> _SelectInterfaces: Too many pipes, %11!d!\" //   FLAG=QCUSB_DBG_MASK_CONTROL LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c1916_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 109 \"%0<%10!s!> _SelectInterfaces: Too many pipes, %11!d!\" //   FLAG=QCUSB_DBG_MASK_CONTROL LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c1916
    #define WPP_ANNOTATE_USBPNP_c1916 WPP_ANNOTATE_USBPNP_c1916_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c1916 WPP_ANNOTATE_USBPNP_c1916_FINAL("TMF:", "USBPNP.c", "USBPNP_c1916", L"{", L"pDevExt->PortName, ItemString -- 10" , L"ucNumPipes, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c1942_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 110 \"%0 CONFIG NTSTATUS = SUCCESS!!\" //  " WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c1942_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 110 \"%0 CONFIG NTSTATUS = SUCCESS!!\" //  " WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c1942
    #define WPP_ANNOTATE_USBPNP_c1942 WPP_ANNOTATE_USBPNP_c1942_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c1942 WPP_ANNOTATE_USBPNP_c1942_FINAL("TMF:", "USBPNP.c", "USBPNP_c1942", L"{", L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c1946_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 111 \"%0 CONFIG Failed NTSTATUS = 0x%10!x!...\" //  " WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c1946_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 111 \"%0 CONFIG Failed NTSTATUS = 0x%10!x!...\" //  " WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c1946
    #define WPP_ANNOTATE_USBPNP_c1946 WPP_ANNOTATE_USBPNP_c1946_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemLong -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c1946 WPP_ANNOTATE_USBPNP_c1946_FINAL("TMF:", "USBPNP.c", "USBPNP_c1946", L"{", L"ntStatus, ItemLong -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c1951_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 112 \"%0 CONFIG Purb NTSTATUS_SUCCESS\n\" //  " WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c1951_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 112 \"%0 CONFIG Purb NTSTATUS_SUCCESS\n\" //  " WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c1951
    #define WPP_ANNOTATE_USBPNP_c1951 WPP_ANNOTATE_USBPNP_c1951_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c1951 WPP_ANNOTATE_USBPNP_c1951_FINAL("TMF:", "USBPNP.c", "USBPNP_c1951", L"{", L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c1955_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 113 \"%0 CONFIG URB Failed NTSTATUS = 0x%10!x!...\n\" //  " WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c1955_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 113 \"%0 CONFIG URB Failed NTSTATUS = 0x%10!x!...\n\" //  " WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c1955
    #define WPP_ANNOTATE_USBPNP_c1955 WPP_ANNOTATE_USBPNP_c1955_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemLong -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c1955 WPP_ANNOTATE_USBPNP_c1955_FINAL("TMF:", "USBPNP.c", "USBPNP_c1955", L"{", L"pUrb->UrbSelectConfiguration.Hdr.Status, ItemLong -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c2026_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 114 \"%0---------\" //  " WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c2026_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 114 \"%0---------\" //  " WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c2026
    #define WPP_ANNOTATE_USBPNP_c2026 WPP_ANNOTATE_USBPNP_c2026_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c2026 WPP_ANNOTATE_USBPNP_c2026_FINAL("TMF:", "USBPNP.c", "USBPNP_c2026", L"{", L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c2027_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 115 \"%0PipeType 0x%10!x!\" //  " WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c2027_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 115 \"%0PipeType 0x%10!x!\" //  " WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c2027
    #define WPP_ANNOTATE_USBPNP_c2027 WPP_ANNOTATE_USBPNP_c2027_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemLong -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c2027 WPP_ANNOTATE_USBPNP_c2027_FINAL("TMF:", "USBPNP.c", "USBPNP_c2027", L"{", L"pipeInformation->PipeType, ItemLong -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c2028_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 116 \"%0EndpointAddress 0x%10!x!\" //  " WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c2028_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 116 \"%0EndpointAddress 0x%10!x!\" //  " WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c2028
    #define WPP_ANNOTATE_USBPNP_c2028 WPP_ANNOTATE_USBPNP_c2028_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemLong -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c2028 WPP_ANNOTATE_USBPNP_c2028_FINAL("TMF:", "USBPNP.c", "USBPNP_c2028", L"{", L"pipeInformation->EndpointAddress, ItemLong -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c2029_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 117 \"%0MaxPacketSize 0x%10!x!\" //  " WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c2029_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 117 \"%0MaxPacketSize 0x%10!x!\" //  " WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c2029
    #define WPP_ANNOTATE_USBPNP_c2029 WPP_ANNOTATE_USBPNP_c2029_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemLong -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c2029 WPP_ANNOTATE_USBPNP_c2029_FINAL("TMF:", "USBPNP.c", "USBPNP_c2029", L"{", L"pipeInformation->MaximumPacketSize, ItemLong -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c2030_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 118 \"%0Interval 0x%10!x!\" //  " WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c2030_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 118 \"%0Interval 0x%10!x!\" //  " WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c2030
    #define WPP_ANNOTATE_USBPNP_c2030 WPP_ANNOTATE_USBPNP_c2030_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemLong -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c2030 WPP_ANNOTATE_USBPNP_c2030_FINAL("TMF:", "USBPNP.c", "USBPNP_c2030", L"{", L"pipeInformation->Interval, ItemLong -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c2031_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 119 \"%0Handle %10!p!\" //  " WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c2031_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 119 \"%0Handle %10!p!\" //  " WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c2031
    #define WPP_ANNOTATE_USBPNP_c2031 WPP_ANNOTATE_USBPNP_c2031_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemPtr -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c2031 WPP_ANNOTATE_USBPNP_c2031_FINAL("TMF:", "USBPNP.c", "USBPNP_c2031", L"{", L"pipeInformation->PipeHandle, ItemPtr -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c2042_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 120 \"%0<%10!s!> _SelectInterfaces: no mem - if\" //   FLAG=QCUSB_DBG_MASK_CONTROL LEVEL=QCUSB_DBG_LEVEL_CRITICAL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c2042_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 120 \"%0<%10!s!> _SelectInterfaces: no mem - if\" //   FLAG=QCUSB_DBG_MASK_CONTROL LEVEL=QCUSB_DBG_LEVEL_CRITICAL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c2042
    #define WPP_ANNOTATE_USBPNP_c2042 WPP_ANNOTATE_USBPNP_c2042_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c2042 WPP_ANNOTATE_USBPNP_c2042_FINAL("TMF:", "USBPNP.c", "USBPNP_c2042", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c2067_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 121 \"%0\n   ============ Loaded ==========\" //  " WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c2067_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 121 \"%0\n   ============ Loaded ==========\" //  " WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c2067
    #define WPP_ANNOTATE_USBPNP_c2067 WPP_ANNOTATE_USBPNP_c2067_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c2067 WPP_ANNOTATE_USBPNP_c2067_FINAL("TMF:", "USBPNP.c", "USBPNP_c2067", L"{", L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c2068_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 122 \"%0   | Device Type: CDC(%10!02X!)       |\" //  " WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c2068_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 122 \"%0   | Device Type: CDC(%10!02X!)       |\" //  " WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c2068
    #define WPP_ANNOTATE_USBPNP_c2068 WPP_ANNOTATE_USBPNP_c2068_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemLong -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c2068 WPP_ANNOTATE_USBPNP_c2068_FINAL("TMF:", "USBPNP.c", "USBPNP_c2068", L"{", L"pDevExt->DataInterface, ItemLong -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c2069_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 123 \"%0   |   Version: %10!-10s!      |\" //  " WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c2069_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 123 \"%0   |   Version: %10!-10s!      |\" //  " WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c2069
    #define WPP_ANNOTATE_USBPNP_c2069 WPP_ANNOTATE_USBPNP_c2069_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c2069 WPP_ANNOTATE_USBPNP_c2069_FINAL("TMF:", "USBPNP.c", "USBPNP_c2069", L"{", L"gVendorConfig.DriverVersion, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c2070_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 124 \"%0   |   Device:  %10!-10s!      |\" //  " WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c2070_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 124 \"%0   |   Device:  %10!-10s!      |\" //  " WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c2070
    #define WPP_ANNOTATE_USBPNP_c2070 WPP_ANNOTATE_USBPNP_c2070_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c2070 WPP_ANNOTATE_USBPNP_c2070_FINAL("TMF:", "USBPNP.c", "USBPNP_c2070", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c2071_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 125 \"%0   |   IF: CT%10!02d!-CC%11!02d!-DA%12!02d!       |\" //  " WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c2071_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 125 \"%0   |   IF: CT%10!02d!-CC%11!02d!-DA%12!02d!       |\" //  " WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c2071
    #define WPP_ANNOTATE_USBPNP_c2071 WPP_ANNOTATE_USBPNP_c2071_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemLong -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemLong -- 12" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c2071 WPP_ANNOTATE_USBPNP_c2071_FINAL("TMF:", "USBPNP.c", "USBPNP_c2071", L"{", L"pDevExt->ControlInterface, ItemLong -- 10" , L"pDevExt->usCommClassInterface, ItemLong -- 11" , L"pDevExt->DataInterface, ItemLong -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c2073_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 126 \"%0   |   EP(0x%10!x!, 0x%11!x!, 0x%12!x!) HS 0x%13!x!  ATTR : 0x%14!x! |\" //  " WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c2073_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 126 \"%0   |   EP(0x%10!x!, 0x%11!x!, 0x%12!x!) HS 0x%13!x!  ATTR : 0x%14!x! |\" //  " WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c2073
    #define WPP_ANNOTATE_USBPNP_c2073 WPP_ANNOTATE_USBPNP_c2073_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemLong -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemLong -- 12" , L"Arg, ItemLong -- 13" , L"Arg, ItemLong -- 14" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c2073 WPP_ANNOTATE_USBPNP_c2073_FINAL("TMF:", "USBPNP.c", "USBPNP_c2073", L"{", L"pDevExt->Interface[pDevExt->DataInterface]                              ->Pipes[pDevExt->BulkPipeInput].EndpointAddress, ItemLong -- 10" , L"pDevExt->Interface[pDevExt->DataInterface]                              ->Pipes[pDevExt->BulkPipeOutput].EndpointAddress, ItemLong -- 11" , L"pDevExt->Interface[pDevExt->usCommClassInterface]                              ->Pipes[pDevExt->InterruptPipe].EndpointAddress, ItemLong -- 12" , L"pDevExt->HighSpeedUsbOk, ItemLong -- 13" , L"pDevExt->bmAttributes, ItemLong -- 14" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c2081_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 127 \"%0Driver Version %10!s!\" //  " WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c2081_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 127 \"%0Driver Version %10!s!\" //  " WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c2081
    #define WPP_ANNOTATE_USBPNP_c2081 WPP_ANNOTATE_USBPNP_c2081_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c2081 WPP_ANNOTATE_USBPNP_c2081_FINAL("TMF:", "USBPNP.c", "USBPNP_c2081", L"{", L"'4.0.4.9', ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c2082_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 128 \"%0   |============================|\" //  " WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c2082_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 128 \"%0   |============================|\" //  " WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c2082
    #define WPP_ANNOTATE_USBPNP_c2082 WPP_ANNOTATE_USBPNP_c2082_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c2082 WPP_ANNOTATE_USBPNP_c2082_FINAL("TMF:", "USBPNP.c", "USBPNP_c2082", L"{", L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c2090_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 129 \"%0\n   ============== Loaded ===========\" //  " WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c2090_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 129 \"%0\n   ============== Loaded ===========\" //  " WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c2090
    #define WPP_ANNOTATE_USBPNP_c2090 WPP_ANNOTATE_USBPNP_c2090_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c2090 WPP_ANNOTATE_USBPNP_c2090_FINAL("TMF:", "USBPNP.c", "USBPNP_c2090", L"{", L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c2091_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 130 \"%0   | DeviceType: NET0(%10!02X!)          |\" //  " WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c2091_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 130 \"%0   | DeviceType: NET0(%10!02X!)          |\" //  " WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c2091
    #define WPP_ANNOTATE_USBPNP_c2091 WPP_ANNOTATE_USBPNP_c2091_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemLong -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c2091 WPP_ANNOTATE_USBPNP_c2091_FINAL("TMF:", "USBPNP.c", "USBPNP_c2091", L"{", L"pDevExt->DataInterface, ItemLong -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c2092_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 131 \"%0   |   Version: %10!-10s!         |\" //  " WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c2092_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 131 \"%0   |   Version: %10!-10s!         |\" //  " WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c2092
    #define WPP_ANNOTATE_USBPNP_c2092 WPP_ANNOTATE_USBPNP_c2092_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c2092 WPP_ANNOTATE_USBPNP_c2092_FINAL("TMF:", "USBPNP.c", "USBPNP_c2092", L"{", L"gVendorConfig.DriverVersion, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c2093_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 132 \"%0   |   Device:  %10!-10s!         |\" //  " WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c2093_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 132 \"%0   |   Device:  %10!-10s!         |\" //  " WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c2093
    #define WPP_ANNOTATE_USBPNP_c2093 WPP_ANNOTATE_USBPNP_c2093_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c2093 WPP_ANNOTATE_USBPNP_c2093_FINAL("TMF:", "USBPNP.c", "USBPNP_c2093", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c2094_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 133 \"%0   |   IF: CT%10!02d!-CC%11!02d!-DA%12!02d!          |\" //  " WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c2094_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 133 \"%0   |   IF: CT%10!02d!-CC%11!02d!-DA%12!02d!          |\" //  " WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c2094
    #define WPP_ANNOTATE_USBPNP_c2094 WPP_ANNOTATE_USBPNP_c2094_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemLong -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemLong -- 12" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c2094 WPP_ANNOTATE_USBPNP_c2094_FINAL("TMF:", "USBPNP.c", "USBPNP_c2094", L"{", L"pDevExt->ControlInterface, ItemLong -- 10" , L"pDevExt->usCommClassInterface, ItemLong -- 11" , L"pDevExt->DataInterface, ItemLong -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c2096_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 134 \"%0   |   EP(0x%10!x!, 0x%11!x!) HS 0x%12!x!  ATTR : 0x%13!x! |\" //  " WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c2096_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 134 \"%0   |   EP(0x%10!x!, 0x%11!x!) HS 0x%12!x!  ATTR : 0x%13!x! |\" //  " WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c2096
    #define WPP_ANNOTATE_USBPNP_c2096 WPP_ANNOTATE_USBPNP_c2096_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemLong -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemLong -- 12" , L"Arg, ItemLong -- 13" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c2096 WPP_ANNOTATE_USBPNP_c2096_FINAL("TMF:", "USBPNP.c", "USBPNP_c2096", L"{", L"pDevExt->Interface[pDevExt->DataInterface]                              ->Pipes[pDevExt->BulkPipeInput].EndpointAddress, ItemLong -- 10" , L"pDevExt->Interface[pDevExt->DataInterface]                              ->Pipes[pDevExt->BulkPipeOutput].EndpointAddress, ItemLong -- 11" , L"pDevExt->HighSpeedUsbOk, ItemLong -- 12" , L"pDevExt->bmAttributes, ItemLong -- 13" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c2102_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 135 \"%0Driver Version %10!s!\" //  " WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c2102_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 135 \"%0Driver Version %10!s!\" //  " WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c2102
    #define WPP_ANNOTATE_USBPNP_c2102 WPP_ANNOTATE_USBPNP_c2102_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c2102 WPP_ANNOTATE_USBPNP_c2102_FINAL("TMF:", "USBPNP.c", "USBPNP_c2102", L"{", L"'4.0.4.9', ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c2103_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 136 \"%0   |===============================|\" //  " WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c2103_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 136 \"%0   |===============================|\" //  " WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c2103
    #define WPP_ANNOTATE_USBPNP_c2103 WPP_ANNOTATE_USBPNP_c2103_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c2103 WPP_ANNOTATE_USBPNP_c2103_FINAL("TMF:", "USBPNP.c", "USBPNP_c2103", L"{", L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c2112_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 137 \"%0     MaxPipeXfer: %10!u! Bytes\n\" //   FLAG=QCUSB_DBG_MASK_CONTROL LEVEL=QCUSB_DBG_LEVEL_INFO" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c2112_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 137 \"%0     MaxPipeXfer: %10!u! Bytes\n\" //   FLAG=QCUSB_DBG_MASK_CONTROL LEVEL=QCUSB_DBG_LEVEL_INFO" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c2112
    #define WPP_ANNOTATE_USBPNP_c2112 WPP_ANNOTATE_USBPNP_c2112_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemLong -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c2112 WPP_ANNOTATE_USBPNP_c2112_FINAL("TMF:", "USBPNP.c", "USBPNP_c2112", L"{", L"pDevExt->MaxPipeXferSize, ItemLong -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c2119_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 138 \"%0\n   ==============================\" //  " WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c2119_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 138 \"%0\n   ==============================\" //  " WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c2119
    #define WPP_ANNOTATE_USBPNP_c2119 WPP_ANNOTATE_USBPNP_c2119_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c2119 WPP_ANNOTATE_USBPNP_c2119_FINAL("TMF:", "USBPNP.c", "USBPNP_c2119", L"{", L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c2120_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 139 \"%0   | Modem Type: NONE(%10!02X!)       |\" //  " WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c2120_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 139 \"%0   | Modem Type: NONE(%10!02X!)       |\" //  " WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c2120
    #define WPP_ANNOTATE_USBPNP_c2120 WPP_ANNOTATE_USBPNP_c2120_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemLong -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c2120 WPP_ANNOTATE_USBPNP_c2120_FINAL("TMF:", "USBPNP.c", "USBPNP_c2120", L"{", L"pDevExt->DataInterface, ItemLong -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c2121_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 140 \"%0   |============================|\n\" //  " WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c2121_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 140 \"%0   |============================|\n\" //  " WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c2121
    #define WPP_ANNOTATE_USBPNP_c2121 WPP_ANNOTATE_USBPNP_c2121_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c2121 WPP_ANNOTATE_USBPNP_c2121_FINAL("TMF:", "USBPNP.c", "USBPNP_c2121", L"{", L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c2145_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 141 \"%0<%10!s!> failed to identify device type!\" //  " WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c2145_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 141 \"%0<%10!s!> failed to identify device type!\" //  " WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c2145
    #define WPP_ANNOTATE_USBPNP_c2145 WPP_ANNOTATE_USBPNP_c2145_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c2145 WPP_ANNOTATE_USBPNP_c2145_FINAL("TMF:", "USBPNP.c", "USBPNP_c2145", L"{", L"gDeviceName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c2187_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 142 \"%0<%10!s!> USBPNP_HandleRemoveDevice: FDO 0x%11!p!\" //   FLAG=QCUSB_DBG_MASK_CONTROL LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c2187_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 142 \"%0<%10!s!> USBPNP_HandleRemoveDevice: FDO 0x%11!p!\" //   FLAG=QCUSB_DBG_MASK_CONTROL LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c2187
    #define WPP_ANNOTATE_USBPNP_c2187 WPP_ANNOTATE_USBPNP_c2187_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemPtr -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c2187 WPP_ANNOTATE_USBPNP_c2187_FINAL("TMF:", "USBPNP.c", "USBPNP_c2187", L"{", L"pDevExt->PortName, ItemString -- 10" , L"DeviceObject, ItemPtr -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c2207_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 143 \"%0<%10!s!> USBPNP_HandleRemoveDevice: IoCallDriver 0x%11!p!\" //   FLAG=QCUSB_DBG_MASK_CONTROL LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c2207_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 143 \"%0<%10!s!> USBPNP_HandleRemoveDevice: IoCallDriver 0x%11!p!\" //   FLAG=QCUSB_DBG_MASK_CONTROL LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c2207
    #define WPP_ANNOTATE_USBPNP_c2207 WPP_ANNOTATE_USBPNP_c2207_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemPtr -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c2207 WPP_ANNOTATE_USBPNP_c2207_FINAL("TMF:", "USBPNP.c", "USBPNP_c2207", L"{", L"pDevExt->PortName, ItemString -- 10" , L"pDevExt->StackDeviceObject, ItemPtr -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c2219_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 144 \"%0<%10!s!> USBPNP_HandleRemoveDevice: IoCallDriver st 0x%11!x! \" //   FLAG=QCUSB_DBG_MASK_CONTROL LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c2219_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 144 \"%0<%10!s!> USBPNP_HandleRemoveDevice: IoCallDriver st 0x%11!x! \" //   FLAG=QCUSB_DBG_MASK_CONTROL LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c2219
    #define WPP_ANNOTATE_USBPNP_c2219 WPP_ANNOTATE_USBPNP_c2219_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c2219 WPP_ANNOTATE_USBPNP_c2219_FINAL("TMF:", "USBPNP.c", "USBPNP_c2219", L"{", L"pDevExt->PortName, ItemString -- 10" , L"ntStatus, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c2307_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 145 \"%0<%10!s!> USBPNP_InitDevExt: 0x%11!p!\" //   GFLAG=QCUSB_DBG_MASK_CONTROL GLEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c2307_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 145 \"%0<%10!s!> USBPNP_InitDevExt: 0x%11!p!\" //   GFLAG=QCUSB_DBG_MASK_CONTROL GLEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c2307
    #define WPP_ANNOTATE_USBPNP_c2307 WPP_ANNOTATE_USBPNP_c2307_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemPtr -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c2307 WPP_ANNOTATE_USBPNP_c2307_FINAL("TMF:", "USBPNP.c", "USBPNP_c2307", L"{", L"myPortName, ItemString -- 10" , L"deviceObject, ItemPtr -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c2346_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 146 \"%0<%10!s!> USBPNP_InitDevExt: NO MEM - A\" //   FLAG=QCUSB_DBG_MASK_CONTROL LEVEL=QCUSB_DBG_LEVEL_FORCE" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c2346_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 146 \"%0<%10!s!> USBPNP_InitDevExt: NO MEM - A\" //   FLAG=QCUSB_DBG_MASK_CONTROL LEVEL=QCUSB_DBG_LEVEL_FORCE" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c2346
    #define WPP_ANNOTATE_USBPNP_c2346 WPP_ANNOTATE_USBPNP_c2346_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c2346 WPP_ANNOTATE_USBPNP_c2346_FINAL("TMF:", "USBPNP.c", "USBPNP_c2346", L"{", L"myPortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c2375_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 147 \"%0<%10!s!> USBPNP_InitDevExt: NO MEM - 0\" //   FLAG=QCUSB_DBG_MASK_CONTROL LEVEL=QCUSB_DBG_LEVEL_FORCE" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c2375_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 147 \"%0<%10!s!> USBPNP_InitDevExt: NO MEM - 0\" //   FLAG=QCUSB_DBG_MASK_CONTROL LEVEL=QCUSB_DBG_LEVEL_FORCE" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c2375
    #define WPP_ANNOTATE_USBPNP_c2375 WPP_ANNOTATE_USBPNP_c2375_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c2375 WPP_ANNOTATE_USBPNP_c2375_FINAL("TMF:", "USBPNP.c", "USBPNP_c2375", L"{", L"myPortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c2403_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 148 \"%0<%10!s!> USBPNP: MWT NO MEM\" //   GFLAG=QCUSB_DBG_MASK_CONTROL GLEVEL=QCUSB_DBG_LEVEL_FORCE" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c2403_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 148 \"%0<%10!s!> USBPNP: MWT NO MEM\" //   GFLAG=QCUSB_DBG_MASK_CONTROL GLEVEL=QCUSB_DBG_LEVEL_FORCE" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c2403
    #define WPP_ANNOTATE_USBPNP_c2403 WPP_ANNOTATE_USBPNP_c2403_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c2403 WPP_ANNOTATE_USBPNP_c2403_FINAL("TMF:", "USBPNP.c", "USBPNP_c2403", L"{", L"myPortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c2970_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 149 \"%0<%10!s!> USBUTL_GetServiceRegValue: returned 0x%11!x! Value 0x%12!x!\" //   FLAG=QCUSB_DBG_MASK_CONTROL LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c2970_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 149 \"%0<%10!s!> USBUTL_GetServiceRegValue: returned 0x%11!x! Value 0x%12!x!\" //   FLAG=QCUSB_DBG_MASK_CONTROL LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c2970
    #define WPP_ANNOTATE_USBPNP_c2970 WPP_ANNOTATE_USBPNP_c2970_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemLong -- 12" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c2970 WPP_ANNOTATE_USBPNP_c2970_FINAL("TMF:", "USBPNP.c", "USBPNP_c2970", L"{", L"myPortName, ItemString -- 10" , L"ntStatus, ItemLong -- 11" , L"selectiveSuspendIdleTime, ItemLong -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c3014_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 150 \"%0<%10!s!> USBPNP_InitDevExt: exit 0x%11!x!\" //   FLAG=QCUSB_DBG_MASK_CONTROL LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c3014_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 150 \"%0<%10!s!> USBPNP_InitDevExt: exit 0x%11!x!\" //   FLAG=QCUSB_DBG_MASK_CONTROL LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c3014
    #define WPP_ANNOTATE_USBPNP_c3014 WPP_ANNOTATE_USBPNP_c3014_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c3014 WPP_ANNOTATE_USBPNP_c3014_FINAL("TMF:", "USBPNP.c", "USBPNP_c3014", L"{", L"myPortName, ItemString -- 10" , L"ntStatus, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c3036_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 151 \"%0<%10!s!> _ValidateConfigDescriptor: bad length: %11!u!B, %12!u!B\" //   FLAG=QCUSB_DBG_MASK_CONTROL LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c3036_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 151 \"%0<%10!s!> _ValidateConfigDescriptor: bad length: %11!u!B, %12!u!B\" //   FLAG=QCUSB_DBG_MASK_CONTROL LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c3036
    #define WPP_ANNOTATE_USBPNP_c3036 WPP_ANNOTATE_USBPNP_c3036_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemLong -- 12" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c3036 WPP_ANNOTATE_USBPNP_c3036_FINAL("TMF:", "USBPNP.c", "USBPNP_c3036", L"{", L"pDevExt->PortName, ItemString -- 10" , L"ConfigDesc->bLength, ItemLong -- 11" , L"ConfigDesc->wTotalLength, ItemLong -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c3048_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 152 \"%0<%10!s!> _ValidateConfigDescriptor: bad bNumInterfaces 0x%11!x!\" //   FLAG=QCUSB_DBG_MASK_CONTROL LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c3048_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 152 \"%0<%10!s!> _ValidateConfigDescriptor: bad bNumInterfaces 0x%11!x!\" //   FLAG=QCUSB_DBG_MASK_CONTROL LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c3048
    #define WPP_ANNOTATE_USBPNP_c3048 WPP_ANNOTATE_USBPNP_c3048_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c3048 WPP_ANNOTATE_USBPNP_c3048_FINAL("TMF:", "USBPNP.c", "USBPNP_c3048", L"{", L"pDevExt->PortName, ItemString -- 10" , L"ConfigDesc->bNumInterfaces, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c3060_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 153 \"%0<%10!s!> _ValidateConfigDescriptor: bad bDescriptorType 0x%11!x!\" //   FLAG=QCUSB_DBG_MASK_CONTROL LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c3060_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 153 \"%0<%10!s!> _ValidateConfigDescriptor: bad bDescriptorType 0x%11!x!\" //   FLAG=QCUSB_DBG_MASK_CONTROL LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c3060
    #define WPP_ANNOTATE_USBPNP_c3060 WPP_ANNOTATE_USBPNP_c3060_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c3060 WPP_ANNOTATE_USBPNP_c3060_FINAL("TMF:", "USBPNP.c", "USBPNP_c3060", L"{", L"pDevExt->PortName, ItemString -- 10" , L"ConfigDesc->bDescriptorType, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c3072_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 154 \"%0<%10!s!> _ValidateConfigDescriptor: bad bConfigurationValue 0x%11!x!\" //   FLAG=QCUSB_DBG_MASK_CONTROL LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c3072_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 154 \"%0<%10!s!> _ValidateConfigDescriptor: bad bConfigurationValue 0x%11!x!\" //   FLAG=QCUSB_DBG_MASK_CONTROL LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c3072
    #define WPP_ANNOTATE_USBPNP_c3072 WPP_ANNOTATE_USBPNP_c3072_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c3072 WPP_ANNOTATE_USBPNP_c3072_FINAL("TMF:", "USBPNP.c", "USBPNP_c3072", L"{", L"pDevExt->PortName, ItemString -- 10" , L"ConfigDesc->bConfigurationValue, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c3093_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 155 \"%0<%10!s!> _ValidateDeviceDescriptor: 0 bLength\" //   FLAG=QCUSB_DBG_MASK_CONTROL LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c3093_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 155 \"%0<%10!s!> _ValidateDeviceDescriptor: 0 bLength\" //   FLAG=QCUSB_DBG_MASK_CONTROL LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c3093
    #define WPP_ANNOTATE_USBPNP_c3093 WPP_ANNOTATE_USBPNP_c3093_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c3093 WPP_ANNOTATE_USBPNP_c3093_FINAL("TMF:", "USBPNP.c", "USBPNP_c3093", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c3105_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 156 \"%0<%10!s!> _ValidateDeviceDescriptor: bad bDescriptorType 0x%11!x!\" //   FLAG=QCUSB_DBG_MASK_CONTROL LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c3105_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 156 \"%0<%10!s!> _ValidateDeviceDescriptor: bad bDescriptorType 0x%11!x!\" //   FLAG=QCUSB_DBG_MASK_CONTROL LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c3105
    #define WPP_ANNOTATE_USBPNP_c3105 WPP_ANNOTATE_USBPNP_c3105_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c3105 WPP_ANNOTATE_USBPNP_c3105_FINAL("TMF:", "USBPNP.c", "USBPNP_c3105", L"{", L"pDevExt->PortName, ItemString -- 10" , L"DevDesc->bDescriptorType, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c3122_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 157 \"%0<%10!s!> _ValidateDeviceDescriptor: bad bMaxPacketSize0 0x%11!x!\" //   FLAG=QCUSB_DBG_MASK_CONTROL LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c3122_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 157 \"%0<%10!s!> _ValidateDeviceDescriptor: bad bMaxPacketSize0 0x%11!x!\" //   FLAG=QCUSB_DBG_MASK_CONTROL LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c3122
    #define WPP_ANNOTATE_USBPNP_c3122 WPP_ANNOTATE_USBPNP_c3122_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c3122 WPP_ANNOTATE_USBPNP_c3122_FINAL("TMF:", "USBPNP.c", "USBPNP_c3122", L"{", L"pDevExt->PortName, ItemString -- 10" , L"DevDesc->bMaxPacketSize0, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c3136_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 158 \"%0<%10!s!> _ValidateDeviceDescriptor: bad SS bMaxPacketSize0 0x%11!x!\" //   FLAG=QCUSB_DBG_MASK_CONTROL LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c3136_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 158 \"%0<%10!s!> _ValidateDeviceDescriptor: bad SS bMaxPacketSize0 0x%11!x!\" //   FLAG=QCUSB_DBG_MASK_CONTROL LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c3136
    #define WPP_ANNOTATE_USBPNP_c3136 WPP_ANNOTATE_USBPNP_c3136_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c3136 WPP_ANNOTATE_USBPNP_c3136_FINAL("TMF:", "USBPNP.c", "USBPNP_c3136", L"{", L"pDevExt->PortName, ItemString -- 10" , L"DevDesc->bMaxPacketSize0, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c314_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 16 \"%0WakeFromD0/1/2/3 = %10!u!, %11!u!, %12!u!, %13!u!\" //   GFLAG=QCUSB_DBG_MASK_CONTROL GLEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c314_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 16 \"%0WakeFromD0/1/2/3 = %10!u!, %11!u!, %12!u!, %13!u!\" //   GFLAG=QCUSB_DBG_MASK_CONTROL GLEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c314
    #define WPP_ANNOTATE_USBPNP_c314 WPP_ANNOTATE_USBPNP_c314_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemLong -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemLong -- 12" , L"Arg, ItemLong -- 13" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c314 WPP_ANNOTATE_USBPNP_c314_FINAL("TMF:", "USBPNP.c", "USBPNP_c314", L"{", L"deviceExtension->DeviceCapabilities.WakeFromD0, ItemLong -- 10" , L"deviceExtension->DeviceCapabilities.WakeFromD1, ItemLong -- 11" , L"deviceExtension->DeviceCapabilities.WakeFromD2, ItemLong -- 12" , L"deviceExtension->DeviceCapabilities.WakeFromD3, ItemLong -- 13" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c3150_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 159 \"%0<%10!s!> _ValidateDeviceDescriptor: bad bNumConfigurations 0x%11!x!\" //   FLAG=QCUSB_DBG_MASK_CONTROL LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c3150_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 159 \"%0<%10!s!> _ValidateDeviceDescriptor: bad bNumConfigurations 0x%11!x!\" //   FLAG=QCUSB_DBG_MASK_CONTROL LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c3150
    #define WPP_ANNOTATE_USBPNP_c3150 WPP_ANNOTATE_USBPNP_c3150_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c3150 WPP_ANNOTATE_USBPNP_c3150_FINAL("TMF:", "USBPNP.c", "USBPNP_c3150", L"{", L"pDevExt->PortName, ItemString -- 10" , L"DevDesc->bNumConfigurations, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c323_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 17 \"%0SystemWake = %10!s!\" //   GFLAG=QCUSB_DBG_MASK_CONTROL GLEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c323_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 17 \"%0SystemWake = %10!s!\" //   GFLAG=QCUSB_DBG_MASK_CONTROL GLEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c323
    #define WPP_ANNOTATE_USBPNP_c323 WPP_ANNOTATE_USBPNP_c323_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c323 WPP_ANNOTATE_USBPNP_c323_FINAL("TMF:", "USBPNP.c", "USBPNP_c323", L"{", L"QCUSB_StringForSysState(deviceExtension->DeviceCapabilities.SystemWake), ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c331_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 18 \"%0DeviceWake = %10!s!\" //   GFLAG=QCUSB_DBG_MASK_CONTROL GLEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c331_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 18 \"%0DeviceWake = %10!s!\" //   GFLAG=QCUSB_DBG_MASK_CONTROL GLEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c331
    #define WPP_ANNOTATE_USBPNP_c331 WPP_ANNOTATE_USBPNP_c331_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c331 WPP_ANNOTATE_USBPNP_c331_FINAL("TMF:", "USBPNP.c", "USBPNP_c331", L"{", L"QCUSB_StringForDevState(deviceExtension->DeviceCapabilities.DeviceWake), ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c343_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 19 \"%0 Device State Map: sysstate %10!s! = devstate %11!s!\" //   GFLAG=QCUSB_DBG_MASK_CONTROL GLEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c343_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 19 \"%0 Device State Map: sysstate %10!s! = devstate %11!s!\" //   GFLAG=QCUSB_DBG_MASK_CONTROL GLEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c343
    #define WPP_ANNOTATE_USBPNP_c343 WPP_ANNOTATE_USBPNP_c343_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemString -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c343 WPP_ANNOTATE_USBPNP_c343_FINAL("TMF:", "USBPNP.c", "USBPNP_c343", L"{", L"QCUSB_StringForSysState(i), ItemString -- 10" , L"QCUSB_StringForDevState(deviceExtension->DeviceCapabilities.DeviceState[i]), ItemString -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c355_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 20 \"%0D1-D3 Latency = %10!u!, %11!u!, %12!u! (x 100us)\" //   GFLAG=QCUSB_DBG_MASK_CONTROL GLEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c355_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 20 \"%0D1-D3 Latency = %10!u!, %11!u!, %12!u! (x 100us)\" //   GFLAG=QCUSB_DBG_MASK_CONTROL GLEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c355
    #define WPP_ANNOTATE_USBPNP_c355 WPP_ANNOTATE_USBPNP_c355_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemLong -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemLong -- 12" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c355 WPP_ANNOTATE_USBPNP_c355_FINAL("TMF:", "USBPNP.c", "USBPNP_c355", L"{", L"deviceExtension->DeviceCapabilities.D1Latency, ItemLong -- 10" , L"deviceExtension->DeviceCapabilities.D2Latency, ItemLong -- 11" , L"deviceExtension->DeviceCapabilities.D3Latency, ItemLong -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c362_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 21 \"%0DeviceCapabilities: PowerDownLevel = %10!s! (PM %11!d!)\" //   GFLAG=QCUSB_DBG_MASK_CONTROL GLEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c362_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 21 \"%0DeviceCapabilities: PowerDownLevel = %10!s! (PM %11!d!)\" //   GFLAG=QCUSB_DBG_MASK_CONTROL GLEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c362
    #define WPP_ANNOTATE_USBPNP_c362 WPP_ANNOTATE_USBPNP_c362_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c362 WPP_ANNOTATE_USBPNP_c362_FINAL("TMF:", "USBPNP.c", "USBPNP_c362", L"{", L"QCUSB_StringForDevState(deviceExtension->PowerDownLevel), ItemString -- 10" , L"bPowerManagement, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c458_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 22 \"%0<%10!s!> -->_GetStringDescriptor DO 0x%11!p! idx %12!d!\" //   FLAG=QCUSB_DBG_MASK_CONTROL LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c458_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 22 \"%0<%10!s!> -->_GetStringDescriptor DO 0x%11!p! idx %12!d!\" //   FLAG=QCUSB_DBG_MASK_CONTROL LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c458
    #define WPP_ANNOTATE_USBPNP_c458 WPP_ANNOTATE_USBPNP_c458_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemPtr -- 11" , L"Arg, ItemLong -- 12" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c458 WPP_ANNOTATE_USBPNP_c458_FINAL("TMF:", "USBPNP.c", "USBPNP_c458", L"{", L"pDevExt->PortName, ItemString -- 10" , L"DeviceObject, ItemPtr -- 11" , L"Index, ItemLong -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c467_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 23 \"%0<%10!s!> <--_GetStringDescriptor: index is NULL\" //   FLAG=QCUSB_DBG_MASK_CONTROL LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c467_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 23 \"%0<%10!s!> <--_GetStringDescriptor: index is NULL\" //   FLAG=QCUSB_DBG_MASK_CONTROL LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c467
    #define WPP_ANNOTATE_USBPNP_c467 WPP_ANNOTATE_USBPNP_c467_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c467 WPP_ANNOTATE_USBPNP_c467_FINAL("TMF:", "USBPNP.c", "USBPNP_c467", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c533_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 24 \"%0<%10!s!> _GetStringDescriptor DO 0x%11!p! failure NTS 0x%12!x!\" //   FLAG=QCUSB_DBG_MASK_CONTROL LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c533_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 24 \"%0<%10!s!> _GetStringDescriptor DO 0x%11!p! failure NTS 0x%12!x!\" //   FLAG=QCUSB_DBG_MASK_CONTROL LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c533
    #define WPP_ANNOTATE_USBPNP_c533 WPP_ANNOTATE_USBPNP_c533_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemPtr -- 11" , L"Arg, ItemLong -- 12" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c533 WPP_ANNOTATE_USBPNP_c533_FINAL("TMF:", "USBPNP.c", "USBPNP_c533", L"{", L"pDevExt->PortName, ItemString -- 10" , L"DeviceObject, ItemPtr -- 11" , L"ntStatus, ItemLong -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c544_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 25 \"%0<%10!s!> _GetStringDescriptor DO 0x%11!p! NTS 0x%12!x! (%13!d!B)\" //   FLAG=QCUSB_DBG_MASK_CONTROL LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c544_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 25 \"%0<%10!s!> _GetStringDescriptor DO 0x%11!p! NTS 0x%12!x! (%13!d!B)\" //   FLAG=QCUSB_DBG_MASK_CONTROL LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c544
    #define WPP_ANNOTATE_USBPNP_c544 WPP_ANNOTATE_USBPNP_c544_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemPtr -- 11" , L"Arg, ItemLong -- 12" , L"Arg, ItemLong -- 13" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c544 WPP_ANNOTATE_USBPNP_c544_FINAL("TMF:", "USBPNP.c", "USBPNP_c544", L"{", L"pDevExt->PortName, ItemString -- 10" , L"DeviceObject, ItemPtr -- 11" , L"ntStatus, ItemLong -- 12" , L"pSerNum->bLength, ItemLong -- 13" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c610_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 26 \"%0<%10!s!> <--QDBPNP_GetDeviceSerialNumber: no SN found\" //   FLAG=QCUSB_DBG_MASK_CONTROL LEVEL=QCUSB_DBG_LEVEL_TRACE" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c610_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 26 \"%0<%10!s!> <--QDBPNP_GetDeviceSerialNumber: no SN found\" //   FLAG=QCUSB_DBG_MASK_CONTROL LEVEL=QCUSB_DBG_LEVEL_TRACE" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c610
    #define WPP_ANNOTATE_USBPNP_c610 WPP_ANNOTATE_USBPNP_c610_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c610 WPP_ANNOTATE_USBPNP_c610_FINAL("TMF:", "USBPNP.c", "USBPNP_c610", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c621_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 27 \"%0<%10!s!> _GetDeviceSerialNumber: strLen %11!d!\" //   FLAG=QCUSB_DBG_MASK_CONTROL LEVEL=QCUSB_DBG_LEVEL_TRACE" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c621_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 27 \"%0<%10!s!> _GetDeviceSerialNumber: strLen %11!d!\" //   FLAG=QCUSB_DBG_MASK_CONTROL LEVEL=QCUSB_DBG_LEVEL_TRACE" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c621
    #define WPP_ANNOTATE_USBPNP_c621 WPP_ANNOTATE_USBPNP_c621_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c621 WPP_ANNOTATE_USBPNP_c621_FINAL("TMF:", "USBPNP.c", "USBPNP_c621", L"{", L"pDevExt->PortName, ItemString -- 10" , L"strLen, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c640_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 28 \"%0<%10!s!> QDBPNP_GetDeviceSerialNumber: reg access failure 0x%11!x!\" //   FLAG=QCUSB_DBG_MASK_CONTROL LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c640_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 28 \"%0<%10!s!> QDBPNP_GetDeviceSerialNumber: reg access failure 0x%11!x!\" //   FLAG=QCUSB_DBG_MASK_CONTROL LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c640
    #define WPP_ANNOTATE_USBPNP_c640 WPP_ANNOTATE_USBPNP_c640_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c640 WPP_ANNOTATE_USBPNP_c640_FINAL("TMF:", "USBPNP.c", "USBPNP_c640", L"{", L"pDevExt->PortName, ItemString -- 10" , L"ntStatus, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c684_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 29 \"%0<%10!s!> --> _SetFunctionProtocolnter 0x%11!x!\" //   FLAG=QCUSB_DBG_MASK_CONTROL LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c684_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 29 \"%0<%10!s!> --> _SetFunctionProtocolnter 0x%11!x!\" //   FLAG=QCUSB_DBG_MASK_CONTROL LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c684
    #define WPP_ANNOTATE_USBPNP_c684 WPP_ANNOTATE_USBPNP_c684_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c684 WPP_ANNOTATE_USBPNP_c684_FINAL("TMF:", "USBPNP.c", "USBPNP_c684", L"{", L"pDevExt->PortName, ItemString -- 10" , L"ProtocolCode, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c700_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 30 \"%0<%10!s!> <-- _SetFunctionProtocolnter: failed to open registry 0x%11!x!\" //   FLAG=QCUSB_DBG_MASK_CONTROL LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c700_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 30 \"%0<%10!s!> <-- _SetFunctionProtocolnter: failed to open registry 0x%11!x!\" //   FLAG=QCUSB_DBG_MASK_CONTROL LEVEL=QCUSB_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c700
    #define WPP_ANNOTATE_USBPNP_c700 WPP_ANNOTATE_USBPNP_c700_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c700 WPP_ANNOTATE_USBPNP_c700_FINAL("TMF:", "USBPNP.c", "USBPNP_c700", L"{", L"pDevExt->PortName, ItemString -- 10" , L"ntStatus, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c721_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 31 \"%0<%10!s!> <-- _SetFunctionProtocolnter 0x%11!x! ST 0x%12!x!\" //   FLAG=QCUSB_DBG_MASK_CONTROL LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c721_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 31 \"%0<%10!s!> <-- _SetFunctionProtocolnter 0x%11!x! ST 0x%12!x!\" //   FLAG=QCUSB_DBG_MASK_CONTROL LEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c721
    #define WPP_ANNOTATE_USBPNP_c721 WPP_ANNOTATE_USBPNP_c721_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemLong -- 12" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c721 WPP_ANNOTATE_USBPNP_c721_FINAL("TMF:", "USBPNP.c", "USBPNP_c721", L"{", L"pDevExt->PortName, ItemString -- 10" , L"ProtocolCode, ItemLong -- 11" , L"ntStatus, ItemLong -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c95_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 10 \"%0<%10!s!> AddDevice: reg access failure.\" //   GFLAG=QCUSB_DBG_MASK_CONTROL GLEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c95_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 10 \"%0<%10!s!> AddDevice: reg access failure.\" //   GFLAG=QCUSB_DBG_MASK_CONTROL GLEVEL=QCUSB_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c95
    #define WPP_ANNOTATE_USBPNP_c95 WPP_ANNOTATE_USBPNP_c95_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c95 WPP_ANNOTATE_USBPNP_c95_FINAL("TMF:", "USBPNP.c", "USBPNP_c95", L"{", L"gDeviceName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c963_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 32 \"%0<%10!s!> Vendor Config Info ------ \" //  " WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c963_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 32 \"%0<%10!s!> Vendor Config Info ------ \" //  " WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c963
    #define WPP_ANNOTATE_USBPNP_c963 WPP_ANNOTATE_USBPNP_c963_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c963 WPP_ANNOTATE_USBPNP_c963_FINAL("TMF:", "USBPNP.c", "USBPNP_c963", L"{", L"gDeviceName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c964_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 33 \"%0    ContinueOnOverflow:  0x%10!x!\" //  " WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c964_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 33 \"%0    ContinueOnOverflow:  0x%10!x!\" //  " WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c964
    #define WPP_ANNOTATE_USBPNP_c964 WPP_ANNOTATE_USBPNP_c964_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemLong -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c964 WPP_ANNOTATE_USBPNP_c964_FINAL("TMF:", "USBPNP.c", "USBPNP_c964", L"{", L"gVendorConfig.ContinueOnOverflow, ItemLong -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c965_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 34 \"%0    ContinueOnDataError: 0x%10!x!\" //  " WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c965_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 34 \"%0    ContinueOnDataError: 0x%10!x!\" //  " WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c965
    #define WPP_ANNOTATE_USBPNP_c965 WPP_ANNOTATE_USBPNP_c965_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemLong -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c965 WPP_ANNOTATE_USBPNP_c965_FINAL("TMF:", "USBPNP.c", "USBPNP_c965", L"{", L"gVendorConfig.ContinueOnDataError, ItemLong -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c966_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 35 \"%0    Use1600ByteInPkt:    0x%10!x!\" //  " WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c966_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 35 \"%0    Use1600ByteInPkt:    0x%10!x!\" //  " WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c966
    #define WPP_ANNOTATE_USBPNP_c966 WPP_ANNOTATE_USBPNP_c966_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemLong -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c966 WPP_ANNOTATE_USBPNP_c966_FINAL("TMF:", "USBPNP.c", "USBPNP_c966", L"{", L"gVendorConfig.Use1600ByteInPkt, ItemLong -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c967_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 36 \"%0    Use2048ByteInPkt:    0x%10!x!\" //  " WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c967_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 36 \"%0    Use2048ByteInPkt:    0x%10!x!\" //  " WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c967
    #define WPP_ANNOTATE_USBPNP_c967 WPP_ANNOTATE_USBPNP_c967_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemLong -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c967 WPP_ANNOTATE_USBPNP_c967_FINAL("TMF:", "USBPNP.c", "USBPNP_c967", L"{", L"gVendorConfig.Use2048ByteInPkt, ItemLong -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c968_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 37 \"%0    Use4096ByteInPkt:    0x%10!x!\" //  " WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c968_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 37 \"%0    Use4096ByteInPkt:    0x%10!x!\" //  " WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c968
    #define WPP_ANNOTATE_USBPNP_c968 WPP_ANNOTATE_USBPNP_c968_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemLong -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c968 WPP_ANNOTATE_USBPNP_c968_FINAL("TMF:", "USBPNP.c", "USBPNP_c968", L"{", L"gVendorConfig.Use4096ByteInPkt, ItemLong -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c969_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 38 \"%0    NoTimeoutOnCtlReq:   0x%10!x!\" //  " WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c969_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 38 \"%0    NoTimeoutOnCtlReq:   0x%10!x!\" //  " WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c969
    #define WPP_ANNOTATE_USBPNP_c969 WPP_ANNOTATE_USBPNP_c969_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemLong -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c969 WPP_ANNOTATE_USBPNP_c969_FINAL("TMF:", "USBPNP.c", "USBPNP_c969", L"{", L"gVendorConfig.NoTimeoutOnCtlReq, ItemLong -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c970_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 39 \"%0    EnableLogging:       0x%10!x!\" //  " WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c970_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 39 \"%0    EnableLogging:       0x%10!x!\" //  " WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c970
    #define WPP_ANNOTATE_USBPNP_c970 WPP_ANNOTATE_USBPNP_c970_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemLong -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c970 WPP_ANNOTATE_USBPNP_c970_FINAL("TMF:", "USBPNP.c", "USBPNP_c970", L"{", L"gVendorConfig.EnableLogging, ItemLong -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c971_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 40 \"%0    UseMultiReads        0x%10!x!\" //  " WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c971_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 40 \"%0    UseMultiReads        0x%10!x!\" //  " WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c971
    #define WPP_ANNOTATE_USBPNP_c971 WPP_ANNOTATE_USBPNP_c971_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemLong -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c971 WPP_ANNOTATE_USBPNP_c971_FINAL("TMF:", "USBPNP.c", "USBPNP_c971", L"{", L"gVendorConfig.UseMultiReads, ItemLong -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c972_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 41 \"%0    UseMultiWrites       0x%10!x!\" //  " WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c972_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 41 \"%0    UseMultiWrites       0x%10!x!\" //  " WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c972
    #define WPP_ANNOTATE_USBPNP_c972 WPP_ANNOTATE_USBPNP_c972_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemLong -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c972 WPP_ANNOTATE_USBPNP_c972_FINAL("TMF:", "USBPNP.c", "USBPNP_c972", L"{", L"gVendorConfig.UseMultiWrites, ItemLong -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c973_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 42 \"%0    MinInPktSize:        %10!ld!\" //  " WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c973_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 42 \"%0    MinInPktSize:        %10!ld!\" //  " WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c973
    #define WPP_ANNOTATE_USBPNP_c973 WPP_ANNOTATE_USBPNP_c973_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemLong -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c973 WPP_ANNOTATE_USBPNP_c973_FINAL("TMF:", "USBPNP.c", "USBPNP_c973", L"{", L"gVendorConfig.MinInPktSize, ItemLong -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c974_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 43 \"%0    MaxPipeXferSize      %10!ld!\" //  " WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c974_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 43 \"%0    MaxPipeXferSize      %10!ld!\" //  " WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c974
    #define WPP_ANNOTATE_USBPNP_c974 WPP_ANNOTATE_USBPNP_c974_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemLong -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c974 WPP_ANNOTATE_USBPNP_c974_FINAL("TMF:", "USBPNP.c", "USBPNP_c974", L"{", L"gVendorConfig.MaxPipeXferSize, ItemLong -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c975_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 44 \"%0    NumOfRetriesOnError: %10!ld!\" //  " WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c975_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 44 \"%0    NumOfRetriesOnError: %10!ld!\" //  " WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c975
    #define WPP_ANNOTATE_USBPNP_c975 WPP_ANNOTATE_USBPNP_c975_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemLong -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c975 WPP_ANNOTATE_USBPNP_c975_FINAL("TMF:", "USBPNP.c", "USBPNP_c975", L"{", L"gVendorConfig.NumOfRetriesOnError, ItemLong -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c976_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 45 \"%0    NumberOfL2Buffers:   %10!ld!\" //  " WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c976_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 45 \"%0    NumberOfL2Buffers:   %10!ld!\" //  " WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c976
    #define WPP_ANNOTATE_USBPNP_c976 WPP_ANNOTATE_USBPNP_c976_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemLong -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c976 WPP_ANNOTATE_USBPNP_c976_FINAL("TMF:", "USBPNP.c", "USBPNP_c976", L"{", L"gVendorConfig.NumberOfL2Buffers, ItemLong -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c977_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 46 \"%0    DebugMask:           0x%10!x!\" //  " WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c977_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 46 \"%0    DebugMask:           0x%10!x!\" //  " WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c977
    #define WPP_ANNOTATE_USBPNP_c977 WPP_ANNOTATE_USBPNP_c977_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemLong -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c977 WPP_ANNOTATE_USBPNP_c977_FINAL("TMF:", "USBPNP.c", "USBPNP_c977", L"{", L"gVendorConfig.DebugMask, ItemLong -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c978_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 47 \"%0    DebugLevel:          %10!ld!\" //  " WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c978_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 47 \"%0    DebugLevel:          %10!ld!\" //  " WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c978
    #define WPP_ANNOTATE_USBPNP_c978 WPP_ANNOTATE_USBPNP_c978_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemLong -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c978 WPP_ANNOTATE_USBPNP_c978_FINAL("TMF:", "USBPNP.c", "USBPNP_c978", L"{", L"gVendorConfig.DebugLevel, ItemLong -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_USBPNP_c979_FINAL(P, File, Name, ...)    __annotation(L ## P, L"bc05bf34-0f31-3678-a8a7-ed34964dd1ef ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 48 \"%0    ThreadPriority       %10!ld!\" //  " WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_USBPNP_c979_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"ndis // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 48 \"%0    ThreadPriority       %10!ld!\" //  " WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_USBPNP_c979
    #define WPP_ANNOTATE_USBPNP_c979 WPP_ANNOTATE_USBPNP_c979_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemLong -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_USBPNP_c979 WPP_ANNOTATE_USBPNP_c979_FINAL("TMF:", "USBPNP.c", "USBPNP_c979", L"{", L"gVendorConfig.ThreadPriority, ItemLong -- 10" , L"}")
#endif
# define WPP_ANNOTATE(x) WPP_ANNOTATE_ ## x,

#else
# define WPP_ANNOTATE(x)
#endif


#if 1
#if !defined(WPP_USER_MSG_GUID)

#define WPP_LOCAL_TraceGuids WPP_bc05bf340f313678a8a7ed34964dd1ef_Traceguids
extern const __declspec(selectany) GUID WPP_LOCAL_TraceGuids[] = { {0xbc05bf34,0x0f31,0x3678,{0xa8,0xa7,0xed,0x34,0x96,0x4d,0xd1,0xef}}, };

#else

#define WPP_LOCAL_MSG_VAR(Guid) WPP_XGLUE3(WPP_, WPP_GUID_NORM Guid, _Traceguids)

#define WPP_LOCAL_MSG_GUID(Guid) \
extern const __declspec(selectany) GUID WPP_LOCAL_MSG_VAR(Guid)[] = { WPP_GUID_STRUCT Guid }

WPP_LOCAL_MSG_GUID(WPP_USER_MSG_GUID);
#define WPP_LOCAL_TraceGuids WPP_LOCAL_MSG_VAR(WPP_USER_MSG_GUID)

#endif
#endif


#ifndef WPP_ALREADY_INCLUDED

#if !defined(WPP_TRACE_OPTIONS)
enum {WPP_TRACE_OPTIONS = TRACE_MESSAGE_SEQUENCE   | TRACE_MESSAGE_GUID
                        | TRACE_MESSAGE_SYSTEMINFO | TRACE_MESSAGE_TIMESTAMP };
#endif

#ifndef WPP_LOGPAIR_SEPARATOR
# define WPP_LOGPAIR_SEPARATOR ,
#endif

#ifndef WPP_LOGPAIR_SIZET
# define WPP_LOGPAIR_SIZET SIZE_T
#endif

#if !defined(WPP_LOGPAIR)
# define WPP_LOGPAIR(_Size, _Addr)     (_Addr),((WPP_LOGPAIR_SIZET)(_Size))WPP_LOGPAIR_SEPARATOR
#endif

#define WPP_LOGTYPEVAL(_Type, _Value) WPP_LOGPAIR(sizeof(_Type), &(_Value))
#define WPP_LOGTYPEPTR(_Value)        WPP_LOGPAIR(sizeof(*(_Value)), (_Value))

// Marshalling macros.

#if !defined(WPP_LOGASTR)
# if !defined(WPP_CHECK_FOR_NULL_STRING)
#  define WPP_LOGASTR(_value)  WPP_LOGPAIR(strlen(_value) + 1, _value )
# else
#  define WPP_LOGASTR(_value)  WPP_LOGPAIR( (_value)?strlen(_value) + 1:5, (_value)?(_value):"NULL" )
# endif
#endif

#if !defined(WPP_LOGWSTR)
# if !defined(WPP_CHECK_FOR_NULL_STRING)
#  define WPP_LOGWSTR(_value)  WPP_LOGPAIR( (wcslen(_value)+1) * sizeof(WCHAR), _value)
# else
#  define WPP_LOGWSTR(_value)  WPP_LOGPAIR( ((_value)?wcslen(_value) + 1:5) * sizeof(WCHAR), (_value)?(_value):L"NULL" )
# endif
#endif

#if !defined(WPP_LOGPGUID)
# define WPP_LOGPGUID(_value) WPP_LOGPAIR( sizeof(GUID), (_value) )
#endif


#if !defined(WPP_LOGPSID)
# if !defined(WPP_CHECK_FOR_NULL_STRING)
# define WPP_LOGPSID(_value)  WPP_LOGPAIR( WPP_GetLengthSid(_value), (_value) )
# else
# define WPP_LOGPSID(_value)  WPP_LOGPAIR( (_value)? (WPP_IsValidSid(_value)? \
                                                                        WPP_GetLengthSid(_value):5):5, \
                                                                        (_value)? (WPP_IsValidSid(_value)?\
                                                                        (_value):"NULL"):"NULL")
#endif
#endif

#if !defined(WPP_LOGCSTR)
# define WPP_LOGCSTR(_x) \
    WPP_LOGPAIR( sizeof((_x).Length), &(_x).Length ) WPP_LOGPAIR( (_x).Length, (_x).Buffer )
#endif

#if !defined(WPP_LOGUSTR)
# define WPP_LOGUSTR(_x) \
    WPP_LOGPAIR( sizeof((_x).Length), &(_x).Length ) WPP_LOGPAIR( (_x).Length, (_x).Buffer )
#endif

#if !defined(WPP_LOGPUSTR)
#if !defined(WPP_CHECK_FOR_NULL_STRING)
# define WPP_LOGPUSTR(_x) WPP_LOGUSTR(*(_x))
#else
# define WPP_LOGPUSTR(_x) WPP_LOGPAIR( sizeof(USHORT), (_x)?&(_x)->Length:L"\x08" ) \
                          WPP_LOGPAIR( (_x)?(_x)->Length:0x08, (_x)?(_x)->Buffer:L"NULL" )
#endif
#endif

#if !defined(WPP_LOGPCSTR)
#if !defined(WPP_CHECK_FOR_NULL_STRING)
# define WPP_LOGPCSTR(_x) WPP_LOGCSTR(*(_x))
#else
# define WPP_LOGPCSTR(_x) WPP_LOGPAIR( sizeof(USHORT), (_x)?&(_x)->Length:L"\x04" ) \
                          WPP_LOGPAIR( (_x)?(_x)->Length:0x04, (_x)?(_x)->Buffer:"NULL" )
#endif
#endif

#if !defined(WPP_LOGSTDSTR)
#define WPP_LOGSTDSTR(_value)  WPP_LOGPAIR( (_value).size()+1, (_value).c_str() )
#endif

#endif  //  #ifndef WPP_ALREADY_INCLUDED

#if !defined(WPP_CHECK_INIT)
# define WPP_CHECK_INIT (WPP_CB != (WPP_CB_TYPE*)&WPP_CB) && 
#endif


#ifndef WPP_SF__def
#       define WPP_SF__def
WPP_INLINE void WPP_SF_(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id,  0); }
#endif  // #ifndef WPP_SF__def
#ifndef WPP_SF_D_def
#       define WPP_SF_D_def
WPP_INLINE void WPP_SF_D(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, unsigned int _a1)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGTYPEVAL(unsigned int,_a1)  0); }
#endif  // #ifndef WPP_SF_D_def
#ifndef WPP_SF_DDD_def
#       define WPP_SF_DDD_def
WPP_INLINE void WPP_SF_DDD(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, unsigned int _a1, unsigned int _a2, unsigned int _a3)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGTYPEVAL(unsigned int,_a1) WPP_LOGTYPEVAL(unsigned int,_a2) WPP_LOGTYPEVAL(unsigned int,_a3)  0); }
#endif  // #ifndef WPP_SF_DDD_def
#ifndef WPP_SF_DDDD_def
#       define WPP_SF_DDDD_def
WPP_INLINE void WPP_SF_DDDD(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, unsigned int _a1, unsigned int _a2, unsigned int _a3, unsigned int _a4)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGTYPEVAL(unsigned int,_a1) WPP_LOGTYPEVAL(unsigned int,_a2) WPP_LOGTYPEVAL(unsigned int,_a3) WPP_LOGTYPEVAL(unsigned int,_a4)  0); }
#endif  // #ifndef WPP_SF_DDDD_def
#ifndef WPP_SF_DDDDD_def
#       define WPP_SF_DDDDD_def
WPP_INLINE void WPP_SF_DDDDD(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, unsigned int _a1, unsigned int _a2, unsigned int _a3, unsigned int _a4, unsigned int _a5)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGTYPEVAL(unsigned int,_a1) WPP_LOGTYPEVAL(unsigned int,_a2) WPP_LOGTYPEVAL(unsigned int,_a3) WPP_LOGTYPEVAL(unsigned int,_a4) WPP_LOGTYPEVAL(unsigned int,_a5)  0); }
#endif  // #ifndef WPP_SF_DDDDD_def
#ifndef WPP_SF_d_def
#       define WPP_SF_d_def
WPP_INLINE void WPP_SF_d(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, signed int _a1)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGTYPEVAL(signed int,_a1)  0); }
#endif  // #ifndef WPP_SF_d_def
#ifndef WPP_SF_dD_def
#       define WPP_SF_dD_def
WPP_INLINE void WPP_SF_dD(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, signed int _a1, unsigned int _a2)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGTYPEVAL(signed int,_a1) WPP_LOGTYPEVAL(unsigned int,_a2)  0); }
#endif  // #ifndef WPP_SF_dD_def
#ifndef WPP_SF_ddd_def
#       define WPP_SF_ddd_def
WPP_INLINE void WPP_SF_ddd(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, signed int _a1, signed int _a2, signed int _a3)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGTYPEVAL(signed int,_a1) WPP_LOGTYPEVAL(signed int,_a2) WPP_LOGTYPEVAL(signed int,_a3)  0); }
#endif  // #ifndef WPP_SF_ddd_def
#ifndef WPP_SF_l_def
#       define WPP_SF_l_def
WPP_INLINE void WPP_SF_l(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, signed long _a1)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGTYPEVAL(signed long,_a1)  0); }
#endif  // #ifndef WPP_SF_l_def
#ifndef WPP_SF_q_def
#       define WPP_SF_q_def
WPP_INLINE void WPP_SF_q(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, const void* _a1)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGTYPEVAL(const void*,_a1)  0); }
#endif  // #ifndef WPP_SF_q_def
#ifndef WPP_SF_qD_def
#       define WPP_SF_qD_def
WPP_INLINE void WPP_SF_qD(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, const void* _a1, unsigned int _a2)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGTYPEVAL(const void*,_a1) WPP_LOGTYPEVAL(unsigned int,_a2)  0); }
#endif  // #ifndef WPP_SF_qD_def
#ifndef WPP_SF_s_def
#       define WPP_SF_s_def
WPP_INLINE void WPP_SF_s(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, const char* _a1)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGASTR(_a1)  0); }
#endif  // #ifndef WPP_SF_s_def
#ifndef WPP_SF_sD_def
#       define WPP_SF_sD_def
WPP_INLINE void WPP_SF_sD(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, const char* _a1, unsigned int _a2)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(unsigned int,_a2)  0); }
#endif  // #ifndef WPP_SF_sD_def
#ifndef WPP_SF_sDD_def
#       define WPP_SF_sDD_def
WPP_INLINE void WPP_SF_sDD(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, const char* _a1, unsigned int _a2, unsigned int _a3)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(unsigned int,_a2) WPP_LOGTYPEVAL(unsigned int,_a3)  0); }
#endif  // #ifndef WPP_SF_sDD_def
#ifndef WPP_SF_sDDDD_def
#       define WPP_SF_sDDDD_def
WPP_INLINE void WPP_SF_sDDDD(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, const char* _a1, unsigned int _a2, unsigned int _a3, unsigned int _a4, unsigned int _a5)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(unsigned int,_a2) WPP_LOGTYPEVAL(unsigned int,_a3) WPP_LOGTYPEVAL(unsigned int,_a4) WPP_LOGTYPEVAL(unsigned int,_a5)  0); }
#endif  // #ifndef WPP_SF_sDDDD_def
#ifndef WPP_SF_sd_def
#       define WPP_SF_sd_def
WPP_INLINE void WPP_SF_sd(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, const char* _a1, signed int _a2)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(signed int,_a2)  0); }
#endif  // #ifndef WPP_SF_sd_def
#ifndef WPP_SF_sdD_def
#       define WPP_SF_sdD_def
WPP_INLINE void WPP_SF_sdD(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, const char* _a1, signed int _a2, unsigned int _a3)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(signed int,_a2) WPP_LOGTYPEVAL(unsigned int,_a3)  0); }
#endif  // #ifndef WPP_SF_sdD_def
#ifndef WPP_SF_sddqq_def
#       define WPP_SF_sddqq_def
WPP_INLINE void WPP_SF_sddqq(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, const char* _a1, signed int _a2, signed int _a3, const void* _a4, const void* _a5)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(signed int,_a2) WPP_LOGTYPEVAL(signed int,_a3) WPP_LOGTYPEVAL(const void*,_a4) WPP_LOGTYPEVAL(const void*,_a5)  0); }
#endif  // #ifndef WPP_SF_sddqq_def
#ifndef WPP_SF_sdqq_def
#       define WPP_SF_sdqq_def
WPP_INLINE void WPP_SF_sdqq(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, const char* _a1, signed int _a2, const void* _a3, const void* _a4)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(signed int,_a2) WPP_LOGTYPEVAL(const void*,_a3) WPP_LOGTYPEVAL(const void*,_a4)  0); }
#endif  // #ifndef WPP_SF_sdqq_def
#ifndef WPP_SF_sq_def
#       define WPP_SF_sq_def
WPP_INLINE void WPP_SF_sq(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, const char* _a1, const void* _a2)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(const void*,_a2)  0); }
#endif  // #ifndef WPP_SF_sq_def
#ifndef WPP_SF_sqD_def
#       define WPP_SF_sqD_def
WPP_INLINE void WPP_SF_sqD(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, const char* _a1, const void* _a2, unsigned int _a3)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(const void*,_a2) WPP_LOGTYPEVAL(unsigned int,_a3)  0); }
#endif  // #ifndef WPP_SF_sqD_def
#ifndef WPP_SF_sqDd_def
#       define WPP_SF_sqDd_def
WPP_INLINE void WPP_SF_sqDd(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, const char* _a1, const void* _a2, unsigned int _a3, signed int _a4)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(const void*,_a2) WPP_LOGTYPEVAL(unsigned int,_a3) WPP_LOGTYPEVAL(signed int,_a4)  0); }
#endif  // #ifndef WPP_SF_sqDd_def
#ifndef WPP_SF_sqd_def
#       define WPP_SF_sqd_def
WPP_INLINE void WPP_SF_sqd(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, const char* _a1, const void* _a2, signed int _a3)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(const void*,_a2) WPP_LOGTYPEVAL(signed int,_a3)  0); }
#endif  // #ifndef WPP_SF_sqd_def
#ifndef WPP_SF_sqq_def
#       define WPP_SF_sqq_def
WPP_INLINE void WPP_SF_sqq(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, const char* _a1, const void* _a2, const void* _a3)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(const void*,_a2) WPP_LOGTYPEVAL(const void*,_a3)  0); }
#endif  // #ifndef WPP_SF_sqq_def
#ifndef WPP_SF_ss_def
#       define WPP_SF_ss_def
WPP_INLINE void WPP_SF_ss(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, const char* _a1, const char* _a2)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGASTR(_a1) WPP_LOGASTR(_a2)  0); }
#endif  // #ifndef WPP_SF_ss_def
#ifndef WPP_POST
#  define WPP_POST()
#endif

#ifndef WPP_PRE
#  define WPP_PRE()
#endif

#ifndef WPP_LOG_ALWAYS
#  define WPP_LOG_ALWAYS(...)
#endif      

#ifdef WPP_DEBUG
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c1126(MSG,a10,a11) \
     WPP_LOG_ALWAYS(WPP_EX(),MSG,a10,a11)\
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c1126) \
     ( ( \
         WPP_CHECK_INIT WPP_ENABLED() ? \
          WPP_DEBUG((MSG,a10,a11)), \
          WPP_SF_qD(WPP_LOGGER() 50, \
                             WPP_LOCAL_TraceGuids+0, a10, a11), 1:0  \
     ) ) \
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c1132(MSG) \
     WPP_LOG_ALWAYS(WPP_EX(),MSG)\
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c1132) \
     ( ( \
         WPP_CHECK_INIT WPP_ENABLED() ? \
          WPP_DEBUG((MSG)), \
          WPP_SF_(WPP_LOGGER() 51, \
                             WPP_LOCAL_TraceGuids+0), 1:0  \
     ) ) \
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c1133(MSG) \
     WPP_LOG_ALWAYS(WPP_EX(),MSG)\
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c1133) \
     ( ( \
         WPP_CHECK_INIT WPP_ENABLED() ? \
          WPP_DEBUG((MSG)), \
          WPP_SF_(WPP_LOGGER() 52, \
                             WPP_LOCAL_TraceGuids+0), 1:0  \
     ) ) \
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c1134(MSG,a10) \
     WPP_LOG_ALWAYS(WPP_EX(),MSG,a10)\
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c1134) \
     ( ( \
         WPP_CHECK_INIT WPP_ENABLED() ? \
          WPP_DEBUG((MSG,a10)), \
          WPP_SF_d(WPP_LOGGER() 53, \
                             WPP_LOCAL_TraceGuids+0, a10), 1:0  \
     ) ) \
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c1135(MSG,a10) \
     WPP_LOG_ALWAYS(WPP_EX(),MSG,a10)\
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c1135) \
     ( ( \
         WPP_CHECK_INIT WPP_ENABLED() ? \
          WPP_DEBUG((MSG,a10)), \
          WPP_SF_D(WPP_LOGGER() 54, \
                             WPP_LOCAL_TraceGuids+0, a10), 1:0  \
     ) ) \
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c1136(MSG,a10) \
     WPP_LOG_ALWAYS(WPP_EX(),MSG,a10)\
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c1136) \
     ( ( \
         WPP_CHECK_INIT WPP_ENABLED() ? \
          WPP_DEBUG((MSG,a10)), \
          WPP_SF_D(WPP_LOGGER() 55, \
                             WPP_LOCAL_TraceGuids+0, a10), 1:0  \
     ) ) \
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c1137(MSG,a10) \
     WPP_LOG_ALWAYS(WPP_EX(),MSG,a10)\
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c1137) \
     ( ( \
         WPP_CHECK_INIT WPP_ENABLED() ? \
          WPP_DEBUG((MSG,a10)), \
          WPP_SF_D(WPP_LOGGER() 56, \
                             WPP_LOCAL_TraceGuids+0, a10), 1:0  \
     ) ) \
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c1138(MSG,a10) \
     WPP_LOG_ALWAYS(WPP_EX(),MSG,a10)\
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c1138) \
     ( ( \
         WPP_CHECK_INIT WPP_ENABLED() ? \
          WPP_DEBUG((MSG,a10)), \
          WPP_SF_D(WPP_LOGGER() 57, \
                             WPP_LOCAL_TraceGuids+0, a10), 1:0  \
     ) ) \
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c1139(MSG,a10) \
     WPP_LOG_ALWAYS(WPP_EX(),MSG,a10)\
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c1139) \
     ( ( \
         WPP_CHECK_INIT WPP_ENABLED() ? \
          WPP_DEBUG((MSG,a10)), \
          WPP_SF_D(WPP_LOGGER() 58, \
                             WPP_LOCAL_TraceGuids+0, a10), 1:0  \
     ) ) \
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c1140(MSG,a10) \
     WPP_LOG_ALWAYS(WPP_EX(),MSG,a10)\
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c1140) \
     ( ( \
         WPP_CHECK_INIT WPP_ENABLED() ? \
          WPP_DEBUG((MSG,a10)), \
          WPP_SF_D(WPP_LOGGER() 59, \
                             WPP_LOCAL_TraceGuids+0, a10), 1:0  \
     ) ) \
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c1141(MSG,a10) \
     WPP_LOG_ALWAYS(WPP_EX(),MSG,a10)\
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c1141) \
     ( ( \
         WPP_CHECK_INIT WPP_ENABLED() ? \
          WPP_DEBUG((MSG,a10)), \
          WPP_SF_D(WPP_LOGGER() 60, \
                             WPP_LOCAL_TraceGuids+0, a10), 1:0  \
     ) ) \
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c1142(MSG,a10) \
     WPP_LOG_ALWAYS(WPP_EX(),MSG,a10)\
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c1142) \
     ( ( \
         WPP_CHECK_INIT WPP_ENABLED() ? \
          WPP_DEBUG((MSG,a10)), \
          WPP_SF_D(WPP_LOGGER() 61, \
                             WPP_LOCAL_TraceGuids+0, a10), 1:0  \
     ) ) \
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c1143(MSG,a10) \
     WPP_LOG_ALWAYS(WPP_EX(),MSG,a10)\
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c1143) \
     ( ( \
         WPP_CHECK_INIT WPP_ENABLED() ? \
          WPP_DEBUG((MSG,a10)), \
          WPP_SF_D(WPP_LOGGER() 62, \
                             WPP_LOCAL_TraceGuids+0, a10), 1:0  \
     ) ) \
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c1144(MSG,a10) \
     WPP_LOG_ALWAYS(WPP_EX(),MSG,a10)\
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c1144) \
     ( ( \
         WPP_CHECK_INIT WPP_ENABLED() ? \
          WPP_DEBUG((MSG,a10)), \
          WPP_SF_D(WPP_LOGGER() 63, \
                             WPP_LOCAL_TraceGuids+0, a10), 1:0  \
     ) ) \
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c1145(MSG,a10) \
     WPP_LOG_ALWAYS(WPP_EX(),MSG,a10)\
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c1145) \
     ( ( \
         WPP_CHECK_INIT WPP_ENABLED() ? \
          WPP_DEBUG((MSG,a10)), \
          WPP_SF_D(WPP_LOGGER() 64, \
                             WPP_LOCAL_TraceGuids+0, a10), 1:0  \
     ) ) \
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c1146(MSG,a10) \
     WPP_LOG_ALWAYS(WPP_EX(),MSG,a10)\
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c1146) \
     ( ( \
         WPP_CHECK_INIT WPP_ENABLED() ? \
          WPP_DEBUG((MSG,a10)), \
          WPP_SF_D(WPP_LOGGER() 65, \
                             WPP_LOCAL_TraceGuids+0, a10), 1:0  \
     ) ) \
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c1147(MSG,a10) \
     WPP_LOG_ALWAYS(WPP_EX(),MSG,a10)\
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c1147) \
     ( ( \
         WPP_CHECK_INIT WPP_ENABLED() ? \
          WPP_DEBUG((MSG,a10)), \
          WPP_SF_D(WPP_LOGGER() 66, \
                             WPP_LOCAL_TraceGuids+0, a10), 1:0  \
     ) ) \
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c1535(MSG,a10,a11) \
     WPP_LOG_ALWAYS(WPP_EX(),MSG,a10,a11)\
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c1535) \
     ( ( \
         WPP_CHECK_INIT WPP_ENABLED() ? \
          WPP_DEBUG((MSG,a10,a11)), \
          WPP_SF_dD(WPP_LOGGER() 80, \
                             WPP_LOCAL_TraceGuids+0, a10, a11), 1:0  \
     ) ) \
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c1537(MSG) \
     WPP_LOG_ALWAYS(WPP_EX(),MSG)\
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c1537) \
     ( ( \
         WPP_CHECK_INIT WPP_ENABLED() ? \
          WPP_DEBUG((MSG)), \
          WPP_SF_(WPP_LOGGER() 81, \
                             WPP_LOCAL_TraceGuids+0), 1:0  \
     ) ) \
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c1607(MSG,a10) \
     WPP_LOG_ALWAYS(WPP_EX(),MSG,a10)\
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c1607) \
     ( ( \
         WPP_CHECK_INIT WPP_ENABLED() ? \
          WPP_DEBUG((MSG,a10)), \
          WPP_SF_D(WPP_LOGGER() 82, \
                             WPP_LOCAL_TraceGuids+0, a10), 1:0  \
     ) ) \
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c1608(MSG,a10) \
     WPP_LOG_ALWAYS(WPP_EX(),MSG,a10)\
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c1608) \
     ( ( \
         WPP_CHECK_INIT WPP_ENABLED() ? \
          WPP_DEBUG((MSG,a10)), \
          WPP_SF_D(WPP_LOGGER() 83, \
                             WPP_LOCAL_TraceGuids+0, a10), 1:0  \
     ) ) \
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c1609(MSG,a10) \
     WPP_LOG_ALWAYS(WPP_EX(),MSG,a10)\
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c1609) \
     ( ( \
         WPP_CHECK_INIT WPP_ENABLED() ? \
          WPP_DEBUG((MSG,a10)), \
          WPP_SF_D(WPP_LOGGER() 84, \
                             WPP_LOCAL_TraceGuids+0, a10), 1:0  \
     ) ) \
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c1610(MSG,a10) \
     WPP_LOG_ALWAYS(WPP_EX(),MSG,a10)\
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c1610) \
     ( ( \
         WPP_CHECK_INIT WPP_ENABLED() ? \
          WPP_DEBUG((MSG,a10)), \
          WPP_SF_D(WPP_LOGGER() 85, \
                             WPP_LOCAL_TraceGuids+0, a10), 1:0  \
     ) ) \
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c1611(MSG,a10) \
     WPP_LOG_ALWAYS(WPP_EX(),MSG,a10)\
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c1611) \
     ( ( \
         WPP_CHECK_INIT WPP_ENABLED() ? \
          WPP_DEBUG((MSG,a10)), \
          WPP_SF_D(WPP_LOGGER() 86, \
                             WPP_LOCAL_TraceGuids+0, a10), 1:0  \
     ) ) \
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c1612(MSG,a10) \
     WPP_LOG_ALWAYS(WPP_EX(),MSG,a10)\
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c1612) \
     ( ( \
         WPP_CHECK_INIT WPP_ENABLED() ? \
          WPP_DEBUG((MSG,a10)), \
          WPP_SF_D(WPP_LOGGER() 87, \
                             WPP_LOCAL_TraceGuids+0, a10), 1:0  \
     ) ) \
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c1743(MSG,a10) \
     WPP_LOG_ALWAYS(WPP_EX(),MSG,a10)\
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c1743) \
     ( ( \
         WPP_CHECK_INIT WPP_ENABLED() ? \
          WPP_DEBUG((MSG,a10)), \
          WPP_SF_d(WPP_LOGGER() 91, \
                             WPP_LOCAL_TraceGuids+0, a10), 1:0  \
     ) ) \
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c1744(MSG,a10) \
     WPP_LOG_ALWAYS(WPP_EX(),MSG,a10)\
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c1744) \
     ( ( \
         WPP_CHECK_INIT WPP_ENABLED() ? \
          WPP_DEBUG((MSG,a10)), \
          WPP_SF_D(WPP_LOGGER() 92, \
                             WPP_LOCAL_TraceGuids+0, a10), 1:0  \
     ) ) \
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c1745(MSG,a10) \
     WPP_LOG_ALWAYS(WPP_EX(),MSG,a10)\
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c1745) \
     ( ( \
         WPP_CHECK_INIT WPP_ENABLED() ? \
          WPP_DEBUG((MSG,a10)), \
          WPP_SF_D(WPP_LOGGER() 93, \
                             WPP_LOCAL_TraceGuids+0, a10), 1:0  \
     ) ) \
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c1746(MSG,a10) \
     WPP_LOG_ALWAYS(WPP_EX(),MSG,a10)\
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c1746) \
     ( ( \
         WPP_CHECK_INIT WPP_ENABLED() ? \
          WPP_DEBUG((MSG,a10)), \
          WPP_SF_D(WPP_LOGGER() 94, \
                             WPP_LOCAL_TraceGuids+0, a10), 1:0  \
     ) ) \
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c1747(MSG,a10) \
     WPP_LOG_ALWAYS(WPP_EX(),MSG,a10)\
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c1747) \
     ( ( \
         WPP_CHECK_INIT WPP_ENABLED() ? \
          WPP_DEBUG((MSG,a10)), \
          WPP_SF_D(WPP_LOGGER() 95, \
                             WPP_LOCAL_TraceGuids+0, a10), 1:0  \
     ) ) \
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c1748(MSG,a10) \
     WPP_LOG_ALWAYS(WPP_EX(),MSG,a10)\
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c1748) \
     ( ( \
         WPP_CHECK_INIT WPP_ENABLED() ? \
          WPP_DEBUG((MSG,a10)), \
          WPP_SF_D(WPP_LOGGER() 96, \
                             WPP_LOCAL_TraceGuids+0, a10), 1:0  \
     ) ) \
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c1749(MSG,a10) \
     WPP_LOG_ALWAYS(WPP_EX(),MSG,a10)\
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c1749) \
     ( ( \
         WPP_CHECK_INIT WPP_ENABLED() ? \
          WPP_DEBUG((MSG,a10)), \
          WPP_SF_D(WPP_LOGGER() 97, \
                             WPP_LOCAL_TraceGuids+0, a10), 1:0  \
     ) ) \
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c1750(MSG,a10) \
     WPP_LOG_ALWAYS(WPP_EX(),MSG,a10)\
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c1750) \
     ( ( \
         WPP_CHECK_INIT WPP_ENABLED() ? \
          WPP_DEBUG((MSG,a10)), \
          WPP_SF_D(WPP_LOGGER() 98, \
                             WPP_LOCAL_TraceGuids+0, a10), 1:0  \
     ) ) \
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c1751(MSG,a10) \
     WPP_LOG_ALWAYS(WPP_EX(),MSG,a10)\
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c1751) \
     ( ( \
         WPP_CHECK_INIT WPP_ENABLED() ? \
          WPP_DEBUG((MSG,a10)), \
          WPP_SF_D(WPP_LOGGER() 99, \
                             WPP_LOCAL_TraceGuids+0, a10), 1:0  \
     ) ) \
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c1867(MSG,a10) \
     WPP_LOG_ALWAYS(WPP_EX(),MSG,a10)\
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c1867) \
     ( ( \
         WPP_CHECK_INIT WPP_ENABLED() ? \
          WPP_DEBUG((MSG,a10)), \
          WPP_SF_d(WPP_LOGGER() 105, \
                             WPP_LOCAL_TraceGuids+0, a10), 1:0  \
     ) ) \
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c1871(MSG,a10) \
     WPP_LOG_ALWAYS(WPP_EX(),MSG,a10)\
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c1871) \
     ( ( \
         WPP_CHECK_INIT WPP_ENABLED() ? \
          WPP_DEBUG((MSG,a10)), \
          WPP_SF_d(WPP_LOGGER() 106, \
                             WPP_LOCAL_TraceGuids+0, a10), 1:0  \
     ) ) \
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c1878(MSG,a10) \
     WPP_LOG_ALWAYS(WPP_EX(),MSG,a10)\
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c1878) \
     ( ( \
         WPP_CHECK_INIT WPP_ENABLED() ? \
          WPP_DEBUG((MSG,a10)), \
          WPP_SF_d(WPP_LOGGER() 107, \
                             WPP_LOCAL_TraceGuids+0, a10), 1:0  \
     ) ) \
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c1942(MSG) \
     WPP_LOG_ALWAYS(WPP_EX(),MSG)\
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c1942) \
     ( ( \
         WPP_CHECK_INIT WPP_ENABLED() ? \
          WPP_DEBUG((MSG)), \
          WPP_SF_(WPP_LOGGER() 110, \
                             WPP_LOCAL_TraceGuids+0), 1:0  \
     ) ) \
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c1946(MSG,a10) \
     WPP_LOG_ALWAYS(WPP_EX(),MSG,a10)\
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c1946) \
     ( ( \
         WPP_CHECK_INIT WPP_ENABLED() ? \
          WPP_DEBUG((MSG,a10)), \
          WPP_SF_D(WPP_LOGGER() 111, \
                             WPP_LOCAL_TraceGuids+0, a10), 1:0  \
     ) ) \
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c1951(MSG) \
     WPP_LOG_ALWAYS(WPP_EX(),MSG)\
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c1951) \
     ( ( \
         WPP_CHECK_INIT WPP_ENABLED() ? \
          WPP_DEBUG((MSG)), \
          WPP_SF_(WPP_LOGGER() 112, \
                             WPP_LOCAL_TraceGuids+0), 1:0  \
     ) ) \
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c1955(MSG,a10) \
     WPP_LOG_ALWAYS(WPP_EX(),MSG,a10)\
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c1955) \
     ( ( \
         WPP_CHECK_INIT WPP_ENABLED() ? \
          WPP_DEBUG((MSG,a10)), \
          WPP_SF_D(WPP_LOGGER() 113, \
                             WPP_LOCAL_TraceGuids+0, a10), 1:0  \
     ) ) \
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c2026(MSG) \
     WPP_LOG_ALWAYS(WPP_EX(),MSG)\
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c2026) \
     ( ( \
         WPP_CHECK_INIT WPP_ENABLED() ? \
          WPP_DEBUG((MSG)), \
          WPP_SF_(WPP_LOGGER() 114, \
                             WPP_LOCAL_TraceGuids+0), 1:0  \
     ) ) \
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c2027(MSG,a10) \
     WPP_LOG_ALWAYS(WPP_EX(),MSG,a10)\
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c2027) \
     ( ( \
         WPP_CHECK_INIT WPP_ENABLED() ? \
          WPP_DEBUG((MSG,a10)), \
          WPP_SF_D(WPP_LOGGER() 115, \
                             WPP_LOCAL_TraceGuids+0, a10), 1:0  \
     ) ) \
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c2028(MSG,a10) \
     WPP_LOG_ALWAYS(WPP_EX(),MSG,a10)\
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c2028) \
     ( ( \
         WPP_CHECK_INIT WPP_ENABLED() ? \
          WPP_DEBUG((MSG,a10)), \
          WPP_SF_D(WPP_LOGGER() 116, \
                             WPP_LOCAL_TraceGuids+0, a10), 1:0  \
     ) ) \
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c2029(MSG,a10) \
     WPP_LOG_ALWAYS(WPP_EX(),MSG,a10)\
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c2029) \
     ( ( \
         WPP_CHECK_INIT WPP_ENABLED() ? \
          WPP_DEBUG((MSG,a10)), \
          WPP_SF_D(WPP_LOGGER() 117, \
                             WPP_LOCAL_TraceGuids+0, a10), 1:0  \
     ) ) \
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c2030(MSG,a10) \
     WPP_LOG_ALWAYS(WPP_EX(),MSG,a10)\
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c2030) \
     ( ( \
         WPP_CHECK_INIT WPP_ENABLED() ? \
          WPP_DEBUG((MSG,a10)), \
          WPP_SF_D(WPP_LOGGER() 118, \
                             WPP_LOCAL_TraceGuids+0, a10), 1:0  \
     ) ) \
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c2031(MSG,a10) \
     WPP_LOG_ALWAYS(WPP_EX(),MSG,a10)\
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c2031) \
     ( ( \
         WPP_CHECK_INIT WPP_ENABLED() ? \
          WPP_DEBUG((MSG,a10)), \
          WPP_SF_q(WPP_LOGGER() 119, \
                             WPP_LOCAL_TraceGuids+0, a10), 1:0  \
     ) ) \
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c2067(MSG) \
     WPP_LOG_ALWAYS(WPP_EX(),MSG)\
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c2067) \
     ( ( \
         WPP_CHECK_INIT WPP_ENABLED() ? \
          WPP_DEBUG((MSG)), \
          WPP_SF_(WPP_LOGGER() 121, \
                             WPP_LOCAL_TraceGuids+0), 1:0  \
     ) ) \
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c2068(MSG,a10) \
     WPP_LOG_ALWAYS(WPP_EX(),MSG,a10)\
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c2068) \
     ( ( \
         WPP_CHECK_INIT WPP_ENABLED() ? \
          WPP_DEBUG((MSG,a10)), \
          WPP_SF_D(WPP_LOGGER() 122, \
                             WPP_LOCAL_TraceGuids+0, a10), 1:0  \
     ) ) \
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c2069(MSG,a10) \
     WPP_LOG_ALWAYS(WPP_EX(),MSG,a10)\
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c2069) \
     ( ( \
         WPP_CHECK_INIT WPP_ENABLED() ? \
          WPP_DEBUG((MSG,a10)), \
          WPP_SF_s(WPP_LOGGER() 123, \
                             WPP_LOCAL_TraceGuids+0, a10), 1:0  \
     ) ) \
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c2070(MSG,a10) \
     WPP_LOG_ALWAYS(WPP_EX(),MSG,a10)\
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c2070) \
     ( ( \
         WPP_CHECK_INIT WPP_ENABLED() ? \
          WPP_DEBUG((MSG,a10)), \
          WPP_SF_s(WPP_LOGGER() 124, \
                             WPP_LOCAL_TraceGuids+0, a10), 1:0  \
     ) ) \
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c2071(MSG,a10,a11,a12) \
     WPP_LOG_ALWAYS(WPP_EX(),MSG,a10,a11,a12)\
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c2071) \
     ( ( \
         WPP_CHECK_INIT WPP_ENABLED() ? \
          WPP_DEBUG((MSG,a10,a11,a12)), \
          WPP_SF_ddd(WPP_LOGGER() 125, \
                             WPP_LOCAL_TraceGuids+0, a10, a11, a12), 1:0  \
     ) ) \
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c2073(MSG,a10,a11,a12,a13,a14) \
     WPP_LOG_ALWAYS(WPP_EX(),MSG,a10,a11,a12,a13,a14)\
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c2073) \
     ( ( \
         WPP_CHECK_INIT WPP_ENABLED() ? \
          WPP_DEBUG((MSG,a10,a11,a12,a13,a14)), \
          WPP_SF_DDDDD(WPP_LOGGER() 126, \
                             WPP_LOCAL_TraceGuids+0, a10, a11, a12, a13, a14), 1:0  \
     ) ) \
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c2081(MSG,a10) \
     WPP_LOG_ALWAYS(WPP_EX(),MSG,a10)\
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c2081) \
     ( ( \
         WPP_CHECK_INIT WPP_ENABLED() ? \
          WPP_DEBUG((MSG,a10)), \
          WPP_SF_s(WPP_LOGGER() 127, \
                             WPP_LOCAL_TraceGuids+0, a10), 1:0  \
     ) ) \
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c2082(MSG) \
     WPP_LOG_ALWAYS(WPP_EX(),MSG)\
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c2082) \
     ( ( \
         WPP_CHECK_INIT WPP_ENABLED() ? \
          WPP_DEBUG((MSG)), \
          WPP_SF_(WPP_LOGGER() 128, \
                             WPP_LOCAL_TraceGuids+0), 1:0  \
     ) ) \
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c2090(MSG) \
     WPP_LOG_ALWAYS(WPP_EX(),MSG)\
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c2090) \
     ( ( \
         WPP_CHECK_INIT WPP_ENABLED() ? \
          WPP_DEBUG((MSG)), \
          WPP_SF_(WPP_LOGGER() 129, \
                             WPP_LOCAL_TraceGuids+0), 1:0  \
     ) ) \
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c2091(MSG,a10) \
     WPP_LOG_ALWAYS(WPP_EX(),MSG,a10)\
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c2091) \
     ( ( \
         WPP_CHECK_INIT WPP_ENABLED() ? \
          WPP_DEBUG((MSG,a10)), \
          WPP_SF_D(WPP_LOGGER() 130, \
                             WPP_LOCAL_TraceGuids+0, a10), 1:0  \
     ) ) \
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c2092(MSG,a10) \
     WPP_LOG_ALWAYS(WPP_EX(),MSG,a10)\
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c2092) \
     ( ( \
         WPP_CHECK_INIT WPP_ENABLED() ? \
          WPP_DEBUG((MSG,a10)), \
          WPP_SF_s(WPP_LOGGER() 131, \
                             WPP_LOCAL_TraceGuids+0, a10), 1:0  \
     ) ) \
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c2093(MSG,a10) \
     WPP_LOG_ALWAYS(WPP_EX(),MSG,a10)\
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c2093) \
     ( ( \
         WPP_CHECK_INIT WPP_ENABLED() ? \
          WPP_DEBUG((MSG,a10)), \
          WPP_SF_s(WPP_LOGGER() 132, \
                             WPP_LOCAL_TraceGuids+0, a10), 1:0  \
     ) ) \
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c2094(MSG,a10,a11,a12) \
     WPP_LOG_ALWAYS(WPP_EX(),MSG,a10,a11,a12)\
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c2094) \
     ( ( \
         WPP_CHECK_INIT WPP_ENABLED() ? \
          WPP_DEBUG((MSG,a10,a11,a12)), \
          WPP_SF_ddd(WPP_LOGGER() 133, \
                             WPP_LOCAL_TraceGuids+0, a10, a11, a12), 1:0  \
     ) ) \
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c2096(MSG,a10,a11,a12,a13) \
     WPP_LOG_ALWAYS(WPP_EX(),MSG,a10,a11,a12,a13)\
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c2096) \
     ( ( \
         WPP_CHECK_INIT WPP_ENABLED() ? \
          WPP_DEBUG((MSG,a10,a11,a12,a13)), \
          WPP_SF_DDDD(WPP_LOGGER() 134, \
                             WPP_LOCAL_TraceGuids+0, a10, a11, a12, a13), 1:0  \
     ) ) \
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c2102(MSG,a10) \
     WPP_LOG_ALWAYS(WPP_EX(),MSG,a10)\
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c2102) \
     ( ( \
         WPP_CHECK_INIT WPP_ENABLED() ? \
          WPP_DEBUG((MSG,a10)), \
          WPP_SF_s(WPP_LOGGER() 135, \
                             WPP_LOCAL_TraceGuids+0, a10), 1:0  \
     ) ) \
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c2103(MSG) \
     WPP_LOG_ALWAYS(WPP_EX(),MSG)\
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c2103) \
     ( ( \
         WPP_CHECK_INIT WPP_ENABLED() ? \
          WPP_DEBUG((MSG)), \
          WPP_SF_(WPP_LOGGER() 136, \
                             WPP_LOCAL_TraceGuids+0), 1:0  \
     ) ) \
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c2119(MSG) \
     WPP_LOG_ALWAYS(WPP_EX(),MSG)\
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c2119) \
     ( ( \
         WPP_CHECK_INIT WPP_ENABLED() ? \
          WPP_DEBUG((MSG)), \
          WPP_SF_(WPP_LOGGER() 138, \
                             WPP_LOCAL_TraceGuids+0), 1:0  \
     ) ) \
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c2120(MSG,a10) \
     WPP_LOG_ALWAYS(WPP_EX(),MSG,a10)\
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c2120) \
     ( ( \
         WPP_CHECK_INIT WPP_ENABLED() ? \
          WPP_DEBUG((MSG,a10)), \
          WPP_SF_D(WPP_LOGGER() 139, \
                             WPP_LOCAL_TraceGuids+0, a10), 1:0  \
     ) ) \
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c2121(MSG) \
     WPP_LOG_ALWAYS(WPP_EX(),MSG)\
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c2121) \
     ( ( \
         WPP_CHECK_INIT WPP_ENABLED() ? \
          WPP_DEBUG((MSG)), \
          WPP_SF_(WPP_LOGGER() 140, \
                             WPP_LOCAL_TraceGuids+0), 1:0  \
     ) ) \
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c2145(MSG,a10) \
     WPP_LOG_ALWAYS(WPP_EX(),MSG,a10)\
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c2145) \
     ( ( \
         WPP_CHECK_INIT WPP_ENABLED() ? \
          WPP_DEBUG((MSG,a10)), \
          WPP_SF_s(WPP_LOGGER() 141, \
                             WPP_LOCAL_TraceGuids+0, a10), 1:0  \
     ) ) \
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c963(MSG,a10) \
     WPP_LOG_ALWAYS(WPP_EX(),MSG,a10)\
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c963) \
     ( ( \
         WPP_CHECK_INIT WPP_ENABLED() ? \
          WPP_DEBUG((MSG,a10)), \
          WPP_SF_s(WPP_LOGGER() 32, \
                             WPP_LOCAL_TraceGuids+0, a10), 1:0  \
     ) ) \
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c964(MSG,a10) \
     WPP_LOG_ALWAYS(WPP_EX(),MSG,a10)\
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c964) \
     ( ( \
         WPP_CHECK_INIT WPP_ENABLED() ? \
          WPP_DEBUG((MSG,a10)), \
          WPP_SF_D(WPP_LOGGER() 33, \
                             WPP_LOCAL_TraceGuids+0, a10), 1:0  \
     ) ) \
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c965(MSG,a10) \
     WPP_LOG_ALWAYS(WPP_EX(),MSG,a10)\
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c965) \
     ( ( \
         WPP_CHECK_INIT WPP_ENABLED() ? \
          WPP_DEBUG((MSG,a10)), \
          WPP_SF_D(WPP_LOGGER() 34, \
                             WPP_LOCAL_TraceGuids+0, a10), 1:0  \
     ) ) \
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c966(MSG,a10) \
     WPP_LOG_ALWAYS(WPP_EX(),MSG,a10)\
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c966) \
     ( ( \
         WPP_CHECK_INIT WPP_ENABLED() ? \
          WPP_DEBUG((MSG,a10)), \
          WPP_SF_D(WPP_LOGGER() 35, \
                             WPP_LOCAL_TraceGuids+0, a10), 1:0  \
     ) ) \
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c967(MSG,a10) \
     WPP_LOG_ALWAYS(WPP_EX(),MSG,a10)\
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c967) \
     ( ( \
         WPP_CHECK_INIT WPP_ENABLED() ? \
          WPP_DEBUG((MSG,a10)), \
          WPP_SF_D(WPP_LOGGER() 36, \
                             WPP_LOCAL_TraceGuids+0, a10), 1:0  \
     ) ) \
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c968(MSG,a10) \
     WPP_LOG_ALWAYS(WPP_EX(),MSG,a10)\
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c968) \
     ( ( \
         WPP_CHECK_INIT WPP_ENABLED() ? \
          WPP_DEBUG((MSG,a10)), \
          WPP_SF_D(WPP_LOGGER() 37, \
                             WPP_LOCAL_TraceGuids+0, a10), 1:0  \
     ) ) \
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c969(MSG,a10) \
     WPP_LOG_ALWAYS(WPP_EX(),MSG,a10)\
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c969) \
     ( ( \
         WPP_CHECK_INIT WPP_ENABLED() ? \
          WPP_DEBUG((MSG,a10)), \
          WPP_SF_D(WPP_LOGGER() 38, \
                             WPP_LOCAL_TraceGuids+0, a10), 1:0  \
     ) ) \
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c970(MSG,a10) \
     WPP_LOG_ALWAYS(WPP_EX(),MSG,a10)\
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c970) \
     ( ( \
         WPP_CHECK_INIT WPP_ENABLED() ? \
          WPP_DEBUG((MSG,a10)), \
          WPP_SF_D(WPP_LOGGER() 39, \
                             WPP_LOCAL_TraceGuids+0, a10), 1:0  \
     ) ) \
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c971(MSG,a10) \
     WPP_LOG_ALWAYS(WPP_EX(),MSG,a10)\
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c971) \
     ( ( \
         WPP_CHECK_INIT WPP_ENABLED() ? \
          WPP_DEBUG((MSG,a10)), \
          WPP_SF_D(WPP_LOGGER() 40, \
                             WPP_LOCAL_TraceGuids+0, a10), 1:0  \
     ) ) \
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c972(MSG,a10) \
     WPP_LOG_ALWAYS(WPP_EX(),MSG,a10)\
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c972) \
     ( ( \
         WPP_CHECK_INIT WPP_ENABLED() ? \
          WPP_DEBUG((MSG,a10)), \
          WPP_SF_D(WPP_LOGGER() 41, \
                             WPP_LOCAL_TraceGuids+0, a10), 1:0  \
     ) ) \
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c973(MSG,a10) \
     WPP_LOG_ALWAYS(WPP_EX(),MSG,a10)\
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c973) \
     ( ( \
         WPP_CHECK_INIT WPP_ENABLED() ? \
          WPP_DEBUG((MSG,a10)), \
          WPP_SF_l(WPP_LOGGER() 42, \
                             WPP_LOCAL_TraceGuids+0, a10), 1:0  \
     ) ) \
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c974(MSG,a10) \
     WPP_LOG_ALWAYS(WPP_EX(),MSG,a10)\
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c974) \
     ( ( \
         WPP_CHECK_INIT WPP_ENABLED() ? \
          WPP_DEBUG((MSG,a10)), \
          WPP_SF_l(WPP_LOGGER() 43, \
                             WPP_LOCAL_TraceGuids+0, a10), 1:0  \
     ) ) \
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c975(MSG,a10) \
     WPP_LOG_ALWAYS(WPP_EX(),MSG,a10)\
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c975) \
     ( ( \
         WPP_CHECK_INIT WPP_ENABLED() ? \
          WPP_DEBUG((MSG,a10)), \
          WPP_SF_l(WPP_LOGGER() 44, \
                             WPP_LOCAL_TraceGuids+0, a10), 1:0  \
     ) ) \
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c976(MSG,a10) \
     WPP_LOG_ALWAYS(WPP_EX(),MSG,a10)\
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c976) \
     ( ( \
         WPP_CHECK_INIT WPP_ENABLED() ? \
          WPP_DEBUG((MSG,a10)), \
          WPP_SF_l(WPP_LOGGER() 45, \
                             WPP_LOCAL_TraceGuids+0, a10), 1:0  \
     ) ) \
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c977(MSG,a10) \
     WPP_LOG_ALWAYS(WPP_EX(),MSG,a10)\
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c977) \
     ( ( \
         WPP_CHECK_INIT WPP_ENABLED() ? \
          WPP_DEBUG((MSG,a10)), \
          WPP_SF_D(WPP_LOGGER() 46, \
                             WPP_LOCAL_TraceGuids+0, a10), 1:0  \
     ) ) \
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c978(MSG,a10) \
     WPP_LOG_ALWAYS(WPP_EX(),MSG,a10)\
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c978) \
     ( ( \
         WPP_CHECK_INIT WPP_ENABLED() ? \
          WPP_DEBUG((MSG,a10)), \
          WPP_SF_l(WPP_LOGGER() 47, \
                             WPP_LOCAL_TraceGuids+0, a10), 1:0  \
     ) ) \
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c979(MSG,a10) \
     WPP_LOG_ALWAYS(WPP_EX(),MSG,a10)\
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c979) \
     ( ( \
         WPP_CHECK_INIT WPP_ENABLED() ? \
          WPP_DEBUG((MSG,a10)), \
          WPP_SF_l(WPP_LOGGER() 48, \
                             WPP_LOCAL_TraceGuids+0, a10), 1:0  \
     ) ) \
     WPP_POST()
#else
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c1126(MSG,a10,a11) \
     WPP_LOG_ALWAYS(WPP_EX(),MSG,a10,a11) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c1126) \
     ( ( \
         WPP_CHECK_INIT WPP_ENABLED() ? \
            WPP_SF_qD(WPP_LOGGER() 50, \
                               WPP_LOCAL_TraceGuids+0, a10, a11), 1:0  \
     ) ) \
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c1132(MSG) \
     WPP_LOG_ALWAYS(WPP_EX(),MSG) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c1132) \
     ( ( \
         WPP_CHECK_INIT WPP_ENABLED() ? \
            WPP_SF_(WPP_LOGGER() 51, \
                               WPP_LOCAL_TraceGuids+0), 1:0  \
     ) ) \
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c1133(MSG) \
     WPP_LOG_ALWAYS(WPP_EX(),MSG) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c1133) \
     ( ( \
         WPP_CHECK_INIT WPP_ENABLED() ? \
            WPP_SF_(WPP_LOGGER() 52, \
                               WPP_LOCAL_TraceGuids+0), 1:0  \
     ) ) \
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c1134(MSG,a10) \
     WPP_LOG_ALWAYS(WPP_EX(),MSG,a10) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c1134) \
     ( ( \
         WPP_CHECK_INIT WPP_ENABLED() ? \
            WPP_SF_d(WPP_LOGGER() 53, \
                               WPP_LOCAL_TraceGuids+0, a10), 1:0  \
     ) ) \
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c1135(MSG,a10) \
     WPP_LOG_ALWAYS(WPP_EX(),MSG,a10) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c1135) \
     ( ( \
         WPP_CHECK_INIT WPP_ENABLED() ? \
            WPP_SF_D(WPP_LOGGER() 54, \
                               WPP_LOCAL_TraceGuids+0, a10), 1:0  \
     ) ) \
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c1136(MSG,a10) \
     WPP_LOG_ALWAYS(WPP_EX(),MSG,a10) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c1136) \
     ( ( \
         WPP_CHECK_INIT WPP_ENABLED() ? \
            WPP_SF_D(WPP_LOGGER() 55, \
                               WPP_LOCAL_TraceGuids+0, a10), 1:0  \
     ) ) \
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c1137(MSG,a10) \
     WPP_LOG_ALWAYS(WPP_EX(),MSG,a10) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c1137) \
     ( ( \
         WPP_CHECK_INIT WPP_ENABLED() ? \
            WPP_SF_D(WPP_LOGGER() 56, \
                               WPP_LOCAL_TraceGuids+0, a10), 1:0  \
     ) ) \
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c1138(MSG,a10) \
     WPP_LOG_ALWAYS(WPP_EX(),MSG,a10) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c1138) \
     ( ( \
         WPP_CHECK_INIT WPP_ENABLED() ? \
            WPP_SF_D(WPP_LOGGER() 57, \
                               WPP_LOCAL_TraceGuids+0, a10), 1:0  \
     ) ) \
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c1139(MSG,a10) \
     WPP_LOG_ALWAYS(WPP_EX(),MSG,a10) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c1139) \
     ( ( \
         WPP_CHECK_INIT WPP_ENABLED() ? \
            WPP_SF_D(WPP_LOGGER() 58, \
                               WPP_LOCAL_TraceGuids+0, a10), 1:0  \
     ) ) \
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c1140(MSG,a10) \
     WPP_LOG_ALWAYS(WPP_EX(),MSG,a10) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c1140) \
     ( ( \
         WPP_CHECK_INIT WPP_ENABLED() ? \
            WPP_SF_D(WPP_LOGGER() 59, \
                               WPP_LOCAL_TraceGuids+0, a10), 1:0  \
     ) ) \
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c1141(MSG,a10) \
     WPP_LOG_ALWAYS(WPP_EX(),MSG,a10) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c1141) \
     ( ( \
         WPP_CHECK_INIT WPP_ENABLED() ? \
            WPP_SF_D(WPP_LOGGER() 60, \
                               WPP_LOCAL_TraceGuids+0, a10), 1:0  \
     ) ) \
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c1142(MSG,a10) \
     WPP_LOG_ALWAYS(WPP_EX(),MSG,a10) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c1142) \
     ( ( \
         WPP_CHECK_INIT WPP_ENABLED() ? \
            WPP_SF_D(WPP_LOGGER() 61, \
                               WPP_LOCAL_TraceGuids+0, a10), 1:0  \
     ) ) \
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c1143(MSG,a10) \
     WPP_LOG_ALWAYS(WPP_EX(),MSG,a10) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c1143) \
     ( ( \
         WPP_CHECK_INIT WPP_ENABLED() ? \
            WPP_SF_D(WPP_LOGGER() 62, \
                               WPP_LOCAL_TraceGuids+0, a10), 1:0  \
     ) ) \
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c1144(MSG,a10) \
     WPP_LOG_ALWAYS(WPP_EX(),MSG,a10) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c1144) \
     ( ( \
         WPP_CHECK_INIT WPP_ENABLED() ? \
            WPP_SF_D(WPP_LOGGER() 63, \
                               WPP_LOCAL_TraceGuids+0, a10), 1:0  \
     ) ) \
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c1145(MSG,a10) \
     WPP_LOG_ALWAYS(WPP_EX(),MSG,a10) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c1145) \
     ( ( \
         WPP_CHECK_INIT WPP_ENABLED() ? \
            WPP_SF_D(WPP_LOGGER() 64, \
                               WPP_LOCAL_TraceGuids+0, a10), 1:0  \
     ) ) \
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c1146(MSG,a10) \
     WPP_LOG_ALWAYS(WPP_EX(),MSG,a10) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c1146) \
     ( ( \
         WPP_CHECK_INIT WPP_ENABLED() ? \
            WPP_SF_D(WPP_LOGGER() 65, \
                               WPP_LOCAL_TraceGuids+0, a10), 1:0  \
     ) ) \
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c1147(MSG,a10) \
     WPP_LOG_ALWAYS(WPP_EX(),MSG,a10) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c1147) \
     ( ( \
         WPP_CHECK_INIT WPP_ENABLED() ? \
            WPP_SF_D(WPP_LOGGER() 66, \
                               WPP_LOCAL_TraceGuids+0, a10), 1:0  \
     ) ) \
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c1535(MSG,a10,a11) \
     WPP_LOG_ALWAYS(WPP_EX(),MSG,a10,a11) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c1535) \
     ( ( \
         WPP_CHECK_INIT WPP_ENABLED() ? \
            WPP_SF_dD(WPP_LOGGER() 80, \
                               WPP_LOCAL_TraceGuids+0, a10, a11), 1:0  \
     ) ) \
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c1537(MSG) \
     WPP_LOG_ALWAYS(WPP_EX(),MSG) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c1537) \
     ( ( \
         WPP_CHECK_INIT WPP_ENABLED() ? \
            WPP_SF_(WPP_LOGGER() 81, \
                               WPP_LOCAL_TraceGuids+0), 1:0  \
     ) ) \
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c1607(MSG,a10) \
     WPP_LOG_ALWAYS(WPP_EX(),MSG,a10) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c1607) \
     ( ( \
         WPP_CHECK_INIT WPP_ENABLED() ? \
            WPP_SF_D(WPP_LOGGER() 82, \
                               WPP_LOCAL_TraceGuids+0, a10), 1:0  \
     ) ) \
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c1608(MSG,a10) \
     WPP_LOG_ALWAYS(WPP_EX(),MSG,a10) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c1608) \
     ( ( \
         WPP_CHECK_INIT WPP_ENABLED() ? \
            WPP_SF_D(WPP_LOGGER() 83, \
                               WPP_LOCAL_TraceGuids+0, a10), 1:0  \
     ) ) \
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c1609(MSG,a10) \
     WPP_LOG_ALWAYS(WPP_EX(),MSG,a10) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c1609) \
     ( ( \
         WPP_CHECK_INIT WPP_ENABLED() ? \
            WPP_SF_D(WPP_LOGGER() 84, \
                               WPP_LOCAL_TraceGuids+0, a10), 1:0  \
     ) ) \
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c1610(MSG,a10) \
     WPP_LOG_ALWAYS(WPP_EX(),MSG,a10) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c1610) \
     ( ( \
         WPP_CHECK_INIT WPP_ENABLED() ? \
            WPP_SF_D(WPP_LOGGER() 85, \
                               WPP_LOCAL_TraceGuids+0, a10), 1:0  \
     ) ) \
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c1611(MSG,a10) \
     WPP_LOG_ALWAYS(WPP_EX(),MSG,a10) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c1611) \
     ( ( \
         WPP_CHECK_INIT WPP_ENABLED() ? \
            WPP_SF_D(WPP_LOGGER() 86, \
                               WPP_LOCAL_TraceGuids+0, a10), 1:0  \
     ) ) \
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c1612(MSG,a10) \
     WPP_LOG_ALWAYS(WPP_EX(),MSG,a10) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c1612) \
     ( ( \
         WPP_CHECK_INIT WPP_ENABLED() ? \
            WPP_SF_D(WPP_LOGGER() 87, \
                               WPP_LOCAL_TraceGuids+0, a10), 1:0  \
     ) ) \
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c1743(MSG,a10) \
     WPP_LOG_ALWAYS(WPP_EX(),MSG,a10) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c1743) \
     ( ( \
         WPP_CHECK_INIT WPP_ENABLED() ? \
            WPP_SF_d(WPP_LOGGER() 91, \
                               WPP_LOCAL_TraceGuids+0, a10), 1:0  \
     ) ) \
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c1744(MSG,a10) \
     WPP_LOG_ALWAYS(WPP_EX(),MSG,a10) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c1744) \
     ( ( \
         WPP_CHECK_INIT WPP_ENABLED() ? \
            WPP_SF_D(WPP_LOGGER() 92, \
                               WPP_LOCAL_TraceGuids+0, a10), 1:0  \
     ) ) \
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c1745(MSG,a10) \
     WPP_LOG_ALWAYS(WPP_EX(),MSG,a10) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c1745) \
     ( ( \
         WPP_CHECK_INIT WPP_ENABLED() ? \
            WPP_SF_D(WPP_LOGGER() 93, \
                               WPP_LOCAL_TraceGuids+0, a10), 1:0  \
     ) ) \
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c1746(MSG,a10) \
     WPP_LOG_ALWAYS(WPP_EX(),MSG,a10) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c1746) \
     ( ( \
         WPP_CHECK_INIT WPP_ENABLED() ? \
            WPP_SF_D(WPP_LOGGER() 94, \
                               WPP_LOCAL_TraceGuids+0, a10), 1:0  \
     ) ) \
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c1747(MSG,a10) \
     WPP_LOG_ALWAYS(WPP_EX(),MSG,a10) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c1747) \
     ( ( \
         WPP_CHECK_INIT WPP_ENABLED() ? \
            WPP_SF_D(WPP_LOGGER() 95, \
                               WPP_LOCAL_TraceGuids+0, a10), 1:0  \
     ) ) \
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c1748(MSG,a10) \
     WPP_LOG_ALWAYS(WPP_EX(),MSG,a10) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c1748) \
     ( ( \
         WPP_CHECK_INIT WPP_ENABLED() ? \
            WPP_SF_D(WPP_LOGGER() 96, \
                               WPP_LOCAL_TraceGuids+0, a10), 1:0  \
     ) ) \
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c1749(MSG,a10) \
     WPP_LOG_ALWAYS(WPP_EX(),MSG,a10) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c1749) \
     ( ( \
         WPP_CHECK_INIT WPP_ENABLED() ? \
            WPP_SF_D(WPP_LOGGER() 97, \
                               WPP_LOCAL_TraceGuids+0, a10), 1:0  \
     ) ) \
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c1750(MSG,a10) \
     WPP_LOG_ALWAYS(WPP_EX(),MSG,a10) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c1750) \
     ( ( \
         WPP_CHECK_INIT WPP_ENABLED() ? \
            WPP_SF_D(WPP_LOGGER() 98, \
                               WPP_LOCAL_TraceGuids+0, a10), 1:0  \
     ) ) \
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c1751(MSG,a10) \
     WPP_LOG_ALWAYS(WPP_EX(),MSG,a10) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c1751) \
     ( ( \
         WPP_CHECK_INIT WPP_ENABLED() ? \
            WPP_SF_D(WPP_LOGGER() 99, \
                               WPP_LOCAL_TraceGuids+0, a10), 1:0  \
     ) ) \
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c1867(MSG,a10) \
     WPP_LOG_ALWAYS(WPP_EX(),MSG,a10) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c1867) \
     ( ( \
         WPP_CHECK_INIT WPP_ENABLED() ? \
            WPP_SF_d(WPP_LOGGER() 105, \
                               WPP_LOCAL_TraceGuids+0, a10), 1:0  \
     ) ) \
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c1871(MSG,a10) \
     WPP_LOG_ALWAYS(WPP_EX(),MSG,a10) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c1871) \
     ( ( \
         WPP_CHECK_INIT WPP_ENABLED() ? \
            WPP_SF_d(WPP_LOGGER() 106, \
                               WPP_LOCAL_TraceGuids+0, a10), 1:0  \
     ) ) \
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c1878(MSG,a10) \
     WPP_LOG_ALWAYS(WPP_EX(),MSG,a10) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c1878) \
     ( ( \
         WPP_CHECK_INIT WPP_ENABLED() ? \
            WPP_SF_d(WPP_LOGGER() 107, \
                               WPP_LOCAL_TraceGuids+0, a10), 1:0  \
     ) ) \
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c1942(MSG) \
     WPP_LOG_ALWAYS(WPP_EX(),MSG) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c1942) \
     ( ( \
         WPP_CHECK_INIT WPP_ENABLED() ? \
            WPP_SF_(WPP_LOGGER() 110, \
                               WPP_LOCAL_TraceGuids+0), 1:0  \
     ) ) \
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c1946(MSG,a10) \
     WPP_LOG_ALWAYS(WPP_EX(),MSG,a10) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c1946) \
     ( ( \
         WPP_CHECK_INIT WPP_ENABLED() ? \
            WPP_SF_D(WPP_LOGGER() 111, \
                               WPP_LOCAL_TraceGuids+0, a10), 1:0  \
     ) ) \
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c1951(MSG) \
     WPP_LOG_ALWAYS(WPP_EX(),MSG) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c1951) \
     ( ( \
         WPP_CHECK_INIT WPP_ENABLED() ? \
            WPP_SF_(WPP_LOGGER() 112, \
                               WPP_LOCAL_TraceGuids+0), 1:0  \
     ) ) \
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c1955(MSG,a10) \
     WPP_LOG_ALWAYS(WPP_EX(),MSG,a10) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c1955) \
     ( ( \
         WPP_CHECK_INIT WPP_ENABLED() ? \
            WPP_SF_D(WPP_LOGGER() 113, \
                               WPP_LOCAL_TraceGuids+0, a10), 1:0  \
     ) ) \
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c2026(MSG) \
     WPP_LOG_ALWAYS(WPP_EX(),MSG) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c2026) \
     ( ( \
         WPP_CHECK_INIT WPP_ENABLED() ? \
            WPP_SF_(WPP_LOGGER() 114, \
                               WPP_LOCAL_TraceGuids+0), 1:0  \
     ) ) \
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c2027(MSG,a10) \
     WPP_LOG_ALWAYS(WPP_EX(),MSG,a10) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c2027) \
     ( ( \
         WPP_CHECK_INIT WPP_ENABLED() ? \
            WPP_SF_D(WPP_LOGGER() 115, \
                               WPP_LOCAL_TraceGuids+0, a10), 1:0  \
     ) ) \
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c2028(MSG,a10) \
     WPP_LOG_ALWAYS(WPP_EX(),MSG,a10) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c2028) \
     ( ( \
         WPP_CHECK_INIT WPP_ENABLED() ? \
            WPP_SF_D(WPP_LOGGER() 116, \
                               WPP_LOCAL_TraceGuids+0, a10), 1:0  \
     ) ) \
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c2029(MSG,a10) \
     WPP_LOG_ALWAYS(WPP_EX(),MSG,a10) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c2029) \
     ( ( \
         WPP_CHECK_INIT WPP_ENABLED() ? \
            WPP_SF_D(WPP_LOGGER() 117, \
                               WPP_LOCAL_TraceGuids+0, a10), 1:0  \
     ) ) \
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c2030(MSG,a10) \
     WPP_LOG_ALWAYS(WPP_EX(),MSG,a10) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c2030) \
     ( ( \
         WPP_CHECK_INIT WPP_ENABLED() ? \
            WPP_SF_D(WPP_LOGGER() 118, \
                               WPP_LOCAL_TraceGuids+0, a10), 1:0  \
     ) ) \
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c2031(MSG,a10) \
     WPP_LOG_ALWAYS(WPP_EX(),MSG,a10) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c2031) \
     ( ( \
         WPP_CHECK_INIT WPP_ENABLED() ? \
            WPP_SF_q(WPP_LOGGER() 119, \
                               WPP_LOCAL_TraceGuids+0, a10), 1:0  \
     ) ) \
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c2067(MSG) \
     WPP_LOG_ALWAYS(WPP_EX(),MSG) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c2067) \
     ( ( \
         WPP_CHECK_INIT WPP_ENABLED() ? \
            WPP_SF_(WPP_LOGGER() 121, \
                               WPP_LOCAL_TraceGuids+0), 1:0  \
     ) ) \
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c2068(MSG,a10) \
     WPP_LOG_ALWAYS(WPP_EX(),MSG,a10) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c2068) \
     ( ( \
         WPP_CHECK_INIT WPP_ENABLED() ? \
            WPP_SF_D(WPP_LOGGER() 122, \
                               WPP_LOCAL_TraceGuids+0, a10), 1:0  \
     ) ) \
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c2069(MSG,a10) \
     WPP_LOG_ALWAYS(WPP_EX(),MSG,a10) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c2069) \
     ( ( \
         WPP_CHECK_INIT WPP_ENABLED() ? \
            WPP_SF_s(WPP_LOGGER() 123, \
                               WPP_LOCAL_TraceGuids+0, a10), 1:0  \
     ) ) \
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c2070(MSG,a10) \
     WPP_LOG_ALWAYS(WPP_EX(),MSG,a10) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c2070) \
     ( ( \
         WPP_CHECK_INIT WPP_ENABLED() ? \
            WPP_SF_s(WPP_LOGGER() 124, \
                               WPP_LOCAL_TraceGuids+0, a10), 1:0  \
     ) ) \
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c2071(MSG,a10,a11,a12) \
     WPP_LOG_ALWAYS(WPP_EX(),MSG,a10,a11,a12) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c2071) \
     ( ( \
         WPP_CHECK_INIT WPP_ENABLED() ? \
            WPP_SF_ddd(WPP_LOGGER() 125, \
                               WPP_LOCAL_TraceGuids+0, a10, a11, a12), 1:0  \
     ) ) \
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c2073(MSG,a10,a11,a12,a13,a14) \
     WPP_LOG_ALWAYS(WPP_EX(),MSG,a10,a11,a12,a13,a14) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c2073) \
     ( ( \
         WPP_CHECK_INIT WPP_ENABLED() ? \
            WPP_SF_DDDDD(WPP_LOGGER() 126, \
                               WPP_LOCAL_TraceGuids+0, a10, a11, a12, a13, a14), 1:0  \
     ) ) \
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c2081(MSG,a10) \
     WPP_LOG_ALWAYS(WPP_EX(),MSG,a10) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c2081) \
     ( ( \
         WPP_CHECK_INIT WPP_ENABLED() ? \
            WPP_SF_s(WPP_LOGGER() 127, \
                               WPP_LOCAL_TraceGuids+0, a10), 1:0  \
     ) ) \
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c2082(MSG) \
     WPP_LOG_ALWAYS(WPP_EX(),MSG) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c2082) \
     ( ( \
         WPP_CHECK_INIT WPP_ENABLED() ? \
            WPP_SF_(WPP_LOGGER() 128, \
                               WPP_LOCAL_TraceGuids+0), 1:0  \
     ) ) \
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c2090(MSG) \
     WPP_LOG_ALWAYS(WPP_EX(),MSG) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c2090) \
     ( ( \
         WPP_CHECK_INIT WPP_ENABLED() ? \
            WPP_SF_(WPP_LOGGER() 129, \
                               WPP_LOCAL_TraceGuids+0), 1:0  \
     ) ) \
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c2091(MSG,a10) \
     WPP_LOG_ALWAYS(WPP_EX(),MSG,a10) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c2091) \
     ( ( \
         WPP_CHECK_INIT WPP_ENABLED() ? \
            WPP_SF_D(WPP_LOGGER() 130, \
                               WPP_LOCAL_TraceGuids+0, a10), 1:0  \
     ) ) \
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c2092(MSG,a10) \
     WPP_LOG_ALWAYS(WPP_EX(),MSG,a10) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c2092) \
     ( ( \
         WPP_CHECK_INIT WPP_ENABLED() ? \
            WPP_SF_s(WPP_LOGGER() 131, \
                               WPP_LOCAL_TraceGuids+0, a10), 1:0  \
     ) ) \
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c2093(MSG,a10) \
     WPP_LOG_ALWAYS(WPP_EX(),MSG,a10) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c2093) \
     ( ( \
         WPP_CHECK_INIT WPP_ENABLED() ? \
            WPP_SF_s(WPP_LOGGER() 132, \
                               WPP_LOCAL_TraceGuids+0, a10), 1:0  \
     ) ) \
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c2094(MSG,a10,a11,a12) \
     WPP_LOG_ALWAYS(WPP_EX(),MSG,a10,a11,a12) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c2094) \
     ( ( \
         WPP_CHECK_INIT WPP_ENABLED() ? \
            WPP_SF_ddd(WPP_LOGGER() 133, \
                               WPP_LOCAL_TraceGuids+0, a10, a11, a12), 1:0  \
     ) ) \
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c2096(MSG,a10,a11,a12,a13) \
     WPP_LOG_ALWAYS(WPP_EX(),MSG,a10,a11,a12,a13) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c2096) \
     ( ( \
         WPP_CHECK_INIT WPP_ENABLED() ? \
            WPP_SF_DDDD(WPP_LOGGER() 134, \
                               WPP_LOCAL_TraceGuids+0, a10, a11, a12, a13), 1:0  \
     ) ) \
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c2102(MSG,a10) \
     WPP_LOG_ALWAYS(WPP_EX(),MSG,a10) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c2102) \
     ( ( \
         WPP_CHECK_INIT WPP_ENABLED() ? \
            WPP_SF_s(WPP_LOGGER() 135, \
                               WPP_LOCAL_TraceGuids+0, a10), 1:0  \
     ) ) \
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c2103(MSG) \
     WPP_LOG_ALWAYS(WPP_EX(),MSG) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c2103) \
     ( ( \
         WPP_CHECK_INIT WPP_ENABLED() ? \
            WPP_SF_(WPP_LOGGER() 136, \
                               WPP_LOCAL_TraceGuids+0), 1:0  \
     ) ) \
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c2119(MSG) \
     WPP_LOG_ALWAYS(WPP_EX(),MSG) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c2119) \
     ( ( \
         WPP_CHECK_INIT WPP_ENABLED() ? \
            WPP_SF_(WPP_LOGGER() 138, \
                               WPP_LOCAL_TraceGuids+0), 1:0  \
     ) ) \
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c2120(MSG,a10) \
     WPP_LOG_ALWAYS(WPP_EX(),MSG,a10) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c2120) \
     ( ( \
         WPP_CHECK_INIT WPP_ENABLED() ? \
            WPP_SF_D(WPP_LOGGER() 139, \
                               WPP_LOCAL_TraceGuids+0, a10), 1:0  \
     ) ) \
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c2121(MSG) \
     WPP_LOG_ALWAYS(WPP_EX(),MSG) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c2121) \
     ( ( \
         WPP_CHECK_INIT WPP_ENABLED() ? \
            WPP_SF_(WPP_LOGGER() 140, \
                               WPP_LOCAL_TraceGuids+0), 1:0  \
     ) ) \
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c2145(MSG,a10) \
     WPP_LOG_ALWAYS(WPP_EX(),MSG,a10) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c2145) \
     ( ( \
         WPP_CHECK_INIT WPP_ENABLED() ? \
            WPP_SF_s(WPP_LOGGER() 141, \
                               WPP_LOCAL_TraceGuids+0, a10), 1:0  \
     ) ) \
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c963(MSG,a10) \
     WPP_LOG_ALWAYS(WPP_EX(),MSG,a10) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c963) \
     ( ( \
         WPP_CHECK_INIT WPP_ENABLED() ? \
            WPP_SF_s(WPP_LOGGER() 32, \
                               WPP_LOCAL_TraceGuids+0, a10), 1:0  \
     ) ) \
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c964(MSG,a10) \
     WPP_LOG_ALWAYS(WPP_EX(),MSG,a10) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c964) \
     ( ( \
         WPP_CHECK_INIT WPP_ENABLED() ? \
            WPP_SF_D(WPP_LOGGER() 33, \
                               WPP_LOCAL_TraceGuids+0, a10), 1:0  \
     ) ) \
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c965(MSG,a10) \
     WPP_LOG_ALWAYS(WPP_EX(),MSG,a10) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c965) \
     ( ( \
         WPP_CHECK_INIT WPP_ENABLED() ? \
            WPP_SF_D(WPP_LOGGER() 34, \
                               WPP_LOCAL_TraceGuids+0, a10), 1:0  \
     ) ) \
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c966(MSG,a10) \
     WPP_LOG_ALWAYS(WPP_EX(),MSG,a10) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c966) \
     ( ( \
         WPP_CHECK_INIT WPP_ENABLED() ? \
            WPP_SF_D(WPP_LOGGER() 35, \
                               WPP_LOCAL_TraceGuids+0, a10), 1:0  \
     ) ) \
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c967(MSG,a10) \
     WPP_LOG_ALWAYS(WPP_EX(),MSG,a10) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c967) \
     ( ( \
         WPP_CHECK_INIT WPP_ENABLED() ? \
            WPP_SF_D(WPP_LOGGER() 36, \
                               WPP_LOCAL_TraceGuids+0, a10), 1:0  \
     ) ) \
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c968(MSG,a10) \
     WPP_LOG_ALWAYS(WPP_EX(),MSG,a10) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c968) \
     ( ( \
         WPP_CHECK_INIT WPP_ENABLED() ? \
            WPP_SF_D(WPP_LOGGER() 37, \
                               WPP_LOCAL_TraceGuids+0, a10), 1:0  \
     ) ) \
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c969(MSG,a10) \
     WPP_LOG_ALWAYS(WPP_EX(),MSG,a10) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c969) \
     ( ( \
         WPP_CHECK_INIT WPP_ENABLED() ? \
            WPP_SF_D(WPP_LOGGER() 38, \
                               WPP_LOCAL_TraceGuids+0, a10), 1:0  \
     ) ) \
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c970(MSG,a10) \
     WPP_LOG_ALWAYS(WPP_EX(),MSG,a10) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c970) \
     ( ( \
         WPP_CHECK_INIT WPP_ENABLED() ? \
            WPP_SF_D(WPP_LOGGER() 39, \
                               WPP_LOCAL_TraceGuids+0, a10), 1:0  \
     ) ) \
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c971(MSG,a10) \
     WPP_LOG_ALWAYS(WPP_EX(),MSG,a10) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c971) \
     ( ( \
         WPP_CHECK_INIT WPP_ENABLED() ? \
            WPP_SF_D(WPP_LOGGER() 40, \
                               WPP_LOCAL_TraceGuids+0, a10), 1:0  \
     ) ) \
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c972(MSG,a10) \
     WPP_LOG_ALWAYS(WPP_EX(),MSG,a10) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c972) \
     ( ( \
         WPP_CHECK_INIT WPP_ENABLED() ? \
            WPP_SF_D(WPP_LOGGER() 41, \
                               WPP_LOCAL_TraceGuids+0, a10), 1:0  \
     ) ) \
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c973(MSG,a10) \
     WPP_LOG_ALWAYS(WPP_EX(),MSG,a10) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c973) \
     ( ( \
         WPP_CHECK_INIT WPP_ENABLED() ? \
            WPP_SF_l(WPP_LOGGER() 42, \
                               WPP_LOCAL_TraceGuids+0, a10), 1:0  \
     ) ) \
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c974(MSG,a10) \
     WPP_LOG_ALWAYS(WPP_EX(),MSG,a10) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c974) \
     ( ( \
         WPP_CHECK_INIT WPP_ENABLED() ? \
            WPP_SF_l(WPP_LOGGER() 43, \
                               WPP_LOCAL_TraceGuids+0, a10), 1:0  \
     ) ) \
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c975(MSG,a10) \
     WPP_LOG_ALWAYS(WPP_EX(),MSG,a10) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c975) \
     ( ( \
         WPP_CHECK_INIT WPP_ENABLED() ? \
            WPP_SF_l(WPP_LOGGER() 44, \
                               WPP_LOCAL_TraceGuids+0, a10), 1:0  \
     ) ) \
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c976(MSG,a10) \
     WPP_LOG_ALWAYS(WPP_EX(),MSG,a10) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c976) \
     ( ( \
         WPP_CHECK_INIT WPP_ENABLED() ? \
            WPP_SF_l(WPP_LOGGER() 45, \
                               WPP_LOCAL_TraceGuids+0, a10), 1:0  \
     ) ) \
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c977(MSG,a10) \
     WPP_LOG_ALWAYS(WPP_EX(),MSG,a10) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c977) \
     ( ( \
         WPP_CHECK_INIT WPP_ENABLED() ? \
            WPP_SF_D(WPP_LOGGER() 46, \
                               WPP_LOCAL_TraceGuids+0, a10), 1:0  \
     ) ) \
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c978(MSG,a10) \
     WPP_LOG_ALWAYS(WPP_EX(),MSG,a10) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c978) \
     ( ( \
         WPP_CHECK_INIT WPP_ENABLED() ? \
            WPP_SF_l(WPP_LOGGER() 47, \
                               WPP_LOCAL_TraceGuids+0, a10), 1:0  \
     ) ) \
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_USBPNP_c979(MSG,a10) \
     WPP_LOG_ALWAYS(WPP_EX(),MSG,a10) \
     WPP_PRE() \
     WPP_ANNOTATE(USBPNP_c979) \
     ( ( \
         WPP_CHECK_INIT WPP_ENABLED() ? \
            WPP_SF_l(WPP_LOGGER() 48, \
                               WPP_LOCAL_TraceGuids+0, a10), 1:0  \
     ) ) \
     WPP_POST()
#endif


#ifdef WPP_DEBUG
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPNP_c1057(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPNP_c1057) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sdqq(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 49,WPP_LOCAL_TraceGuids+0 WPP_R0123 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_GFLAG_GLEVEL_POST
#  define WPP_GFLAG_GLEVEL_POST(GFLAG,GLEVEL)
#endif
#ifndef WPP_GFLAG_GLEVEL_PRE
#  define WPP_GFLAG_GLEVEL_PRE(GFLAG,GLEVEL)
#endif
#define WPP_CALL_USBPNP_c106(GFLAG, GLEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_GFLAG_GLEVEL(GFLAG, GLEVEL),MSGARGS)\
            WPP_GFLAG_GLEVEL_PRE(GFLAG, GLEVEL) \
            WPP_ANNOTATE(USBPNP_c106) \
            (( \
                WPP_CHECK_INIT  WPP_GFLAG_GLEVEL_ENABLED(GFLAG, GLEVEL)? \
                WPP_SF_sddqq(WPP_GFLAG_GLEVEL_LOGGER(GFLAG, GLEVEL) 11,WPP_LOCAL_TraceGuids+0 WPP_R01234 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_GFLAG_GLEVEL_POST(GFLAG, GLEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPNP_c1158(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPNP_c1158) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 67,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPNP_c1168(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPNP_c1168) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 68,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPNP_c1177(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPNP_c1177) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sDD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 69,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPNP_c1207(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPNP_c1207) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 70,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPNP_c1217(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPNP_c1217) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 71,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPNP_c1229(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPNP_c1229) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 72,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPNP_c1240(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPNP_c1240) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 73,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPNP_c1296(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPNP_c1296) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sdD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 74,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPNP_c1311(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPNP_c1311) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 75,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPNP_c1322(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPNP_c1322) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 76,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPNP_c1336(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPNP_c1336) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 77,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_GFLAG_GLEVEL_POST
#  define WPP_GFLAG_GLEVEL_POST(GFLAG,GLEVEL)
#endif
#ifndef WPP_GFLAG_GLEVEL_PRE
#  define WPP_GFLAG_GLEVEL_PRE(GFLAG,GLEVEL)
#endif
#define WPP_CALL_USBPNP_c135(GFLAG, GLEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_GFLAG_GLEVEL(GFLAG, GLEVEL),MSGARGS)\
            WPP_GFLAG_GLEVEL_PRE(GFLAG, GLEVEL) \
            WPP_ANNOTATE(USBPNP_c135) \
            (( \
                WPP_CHECK_INIT  WPP_GFLAG_GLEVEL_ENABLED(GFLAG, GLEVEL)? \
                WPP_SF_sq(WPP_GFLAG_GLEVEL_LOGGER(GFLAG, GLEVEL) 12,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_GFLAG_GLEVEL_POST(GFLAG, GLEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPNP_c1357(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPNP_c1357) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 78,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPNP_c1369(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPNP_c1369) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 79,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_GFLAG_GLEVEL_POST
#  define WPP_GFLAG_GLEVEL_POST(GFLAG,GLEVEL)
#endif
#ifndef WPP_GFLAG_GLEVEL_PRE
#  define WPP_GFLAG_GLEVEL_PRE(GFLAG,GLEVEL)
#endif
#define WPP_CALL_USBPNP_c146(GFLAG, GLEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_GFLAG_GLEVEL(GFLAG, GLEVEL),MSGARGS)\
            WPP_GFLAG_GLEVEL_PRE(GFLAG, GLEVEL) \
            WPP_ANNOTATE(USBPNP_c146) \
            (( \
                WPP_CHECK_INIT  WPP_GFLAG_GLEVEL_ENABLED(GFLAG, GLEVEL)? \
                WPP_SF_sD(WPP_GFLAG_GLEVEL_LOGGER(GFLAG, GLEVEL) 13,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_GFLAG_GLEVEL_POST(GFLAG, GLEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPNP_c1666(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPNP_c1666) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 88,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPNP_c1684(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPNP_c1684) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sDD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 89,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPNP_c173(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPNP_c173) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sqq(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 14,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPNP_c1738(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPNP_c1738) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sd(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 90,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPNP_c1782(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPNP_c1782) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 100,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPNP_c1799(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPNP_c1799) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sDDDD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 101,WPP_LOCAL_TraceGuids+0 WPP_R01234 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPNP_c182(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPNP_c182) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 15,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPNP_c1829(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPNP_c1829) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sDDDD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 102,WPP_LOCAL_TraceGuids+0 WPP_R01234 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPNP_c1841(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPNP_c1841) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 103,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPNP_c1857(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPNP_c1857) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 104,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPNP_c1892(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPNP_c1892) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 108,WPP_LOCAL_TraceGuids+0 WPP_R MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPNP_c1916(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPNP_c1916) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sd(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 109,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPNP_c2042(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPNP_c2042) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 120,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPNP_c2112(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPNP_c2112) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_D(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 137,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPNP_c2187(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPNP_c2187) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sq(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 142,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPNP_c2207(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPNP_c2207) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sq(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 143,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPNP_c2219(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPNP_c2219) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 144,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_GFLAG_GLEVEL_POST
#  define WPP_GFLAG_GLEVEL_POST(GFLAG,GLEVEL)
#endif
#ifndef WPP_GFLAG_GLEVEL_PRE
#  define WPP_GFLAG_GLEVEL_PRE(GFLAG,GLEVEL)
#endif
#define WPP_CALL_USBPNP_c2307(GFLAG, GLEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_GFLAG_GLEVEL(GFLAG, GLEVEL),MSGARGS)\
            WPP_GFLAG_GLEVEL_PRE(GFLAG, GLEVEL) \
            WPP_ANNOTATE(USBPNP_c2307) \
            (( \
                WPP_CHECK_INIT  WPP_GFLAG_GLEVEL_ENABLED(GFLAG, GLEVEL)? \
                WPP_SF_sq(WPP_GFLAG_GLEVEL_LOGGER(GFLAG, GLEVEL) 145,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_GFLAG_GLEVEL_POST(GFLAG, GLEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPNP_c2346(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPNP_c2346) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 146,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPNP_c2375(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPNP_c2375) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 147,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_GFLAG_GLEVEL_POST
#  define WPP_GFLAG_GLEVEL_POST(GFLAG,GLEVEL)
#endif
#ifndef WPP_GFLAG_GLEVEL_PRE
#  define WPP_GFLAG_GLEVEL_PRE(GFLAG,GLEVEL)
#endif
#define WPP_CALL_USBPNP_c2403(GFLAG, GLEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_GFLAG_GLEVEL(GFLAG, GLEVEL),MSGARGS)\
            WPP_GFLAG_GLEVEL_PRE(GFLAG, GLEVEL) \
            WPP_ANNOTATE(USBPNP_c2403) \
            (( \
                WPP_CHECK_INIT  WPP_GFLAG_GLEVEL_ENABLED(GFLAG, GLEVEL)? \
                WPP_SF_s(WPP_GFLAG_GLEVEL_LOGGER(GFLAG, GLEVEL) 148,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_GFLAG_GLEVEL_POST(GFLAG, GLEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPNP_c2970(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPNP_c2970) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sDD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 149,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPNP_c3014(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPNP_c3014) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 150,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPNP_c3036(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPNP_c3036) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sDD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 151,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPNP_c3048(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPNP_c3048) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 152,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPNP_c3060(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPNP_c3060) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 153,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPNP_c3072(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPNP_c3072) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 154,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPNP_c3093(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPNP_c3093) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 155,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPNP_c3105(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPNP_c3105) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 156,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPNP_c3122(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPNP_c3122) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 157,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPNP_c3136(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPNP_c3136) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 158,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_GFLAG_GLEVEL_POST
#  define WPP_GFLAG_GLEVEL_POST(GFLAG,GLEVEL)
#endif
#ifndef WPP_GFLAG_GLEVEL_PRE
#  define WPP_GFLAG_GLEVEL_PRE(GFLAG,GLEVEL)
#endif
#define WPP_CALL_USBPNP_c314(GFLAG, GLEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_GFLAG_GLEVEL(GFLAG, GLEVEL),MSGARGS)\
            WPP_GFLAG_GLEVEL_PRE(GFLAG, GLEVEL) \
            WPP_ANNOTATE(USBPNP_c314) \
            (( \
                WPP_CHECK_INIT  WPP_GFLAG_GLEVEL_ENABLED(GFLAG, GLEVEL)? \
                WPP_SF_DDDD(WPP_GFLAG_GLEVEL_LOGGER(GFLAG, GLEVEL) 16,WPP_LOCAL_TraceGuids+0 WPP_R0123 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_GFLAG_GLEVEL_POST(GFLAG, GLEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPNP_c3150(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPNP_c3150) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 159,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_GFLAG_GLEVEL_POST
#  define WPP_GFLAG_GLEVEL_POST(GFLAG,GLEVEL)
#endif
#ifndef WPP_GFLAG_GLEVEL_PRE
#  define WPP_GFLAG_GLEVEL_PRE(GFLAG,GLEVEL)
#endif
#define WPP_CALL_USBPNP_c323(GFLAG, GLEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_GFLAG_GLEVEL(GFLAG, GLEVEL),MSGARGS)\
            WPP_GFLAG_GLEVEL_PRE(GFLAG, GLEVEL) \
            WPP_ANNOTATE(USBPNP_c323) \
            (( \
                WPP_CHECK_INIT  WPP_GFLAG_GLEVEL_ENABLED(GFLAG, GLEVEL)? \
                WPP_SF_s(WPP_GFLAG_GLEVEL_LOGGER(GFLAG, GLEVEL) 17,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_GFLAG_GLEVEL_POST(GFLAG, GLEVEL)
#ifndef WPP_GFLAG_GLEVEL_POST
#  define WPP_GFLAG_GLEVEL_POST(GFLAG,GLEVEL)
#endif
#ifndef WPP_GFLAG_GLEVEL_PRE
#  define WPP_GFLAG_GLEVEL_PRE(GFLAG,GLEVEL)
#endif
#define WPP_CALL_USBPNP_c331(GFLAG, GLEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_GFLAG_GLEVEL(GFLAG, GLEVEL),MSGARGS)\
            WPP_GFLAG_GLEVEL_PRE(GFLAG, GLEVEL) \
            WPP_ANNOTATE(USBPNP_c331) \
            (( \
                WPP_CHECK_INIT  WPP_GFLAG_GLEVEL_ENABLED(GFLAG, GLEVEL)? \
                WPP_SF_s(WPP_GFLAG_GLEVEL_LOGGER(GFLAG, GLEVEL) 18,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_GFLAG_GLEVEL_POST(GFLAG, GLEVEL)
#ifndef WPP_GFLAG_GLEVEL_POST
#  define WPP_GFLAG_GLEVEL_POST(GFLAG,GLEVEL)
#endif
#ifndef WPP_GFLAG_GLEVEL_PRE
#  define WPP_GFLAG_GLEVEL_PRE(GFLAG,GLEVEL)
#endif
#define WPP_CALL_USBPNP_c343(GFLAG, GLEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_GFLAG_GLEVEL(GFLAG, GLEVEL),MSGARGS)\
            WPP_GFLAG_GLEVEL_PRE(GFLAG, GLEVEL) \
            WPP_ANNOTATE(USBPNP_c343) \
            (( \
                WPP_CHECK_INIT  WPP_GFLAG_GLEVEL_ENABLED(GFLAG, GLEVEL)? \
                WPP_SF_ss(WPP_GFLAG_GLEVEL_LOGGER(GFLAG, GLEVEL) 19,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_GFLAG_GLEVEL_POST(GFLAG, GLEVEL)
#ifndef WPP_GFLAG_GLEVEL_POST
#  define WPP_GFLAG_GLEVEL_POST(GFLAG,GLEVEL)
#endif
#ifndef WPP_GFLAG_GLEVEL_PRE
#  define WPP_GFLAG_GLEVEL_PRE(GFLAG,GLEVEL)
#endif
#define WPP_CALL_USBPNP_c355(GFLAG, GLEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_GFLAG_GLEVEL(GFLAG, GLEVEL),MSGARGS)\
            WPP_GFLAG_GLEVEL_PRE(GFLAG, GLEVEL) \
            WPP_ANNOTATE(USBPNP_c355) \
            (( \
                WPP_CHECK_INIT  WPP_GFLAG_GLEVEL_ENABLED(GFLAG, GLEVEL)? \
                WPP_SF_DDD(WPP_GFLAG_GLEVEL_LOGGER(GFLAG, GLEVEL) 20,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_GFLAG_GLEVEL_POST(GFLAG, GLEVEL)
#ifndef WPP_GFLAG_GLEVEL_POST
#  define WPP_GFLAG_GLEVEL_POST(GFLAG,GLEVEL)
#endif
#ifndef WPP_GFLAG_GLEVEL_PRE
#  define WPP_GFLAG_GLEVEL_PRE(GFLAG,GLEVEL)
#endif
#define WPP_CALL_USBPNP_c362(GFLAG, GLEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_GFLAG_GLEVEL(GFLAG, GLEVEL),MSGARGS)\
            WPP_GFLAG_GLEVEL_PRE(GFLAG, GLEVEL) \
            WPP_ANNOTATE(USBPNP_c362) \
            (( \
                WPP_CHECK_INIT  WPP_GFLAG_GLEVEL_ENABLED(GFLAG, GLEVEL)? \
                WPP_SF_sd(WPP_GFLAG_GLEVEL_LOGGER(GFLAG, GLEVEL) 21,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_GFLAG_GLEVEL_POST(GFLAG, GLEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPNP_c458(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPNP_c458) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sqd(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 22,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPNP_c467(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPNP_c467) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 23,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPNP_c533(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPNP_c533) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sqD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 24,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPNP_c544(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPNP_c544) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sqDd(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 25,WPP_LOCAL_TraceGuids+0 WPP_R0123 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPNP_c610(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPNP_c610) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 26,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPNP_c621(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPNP_c621) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sd(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 27,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPNP_c640(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPNP_c640) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 28,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPNP_c684(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPNP_c684) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 29,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPNP_c700(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPNP_c700) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 30,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPNP_c721(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPNP_c721) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sDD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 31,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_GFLAG_GLEVEL_POST
#  define WPP_GFLAG_GLEVEL_POST(GFLAG,GLEVEL)
#endif
#ifndef WPP_GFLAG_GLEVEL_PRE
#  define WPP_GFLAG_GLEVEL_PRE(GFLAG,GLEVEL)
#endif
#define WPP_CALL_USBPNP_c95(GFLAG, GLEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_GFLAG_GLEVEL(GFLAG, GLEVEL),MSGARGS)\
            WPP_GFLAG_GLEVEL_PRE(GFLAG, GLEVEL) \
            WPP_ANNOTATE(USBPNP_c95) \
            (( \
                WPP_CHECK_INIT  WPP_GFLAG_GLEVEL_ENABLED(GFLAG, GLEVEL)? \
                WPP_SF_s(WPP_GFLAG_GLEVEL_LOGGER(GFLAG, GLEVEL) 10,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_GFLAG_GLEVEL_POST(GFLAG, GLEVEL)
#else
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPNP_c1057(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPNP_c1057) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sdqq(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 49,WPP_LOCAL_TraceGuids+0 WPP_R0123 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_GFLAG_GLEVEL_POST
#  define WPP_GFLAG_GLEVEL_POST(GFLAG,GLEVEL)
#endif
#ifndef WPP_GFLAG_GLEVEL_PRE
#  define WPP_GFLAG_GLEVEL_PRE(GFLAG,GLEVEL)
#endif
#define WPP_CALL_USBPNP_c106(GFLAG, GLEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_GFLAG_GLEVEL(GFLAG, GLEVEL), MSGARGS)\
            WPP_GFLAG_GLEVEL_PRE(GFLAG, GLEVEL) \
            WPP_ANNOTATE(USBPNP_c106) \
            ( \
                WPP_CHECK_INIT  WPP_GFLAG_GLEVEL_ENABLED(GFLAG, GLEVEL)?\
                WPP_SF_sddqq(WPP_GFLAG_GLEVEL_LOGGER(GFLAG, GLEVEL) 11,WPP_LOCAL_TraceGuids+0 WPP_R01234 MSGARGS),\
                1:0 \
             ) \
             WPP_GFLAG_GLEVEL_POST(GFLAG, GLEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPNP_c1158(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPNP_c1158) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 67,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPNP_c1168(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPNP_c1168) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 68,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPNP_c1177(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPNP_c1177) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sDD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 69,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPNP_c1207(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPNP_c1207) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 70,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPNP_c1217(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPNP_c1217) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 71,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPNP_c1229(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPNP_c1229) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 72,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPNP_c1240(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPNP_c1240) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 73,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPNP_c1296(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPNP_c1296) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sdD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 74,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPNP_c1311(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPNP_c1311) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 75,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPNP_c1322(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPNP_c1322) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 76,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPNP_c1336(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPNP_c1336) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 77,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_GFLAG_GLEVEL_POST
#  define WPP_GFLAG_GLEVEL_POST(GFLAG,GLEVEL)
#endif
#ifndef WPP_GFLAG_GLEVEL_PRE
#  define WPP_GFLAG_GLEVEL_PRE(GFLAG,GLEVEL)
#endif
#define WPP_CALL_USBPNP_c135(GFLAG, GLEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_GFLAG_GLEVEL(GFLAG, GLEVEL), MSGARGS)\
            WPP_GFLAG_GLEVEL_PRE(GFLAG, GLEVEL) \
            WPP_ANNOTATE(USBPNP_c135) \
            ( \
                WPP_CHECK_INIT  WPP_GFLAG_GLEVEL_ENABLED(GFLAG, GLEVEL)?\
                WPP_SF_sq(WPP_GFLAG_GLEVEL_LOGGER(GFLAG, GLEVEL) 12,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS),\
                1:0 \
             ) \
             WPP_GFLAG_GLEVEL_POST(GFLAG, GLEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPNP_c1357(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPNP_c1357) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 78,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPNP_c1369(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPNP_c1369) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 79,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_GFLAG_GLEVEL_POST
#  define WPP_GFLAG_GLEVEL_POST(GFLAG,GLEVEL)
#endif
#ifndef WPP_GFLAG_GLEVEL_PRE
#  define WPP_GFLAG_GLEVEL_PRE(GFLAG,GLEVEL)
#endif
#define WPP_CALL_USBPNP_c146(GFLAG, GLEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_GFLAG_GLEVEL(GFLAG, GLEVEL), MSGARGS)\
            WPP_GFLAG_GLEVEL_PRE(GFLAG, GLEVEL) \
            WPP_ANNOTATE(USBPNP_c146) \
            ( \
                WPP_CHECK_INIT  WPP_GFLAG_GLEVEL_ENABLED(GFLAG, GLEVEL)?\
                WPP_SF_sD(WPP_GFLAG_GLEVEL_LOGGER(GFLAG, GLEVEL) 13,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS),\
                1:0 \
             ) \
             WPP_GFLAG_GLEVEL_POST(GFLAG, GLEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPNP_c1666(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPNP_c1666) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 88,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPNP_c1684(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPNP_c1684) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sDD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 89,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPNP_c173(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPNP_c173) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sqq(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 14,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPNP_c1738(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPNP_c1738) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sd(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 90,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPNP_c1782(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPNP_c1782) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 100,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPNP_c1799(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPNP_c1799) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sDDDD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 101,WPP_LOCAL_TraceGuids+0 WPP_R01234 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPNP_c182(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPNP_c182) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 15,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPNP_c1829(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPNP_c1829) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sDDDD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 102,WPP_LOCAL_TraceGuids+0 WPP_R01234 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPNP_c1841(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPNP_c1841) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 103,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPNP_c1857(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPNP_c1857) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 104,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPNP_c1892(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPNP_c1892) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 108,WPP_LOCAL_TraceGuids+0 WPP_R MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPNP_c1916(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPNP_c1916) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sd(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 109,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPNP_c2042(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPNP_c2042) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 120,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPNP_c2112(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPNP_c2112) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_D(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 137,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPNP_c2187(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPNP_c2187) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sq(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 142,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPNP_c2207(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPNP_c2207) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sq(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 143,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPNP_c2219(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPNP_c2219) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 144,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_GFLAG_GLEVEL_POST
#  define WPP_GFLAG_GLEVEL_POST(GFLAG,GLEVEL)
#endif
#ifndef WPP_GFLAG_GLEVEL_PRE
#  define WPP_GFLAG_GLEVEL_PRE(GFLAG,GLEVEL)
#endif
#define WPP_CALL_USBPNP_c2307(GFLAG, GLEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_GFLAG_GLEVEL(GFLAG, GLEVEL), MSGARGS)\
            WPP_GFLAG_GLEVEL_PRE(GFLAG, GLEVEL) \
            WPP_ANNOTATE(USBPNP_c2307) \
            ( \
                WPP_CHECK_INIT  WPP_GFLAG_GLEVEL_ENABLED(GFLAG, GLEVEL)?\
                WPP_SF_sq(WPP_GFLAG_GLEVEL_LOGGER(GFLAG, GLEVEL) 145,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS),\
                1:0 \
             ) \
             WPP_GFLAG_GLEVEL_POST(GFLAG, GLEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPNP_c2346(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPNP_c2346) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 146,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPNP_c2375(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPNP_c2375) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 147,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_GFLAG_GLEVEL_POST
#  define WPP_GFLAG_GLEVEL_POST(GFLAG,GLEVEL)
#endif
#ifndef WPP_GFLAG_GLEVEL_PRE
#  define WPP_GFLAG_GLEVEL_PRE(GFLAG,GLEVEL)
#endif
#define WPP_CALL_USBPNP_c2403(GFLAG, GLEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_GFLAG_GLEVEL(GFLAG, GLEVEL), MSGARGS)\
            WPP_GFLAG_GLEVEL_PRE(GFLAG, GLEVEL) \
            WPP_ANNOTATE(USBPNP_c2403) \
            ( \
                WPP_CHECK_INIT  WPP_GFLAG_GLEVEL_ENABLED(GFLAG, GLEVEL)?\
                WPP_SF_s(WPP_GFLAG_GLEVEL_LOGGER(GFLAG, GLEVEL) 148,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS),\
                1:0 \
             ) \
             WPP_GFLAG_GLEVEL_POST(GFLAG, GLEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPNP_c2970(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPNP_c2970) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sDD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 149,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPNP_c3014(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPNP_c3014) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 150,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPNP_c3036(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPNP_c3036) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sDD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 151,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPNP_c3048(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPNP_c3048) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 152,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPNP_c3060(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPNP_c3060) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 153,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPNP_c3072(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPNP_c3072) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 154,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPNP_c3093(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPNP_c3093) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 155,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPNP_c3105(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPNP_c3105) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 156,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPNP_c3122(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPNP_c3122) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 157,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPNP_c3136(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPNP_c3136) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 158,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_GFLAG_GLEVEL_POST
#  define WPP_GFLAG_GLEVEL_POST(GFLAG,GLEVEL)
#endif
#ifndef WPP_GFLAG_GLEVEL_PRE
#  define WPP_GFLAG_GLEVEL_PRE(GFLAG,GLEVEL)
#endif
#define WPP_CALL_USBPNP_c314(GFLAG, GLEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_GFLAG_GLEVEL(GFLAG, GLEVEL), MSGARGS)\
            WPP_GFLAG_GLEVEL_PRE(GFLAG, GLEVEL) \
            WPP_ANNOTATE(USBPNP_c314) \
            ( \
                WPP_CHECK_INIT  WPP_GFLAG_GLEVEL_ENABLED(GFLAG, GLEVEL)?\
                WPP_SF_DDDD(WPP_GFLAG_GLEVEL_LOGGER(GFLAG, GLEVEL) 16,WPP_LOCAL_TraceGuids+0 WPP_R0123 MSGARGS),\
                1:0 \
             ) \
             WPP_GFLAG_GLEVEL_POST(GFLAG, GLEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPNP_c3150(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPNP_c3150) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 159,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_GFLAG_GLEVEL_POST
#  define WPP_GFLAG_GLEVEL_POST(GFLAG,GLEVEL)
#endif
#ifndef WPP_GFLAG_GLEVEL_PRE
#  define WPP_GFLAG_GLEVEL_PRE(GFLAG,GLEVEL)
#endif
#define WPP_CALL_USBPNP_c323(GFLAG, GLEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_GFLAG_GLEVEL(GFLAG, GLEVEL), MSGARGS)\
            WPP_GFLAG_GLEVEL_PRE(GFLAG, GLEVEL) \
            WPP_ANNOTATE(USBPNP_c323) \
            ( \
                WPP_CHECK_INIT  WPP_GFLAG_GLEVEL_ENABLED(GFLAG, GLEVEL)?\
                WPP_SF_s(WPP_GFLAG_GLEVEL_LOGGER(GFLAG, GLEVEL) 17,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS),\
                1:0 \
             ) \
             WPP_GFLAG_GLEVEL_POST(GFLAG, GLEVEL)
#ifndef WPP_GFLAG_GLEVEL_POST
#  define WPP_GFLAG_GLEVEL_POST(GFLAG,GLEVEL)
#endif
#ifndef WPP_GFLAG_GLEVEL_PRE
#  define WPP_GFLAG_GLEVEL_PRE(GFLAG,GLEVEL)
#endif
#define WPP_CALL_USBPNP_c331(GFLAG, GLEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_GFLAG_GLEVEL(GFLAG, GLEVEL), MSGARGS)\
            WPP_GFLAG_GLEVEL_PRE(GFLAG, GLEVEL) \
            WPP_ANNOTATE(USBPNP_c331) \
            ( \
                WPP_CHECK_INIT  WPP_GFLAG_GLEVEL_ENABLED(GFLAG, GLEVEL)?\
                WPP_SF_s(WPP_GFLAG_GLEVEL_LOGGER(GFLAG, GLEVEL) 18,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS),\
                1:0 \
             ) \
             WPP_GFLAG_GLEVEL_POST(GFLAG, GLEVEL)
#ifndef WPP_GFLAG_GLEVEL_POST
#  define WPP_GFLAG_GLEVEL_POST(GFLAG,GLEVEL)
#endif
#ifndef WPP_GFLAG_GLEVEL_PRE
#  define WPP_GFLAG_GLEVEL_PRE(GFLAG,GLEVEL)
#endif
#define WPP_CALL_USBPNP_c343(GFLAG, GLEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_GFLAG_GLEVEL(GFLAG, GLEVEL), MSGARGS)\
            WPP_GFLAG_GLEVEL_PRE(GFLAG, GLEVEL) \
            WPP_ANNOTATE(USBPNP_c343) \
            ( \
                WPP_CHECK_INIT  WPP_GFLAG_GLEVEL_ENABLED(GFLAG, GLEVEL)?\
                WPP_SF_ss(WPP_GFLAG_GLEVEL_LOGGER(GFLAG, GLEVEL) 19,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS),\
                1:0 \
             ) \
             WPP_GFLAG_GLEVEL_POST(GFLAG, GLEVEL)
#ifndef WPP_GFLAG_GLEVEL_POST
#  define WPP_GFLAG_GLEVEL_POST(GFLAG,GLEVEL)
#endif
#ifndef WPP_GFLAG_GLEVEL_PRE
#  define WPP_GFLAG_GLEVEL_PRE(GFLAG,GLEVEL)
#endif
#define WPP_CALL_USBPNP_c355(GFLAG, GLEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_GFLAG_GLEVEL(GFLAG, GLEVEL), MSGARGS)\
            WPP_GFLAG_GLEVEL_PRE(GFLAG, GLEVEL) \
            WPP_ANNOTATE(USBPNP_c355) \
            ( \
                WPP_CHECK_INIT  WPP_GFLAG_GLEVEL_ENABLED(GFLAG, GLEVEL)?\
                WPP_SF_DDD(WPP_GFLAG_GLEVEL_LOGGER(GFLAG, GLEVEL) 20,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS),\
                1:0 \
             ) \
             WPP_GFLAG_GLEVEL_POST(GFLAG, GLEVEL)
#ifndef WPP_GFLAG_GLEVEL_POST
#  define WPP_GFLAG_GLEVEL_POST(GFLAG,GLEVEL)
#endif
#ifndef WPP_GFLAG_GLEVEL_PRE
#  define WPP_GFLAG_GLEVEL_PRE(GFLAG,GLEVEL)
#endif
#define WPP_CALL_USBPNP_c362(GFLAG, GLEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_GFLAG_GLEVEL(GFLAG, GLEVEL), MSGARGS)\
            WPP_GFLAG_GLEVEL_PRE(GFLAG, GLEVEL) \
            WPP_ANNOTATE(USBPNP_c362) \
            ( \
                WPP_CHECK_INIT  WPP_GFLAG_GLEVEL_ENABLED(GFLAG, GLEVEL)?\
                WPP_SF_sd(WPP_GFLAG_GLEVEL_LOGGER(GFLAG, GLEVEL) 21,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS),\
                1:0 \
             ) \
             WPP_GFLAG_GLEVEL_POST(GFLAG, GLEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPNP_c458(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPNP_c458) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sqd(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 22,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPNP_c467(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPNP_c467) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 23,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPNP_c533(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPNP_c533) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sqD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 24,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPNP_c544(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPNP_c544) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sqDd(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 25,WPP_LOCAL_TraceGuids+0 WPP_R0123 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPNP_c610(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPNP_c610) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 26,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPNP_c621(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPNP_c621) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sd(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 27,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPNP_c640(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPNP_c640) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 28,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPNP_c684(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPNP_c684) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 29,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPNP_c700(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPNP_c700) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 30,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_USBPNP_c721(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(USBPNP_c721) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sDD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 31,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_GFLAG_GLEVEL_POST
#  define WPP_GFLAG_GLEVEL_POST(GFLAG,GLEVEL)
#endif
#ifndef WPP_GFLAG_GLEVEL_PRE
#  define WPP_GFLAG_GLEVEL_PRE(GFLAG,GLEVEL)
#endif
#define WPP_CALL_USBPNP_c95(GFLAG, GLEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_GFLAG_GLEVEL(GFLAG, GLEVEL), MSGARGS)\
            WPP_GFLAG_GLEVEL_PRE(GFLAG, GLEVEL) \
            WPP_ANNOTATE(USBPNP_c95) \
            ( \
                WPP_CHECK_INIT  WPP_GFLAG_GLEVEL_ENABLED(GFLAG, GLEVEL)?\
                WPP_SF_s(WPP_GFLAG_GLEVEL_LOGGER(GFLAG, GLEVEL) 10,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS),\
                1:0 \
             ) \
             WPP_GFLAG_GLEVEL_POST(GFLAG, GLEVEL)
#endif



#if defined(__cplusplus)
};
#endif

#endif

//
// Tracing Macro name redefinition
//

// NoMsgArgs

#undef DbgPrint
#define DbgPrint WPP_(CALL)
#undef DoDebugTrace
#define DoDebugTrace WPP_(CALL)
#undef DoTraceMessage
#define DoTraceMessage WPP_(CALL)
#undef KdPrint
#define KdPrint(ARGS) WPP_(CALL) ARGS
#undef QCNET_DbgPrintG
#define QCNET_DbgPrintG(ARGS) WPP_(CALL) ARGS
// MsgArgs

#undef QCNET_DbgPrint
#define QCNET_DbgPrint(MASK, LEVEL,  MSGARGS) WPP_(CALL)(MASK, LEVEL,  MSGARGS)
#undef QCUSB_DbgPrint
#define QCUSB_DbgPrint(FLAG, LEVEL,  MSGARGS) WPP_(CALL)(FLAG, LEVEL,  MSGARGS)
#undef QCUSB_DbgPrintG
#define QCUSB_DbgPrintG(GFLAG, GLEVEL,  MSGARGS) WPP_(CALL)(GFLAG, GLEVEL,  MSGARGS)
#undef QCUSB_DbgPrintX
#define QCUSB_DbgPrintX(X, XFLAG, XLEVEL,  MSGARGS) WPP_(CALL)(X, XFLAG, XLEVEL,  MSGARGS)
#undef  WPP_R
#define WPP_R(MSG) 
#undef  WPP_R0
#define WPP_R0(MSG, a0) , a0
#undef  WPP_R01
#define WPP_R01(MSG, a0, a1) , a0, a1
#undef  WPP_R012
#define WPP_R012(MSG, a0, a1, a2) , a0, a1, a2
#undef  WPP_R0123
#define WPP_R0123(MSG, a0, a1, a2, a3) , a0, a1, a2, a3
#undef  WPP_R01234
#define WPP_R01234(MSG, a0, a1, a2, a3, a4) , a0, a1, a2, a3, a4
#undef  WPP_R012345
#define WPP_R012345(MSG, a0, a1, a2, a3, a4, a5) , a0, a1, a2, a3, a4, a5
#undef  WPP_R0123456
#define WPP_R0123456(MSG, a0, a1, a2, a3, a4, a5, a6) , a0, a1, a2, a3, a4, a5, a6
#undef  WPP_R01234567
#define WPP_R01234567(MSG, a0, a1, a2, a3, a4, a5, a6, a7) , a0, a1, a2, a3, a4, a5, a6, a7
#undef  WPP_R012345678
#define WPP_R012345678(MSG, a0, a1, a2, a3, a4, a5, a6, a7, a8) , a0, a1, a2, a3, a4, a5, a6, a7, a8
#undef  WPP_R0123456789
#define WPP_R0123456789(MSG, a0, a1, a2, a3, a4, a5, a6, a7, a8, a9) , a0, a1, a2, a3, a4, a5, a6, a7, a8, a9
#undef  WPP_R0123456789a
#define WPP_R0123456789a(MSG, a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10) , a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10
#undef  WPP_R0123456789abc
#define WPP_R0123456789abc(MSG, a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12) , a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12
#undef  WPP_R0a0b0c0d0e0f000102030405060708090a
#define WPP_R0a0b0c0d0e0f000102030405060708090a(MSG, a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16) , a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16
