// 797d471a1c7550644be66d3ceb8ac8c8 Generated file. Do not edit.
// File created by WPP compiler version 10.0.15063-Wed Feb 18 19:04:42 2037
// from template km-default.tpl

//
// Define anything which is needed but missing from 
// older versions of the DDK.
//
#include <evntrace.h>
#include <stddef.h>
#include <stdarg.h>
#include <wmistr.h>

#if !defined(TRACE_LEVEL_NONE)
  #define TRACE_LEVEL_NONE        0  
  #define TRACE_LEVEL_CRITICAL    1  
  #define TRACE_LEVEL_FATAL       1  
  #define TRACE_LEVEL_ERROR       2  
  #define TRACE_LEVEL_WARNING     3  
  #define TRACE_LEVEL_INFORMATION 4  
  #define TRACE_LEVEL_VERBOSE     5  
  #define TRACE_LEVEL_RESERVED6   6
  #define TRACE_LEVEL_RESERVED7   7
  #define TRACE_LEVEL_RESERVED8   8
  #define TRACE_LEVEL_RESERVED9   9
#endif
    
#if !defined(TRACE_INFORMATION_CLASS_DEFINE)
typedef enum _TRACE_INFORMATION_CLASS {
    TraceIdClass,
    TraceHandleClass,
    TraceEnableFlagsClass,
    TraceEnableLevelClass,
    GlobalLoggerHandleClass,
    EventLoggerHandleClass,
    AllLoggerHandlesClass,
    TraceHandleByNameClass
} TRACE_INFORMATION_CLASS;
  
#define TRACE_MESSAGE_SEQUENCE               1
#define TRACE_MESSAGE_GUID                   2         
#define TRACE_MESSAGE_COMPONENTID            4           
#define TRACE_MESSAGE_TIMESTAMP              8         
#define TRACE_MESSAGE_PERFORMANCE_TIMESTAMP 16  
#define TRACE_MESSAGE_SYSTEMINFO            32          

#endif // !defined(TRACE_INFORMATION_CLASS_DEFINE)


//
// Advanced tracing APIs (XP and later) will be indirectly called.
//
typedef
LONG
(*PFN_WPPQUERYTRACEINFORMATION) (
    IN  TRACE_INFORMATION_CLASS TraceInformationClass,
    OUT PVOID  TraceInformation,
    IN  ULONG  TraceInformationLength,
    OUT PULONG RequiredLength OPTIONAL,
    IN  PVOID  Buffer OPTIONAL
    );

typedef
LONG
(*PFN_WPPTRACEMESSAGE)(
    IN ULONG64  LoggerHandle,
    IN ULONG   MessageFlags,
    IN LPCGUID MessageGuid,
    IN USHORT  MessageNumber,
    IN ...
    );

// template km-header.tpl

#ifdef  WPP_THIS_FILE
// included twice
#       define  WPP_ALREADY_INCLUDED
#       undef   WPP_THIS_FILE
#endif  // #ifdef WPP_THIS_FILE

#define WPP_THIS_FILE QCUTILS_c

#ifndef WPP_ALREADY_INCLUDED

#define WPP_KERNEL_MODE 
#define WPP_THIS_FILE QCUTILS_c

#if defined(__cplusplus)
extern "C" {
#endif


typedef enum _WPP_TRACE_API_SUITE {
    WppTraceDisabledSuite,
    WppTraceWin2K,
    WppTraceWinXP,
    WppTraceTraceLH,
    WppTraceServer08,
    WppTraceMaxSuite
} WPP_TRACE_API_SUITE;

_IRQL_requires_same_
typedef
VOID
(NTAPI *PETW_CLASSIC_CALLBACK)(
    _In_ LPCGUID Guid,
    _In_ UCHAR ControlCode,
    _In_ PVOID EnableContext, 
    _In_opt_ PVOID CallbackContext
    );

_IRQL_requires_same_
typedef
NTSTATUS
NTKERNELAPI
(FN_ETWREGISTERCLASSICPROVIDER)(
    _In_ LPCGUID ProviderGuid,
    _In_ ULONG Type,
    _In_ PETW_CLASSIC_CALLBACK EnableCallback,
    _In_opt_ PVOID CallbackContext,
    _Out_ PREGHANDLE RegHandle
    );

typedef FN_ETWREGISTERCLASSICPROVIDER *PFN_ETWREGISTERCLASSICPROVIDER;

typedef
BOOLEAN
NTKERNELAPI
(FN_WPPGETVERSION)(
    _Out_opt_ PULONG MajorVersion,
    _Out_opt_ PULONG MinorVersion,
    _Out_opt_ PULONG BuildNumber,
    _Out_opt_ PUNICODE_STRING CSDVersion
    );

typedef FN_WPPGETVERSION *PFN_WPPGETVERSION;

typedef
NTSTATUS
NTKERNELAPI
(FN_ETWUNREGISTER)(
    _In_ REGHANDLE RegHandle
    );

typedef FN_ETWUNREGISTER *PFN_ETWUNREGISTER;

#pragma prefast(suppress:__WARNING_ENCODE_GLOBAL_FUNCTION_POINTER, "this pointer can not be encoded");
__declspec(selectany) PFN_WPPQUERYTRACEINFORMATION   pfnWppQueryTraceInformation = NULL;

#pragma prefast(suppress:__WARNING_ENCODE_GLOBAL_FUNCTION_POINTER, "this pointer can not be encoded");
__declspec(selectany) PFN_WPPTRACEMESSAGE            pfnWppTraceMessage = NULL;

#pragma prefast(suppress:__WARNING_ENCODE_GLOBAL_FUNCTION_POINTER, "this pointer can not be encoded");
__declspec(selectany) PFN_ETWUNREGISTER              pfnEtwUnregister = NULL;

#pragma prefast(suppress:__WARNING_ENCODE_GLOBAL_FUNCTION_POINTER, "this pointer can not be encoded");
__declspec(selectany) PFN_ETWREGISTERCLASSICPROVIDER pfnEtwRegisterClassicProvider = NULL;

#pragma prefast(suppress:__WARNING_ENCODE_GLOBAL_FUNCTION_POINTER, "this pointer can not be encoded");
__declspec(selectany) PFN_WPPGETVERSION              pfnWppGetVersion = NULL;


__declspec(selectany) WPP_TRACE_API_SUITE            WPPTraceSuite = WppTraceDisabledSuite;


#if !defined(_NTRTL_)
#if !defined(_NTHAL_) 
      // fake RTL_TIME_ZONE_INFORMATION //
    typedef int RTL_TIME_ZONE_INFORMATION;
#endif
#   define _WMIKM_  
#endif
#ifndef WPP_TRACE
#define WPP_TRACE pfnWppTraceMessage
#endif

#if ENABLE_WPP_RECORDER

#define _ENABLE_WPP_RECORDER TRUE

#ifndef WPP_RECORDER
#define WPP_RECORDER WppAutoLogTrace
#endif

#if !defined(WPP_RECORDER_LEVEL_FLAGS_ARGS)
#define WPP_RECORDER_LEVEL_FLAGS_ARGS(lvl, flags) WPP_CONTROL(WPP_BIT_ ## flags).AutoLogContext, lvl, WPP_BIT_ ## flags
#define WPP_RECORDER_LEVEL_FLAGS_FILTER(lvl,flags) (lvl < TRACE_LEVEL_VERBOSE || WPP_CONTROL(WPP_BIT_ ## flags).AutoLogVerboseEnabled)
#endif


#if !defined(WPP_RECORDER_LEVEL_ARGS)
#define WPP_RECORDER_LEVEL_ARGS(lvl) WPP_CONTROL(WPP_BIT_ ## lvl).AutoLogContext, 0, WPP_BIT_ ## lvl
#define WPP_RECORDER_LEVEL_FILTER(lvl) (WPP_CONTROL(WPP_BIT_ ## lvl).AutoLogVerboseEnabled)
#endif

NTSTATUS
WppAutoLogTrace(
    IN PVOID              AutoLogContext,
    IN UCHAR              MessageLevel,
    IN ULONG              MessageFlags,
    IN LPGUID             MessageGuid,
    IN USHORT             MessageNumber,
    IN ...
    );

#else
#define _ENABLE_WPP_RECORDER FALSE
#endif

VOID
WppLoadTracingSupport(
    VOID
    );

NTSTATUS
WppTraceCallback(
    _In_ UCHAR MinorFunction,
    _In_opt_ PVOID DataPath,
    _In_ ULONG BufferLength,
    _Inout_updates_bytes_(BufferLength) PVOID Buffer,
    _Inout_ PVOID Context,
    _Out_ PULONG Size
    );
#if !defined(WPP_TRACE_CONTROL_NULL_GUID)
DEFINE_GUID(WPP_TRACE_CONTROL_NULL_GUID, 0x00000000L, 0x0000, 0x0000, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00);
#endif
#define WPP_TRACE_CONTROL(Function,Buffer,BufferSize,ReturnSize) WppTraceCallback(Function,NULL,BufferSize,Buffer,&WPP_CB[0],&ReturnSize);
    

__inline ULONG64 WppQueryLogger(_In_opt_ PCWSTR LoggerName)
{

    if (WppTraceWinXP == WPPTraceSuite) {

        ULONG ReturnLength ;
        LONG Status ;
        ULONG64 TraceHandle ;
        UNICODE_STRING  Buffer  ;
           
        RtlInitUnicodeString(&Buffer, LoggerName ? LoggerName : L"stdout");

        Status = pfnWppQueryTraceInformation(
                                            TraceHandleByNameClass,
                                            (PVOID)&TraceHandle,
                                            sizeof(TraceHandle),
                                            &ReturnLength,
                                            (PVOID)&Buffer
                                            );
        if (Status != STATUS_SUCCESS) {
           return (ULONG64)0 ;
        }
        
        return TraceHandle ;
    } else {
        return (ULONG64) 0 ;
    }
}

typedef LONG (*WMIENTRY_NEW)(
    _In_ UCHAR MinorFunction,
    _In_opt_ PVOID DataPath,
    _In_ ULONG BufferLength,
    _Inout_updates_bytes_(BufferLength) PVOID Buffer,
    _In_ PVOID Context,
    _Out_ PULONG Size
    );

typedef struct _WPP_TRACE_CONTROL_BLOCK
{
    WMIENTRY_NEW                        Callback;
    LPCGUID                             ControlGuid;
    struct _WPP_TRACE_CONTROL_BLOCK    *Next;
    __int64                             Logger;
    PUNICODE_STRING                     RegistryPath;
    UCHAR                               FlagsLen; 
    UCHAR                               Level; 
    USHORT                              Reserved;
    ULONG                               Flags[1];
    ULONG                               ReservedFlags;
    REGHANDLE                           RegHandle;
#if ENABLE_WPP_RECORDER    
    PVOID                               AutoLogContext;
    USHORT                              AutoLogVerboseEnabled;
    USHORT                              AutoLogAttachToMiniDump;
#endif    
} WPP_TRACE_CONTROL_BLOCK, *PWPP_TRACE_CONTROL_BLOCK;

VOID WppCleanupKm(_When_(_ENABLE_WPP_RECORDER, _In_) _When_(!_ENABLE_WPP_RECORDER, _In_opt_) PDRIVER_OBJECT DriverObject);

#define WPP_CLEANUP(DriverObject) WppCleanupKm((PDRIVER_OBJECT)DriverObject)

#define WPP_IsValidSid RtlValidSid
#define WPP_GetLengthSid RtlLengthSid

//
// Callback routine to be defined by the driver, which will be called from WPP callback
// WPP will pass current valued of : GUID, Logger, Enable, Flags, and Level
// 
// To activate driver must define WPP_PRIVATE_ENABLE_CALLBACK in their code, sample below 
// #define WPP_PRIVATE_ENABLE_CALLBACK MyPrivateCallback;
//
typedef
VOID
(*PFN_WPP_PRIVATE_ENABLE_CALLBACK)(
    _In_ LPCGUID Guid,   
    _In_ __int64 Logger, 
    _In_ BOOLEAN Enable, 
    _In_ ULONG Flags,    
    _In_ UCHAR Level);   

#if defined(__cplusplus)
};
#endif

#endif  // #ifndef WPP_ALREADY_INCLUDED


 
// template control.tpl

//
//     Defines a set of macro that expand control model specified
//     with WPP_CONTROL_GUIDS (example shown below)
//     into an enum of trace levels and required structures that
//     contain the mask of levels, logger handle and some information
//     required for registration.
//

#ifndef WPP_ALREADY_INCLUDED

#define WPP_EVAL(x) x
#define WPP_STR(x)  #x
#define WPP_STRINGIZE(x) WPP_STR(x)
#define WPP_GLUE(a, b)  a ## b
#define WPP_GLUE3(a, b, c)  a ## b ## c
#define WPP_GLUE4(a, b, c, d)  a ## b ## c ## d
#define WPP_XGLUE(a, b) WPP_GLUE(a, b)
#define WPP_XGLUE3(a, b, c) WPP_GLUE3(a, b, c)
#define WPP_XGLUE4(a, b, c, d) WPP_GLUE4(a, b, c, d)

///////////////////////////////////////////////////////////////////////////////////
//
// #define WPP_CONTROL_GUIDS \
//     WPP_DEFINE_CONTROL_GUID(Regular,(81b20fea,73a8,4b62,95bc,354477c97a6f), \
//       WPP_DEFINE_BIT(Error)      \
//       WPP_DEFINE_BIT(Unusual)    \
//       WPP_DEFINE_BIT(Noise)      \
//    )        \
//    WPP_DEFINE_CONTROL_GUID(HiFreq,(91b20fea,73a8,4b62,95bc,354477c97a6f), \
//       WPP_DEFINE_BIT(Entry)      \
//       WPP_DEFINE_BIT(Exit)       \
//       WPP_DEFINE_BIT(ApiCalls)   \
//       WPP_DEFINE_BIT(RandomJunk) \
//       WPP_DEFINE_BIT(LovePoem)   \
//    )        

#if defined(__cplusplus)
extern "C" {
#endif

#if !defined(WPP_CONTROL_GUIDS)  && defined(WPP_ETW_PROVIDER)
#define WPP_NO_CONTROL_GUIDS
#endif

#if !defined(WPP_NO_CONTROL_GUIDS)

#if defined(WPP_DEFAULT_CONTROL_GUID)
#  if defined(WPP_CONTROL_GUIDS)
#     pragma message(__FILE__ " : error : WPP_DEFAULT_CONTROL_GUID cannot be used together with WPP_CONTROL_GUIDS")
#     stop
#  else
#     define WPP_CONTROL_GUIDS \
         WPP_DEFINE_CONTROL_GUID(Default,(WPP_DEFAULT_CONTROL_GUID), \
         WPP_DEFINE_BIT(Error)   \
         WPP_DEFINE_BIT(Unusual) \
         WPP_DEFINE_BIT(Noise)   \
      )
#  endif      
#endif

#if !defined(WPP_CONTROL_GUIDS)
#  pragma message(__FILE__ " : error : Please define control model via WPP_CONTROL_GUIDS or WPP_DEFAULT_CONTROL_GUID macros")
#  pragma message(__FILE__ " : error : don't forget to call WPP_INIT_TRACING and WPP_CLEANUP in your main, DriverEntry or DllInit")
#  pragma message(__FILE__ " : error : see tracewpp.doc for further information")
stop.
#endif
// a set of macro to convert a guid in a form x(81b20fea,73a8,4b62,95bc,354477c97a6f)
// into either a a struct or text string

#define _WPPW(x) WPP_GLUE(L, x)

#define WPP_GUID_NORM(l,w1,w2,w3,ll) l ## w1 ## w2 ## w3 ## ll
#define WPP_GUID_TEXT(l,w1,w2,w3,ll) #l "-" #w1 "-" #w2 "-" #w3 "-" #ll
#define WPP_GUID_WTEXT(l,w1,w2,w3,ll) _WPPW(#l) L"-" _WPPW(#w1) L"-" _WPPW(#w2) L"-" _WPPW(#w3) L"-" _WPPW(#ll)
#define WPP_EXTRACT_BYTE(val,n) (((ULONGLONG)(0x ## val) >> (8 * n)) & 0xFF)
#define WPP_GUID_STRUCT(l,w1,w2,w3,ll) {0x ## l, 0x ## w1, 0x ## w2,\
     {WPP_EXTRACT_BYTE(w3, 1), WPP_EXTRACT_BYTE(w3, 0),\
      WPP_EXTRACT_BYTE(ll, 5), WPP_EXTRACT_BYTE(ll, 4),\
      WPP_EXTRACT_BYTE(ll, 3), WPP_EXTRACT_BYTE(ll, 2),\
      WPP_EXTRACT_BYTE(ll, 1), WPP_EXTRACT_BYTE(ll, 0)} }

#ifndef WPP_FORCEINLINE
#if !defined(WPP_OLDCC)
#define WPP_FORCEINLINE __forceinline
#else
#define WPP_FORCEINLINE __inline
#endif
#endif


// define an enum of control block names
//////
#define WPP_DEFINE_CONTROL_GUID(Name,Guid,Bits) WPP_XGLUE(WPP_CTL_, WPP_EVAL(Name)),
enum WPP_CTL_NAMES { WPP_CONTROL_GUIDS WPP_LAST_CTL};
#undef WPP_DEFINE_CONTROL_GUID

// define control guids
//////
#define WPP_DEFINE_CONTROL_GUID(Name,Guid,Bits) \
extern __declspec(selectany) const GUID WPP_XGLUE4(WPP_, ThisDir, _CTLGUID_, WPP_EVAL(Name)) = WPP_GUID_STRUCT Guid;
WPP_CONTROL_GUIDS
#undef WPP_DEFINE_CONTROL_GUID

// define enums of individual bits
/////
#define WPP_DEFINE_CONTROL_GUID(Name,Guid,Bits) \
    WPP_XGLUE(WPP_BLOCK_START_, WPP_EVAL(Name)) = WPP_XGLUE(WPP_CTL_, WPP_EVAL(Name)) * 0x10000, Bits WPP_XGLUE(WPP_BLOCK_END_, WPP_EVAL(Name)), 
# define WPP_DEFINE_BIT(Name) WPP_BIT_ ## Name,
enum WPP_DEFINE_BIT_NAMES { WPP_CONTROL_GUIDS };
# undef WPP_DEFINE_BIT
#undef WPP_DEFINE_CONTROL_GUID

#define WPP_MASK(CTL)    (1 << ( ((CTL)-1) & 31 ))
#define WPP_FLAG_NO(CTL) ( (0xFFFF & ((CTL)-1) ) / 32)
#define WPP_CTRL_NO(CTL) ((CTL) >> 16)

// calculate how many DWORDs we need to get the required number of bits
// upper estimate. Sometimes will be off by one
#define WPP_DEFINE_CONTROL_GUID(Name,Guid,Bits) | WPP_XGLUE(WPP_BLOCK_END_, WPP_EVAL(Name))
enum _WPP_FLAG_LEN_ENUM { WPP_FLAG_LEN = 1 | ((0 WPP_CONTROL_GUIDS) & 0xFFFF) / 32 };
#undef WPP_DEFINE_CONTROL_GUID

//
// Check that maximum number of flags does not exceed 32
//
#ifndef C_ASSERT
#define C_ASSERT(e) typedef char __C_ASSERT__[(e)?1:-1]
#endif

#define MAX_NUMBER_OF_ETW_FLAGS 34 // 32 flags plus 2 separators
#define WPP_DEFINE_CONTROL_GUID(Name,Guid,Bits) && ((WPP_XGLUE(WPP_BLOCK_END_, WPP_EVAL(Name) & 0xFFFF)) < MAX_NUMBER_OF_ETW_FLAGS)
enum _WPP_FLAG_LEN_ENUM_MAX { WPP_MAX_FLAG_LEN_CHECK = (1 WPP_CONTROL_GUIDS) }; 
#undef WPP_DEFINE_CONTROL_GUID

#ifndef WPP_CB
#  define WPP_CB      WPP_GLOBAL_Control
#endif
#ifndef WPP_CB_TYPE
#define WPP_CB_TYPE WPP_PROJECT_CONTROL_BLOCK
#endif

typedef union {
    WPP_TRACE_CONTROL_BLOCK Control;      
    UCHAR ReserveSpace[ sizeof(WPP_TRACE_CONTROL_BLOCK) + sizeof(ULONG) * (WPP_FLAG_LEN - 1) ];
} WPP_CB_TYPE ;

 
extern __declspec(selectany) WPP_CB_TYPE *WPP_CB = (WPP_CB_TYPE*)&WPP_CB;

#define WPP_CONTROL(CTL) (WPP_CB[WPP_CTRL_NO(CTL)].Control)

#ifndef WPP_USE_TRACE_LEVELS
// For historical reasons the use of LEVEL could imply flags, this was a bad choice but very difficult
// to undo.
#if !defined(WPP_LEVEL_LOGGER)
#  define WPP_LEVEL_LOGGER(CTL)  (WPP_CONTROL(WPP_BIT_ ## CTL).Logger), 
#endif

#if !defined(WPP_LEVEL_ENABLED)
#  define WPP_LEVEL_ENABLED(CTL) (WPP_CONTROL(WPP_BIT_ ## CTL).Flags[WPP_FLAG_NO(WPP_BIT_ ## CTL)] & WPP_MASK(WPP_BIT_ ## CTL)) 
#endif
#else  //  #ifndef WPP_USE_TRACE_LEVELS
#if !defined(WPP_LEVEL_LOGGER)
#define WPP_LEVEL_LOGGER(lvl) (WPP_CONTROL(WPP_BIT_ ## DUMMY).Logger),
#endif

#if !defined(WPP_LEVEL_ENABLED)
#define WPP_LEVEL_ENABLED(lvl) (WPP_CONTROL(WPP_BIT_ ## DUMMY).Level >= lvl)
#endif
#endif  // #ifndef WPP_USE_TRACE_LEVELS

#if !defined(WPP_FLAG_LOGGER)
#  define WPP_FLAG_LOGGER(CTL)  (WPP_CONTROL(WPP_BIT_ ## CTL).Logger), 
#endif


#if !defined(WPP_FLAG_ENABLED)
#  define WPP_FLAG_ENABLED(CTL) (WPP_CONTROL(WPP_BIT_ ## CTL).Flags[WPP_FLAG_NO(WPP_BIT_ ## CTL)] & WPP_MASK(WPP_BIT_ ## CTL)) 
#endif


#ifndef WPP_ENABLED
#  define WPP_ENABLED() 1
#endif
#ifndef WPP_LOGGER
#  define WPP_LOGGER() (WPP_CB[0].Control.Logger),
#endif

#endif // WPP_NO_CONTROL_GUIDS

#if !defined(WPP_GET_LOGGER)
#  define WPP_GET_LOGGER Logger
#endif

#if !defined(WPP_LOGGER_ARG)
#  define WPP_LOGGER_ARG TRACEHANDLE Logger,
#endif

#if defined(__cplusplus)
};
#endif

#endif  // #ifndef WPP_ALREADY_INCLUDED


#if ENABLE_WPP_RECORDER
// template tracemacro-ifr.tpl

// This template expects:
//      WPP_THIS_FILE defined (see header.tpl)
//      WPP_LOGGER_ARG  defined
//      WPP_GET_LOGGER  defined
//      WPP_ENABLED() defined

#if defined(__cplusplus)
extern "C" {
#endif

#ifndef WPP_ALREADY_INCLUDED

#ifndef NO_CHECK_FOR_NULL_STRING
#ifndef WPP_CHECK_FOR_NULL_STRING
#define WPP_CHECK_FOR_NULL_STRING 1
#endif
#endif

#define WPP_EVAL(_value_) _value_
#define WPP_(Id) WPP_EVAL(WPP_) ## WPP_EVAL(Id) ## WPP_EVAL(_) ## WPP_EVAL(WPP_THIS_FILE) ## WPP_EVAL(__LINE__)

#if !defined(WPP_INLINE)
#define WPP_INLINE DECLSPEC_NOINLINE __inline
#endif

#else   // #ifndef WPP_ALREADY_INCLUDED

#undef WPP_LOCAL_TraceGuids

#endif  // #ifndef WPP_ALREADY_INCLUDED

#if !defined(WPP_NO_ANNOTATIONS)

#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCUTILS_c1057
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCUTILS_c1103
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCUTILS_c1106
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCUTILS_c1109
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCUTILS_c1122
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCUTILS_c1126
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCUTILS_c1139
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCUTILS_c1250
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCUTILS_c1264
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCUTILS_c1276
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCUTILS_c1289
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCUTILS_c1299
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCUTILS_c1325
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCUTILS_c1491
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCUTILS_c1580
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCUTILS_c172
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCUTILS_c1735
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCUTILS_c1769
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCUTILS_c1780
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCUTILS_c189
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCUTILS_c194
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCUTILS_c216
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCUTILS_c79
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCUTILS_c833
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCUTILS_c850
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCUTILS_c868
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCUTILS_c887
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCUTILS_c905
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCUTILS_c924
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCUTILS_c995
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCUTILS_c1057_FINAL(P, File, Name, ...)    __annotation(L ## P, L"49ef1a2f-b959-3b07-8f7c-5cc8a9b5b904 serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 22 \"%0<%10!s!> File creation failure: RxFileName\" //   FLAG=QCSER_DBG_MASK_READ LEVEL=QCSER_DBG_LEVEL_ERROR", __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCUTILS_c1057_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 22 \"%0<%10!s!> File creation failure: RxFileName\" //   FLAG=QCSER_DBG_MASK_READ LEVEL=QCSER_DBG_LEVEL_ERROR", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCUTILS_c1057
    #define WPP_ANNOTATE_QCUTILS_c1057 WPP_ANNOTATE_QCUTILS_c1057_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCUTILS_c1057 WPP_ANNOTATE_QCUTILS_c1057_FINAL("TMF:", "QCUTILS.c", "QCUTILS_c1057", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCUTILS_c1103_FINAL(P, File, Name, ...)    __annotation(L ## P, L"49ef1a2f-b959-3b07-8f7c-5cc8a9b5b904 serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 23 \"%0\t ----- LATETST %10!d! TRANSFER Records -----\" //  ", __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCUTILS_c1103_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 23 \"%0\t ----- LATETST %10!d! TRANSFER Records -----\" //  ", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCUTILS_c1103
    #define WPP_ANNOTATE_QCUTILS_c1103 WPP_ANNOTATE_QCUTILS_c1103_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemLong -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCUTILS_c1103 WPP_ANNOTATE_QCUTILS_c1103_FINAL("TMF:", "QCUTILS.c", "QCUTILS_c1103", L"{", L"NUM_LATEST_PKTS, ItemLong -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCUTILS_c1106_FINAL(P, File, Name, ...)    __annotation(L ## P, L"49ef1a2f-b959-3b07-8f7c-5cc8a9b5b904 serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 24 \"%0\t ----- Record %10!d! -----\" //  ", __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCUTILS_c1106_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 24 \"%0\t ----- Record %10!d! -----\" //  ", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCUTILS_c1106
    #define WPP_ANNOTATE_QCUTILS_c1106 WPP_ANNOTATE_QCUTILS_c1106_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemLong -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCUTILS_c1106 WPP_ANNOTATE_QCUTILS_c1106_FINAL("TMF:", "QCUTILS.c", "QCUTILS_c1106", L"{", L"i, ItemLong -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCUTILS_c1109_FINAL(P, File, Name, ...)    __annotation(L ## P, L"49ef1a2f-b959-3b07-8f7c-5cc8a9b5b904 serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 25 \"%0\t TX_RECORD: [%10!s!] (%11!u! bytes)\" //  ", __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCUTILS_c1109_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 25 \"%0\t TX_RECORD: [%10!s!] (%11!u! bytes)\" //  ", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCUTILS_c1109
    #define WPP_ANNOTATE_QCUTILS_c1109 WPP_ANNOTATE_QCUTILS_c1109_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCUTILS_c1109 WPP_ANNOTATE_QCUTILS_c1109_FINAL("TMF:", "QCUTILS.c", "QCUTILS_c1109", L"{", L"pDevExt->TxLogRec[i].TimeStamp, ItemString -- 10" , L"pDevExt->TxLogRec[i].PktLength, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCUTILS_c1122_FINAL(P, File, Name, ...)    __annotation(L ## P, L"49ef1a2f-b959-3b07-8f7c-5cc8a9b5b904 serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 26 \"%0%10!s!\" //  ", __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCUTILS_c1122_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 26 \"%0%10!s!\" //  ", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCUTILS_c1122
    #define WPP_ANNOTATE_QCUTILS_c1122 WPP_ANNOTATE_QCUTILS_c1122_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCUTILS_c1122 WPP_ANNOTATE_QCUTILS_c1122_FINAL("TMF:", "QCUTILS.c", "QCUTILS_c1122", L"{", L"dataBuffer, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCUTILS_c1126_FINAL(P, File, Name, ...)    __annotation(L ## P, L"49ef1a2f-b959-3b07-8f7c-5cc8a9b5b904 serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 27 \"%0\t RX_RECORD: [%10!s!] (%11!u! bytes)\" //  ", __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCUTILS_c1126_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 27 \"%0\t RX_RECORD: [%10!s!] (%11!u! bytes)\" //  ", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCUTILS_c1126
    #define WPP_ANNOTATE_QCUTILS_c1126 WPP_ANNOTATE_QCUTILS_c1126_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCUTILS_c1126 WPP_ANNOTATE_QCUTILS_c1126_FINAL("TMF:", "QCUTILS.c", "QCUTILS_c1126", L"{", L"pDevExt->RxLogRec[i].TimeStamp, ItemString -- 10" , L"pDevExt->RxLogRec[i].PktLength, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCUTILS_c1139_FINAL(P, File, Name, ...)    __annotation(L ## P, L"49ef1a2f-b959-3b07-8f7c-5cc8a9b5b904 serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 28 \"%0%10!s!\" //  ", __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCUTILS_c1139_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 28 \"%0%10!s!\" //  ", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCUTILS_c1139
    #define WPP_ANNOTATE_QCUTILS_c1139 WPP_ANNOTATE_QCUTILS_c1139_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCUTILS_c1139 WPP_ANNOTATE_QCUTILS_c1139_FINAL("TMF:", "QCUTILS.c", "QCUTILS_c1139", L"{", L"dataBuffer, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCUTILS_c1250_FINAL(P, File, Name, ...)    __annotation(L ## P, L"49ef1a2f-b959-3b07-8f7c-5cc8a9b5b904 serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 29 \"%0<%10!s!> CIRP (Cq 0x%11!x!) 0x%12!p! <%13!ld!/%14!ld!/%15!ld!>\" //   FLAG=QCSER_DBG_MASK_CIRP LEVEL=debugLevel", __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCUTILS_c1250_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 29 \"%0<%10!s!> CIRP (Cq 0x%11!x!) 0x%12!p! <%13!ld!/%14!ld!/%15!ld!>\" //   FLAG=QCSER_DBG_MASK_CIRP LEVEL=debugLevel", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCUTILS_c1250
    #define WPP_ANNOTATE_QCUTILS_c1250 WPP_ANNOTATE_QCUTILS_c1250_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemPtr -- 12" , L"Arg, ItemLong -- 13" , L"Arg, ItemLong -- 14" , L"Arg, ItemLong -- 15" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCUTILS_c1250 WPP_ANNOTATE_QCUTILS_c1250_FINAL("TMF:", "QCUTILS.c", "QCUTILS_c1250", L"{", L"pDevExt->PortName, ItemString -- 10" , L"pIrp->IoStatus.Status, ItemLong -- 11" , L"pIrp, ItemPtr -- 12" , L"pDevExt->Sts.lRmlCount[0], ItemLong -- 13" , L"pDevExt->Sts.lAllocatedCtls, ItemLong -- 14" , L"pDevExt->Sts.lAllocatedDSPs, ItemLong -- 15" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCUTILS_c1264_FINAL(P, File, Name, ...)    __annotation(L ## P, L"49ef1a2f-b959-3b07-8f7c-5cc8a9b5b904 serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 30 \"%0<%10!s!> UTL: err - negative NumIrpsToComplete %11!d!\" //   FLAG=QCSER_DBG_MASK_READ LEVEL=QCSER_DBG_LEVEL_ERROR", __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCUTILS_c1264_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 30 \"%0<%10!s!> UTL: err - negative NumIrpsToComplete %11!d!\" //   FLAG=QCSER_DBG_MASK_READ LEVEL=QCSER_DBG_LEVEL_ERROR", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCUTILS_c1264
    #define WPP_ANNOTATE_QCUTILS_c1264 WPP_ANNOTATE_QCUTILS_c1264_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCUTILS_c1264 WPP_ANNOTATE_QCUTILS_c1264_FINAL("TMF:", "QCUTILS.c", "QCUTILS_c1264", L"{", L"pDevExt->PortName, ItemString -- 10" , L"pDevExt->NumIrpsToComplete, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCUTILS_c1276_FINAL(P, File, Name, ...)    __annotation(L ## P, L"49ef1a2f-b959-3b07-8f7c-5cc8a9b5b904 serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 31 \"%0<%10!s!> RIRP (Cq 0x%11!x!/%12!ld!B) 0x%13!p! (%14!ld!) <%15!ld!/%16!ld!/%17!ld!>\" //   FLAG=QCSER_DBG_MASK_RIRP LEVEL=debugLevel", __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCUTILS_c1276_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 31 \"%0<%10!s!> RIRP (Cq 0x%11!x!/%12!ld!B) 0x%13!p! (%14!ld!) <%15!ld!/%16!ld!/%17!ld!>\" //   FLAG=QCSER_DBG_MASK_RIRP LEVEL=debugLevel", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCUTILS_c1276
    #define WPP_ANNOTATE_QCUTILS_c1276 WPP_ANNOTATE_QCUTILS_c1276_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemLong -- 12" , L"Arg, ItemPtr -- 13" , L"Arg, ItemLong -- 14" , L"Arg, ItemLong -- 15" , L"Arg, ItemLong -- 16" , L"Arg, ItemLong -- 17" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCUTILS_c1276 WPP_ANNOTATE_QCUTILS_c1276_FINAL("TMF:", "QCUTILS.c", "QCUTILS_c1276", L"{", L"pDevExt->PortName, ItemString -- 10" , L"pIrp->IoStatus.Status, ItemLong -- 11" , L"pIrp->IoStatus.Information, ItemLong -- 12" , L"pIrp, ItemPtr -- 13" , L"pDevExt->NumIrpsToComplete, ItemLong -- 14" , L"pDevExt->Sts.lRmlCount[1], ItemLong -- 15" , L"pDevExt->Sts.lAllocatedReads, ItemLong -- 16" , L"pDevExt->Sts.lAllocatedRdMem, ItemLong -- 17" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCUTILS_c1289_FINAL(P, File, Name, ...)    __annotation(L ## P, L"49ef1a2f-b959-3b07-8f7c-5cc8a9b5b904 serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 32 \"%0<%10!s!> WIRP (Cq 0x%11!x!/%12!ld!B) 0x%13!p! <%14!ld!/%15!ld!/%16!ld!>\" //   FLAG=QCSER_DBG_MASK_WIRP LEVEL=debugLevel", __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCUTILS_c1289_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 32 \"%0<%10!s!> WIRP (Cq 0x%11!x!/%12!ld!B) 0x%13!p! <%14!ld!/%15!ld!/%16!ld!>\" //   FLAG=QCSER_DBG_MASK_WIRP LEVEL=debugLevel", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCUTILS_c1289
    #define WPP_ANNOTATE_QCUTILS_c1289 WPP_ANNOTATE_QCUTILS_c1289_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemLong -- 12" , L"Arg, ItemPtr -- 13" , L"Arg, ItemLong -- 14" , L"Arg, ItemLong -- 15" , L"Arg, ItemLong -- 16" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCUTILS_c1289 WPP_ANNOTATE_QCUTILS_c1289_FINAL("TMF:", "QCUTILS.c", "QCUTILS_c1289", L"{", L"pDevExt->PortName, ItemString -- 10" , L"pIrp->IoStatus.Status, ItemLong -- 11" , L"pIrp->IoStatus.Information, ItemLong -- 12" , L"pIrp, ItemPtr -- 13" , L"pDevExt->Sts.lRmlCount[2], ItemLong -- 14" , L"pDevExt->Sts.lAllocatedWrites, ItemLong -- 15" , L"pDevExt->Sts.lAllocatedWtMem, ItemLong -- 16" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCUTILS_c1299_FINAL(P, File, Name, ...)    __annotation(L ## P, L"49ef1a2f-b959-3b07-8f7c-5cc8a9b5b904 serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 33 \"%0<%10!s!> UIRP (Cq 0x%11!x!) 0x%12!p!\" //   FLAG=QCSER_DBG_MASK_CONTROL LEVEL=debugLevel", __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCUTILS_c1299_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 33 \"%0<%10!s!> UIRP (Cq 0x%11!x!) 0x%12!p!\" //   FLAG=QCSER_DBG_MASK_CONTROL LEVEL=debugLevel", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCUTILS_c1299
    #define WPP_ANNOTATE_QCUTILS_c1299 WPP_ANNOTATE_QCUTILS_c1299_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemPtr -- 12" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCUTILS_c1299 WPP_ANNOTATE_QCUTILS_c1299_FINAL("TMF:", "QCUTILS.c", "QCUTILS_c1299", L"{", L"pDevExt->PortName, ItemString -- 10" , L"pIrp->IoStatus.Status, ItemLong -- 11" , L"pIrp, ItemPtr -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCUTILS_c1325_FINAL(P, File, Name, ...)    __annotation(L ## P, L"49ef1a2f-b959-3b07-8f7c-5cc8a9b5b904 serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 34 \"%0<%10!s!> IRP 0x%11!p! (type %12!d!) boost [%13!d!,%14!d!]\" //   FLAG=(QCSER_DBG_MASK_CONTROL | QCSER_DBG_MASK_WIRP | QCSER_DBG_MASK_RIRP) LEVEL=QCSER_DBG_LEVEL_DETAIL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCUTILS_c1325_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 34 \"%0<%10!s!> IRP 0x%11!p! (type %12!d!) boost [%13!d!,%14!d!]\" //   FLAG=(QCSER_DBG_MASK_CONTROL | QCSER_DBG_MASK_WIRP | QCSER_DBG_MASK_RIRP) LEVEL=QCSER_DBG_LEVEL_DETAIL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCUTILS_c1325
    #define WPP_ANNOTATE_QCUTILS_c1325 WPP_ANNOTATE_QCUTILS_c1325_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemPtr -- 11" , L"Arg, ItemLong -- 12" , L"Arg, ItemLong -- 13" , L"Arg, ItemLong -- 14" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCUTILS_c1325 WPP_ANNOTATE_QCUTILS_c1325_FINAL("TMF:", "QCUTILS.c", "QCUTILS_c1325", L"{", L"pDevExt->PortName, ItemString -- 10" , L"pIrp, ItemPtr -- 11" , L"IrpType, ItemLong -- 12" , L"pDevExt->Sts.lRmlCount[IrpType], ItemLong -- 13" , L"bComListEmpty, ItemLong -- 14" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCUTILS_c1491_FINAL(P, File, Name, ...)    __annotation(L ## P, L"49ef1a2f-b959-3b07-8f7c-5cc8a9b5b904 serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 35 \"%0<%10!s!> UPM: reg srv ERR-0\" //   FLAG=QCSER_DBG_MASK_READ LEVEL=QCSER_DBG_LEVEL_ERROR", __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCUTILS_c1491_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 35 \"%0<%10!s!> UPM: reg srv ERR-0\" //   FLAG=QCSER_DBG_MASK_READ LEVEL=QCSER_DBG_LEVEL_ERROR", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCUTILS_c1491
    #define WPP_ANNOTATE_QCUTILS_c1491 WPP_ANNOTATE_QCUTILS_c1491_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCUTILS_c1491 WPP_ANNOTATE_QCUTILS_c1491_FINAL("TMF:", "QCUTILS.c", "QCUTILS_c1491", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCUTILS_c1580_FINAL(P, File, Name, ...)    __annotation(L ## P, L"49ef1a2f-b959-3b07-8f7c-5cc8a9b5b904 serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 36 \"%0<%10!s!> UPM: reg srv ERR\" //   FLAG=QCSER_DBG_MASK_READ LEVEL=QCSER_DBG_LEVEL_ERROR", __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCUTILS_c1580_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 36 \"%0<%10!s!> UPM: reg srv ERR\" //   FLAG=QCSER_DBG_MASK_READ LEVEL=QCSER_DBG_LEVEL_ERROR", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCUTILS_c1580
    #define WPP_ANNOTATE_QCUTILS_c1580 WPP_ANNOTATE_QCUTILS_c1580_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCUTILS_c1580 WPP_ANNOTATE_QCUTILS_c1580_FINAL("TMF:", "QCUTILS.c", "QCUTILS_c1580", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCUTILS_c172_FINAL(P, File, Name, ...)    __annotation(L ## P, L"49ef1a2f-b959-3b07-8f7c-5cc8a9b5b904 serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 11 \"%0<%10!s!> ERR: WOM null cxlRtn\" //   FLAG=QCSER_DBG_MASK_CONTROL LEVEL=QCSER_DBG_LEVEL_ERROR", __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCUTILS_c172_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 11 \"%0<%10!s!> ERR: WOM null cxlRtn\" //   FLAG=QCSER_DBG_MASK_CONTROL LEVEL=QCSER_DBG_LEVEL_ERROR", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCUTILS_c172
    #define WPP_ANNOTATE_QCUTILS_c172 WPP_ANNOTATE_QCUTILS_c172_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCUTILS_c172 WPP_ANNOTATE_QCUTILS_c172_FINAL("TMF:", "QCUTILS.c", "QCUTILS_c172", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCUTILS_c1735_FINAL(P, File, Name, ...)    __annotation(L ## P, L"49ef1a2f-b959-3b07-8f7c-5cc8a9b5b904 serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 37 \"%0%10!s!\" //   X=x XFLAG=DbgMask XLEVEL=DbgLevel", __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCUTILS_c1735_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 37 \"%0%10!s!\" //   X=x XFLAG=DbgMask XLEVEL=DbgLevel", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCUTILS_c1735
    #define WPP_ANNOTATE_QCUTILS_c1735 WPP_ANNOTATE_QCUTILS_c1735_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCUTILS_c1735 WPP_ANNOTATE_QCUTILS_c1735_FINAL("TMF:", "QCUTILS.c", "QCUTILS_c1735", L"{", L"buf, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCUTILS_c1769_FINAL(P, File, Name, ...)    __annotation(L ## P, L"49ef1a2f-b959-3b07-8f7c-5cc8a9b5b904 serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 38 \"%0%10!s!\" //   X=x XFLAG=DbgMask XLEVEL=DbgLevel", __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCUTILS_c1769_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 38 \"%0%10!s!\" //   X=x XFLAG=DbgMask XLEVEL=DbgLevel", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCUTILS_c1769
    #define WPP_ANNOTATE_QCUTILS_c1769 WPP_ANNOTATE_QCUTILS_c1769_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCUTILS_c1769 WPP_ANNOTATE_QCUTILS_c1769_FINAL("TMF:", "QCUTILS.c", "QCUTILS_c1769", L"{", L"buf, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCUTILS_c1780_FINAL(P, File, Name, ...)    __annotation(L ## P, L"49ef1a2f-b959-3b07-8f7c-5cc8a9b5b904 serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 39 \"%0%10!s!\" //   X=x XFLAG=DbgMask XLEVEL=DbgLevel", __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCUTILS_c1780_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 39 \"%0%10!s!\" //   X=x XFLAG=DbgMask XLEVEL=DbgLevel", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCUTILS_c1780
    #define WPP_ANNOTATE_QCUTILS_c1780 WPP_ANNOTATE_QCUTILS_c1780_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCUTILS_c1780 WPP_ANNOTATE_QCUTILS_c1780_FINAL("TMF:", "QCUTILS.c", "QCUTILS_c1780", L"{", L"buf, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCUTILS_c189_FINAL(P, File, Name, ...)    __annotation(L ## P, L"49ef1a2f-b959-3b07-8f7c-5cc8a9b5b904 serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 12 \"%0<%10!s!> ProcessNewUartState: complete WOM 0x%11!p!: 0x%12!x!(0x%13!x!, 0x%14!x!)\" //   FLAG=QCSER_DBG_MASK_CONTROL LEVEL=QCSER_DBG_LEVEL_DETAIL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCUTILS_c189_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 12 \"%0<%10!s!> ProcessNewUartState: complete WOM 0x%11!p!: 0x%12!x!(0x%13!x!, 0x%14!x!)\" //   FLAG=QCSER_DBG_MASK_CONTROL LEVEL=QCSER_DBG_LEVEL_DETAIL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCUTILS_c189
    #define WPP_ANNOTATE_QCUTILS_c189 WPP_ANNOTATE_QCUTILS_c189_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemPtr -- 11" , L"Arg, ItemLong -- 12" , L"Arg, ItemLong -- 13" , L"Arg, ItemLong -- 14" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCUTILS_c189 WPP_ANNOTATE_QCUTILS_c189_FINAL("TMF:", "QCUTILS.c", "QCUTILS_c189", L"{", L"pDevExt->PortName, ItemString -- 10" , L"pWOMIrp, ItemPtr -- 11" , L"(ulNewEvents & pDevExt->ulWaitMask), ItemLong -- 12" , L"ulNewEvents, ItemLong -- 13" , L"pDevExt->ulWaitMask, ItemLong -- 14" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCUTILS_c194_FINAL(P, File, Name, ...)    __annotation(L ## P, L"49ef1a2f-b959-3b07-8f7c-5cc8a9b5b904 serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 13 \"%0 pWaitOnMaskIrp: 0x%10!x!\" //  ", __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCUTILS_c194_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 13 \"%0 pWaitOnMaskIrp: 0x%10!x!\" //  ", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCUTILS_c194
    #define WPP_ANNOTATE_QCUTILS_c194 WPP_ANNOTATE_QCUTILS_c194_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemLong -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCUTILS_c194 WPP_ANNOTATE_QCUTILS_c194_FINAL("TMF:", "QCUTILS.c", "QCUTILS_c194", L"{", L"(ulNewEvents & pDevExt->ulWaitMask), ItemLong -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCUTILS_c216_FINAL(P, File, Name, ...)    __annotation(L ## P, L"49ef1a2f-b959-3b07-8f7c-5cc8a9b5b904 serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 14 \"%0<%10!s!> <--ProcessNewUartState: 0x%11!x!, 0x%12!x!, %13!u!, IrpComp %14!u!\" //   FLAG=QCSER_DBG_MASK_CONTROL LEVEL=QCSER_DBG_LEVEL_TRACE", __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCUTILS_c216_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 14 \"%0<%10!s!> <--ProcessNewUartState: 0x%11!x!, 0x%12!x!, %13!u!, IrpComp %14!u!\" //   FLAG=QCSER_DBG_MASK_CONTROL LEVEL=QCSER_DBG_LEVEL_TRACE", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCUTILS_c216
    #define WPP_ANNOTATE_QCUTILS_c216 WPP_ANNOTATE_QCUTILS_c216_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemLong -- 12" , L"Arg, ItemLong -- 13" , L"Arg, ItemLong -- 14" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCUTILS_c216 WPP_ANNOTATE_QCUTILS_c216_FINAL("TMF:", "QCUTILS.c", "QCUTILS_c216", L"{", L"pDevExt->PortName, ItemString -- 10" , L"usNewUartState, ItemLong -- 11" , L"usBitsMask, ItemLong -- 12" , L"bHoldWaitIrp, ItemLong -- 13" , L"bForceIrpCompletion, ItemLong -- 14" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCUTILS_c79_FINAL(P, File, Name, ...)    __annotation(L ## P, L"49ef1a2f-b959-3b07-8f7c-5cc8a9b5b904 serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 10 \"%0<%10!s!> -->ProcessNewUartState: 0x%11!x!, 0x%12!x!, %13!u!\" //   FLAG=QCSER_DBG_MASK_CONTROL LEVEL=QCSER_DBG_LEVEL_TRACE", __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCUTILS_c79_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 10 \"%0<%10!s!> -->ProcessNewUartState: 0x%11!x!, 0x%12!x!, %13!u!\" //   FLAG=QCSER_DBG_MASK_CONTROL LEVEL=QCSER_DBG_LEVEL_TRACE", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCUTILS_c79
    #define WPP_ANNOTATE_QCUTILS_c79 WPP_ANNOTATE_QCUTILS_c79_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemLong -- 12" , L"Arg, ItemLong -- 13" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCUTILS_c79 WPP_ANNOTATE_QCUTILS_c79_FINAL("TMF:", "QCUTILS.c", "QCUTILS_c79", L"{", L"pDevExt->PortName, ItemString -- 10" , L"usNewUartState, ItemLong -- 11" , L"usBitsMask, ItemLong -- 12" , L"bHoldWaitIrp, ItemLong -- 13" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCUTILS_c833_FINAL(P, File, Name, ...)    __annotation(L ## P, L"49ef1a2f-b959-3b07-8f7c-5cc8a9b5b904 serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 15 \"%0<%10!s!> NO_MEM - TxFileName\" //   FLAG=QCSER_DBG_MASK_WRITE LEVEL=QCSER_DBG_LEVEL_ERROR", __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCUTILS_c833_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 15 \"%0<%10!s!> NO_MEM - TxFileName\" //   FLAG=QCSER_DBG_MASK_WRITE LEVEL=QCSER_DBG_LEVEL_ERROR", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCUTILS_c833
    #define WPP_ANNOTATE_QCUTILS_c833 WPP_ANNOTATE_QCUTILS_c833_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCUTILS_c833 WPP_ANNOTATE_QCUTILS_c833_FINAL("TMF:", "QCUTILS.c", "QCUTILS_c833", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCUTILS_c850_FINAL(P, File, Name, ...)    __annotation(L ## P, L"49ef1a2f-b959-3b07-8f7c-5cc8a9b5b904 serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 16 \"%0<%10!s!> NO_MEM - RxFileName\" //   FLAG=QCSER_DBG_MASK_READ LEVEL=QCSER_DBG_LEVEL_ERROR", __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCUTILS_c850_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 16 \"%0<%10!s!> NO_MEM - RxFileName\" //   FLAG=QCSER_DBG_MASK_READ LEVEL=QCSER_DBG_LEVEL_ERROR", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCUTILS_c850
    #define WPP_ANNOTATE_QCUTILS_c850 WPP_ANNOTATE_QCUTILS_c850_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCUTILS_c850 WPP_ANNOTATE_QCUTILS_c850_FINAL("TMF:", "QCUTILS.c", "QCUTILS_c850", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCUTILS_c868_FINAL(P, File, Name, ...)    __annotation(L ## P, L"49ef1a2f-b959-3b07-8f7c-5cc8a9b5b904 serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 17 \"%0<%10!s!> Error - ucTxTmp\" //   FLAG=QCSER_DBG_MASK_WRITE LEVEL=QCSER_DBG_LEVEL_ERROR", __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCUTILS_c868_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 17 \"%0<%10!s!> Error - ucTxTmp\" //   FLAG=QCSER_DBG_MASK_WRITE LEVEL=QCSER_DBG_LEVEL_ERROR", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCUTILS_c868
    #define WPP_ANNOTATE_QCUTILS_c868 WPP_ANNOTATE_QCUTILS_c868_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCUTILS_c868 WPP_ANNOTATE_QCUTILS_c868_FINAL("TMF:", "QCUTILS.c", "QCUTILS_c868", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCUTILS_c887_FINAL(P, File, Name, ...)    __annotation(L ## P, L"49ef1a2f-b959-3b07-8f7c-5cc8a9b5b904 serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 18 \"%0<%10!s!> SMALL_BUF - TxFileName\" //   FLAG=QCSER_DBG_MASK_WRITE LEVEL=QCSER_DBG_LEVEL_ERROR", __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCUTILS_c887_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 18 \"%0<%10!s!> SMALL_BUF - TxFileName\" //   FLAG=QCSER_DBG_MASK_WRITE LEVEL=QCSER_DBG_LEVEL_ERROR", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCUTILS_c887
    #define WPP_ANNOTATE_QCUTILS_c887 WPP_ANNOTATE_QCUTILS_c887_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCUTILS_c887 WPP_ANNOTATE_QCUTILS_c887_FINAL("TMF:", "QCUTILS.c", "QCUTILS_c887", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCUTILS_c905_FINAL(P, File, Name, ...)    __annotation(L ## P, L"49ef1a2f-b959-3b07-8f7c-5cc8a9b5b904 serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 19 \"%0<%10!s!> Error - ucRxTmp\" //   FLAG=QCSER_DBG_MASK_READ LEVEL=QCSER_DBG_LEVEL_ERROR", __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCUTILS_c905_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 19 \"%0<%10!s!> Error - ucRxTmp\" //   FLAG=QCSER_DBG_MASK_READ LEVEL=QCSER_DBG_LEVEL_ERROR", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCUTILS_c905
    #define WPP_ANNOTATE_QCUTILS_c905 WPP_ANNOTATE_QCUTILS_c905_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCUTILS_c905 WPP_ANNOTATE_QCUTILS_c905_FINAL("TMF:", "QCUTILS.c", "QCUTILS_c905", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCUTILS_c924_FINAL(P, File, Name, ...)    __annotation(L ## P, L"49ef1a2f-b959-3b07-8f7c-5cc8a9b5b904 serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 20 \"%0<%10!s!> SMALL_BUF - RxFileName\" //   FLAG=QCSER_DBG_MASK_READ LEVEL=QCSER_DBG_LEVEL_ERROR", __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCUTILS_c924_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 20 \"%0<%10!s!> SMALL_BUF - RxFileName\" //   FLAG=QCSER_DBG_MASK_READ LEVEL=QCSER_DBG_LEVEL_ERROR", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCUTILS_c924
    #define WPP_ANNOTATE_QCUTILS_c924 WPP_ANNOTATE_QCUTILS_c924_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCUTILS_c924 WPP_ANNOTATE_QCUTILS_c924_FINAL("TMF:", "QCUTILS.c", "QCUTILS_c924", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCUTILS_c995_FINAL(P, File, Name, ...)    __annotation(L ## P, L"49ef1a2f-b959-3b07-8f7c-5cc8a9b5b904 serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 21 \"%0<%10!s!> File creation failure: TxFileName\" //   FLAG=QCSER_DBG_MASK_WRITE LEVEL=QCSER_DBG_LEVEL_ERROR", __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCUTILS_c995_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 21 \"%0<%10!s!> File creation failure: TxFileName\" //   FLAG=QCSER_DBG_MASK_WRITE LEVEL=QCSER_DBG_LEVEL_ERROR", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCUTILS_c995
    #define WPP_ANNOTATE_QCUTILS_c995 WPP_ANNOTATE_QCUTILS_c995_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCUTILS_c995 WPP_ANNOTATE_QCUTILS_c995_FINAL("TMF:", "QCUTILS.c", "QCUTILS_c995", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
# define WPP_ANNOTATE(x) WPP_ANNOTATE_ ## x,

#else
# define WPP_ANNOTATE(x)
#endif

#define WPP_LOCAL_TraceGuids WPP_49ef1a2fb9593b078f7c5cc8a9b5b904_Traceguids

#if 1
extern const __declspec(selectany) GUID WPP_LOCAL_TraceGuids[] = { {0x49ef1a2f,0xb959,0x3b07,{0x8f,0x7c,0x5c,0xc8,0xa9,0xb5,0xb9,0x04}}, };
#endif

#ifndef WPP_ALREADY_INCLUDED

#if !defined(WPP_TRACE_OPTIONS)
enum {WPP_TRACE_OPTIONS = TRACE_MESSAGE_SEQUENCE   | TRACE_MESSAGE_GUID
                        | TRACE_MESSAGE_SYSTEMINFO | TRACE_MESSAGE_TIMESTAMP };
#endif

#if !defined(WPP_LOGPAIR)
# define WPP_LOGPAIR(_Size, _Addr)     (_Addr),((SIZE_T)(_Size)),
#endif

#define WPP_LOGTYPEVAL(_Type, _Value) WPP_LOGPAIR(sizeof(_Type), &(_Value))
#define WPP_LOGTYPEPTR(_Value)        WPP_LOGPAIR(sizeof(*(_Value)), (_Value))

// Marshalling macros.

#if !defined(WPP_LOGASTR)
# if !defined(WPP_CHECK_FOR_NULL_STRING)
#  define WPP_LOGASTR(_value)  WPP_LOGPAIR(strlen(_value) + 1, _value )
# else
#  define WPP_LOGASTR(_value)  WPP_LOGPAIR( (_value)?strlen(_value) + 1:5, (_value)?(_value):"NULL" )
# endif
#endif

#if !defined(WPP_LOGWSTR)
# if !defined(WPP_CHECK_FOR_NULL_STRING)
#  define WPP_LOGWSTR(_value)  WPP_LOGPAIR( (wcslen(_value)+1) * sizeof(WCHAR), _value)
# else
#  define WPP_LOGWSTR(_value)  WPP_LOGPAIR( ((_value)?wcslen(_value) + 1:5) * sizeof(WCHAR), (_value)?(_value):L"NULL" )
# endif
#endif

#if !defined(WPP_LOGPGUID)
# define WPP_LOGPGUID(_value) WPP_LOGPAIR( sizeof(GUID), (_value) )
#endif


#if !defined(WPP_LOGPSID)
# if !defined(WPP_CHECK_FOR_NULL_STRING)
# define WPP_LOGPSID(_value)  WPP_LOGPAIR( WPP_GetLengthSid(_value), (_value) )
# else
# define WPP_LOGPSID(_value)  WPP_LOGPAIR( (_value)? (WPP_IsValidSid(_value)? \
                                                                        WPP_GetLengthSid(_value):5):5, \
                                                                        (_value)? (WPP_IsValidSid(_value)?\
                                                                        (_value):"NULL"):"NULL")
#endif
#endif

#if !defined(WPP_LOGCSTR)
# define WPP_LOGCSTR(_x) \
    WPP_LOGPAIR( sizeof((_x).Length), &(_x).Length ) WPP_LOGPAIR( (_x).Length, (_x).Buffer )
#endif

#if !defined(WPP_LOGUSTR)
# define WPP_LOGUSTR(_x) \
    WPP_LOGPAIR( sizeof((_x).Length), &(_x).Length ) WPP_LOGPAIR( (_x).Length, (_x).Buffer )
#endif

#if !defined(WPP_LOGPUSTR)
#if !defined(WPP_CHECK_FOR_NULL_STRING)
# define WPP_LOGPUSTR(_x) WPP_LOGUSTR(*(_x))
#else
# define WPP_LOGPUSTR(_x) WPP_LOGPAIR( sizeof(USHORT), (_x)?&(_x)->Length:L"\x08" ) \
                          WPP_LOGPAIR( (_x)?(_x)->Length:0x08, (_x)?(_x)->Buffer:L"NULL" )
#endif
#endif

#if !defined(WPP_LOGPCSTR)
#if !defined(WPP_CHECK_FOR_NULL_STRING)
# define WPP_LOGPCSTR(_x) WPP_LOGCSTR(*(_x))
#else
# define WPP_LOGPCSTR(_x) WPP_LOGPAIR( sizeof(USHORT), (_x)?&(_x)->Length:L"\x04" ) \
                          WPP_LOGPAIR( (_x)?(_x)->Length:0x04, (_x)?(_x)->Buffer:"NULL" )
#endif
#endif

#if !defined(WPP_LOGSTDSTR)
#define WPP_LOGSTDSTR(_value)  WPP_LOGPAIR( (_value).size()+1, (_value).c_str() )
#endif

#endif  //  #ifndef WPP_ALREADY_INCLUDED

#if !defined(WPP_ENABLE_FLAG_BIT)
#define WPP_ENABLE_FLAG_BIT(flag) (WPP_CB[((flag) >> 16)].Control).Flags[( (0xFFFF & ((flag)-1) ) / 32)] & (1 << ( ((flag)-1) & 31 )) 
#endif

#ifndef WPP_SF_D_def
#       define WPP_SF_D_def
WPP_INLINE void WPP_SF_D(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, unsigned int _a1)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGTYPEVAL(unsigned int,_a1)  0); }
#endif  // #ifndef WPP_SF_D_def


//
// Generate the WPP_RECORDER_SP_D function    2
//
#ifndef WPP_RECORDER_SF_D_def
#       define WPP_RECORDER_SF_D_def
WPP_INLINE
VOID
WPP_RECORDER_SF_D(
    PVOID    AutoLogContext,
    UCHAR    level,
    ULONG    flags,
    USHORT   id,
    LPCGUID  traceGuid
    , unsigned int _a1
    )
{
    if (WPP_ENABLE_FLAG_BIT(flags) && 
       (WPP_CONTROL(flags).Level >= level)) {
        WPP_TRACE( WPP_CONTROL(flags).Logger,
                   WPP_TRACE_OPTIONS,
                   (LPGUID)traceGuid,
                   id,
                   WPP_LOGTYPEVAL(unsigned int,_a1)  0);

    }
    
    WPP_RECORDER( AutoLogContext, level, flags, (LPGUID) traceGuid, id, WPP_LOGTYPEVAL(unsigned int,_a1)  0);
}
#endif  // #ifndef WPP_RECORDER_SF_D_def


#ifndef WPP_SF_d_def
#       define WPP_SF_d_def
WPP_INLINE void WPP_SF_d(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, signed int _a1)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGTYPEVAL(signed int,_a1)  0); }
#endif  // #ifndef WPP_SF_d_def


//
// Generate the WPP_RECORDER_SP_d function    2
//
#ifndef WPP_RECORDER_SF_d_def
#       define WPP_RECORDER_SF_d_def
WPP_INLINE
VOID
WPP_RECORDER_SF_d(
    PVOID    AutoLogContext,
    UCHAR    level,
    ULONG    flags,
    USHORT   id,
    LPCGUID  traceGuid
    , signed int _a1
    )
{
    if (WPP_ENABLE_FLAG_BIT(flags) && 
       (WPP_CONTROL(flags).Level >= level)) {
        WPP_TRACE( WPP_CONTROL(flags).Logger,
                   WPP_TRACE_OPTIONS,
                   (LPGUID)traceGuid,
                   id,
                   WPP_LOGTYPEVAL(signed int,_a1)  0);

    }
    
    WPP_RECORDER( AutoLogContext, level, flags, (LPGUID) traceGuid, id, WPP_LOGTYPEVAL(signed int,_a1)  0);
}
#endif  // #ifndef WPP_RECORDER_SF_d_def


#ifndef WPP_SF_s_def
#       define WPP_SF_s_def
WPP_INLINE void WPP_SF_s(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, const char* _a1)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGASTR(_a1)  0); }
#endif  // #ifndef WPP_SF_s_def


//
// Generate the WPP_RECORDER_SP_s function    2
//
#ifndef WPP_RECORDER_SF_s_def
#       define WPP_RECORDER_SF_s_def
WPP_INLINE
VOID
WPP_RECORDER_SF_s(
    PVOID    AutoLogContext,
    UCHAR    level,
    ULONG    flags,
    USHORT   id,
    LPCGUID  traceGuid
    , const char* _a1
    )
{
    if (WPP_ENABLE_FLAG_BIT(flags) && 
       (WPP_CONTROL(flags).Level >= level)) {
        WPP_TRACE( WPP_CONTROL(flags).Logger,
                   WPP_TRACE_OPTIONS,
                   (LPGUID)traceGuid,
                   id,
                   WPP_LOGASTR(_a1)  0);

    }
    
    WPP_RECORDER( AutoLogContext, level, flags, (LPGUID) traceGuid, id, WPP_LOGASTR(_a1)  0);
}
#endif  // #ifndef WPP_RECORDER_SF_s_def


#ifndef WPP_SF_sD_def
#       define WPP_SF_sD_def
WPP_INLINE void WPP_SF_sD(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, const char* _a1, unsigned int _a2)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(unsigned int,_a2)  0); }
#endif  // #ifndef WPP_SF_sD_def


//
// Generate the WPP_RECORDER_SP_sD function    2
//
#ifndef WPP_RECORDER_SF_sD_def
#       define WPP_RECORDER_SF_sD_def
WPP_INLINE
VOID
WPP_RECORDER_SF_sD(
    PVOID    AutoLogContext,
    UCHAR    level,
    ULONG    flags,
    USHORT   id,
    LPCGUID  traceGuid
    , const char* _a1, unsigned int _a2
    )
{
    if (WPP_ENABLE_FLAG_BIT(flags) && 
       (WPP_CONTROL(flags).Level >= level)) {
        WPP_TRACE( WPP_CONTROL(flags).Logger,
                   WPP_TRACE_OPTIONS,
                   (LPGUID)traceGuid,
                   id,
                   WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(unsigned int,_a2)  0);

    }
    
    WPP_RECORDER( AutoLogContext, level, flags, (LPGUID) traceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(unsigned int,_a2)  0);
}
#endif  // #ifndef WPP_RECORDER_SF_sD_def


#ifndef WPP_SF_sDDD_def
#       define WPP_SF_sDDD_def
WPP_INLINE void WPP_SF_sDDD(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, const char* _a1, unsigned int _a2, unsigned int _a3, unsigned int _a4)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(unsigned int,_a2) WPP_LOGTYPEVAL(unsigned int,_a3) WPP_LOGTYPEVAL(unsigned int,_a4)  0); }
#endif  // #ifndef WPP_SF_sDDD_def


//
// Generate the WPP_RECORDER_SP_sDDD function    2
//
#ifndef WPP_RECORDER_SF_sDDD_def
#       define WPP_RECORDER_SF_sDDD_def
WPP_INLINE
VOID
WPP_RECORDER_SF_sDDD(
    PVOID    AutoLogContext,
    UCHAR    level,
    ULONG    flags,
    USHORT   id,
    LPCGUID  traceGuid
    , const char* _a1, unsigned int _a2, unsigned int _a3, unsigned int _a4
    )
{
    if (WPP_ENABLE_FLAG_BIT(flags) && 
       (WPP_CONTROL(flags).Level >= level)) {
        WPP_TRACE( WPP_CONTROL(flags).Logger,
                   WPP_TRACE_OPTIONS,
                   (LPGUID)traceGuid,
                   id,
                   WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(unsigned int,_a2) WPP_LOGTYPEVAL(unsigned int,_a3) WPP_LOGTYPEVAL(unsigned int,_a4)  0);

    }
    
    WPP_RECORDER( AutoLogContext, level, flags, (LPGUID) traceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(unsigned int,_a2) WPP_LOGTYPEVAL(unsigned int,_a3) WPP_LOGTYPEVAL(unsigned int,_a4)  0);
}
#endif  // #ifndef WPP_RECORDER_SF_sDDD_def


#ifndef WPP_SF_sDDDD_def
#       define WPP_SF_sDDDD_def
WPP_INLINE void WPP_SF_sDDDD(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, const char* _a1, unsigned int _a2, unsigned int _a3, unsigned int _a4, unsigned int _a5)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(unsigned int,_a2) WPP_LOGTYPEVAL(unsigned int,_a3) WPP_LOGTYPEVAL(unsigned int,_a4) WPP_LOGTYPEVAL(unsigned int,_a5)  0); }
#endif  // #ifndef WPP_SF_sDDDD_def


//
// Generate the WPP_RECORDER_SP_sDDDD function    2
//
#ifndef WPP_RECORDER_SF_sDDDD_def
#       define WPP_RECORDER_SF_sDDDD_def
WPP_INLINE
VOID
WPP_RECORDER_SF_sDDDD(
    PVOID    AutoLogContext,
    UCHAR    level,
    ULONG    flags,
    USHORT   id,
    LPCGUID  traceGuid
    , const char* _a1, unsigned int _a2, unsigned int _a3, unsigned int _a4, unsigned int _a5
    )
{
    if (WPP_ENABLE_FLAG_BIT(flags) && 
       (WPP_CONTROL(flags).Level >= level)) {
        WPP_TRACE( WPP_CONTROL(flags).Logger,
                   WPP_TRACE_OPTIONS,
                   (LPGUID)traceGuid,
                   id,
                   WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(unsigned int,_a2) WPP_LOGTYPEVAL(unsigned int,_a3) WPP_LOGTYPEVAL(unsigned int,_a4) WPP_LOGTYPEVAL(unsigned int,_a5)  0);

    }
    
    WPP_RECORDER( AutoLogContext, level, flags, (LPGUID) traceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(unsigned int,_a2) WPP_LOGTYPEVAL(unsigned int,_a3) WPP_LOGTYPEVAL(unsigned int,_a4) WPP_LOGTYPEVAL(unsigned int,_a5)  0);
}
#endif  // #ifndef WPP_RECORDER_SF_sDDDD_def


#ifndef WPP_SF_sDlqlll_def
#       define WPP_SF_sDlqlll_def
WPP_INLINE void WPP_SF_sDlqlll(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, const char* _a1, unsigned int _a2, signed long _a3, const void* _a4, signed long _a5, signed long _a6, signed long _a7)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(unsigned int,_a2) WPP_LOGTYPEVAL(signed long,_a3) WPP_LOGTYPEVAL(const void*,_a4) WPP_LOGTYPEVAL(signed long,_a5) WPP_LOGTYPEVAL(signed long,_a6) WPP_LOGTYPEVAL(signed long,_a7)  0); }
#endif  // #ifndef WPP_SF_sDlqlll_def


//
// Generate the WPP_RECORDER_SP_sDlqlll function    2
//
#ifndef WPP_RECORDER_SF_sDlqlll_def
#       define WPP_RECORDER_SF_sDlqlll_def
WPP_INLINE
VOID
WPP_RECORDER_SF_sDlqlll(
    PVOID    AutoLogContext,
    UCHAR    level,
    ULONG    flags,
    USHORT   id,
    LPCGUID  traceGuid
    , const char* _a1, unsigned int _a2, signed long _a3, const void* _a4, signed long _a5, signed long _a6, signed long _a7
    )
{
    if (WPP_ENABLE_FLAG_BIT(flags) && 
       (WPP_CONTROL(flags).Level >= level)) {
        WPP_TRACE( WPP_CONTROL(flags).Logger,
                   WPP_TRACE_OPTIONS,
                   (LPGUID)traceGuid,
                   id,
                   WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(unsigned int,_a2) WPP_LOGTYPEVAL(signed long,_a3) WPP_LOGTYPEVAL(const void*,_a4) WPP_LOGTYPEVAL(signed long,_a5) WPP_LOGTYPEVAL(signed long,_a6) WPP_LOGTYPEVAL(signed long,_a7)  0);

    }
    
    WPP_RECORDER( AutoLogContext, level, flags, (LPGUID) traceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(unsigned int,_a2) WPP_LOGTYPEVAL(signed long,_a3) WPP_LOGTYPEVAL(const void*,_a4) WPP_LOGTYPEVAL(signed long,_a5) WPP_LOGTYPEVAL(signed long,_a6) WPP_LOGTYPEVAL(signed long,_a7)  0);
}
#endif  // #ifndef WPP_RECORDER_SF_sDlqlll_def


#ifndef WPP_SF_sDlqllll_def
#       define WPP_SF_sDlqllll_def
WPP_INLINE void WPP_SF_sDlqllll(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, const char* _a1, unsigned int _a2, signed long _a3, const void* _a4, signed long _a5, signed long _a6, signed long _a7, signed long _a8)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(unsigned int,_a2) WPP_LOGTYPEVAL(signed long,_a3) WPP_LOGTYPEVAL(const void*,_a4) WPP_LOGTYPEVAL(signed long,_a5) WPP_LOGTYPEVAL(signed long,_a6) WPP_LOGTYPEVAL(signed long,_a7) WPP_LOGTYPEVAL(signed long,_a8)  0); }
#endif  // #ifndef WPP_SF_sDlqllll_def


//
// Generate the WPP_RECORDER_SP_sDlqllll function    2
//
#ifndef WPP_RECORDER_SF_sDlqllll_def
#       define WPP_RECORDER_SF_sDlqllll_def
WPP_INLINE
VOID
WPP_RECORDER_SF_sDlqllll(
    PVOID    AutoLogContext,
    UCHAR    level,
    ULONG    flags,
    USHORT   id,
    LPCGUID  traceGuid
    , const char* _a1, unsigned int _a2, signed long _a3, const void* _a4, signed long _a5, signed long _a6, signed long _a7, signed long _a8
    )
{
    if (WPP_ENABLE_FLAG_BIT(flags) && 
       (WPP_CONTROL(flags).Level >= level)) {
        WPP_TRACE( WPP_CONTROL(flags).Logger,
                   WPP_TRACE_OPTIONS,
                   (LPGUID)traceGuid,
                   id,
                   WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(unsigned int,_a2) WPP_LOGTYPEVAL(signed long,_a3) WPP_LOGTYPEVAL(const void*,_a4) WPP_LOGTYPEVAL(signed long,_a5) WPP_LOGTYPEVAL(signed long,_a6) WPP_LOGTYPEVAL(signed long,_a7) WPP_LOGTYPEVAL(signed long,_a8)  0);

    }
    
    WPP_RECORDER( AutoLogContext, level, flags, (LPGUID) traceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(unsigned int,_a2) WPP_LOGTYPEVAL(signed long,_a3) WPP_LOGTYPEVAL(const void*,_a4) WPP_LOGTYPEVAL(signed long,_a5) WPP_LOGTYPEVAL(signed long,_a6) WPP_LOGTYPEVAL(signed long,_a7) WPP_LOGTYPEVAL(signed long,_a8)  0);
}
#endif  // #ifndef WPP_RECORDER_SF_sDlqllll_def


#ifndef WPP_SF_sDq_def
#       define WPP_SF_sDq_def
WPP_INLINE void WPP_SF_sDq(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, const char* _a1, unsigned int _a2, const void* _a3)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(unsigned int,_a2) WPP_LOGTYPEVAL(const void*,_a3)  0); }
#endif  // #ifndef WPP_SF_sDq_def


//
// Generate the WPP_RECORDER_SP_sDq function    2
//
#ifndef WPP_RECORDER_SF_sDq_def
#       define WPP_RECORDER_SF_sDq_def
WPP_INLINE
VOID
WPP_RECORDER_SF_sDq(
    PVOID    AutoLogContext,
    UCHAR    level,
    ULONG    flags,
    USHORT   id,
    LPCGUID  traceGuid
    , const char* _a1, unsigned int _a2, const void* _a3
    )
{
    if (WPP_ENABLE_FLAG_BIT(flags) && 
       (WPP_CONTROL(flags).Level >= level)) {
        WPP_TRACE( WPP_CONTROL(flags).Logger,
                   WPP_TRACE_OPTIONS,
                   (LPGUID)traceGuid,
                   id,
                   WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(unsigned int,_a2) WPP_LOGTYPEVAL(const void*,_a3)  0);

    }
    
    WPP_RECORDER( AutoLogContext, level, flags, (LPGUID) traceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(unsigned int,_a2) WPP_LOGTYPEVAL(const void*,_a3)  0);
}
#endif  // #ifndef WPP_RECORDER_SF_sDq_def


#ifndef WPP_SF_sDqlll_def
#       define WPP_SF_sDqlll_def
WPP_INLINE void WPP_SF_sDqlll(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, const char* _a1, unsigned int _a2, const void* _a3, signed long _a4, signed long _a5, signed long _a6)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(unsigned int,_a2) WPP_LOGTYPEVAL(const void*,_a3) WPP_LOGTYPEVAL(signed long,_a4) WPP_LOGTYPEVAL(signed long,_a5) WPP_LOGTYPEVAL(signed long,_a6)  0); }
#endif  // #ifndef WPP_SF_sDqlll_def


//
// Generate the WPP_RECORDER_SP_sDqlll function    2
//
#ifndef WPP_RECORDER_SF_sDqlll_def
#       define WPP_RECORDER_SF_sDqlll_def
WPP_INLINE
VOID
WPP_RECORDER_SF_sDqlll(
    PVOID    AutoLogContext,
    UCHAR    level,
    ULONG    flags,
    USHORT   id,
    LPCGUID  traceGuid
    , const char* _a1, unsigned int _a2, const void* _a3, signed long _a4, signed long _a5, signed long _a6
    )
{
    if (WPP_ENABLE_FLAG_BIT(flags) && 
       (WPP_CONTROL(flags).Level >= level)) {
        WPP_TRACE( WPP_CONTROL(flags).Logger,
                   WPP_TRACE_OPTIONS,
                   (LPGUID)traceGuid,
                   id,
                   WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(unsigned int,_a2) WPP_LOGTYPEVAL(const void*,_a3) WPP_LOGTYPEVAL(signed long,_a4) WPP_LOGTYPEVAL(signed long,_a5) WPP_LOGTYPEVAL(signed long,_a6)  0);

    }
    
    WPP_RECORDER( AutoLogContext, level, flags, (LPGUID) traceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(unsigned int,_a2) WPP_LOGTYPEVAL(const void*,_a3) WPP_LOGTYPEVAL(signed long,_a4) WPP_LOGTYPEVAL(signed long,_a5) WPP_LOGTYPEVAL(signed long,_a6)  0);
}
#endif  // #ifndef WPP_RECORDER_SF_sDqlll_def


#ifndef WPP_SF_sd_def
#       define WPP_SF_sd_def
WPP_INLINE void WPP_SF_sd(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, const char* _a1, signed int _a2)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(signed int,_a2)  0); }
#endif  // #ifndef WPP_SF_sd_def


//
// Generate the WPP_RECORDER_SP_sd function    2
//
#ifndef WPP_RECORDER_SF_sd_def
#       define WPP_RECORDER_SF_sd_def
WPP_INLINE
VOID
WPP_RECORDER_SF_sd(
    PVOID    AutoLogContext,
    UCHAR    level,
    ULONG    flags,
    USHORT   id,
    LPCGUID  traceGuid
    , const char* _a1, signed int _a2
    )
{
    if (WPP_ENABLE_FLAG_BIT(flags) && 
       (WPP_CONTROL(flags).Level >= level)) {
        WPP_TRACE( WPP_CONTROL(flags).Logger,
                   WPP_TRACE_OPTIONS,
                   (LPGUID)traceGuid,
                   id,
                   WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(signed int,_a2)  0);

    }
    
    WPP_RECORDER( AutoLogContext, level, flags, (LPGUID) traceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(signed int,_a2)  0);
}
#endif  // #ifndef WPP_RECORDER_SF_sd_def


#ifndef WPP_SF_sqDDD_def
#       define WPP_SF_sqDDD_def
WPP_INLINE void WPP_SF_sqDDD(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, const char* _a1, const void* _a2, unsigned int _a3, unsigned int _a4, unsigned int _a5)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(const void*,_a2) WPP_LOGTYPEVAL(unsigned int,_a3) WPP_LOGTYPEVAL(unsigned int,_a4) WPP_LOGTYPEVAL(unsigned int,_a5)  0); }
#endif  // #ifndef WPP_SF_sqDDD_def


//
// Generate the WPP_RECORDER_SP_sqDDD function    2
//
#ifndef WPP_RECORDER_SF_sqDDD_def
#       define WPP_RECORDER_SF_sqDDD_def
WPP_INLINE
VOID
WPP_RECORDER_SF_sqDDD(
    PVOID    AutoLogContext,
    UCHAR    level,
    ULONG    flags,
    USHORT   id,
    LPCGUID  traceGuid
    , const char* _a1, const void* _a2, unsigned int _a3, unsigned int _a4, unsigned int _a5
    )
{
    if (WPP_ENABLE_FLAG_BIT(flags) && 
       (WPP_CONTROL(flags).Level >= level)) {
        WPP_TRACE( WPP_CONTROL(flags).Logger,
                   WPP_TRACE_OPTIONS,
                   (LPGUID)traceGuid,
                   id,
                   WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(const void*,_a2) WPP_LOGTYPEVAL(unsigned int,_a3) WPP_LOGTYPEVAL(unsigned int,_a4) WPP_LOGTYPEVAL(unsigned int,_a5)  0);

    }
    
    WPP_RECORDER( AutoLogContext, level, flags, (LPGUID) traceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(const void*,_a2) WPP_LOGTYPEVAL(unsigned int,_a3) WPP_LOGTYPEVAL(unsigned int,_a4) WPP_LOGTYPEVAL(unsigned int,_a5)  0);
}
#endif  // #ifndef WPP_RECORDER_SF_sqDDD_def


#ifndef WPP_SF_sqddd_def
#       define WPP_SF_sqddd_def
WPP_INLINE void WPP_SF_sqddd(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, const char* _a1, const void* _a2, signed int _a3, signed int _a4, signed int _a5)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(const void*,_a2) WPP_LOGTYPEVAL(signed int,_a3) WPP_LOGTYPEVAL(signed int,_a4) WPP_LOGTYPEVAL(signed int,_a5)  0); }
#endif  // #ifndef WPP_SF_sqddd_def


//
// Generate the WPP_RECORDER_SP_sqddd function    2
//
#ifndef WPP_RECORDER_SF_sqddd_def
#       define WPP_RECORDER_SF_sqddd_def
WPP_INLINE
VOID
WPP_RECORDER_SF_sqddd(
    PVOID    AutoLogContext,
    UCHAR    level,
    ULONG    flags,
    USHORT   id,
    LPCGUID  traceGuid
    , const char* _a1, const void* _a2, signed int _a3, signed int _a4, signed int _a5
    )
{
    if (WPP_ENABLE_FLAG_BIT(flags) && 
       (WPP_CONTROL(flags).Level >= level)) {
        WPP_TRACE( WPP_CONTROL(flags).Logger,
                   WPP_TRACE_OPTIONS,
                   (LPGUID)traceGuid,
                   id,
                   WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(const void*,_a2) WPP_LOGTYPEVAL(signed int,_a3) WPP_LOGTYPEVAL(signed int,_a4) WPP_LOGTYPEVAL(signed int,_a5)  0);

    }
    
    WPP_RECORDER( AutoLogContext, level, flags, (LPGUID) traceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(const void*,_a2) WPP_LOGTYPEVAL(signed int,_a3) WPP_LOGTYPEVAL(signed int,_a4) WPP_LOGTYPEVAL(signed int,_a5)  0);
}
#endif  // #ifndef WPP_RECORDER_SF_sqddd_def


#ifndef WPP_POST
#  define WPP_POST()
#endif

#ifndef WPP_PRE
#  define WPP_PRE()
#endif


#ifdef WPP_DEBUG
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_QCUTILS_c1103(MSG,a10) \
     WPP_PRE() \
     WPP_ANNOTATE(QCUTILS_c1103) \
     ((\
       WPP_RECORDER_FILTER() ? \
        WPP_RECORDER_SF_d(WPP_RECORDER_ARGS(), \
                             23,WPP_LOCAL_TraceGuids+0, a10), \
          WPP_DEBUG((MSG,a10)), \
          1:0  \
      ))\
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_QCUTILS_c1106(MSG,a10) \
     WPP_PRE() \
     WPP_ANNOTATE(QCUTILS_c1106) \
     ((\
       WPP_RECORDER_FILTER() ? \
        WPP_RECORDER_SF_d(WPP_RECORDER_ARGS(), \
                             24,WPP_LOCAL_TraceGuids+0, a10), \
          WPP_DEBUG((MSG,a10)), \
          1:0  \
      ))\
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_QCUTILS_c1109(MSG,a10,a11) \
     WPP_PRE() \
     WPP_ANNOTATE(QCUTILS_c1109) \
     ((\
       WPP_RECORDER_FILTER() ? \
        WPP_RECORDER_SF_sD(WPP_RECORDER_ARGS(), \
                             25,WPP_LOCAL_TraceGuids+0, a10, a11), \
          WPP_DEBUG((MSG,a10,a11)), \
          1:0  \
      ))\
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_QCUTILS_c1122(MSG,a10) \
     WPP_PRE() \
     WPP_ANNOTATE(QCUTILS_c1122) \
     ((\
       WPP_RECORDER_FILTER() ? \
        WPP_RECORDER_SF_s(WPP_RECORDER_ARGS(), \
                             26,WPP_LOCAL_TraceGuids+0, a10), \
          WPP_DEBUG((MSG,a10)), \
          1:0  \
      ))\
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_QCUTILS_c1126(MSG,a10,a11) \
     WPP_PRE() \
     WPP_ANNOTATE(QCUTILS_c1126) \
     ((\
       WPP_RECORDER_FILTER() ? \
        WPP_RECORDER_SF_sD(WPP_RECORDER_ARGS(), \
                             27,WPP_LOCAL_TraceGuids+0, a10, a11), \
          WPP_DEBUG((MSG,a10,a11)), \
          1:0  \
      ))\
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_QCUTILS_c1139(MSG,a10) \
     WPP_PRE() \
     WPP_ANNOTATE(QCUTILS_c1139) \
     ((\
       WPP_RECORDER_FILTER() ? \
        WPP_RECORDER_SF_s(WPP_RECORDER_ARGS(), \
                             28,WPP_LOCAL_TraceGuids+0, a10), \
          WPP_DEBUG((MSG,a10)), \
          1:0  \
      ))\
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_QCUTILS_c194(MSG,a10) \
     WPP_PRE() \
     WPP_ANNOTATE(QCUTILS_c194) \
     ((\
       WPP_RECORDER_FILTER() ? \
        WPP_RECORDER_SF_D(WPP_RECORDER_ARGS(), \
                             13,WPP_LOCAL_TraceGuids+0, a10), \
          WPP_DEBUG((MSG,a10)), \
          1:0  \
      ))\
     WPP_POST()
#else
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_QCUTILS_c1103(MSG,a10) \
     WPP_PRE() \
     WPP_ANNOTATE(QCUTILS_c1103) \
     ((\
       WPP_RECORDER_FILTER() ? \
        WPP_RECORDER_SF_d(WPP_RECORDER_ARGS(), \
                             23,WPP_LOCAL_TraceGuids+0, a10), 1:0\
      ))\
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_QCUTILS_c1106(MSG,a10) \
     WPP_PRE() \
     WPP_ANNOTATE(QCUTILS_c1106) \
     ((\
       WPP_RECORDER_FILTER() ? \
        WPP_RECORDER_SF_d(WPP_RECORDER_ARGS(), \
                             24,WPP_LOCAL_TraceGuids+0, a10), 1:0\
      ))\
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_QCUTILS_c1109(MSG,a10,a11) \
     WPP_PRE() \
     WPP_ANNOTATE(QCUTILS_c1109) \
     ((\
       WPP_RECORDER_FILTER() ? \
        WPP_RECORDER_SF_sD(WPP_RECORDER_ARGS(), \
                             25,WPP_LOCAL_TraceGuids+0, a10, a11), 1:0\
      ))\
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_QCUTILS_c1122(MSG,a10) \
     WPP_PRE() \
     WPP_ANNOTATE(QCUTILS_c1122) \
     ((\
       WPP_RECORDER_FILTER() ? \
        WPP_RECORDER_SF_s(WPP_RECORDER_ARGS(), \
                             26,WPP_LOCAL_TraceGuids+0, a10), 1:0\
      ))\
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_QCUTILS_c1126(MSG,a10,a11) \
     WPP_PRE() \
     WPP_ANNOTATE(QCUTILS_c1126) \
     ((\
       WPP_RECORDER_FILTER() ? \
        WPP_RECORDER_SF_sD(WPP_RECORDER_ARGS(), \
                             27,WPP_LOCAL_TraceGuids+0, a10, a11), 1:0\
      ))\
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_QCUTILS_c1139(MSG,a10) \
     WPP_PRE() \
     WPP_ANNOTATE(QCUTILS_c1139) \
     ((\
       WPP_RECORDER_FILTER() ? \
        WPP_RECORDER_SF_s(WPP_RECORDER_ARGS(), \
                             28,WPP_LOCAL_TraceGuids+0, a10), 1:0\
      ))\
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_QCUTILS_c194(MSG,a10) \
     WPP_PRE() \
     WPP_ANNOTATE(QCUTILS_c194) \
     ((\
       WPP_RECORDER_FILTER() ? \
        WPP_RECORDER_SF_D(WPP_RECORDER_ARGS(), \
                             13,WPP_LOCAL_TraceGuids+0, a10), 1:0\
      ))\
     WPP_POST()
#endif


#ifdef WPP_DEBUG
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCUTILS_c1057(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCUTILS_c1057) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 22,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCUTILS_c1250(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCUTILS_c1250) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sDqlll(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 29,WPP_LOCAL_TraceGuids+0 WPP_R012345 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCUTILS_c1264(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCUTILS_c1264) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sd(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 30,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCUTILS_c1276(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCUTILS_c1276) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sDlqllll(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 31,WPP_LOCAL_TraceGuids+0 WPP_R01234567 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCUTILS_c1289(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCUTILS_c1289) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sDlqlll(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 32,WPP_LOCAL_TraceGuids+0 WPP_R0123456 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCUTILS_c1299(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCUTILS_c1299) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sDq(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 33,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCUTILS_c1325(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCUTILS_c1325) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sqddd(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 34,WPP_LOCAL_TraceGuids+0 WPP_R01234 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCUTILS_c1491(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCUTILS_c1491) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 35,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCUTILS_c1580(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCUTILS_c1580) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 36,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCUTILS_c172(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCUTILS_c172) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 11,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_X_XFLAG_XLEVEL_POST
#  define WPP_X_XFLAG_XLEVEL_POST(X,XFLAG,XLEVEL)
#endif
#ifndef WPP_X_XFLAG_XLEVEL_PRE
#  define WPP_X_XFLAG_XLEVEL_PRE(X,XFLAG,XLEVEL)
#endif
#define WPP_CALL_QCUTILS_c1735(X, XFLAG, XLEVEL,  MSGARGS) \
            WPP_X_XFLAG_XLEVEL_PRE(X, XFLAG, XLEVEL) \
            WPP_ANNOTATE(QCUTILS_c1735) \
            (( \
                WPP_RECORDER_X_XFLAG_XLEVEL_FILTER(X, XFLAG, XLEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_X_XFLAG_XLEVEL_ARGS(X, XFLAG, XLEVEL), \
                                 37,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
             )) \
             WPP_X_XFLAG_XLEVEL_POST(X, XFLAG, XLEVEL)
#ifndef WPP_X_XFLAG_XLEVEL_POST
#  define WPP_X_XFLAG_XLEVEL_POST(X,XFLAG,XLEVEL)
#endif
#ifndef WPP_X_XFLAG_XLEVEL_PRE
#  define WPP_X_XFLAG_XLEVEL_PRE(X,XFLAG,XLEVEL)
#endif
#define WPP_CALL_QCUTILS_c1769(X, XFLAG, XLEVEL,  MSGARGS) \
            WPP_X_XFLAG_XLEVEL_PRE(X, XFLAG, XLEVEL) \
            WPP_ANNOTATE(QCUTILS_c1769) \
            (( \
                WPP_RECORDER_X_XFLAG_XLEVEL_FILTER(X, XFLAG, XLEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_X_XFLAG_XLEVEL_ARGS(X, XFLAG, XLEVEL), \
                                 38,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
             )) \
             WPP_X_XFLAG_XLEVEL_POST(X, XFLAG, XLEVEL)
#ifndef WPP_X_XFLAG_XLEVEL_POST
#  define WPP_X_XFLAG_XLEVEL_POST(X,XFLAG,XLEVEL)
#endif
#ifndef WPP_X_XFLAG_XLEVEL_PRE
#  define WPP_X_XFLAG_XLEVEL_PRE(X,XFLAG,XLEVEL)
#endif
#define WPP_CALL_QCUTILS_c1780(X, XFLAG, XLEVEL,  MSGARGS) \
            WPP_X_XFLAG_XLEVEL_PRE(X, XFLAG, XLEVEL) \
            WPP_ANNOTATE(QCUTILS_c1780) \
            (( \
                WPP_RECORDER_X_XFLAG_XLEVEL_FILTER(X, XFLAG, XLEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_X_XFLAG_XLEVEL_ARGS(X, XFLAG, XLEVEL), \
                                 39,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
             )) \
             WPP_X_XFLAG_XLEVEL_POST(X, XFLAG, XLEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCUTILS_c189(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCUTILS_c189) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sqDDD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 12,WPP_LOCAL_TraceGuids+0 WPP_R01234 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCUTILS_c216(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCUTILS_c216) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sDDDD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 14,WPP_LOCAL_TraceGuids+0 WPP_R01234 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCUTILS_c79(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCUTILS_c79) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sDDD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 10,WPP_LOCAL_TraceGuids+0 WPP_R0123 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCUTILS_c833(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCUTILS_c833) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 15,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCUTILS_c850(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCUTILS_c850) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 16,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCUTILS_c868(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCUTILS_c868) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 17,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCUTILS_c887(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCUTILS_c887) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 18,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCUTILS_c905(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCUTILS_c905) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 19,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCUTILS_c924(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCUTILS_c924) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 20,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCUTILS_c995(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCUTILS_c995) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 21,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#else
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCUTILS_c1057(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCUTILS_c1057) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 22,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCUTILS_c1250(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCUTILS_c1250) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sDqlll(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 29,WPP_LOCAL_TraceGuids+0 WPP_R012345 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCUTILS_c1264(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCUTILS_c1264) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sd(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 30,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCUTILS_c1276(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCUTILS_c1276) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sDlqllll(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 31,WPP_LOCAL_TraceGuids+0 WPP_R01234567 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCUTILS_c1289(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCUTILS_c1289) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sDlqlll(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 32,WPP_LOCAL_TraceGuids+0 WPP_R0123456 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCUTILS_c1299(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCUTILS_c1299) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sDq(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 33,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCUTILS_c1325(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCUTILS_c1325) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sqddd(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 34,WPP_LOCAL_TraceGuids+0 WPP_R01234 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCUTILS_c1491(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCUTILS_c1491) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 35,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCUTILS_c1580(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCUTILS_c1580) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 36,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCUTILS_c172(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCUTILS_c172) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 11,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_X_XFLAG_XLEVEL_POST
#  define WPP_X_XFLAG_XLEVEL_POST(X,XFLAG,XLEVEL)
#endif
#ifndef WPP_X_XFLAG_XLEVEL_PRE
#  define WPP_X_XFLAG_XLEVEL_PRE(X,XFLAG,XLEVEL)
#endif
#define WPP_CALL_QCUTILS_c1735(X, XFLAG, XLEVEL,  MSGARGS) \
            WPP_X_XFLAG_XLEVEL_PRE(X, XFLAG, XLEVEL) \
            WPP_ANNOTATE(QCUTILS_c1735) \
            (( \
                WPP_RECORDER_X_XFLAG_XLEVEL_FILTER(X, XFLAG, XLEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_X_XFLAG_XLEVEL_ARGS(X, XFLAG, XLEVEL), \
                                 37,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
            )) \
            WPP_X_XFLAG_XLEVEL_POST(X, XFLAG, XLEVEL)
#ifndef WPP_X_XFLAG_XLEVEL_POST
#  define WPP_X_XFLAG_XLEVEL_POST(X,XFLAG,XLEVEL)
#endif
#ifndef WPP_X_XFLAG_XLEVEL_PRE
#  define WPP_X_XFLAG_XLEVEL_PRE(X,XFLAG,XLEVEL)
#endif
#define WPP_CALL_QCUTILS_c1769(X, XFLAG, XLEVEL,  MSGARGS) \
            WPP_X_XFLAG_XLEVEL_PRE(X, XFLAG, XLEVEL) \
            WPP_ANNOTATE(QCUTILS_c1769) \
            (( \
                WPP_RECORDER_X_XFLAG_XLEVEL_FILTER(X, XFLAG, XLEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_X_XFLAG_XLEVEL_ARGS(X, XFLAG, XLEVEL), \
                                 38,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
            )) \
            WPP_X_XFLAG_XLEVEL_POST(X, XFLAG, XLEVEL)
#ifndef WPP_X_XFLAG_XLEVEL_POST
#  define WPP_X_XFLAG_XLEVEL_POST(X,XFLAG,XLEVEL)
#endif
#ifndef WPP_X_XFLAG_XLEVEL_PRE
#  define WPP_X_XFLAG_XLEVEL_PRE(X,XFLAG,XLEVEL)
#endif
#define WPP_CALL_QCUTILS_c1780(X, XFLAG, XLEVEL,  MSGARGS) \
            WPP_X_XFLAG_XLEVEL_PRE(X, XFLAG, XLEVEL) \
            WPP_ANNOTATE(QCUTILS_c1780) \
            (( \
                WPP_RECORDER_X_XFLAG_XLEVEL_FILTER(X, XFLAG, XLEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_X_XFLAG_XLEVEL_ARGS(X, XFLAG, XLEVEL), \
                                 39,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
            )) \
            WPP_X_XFLAG_XLEVEL_POST(X, XFLAG, XLEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCUTILS_c189(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCUTILS_c189) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sqDDD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 12,WPP_LOCAL_TraceGuids+0 WPP_R01234 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCUTILS_c216(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCUTILS_c216) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sDDDD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 14,WPP_LOCAL_TraceGuids+0 WPP_R01234 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCUTILS_c79(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCUTILS_c79) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sDDD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 10,WPP_LOCAL_TraceGuids+0 WPP_R0123 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCUTILS_c833(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCUTILS_c833) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 15,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCUTILS_c850(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCUTILS_c850) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 16,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCUTILS_c868(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCUTILS_c868) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 17,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCUTILS_c887(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCUTILS_c887) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 18,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCUTILS_c905(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCUTILS_c905) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 19,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCUTILS_c924(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCUTILS_c924) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 20,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCUTILS_c995(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCUTILS_c995) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 21,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#endif



#if defined(__cplusplus)
};
#endif


#else
// template tracemacro.tpl

// This template expects:
//      WPP_THIS_FILE defined (see header.tpl)
//      WPP_LOGGER_ARG  defined
//      WPP_GET_LOGGER  defined
//      WPP_ENABLED() defined

#if defined(__cplusplus)
extern "C" {
#endif

#ifndef WPP_ALREADY_INCLUDED

#ifndef NO_CHECK_FOR_NULL_STRING
#ifndef WPP_CHECK_FOR_NULL_STRING
#define WPP_CHECK_FOR_NULL_STRING 1
#endif
#endif

#define WPP_EVAL(_value_) _value_
#define WPP_(Id) WPP_EVAL(WPP_) ## WPP_EVAL(Id) ## WPP_EVAL(_) ## WPP_EVAL(WPP_THIS_FILE) ## WPP_EVAL(__LINE__)

#if !defined(WPP_INLINE)
#define WPP_INLINE DECLSPEC_NOINLINE __inline
#endif

#else   // #ifndef WPP_ALREADY_INCLUDED

#undef WPP_LOCAL_TraceGuids

#endif  // #ifndef WPP_ALREADY_INCLUDED

#if !defined(WPP_NO_ANNOTATIONS)

#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCUTILS_c1057
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCUTILS_c1103
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCUTILS_c1106
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCUTILS_c1109
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCUTILS_c1122
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCUTILS_c1126
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCUTILS_c1139
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCUTILS_c1250
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCUTILS_c1264
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCUTILS_c1276
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCUTILS_c1289
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCUTILS_c1299
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCUTILS_c1325
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCUTILS_c1491
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCUTILS_c1580
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCUTILS_c172
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCUTILS_c1735
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCUTILS_c1769
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCUTILS_c1780
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCUTILS_c189
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCUTILS_c194
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCUTILS_c216
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCUTILS_c79
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCUTILS_c833
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCUTILS_c850
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCUTILS_c868
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCUTILS_c887
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCUTILS_c905
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCUTILS_c924
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCUTILS_c995
#endif
#ifdef WPP_EMIT_FUNC_NAME
#define WPP_FUNC_NAME L" FUNC=" _WPPW(__FUNCTION__)
#else
#define WPP_FUNC_NAME
#endif

#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCUTILS_c1057_FINAL(P, File, Name, ...)    __annotation(L ## P, L"49ef1a2f-b959-3b07-8f7c-5cc8a9b5b904 serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 22 \"%0<%10!s!> File creation failure: RxFileName\" //   FLAG=QCSER_DBG_MASK_READ LEVEL=QCSER_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCUTILS_c1057_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 22 \"%0<%10!s!> File creation failure: RxFileName\" //   FLAG=QCSER_DBG_MASK_READ LEVEL=QCSER_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCUTILS_c1057
    #define WPP_ANNOTATE_QCUTILS_c1057 WPP_ANNOTATE_QCUTILS_c1057_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCUTILS_c1057 WPP_ANNOTATE_QCUTILS_c1057_FINAL("TMF:", "QCUTILS.c", "QCUTILS_c1057", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCUTILS_c1103_FINAL(P, File, Name, ...)    __annotation(L ## P, L"49ef1a2f-b959-3b07-8f7c-5cc8a9b5b904 serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 23 \"%0\t ----- LATETST %10!d! TRANSFER Records -----\" //  " WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCUTILS_c1103_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 23 \"%0\t ----- LATETST %10!d! TRANSFER Records -----\" //  " WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCUTILS_c1103
    #define WPP_ANNOTATE_QCUTILS_c1103 WPP_ANNOTATE_QCUTILS_c1103_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemLong -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCUTILS_c1103 WPP_ANNOTATE_QCUTILS_c1103_FINAL("TMF:", "QCUTILS.c", "QCUTILS_c1103", L"{", L"NUM_LATEST_PKTS, ItemLong -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCUTILS_c1106_FINAL(P, File, Name, ...)    __annotation(L ## P, L"49ef1a2f-b959-3b07-8f7c-5cc8a9b5b904 serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 24 \"%0\t ----- Record %10!d! -----\" //  " WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCUTILS_c1106_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 24 \"%0\t ----- Record %10!d! -----\" //  " WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCUTILS_c1106
    #define WPP_ANNOTATE_QCUTILS_c1106 WPP_ANNOTATE_QCUTILS_c1106_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemLong -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCUTILS_c1106 WPP_ANNOTATE_QCUTILS_c1106_FINAL("TMF:", "QCUTILS.c", "QCUTILS_c1106", L"{", L"i, ItemLong -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCUTILS_c1109_FINAL(P, File, Name, ...)    __annotation(L ## P, L"49ef1a2f-b959-3b07-8f7c-5cc8a9b5b904 serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 25 \"%0\t TX_RECORD: [%10!s!] (%11!u! bytes)\" //  " WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCUTILS_c1109_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 25 \"%0\t TX_RECORD: [%10!s!] (%11!u! bytes)\" //  " WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCUTILS_c1109
    #define WPP_ANNOTATE_QCUTILS_c1109 WPP_ANNOTATE_QCUTILS_c1109_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCUTILS_c1109 WPP_ANNOTATE_QCUTILS_c1109_FINAL("TMF:", "QCUTILS.c", "QCUTILS_c1109", L"{", L"pDevExt->TxLogRec[i].TimeStamp, ItemString -- 10" , L"pDevExt->TxLogRec[i].PktLength, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCUTILS_c1122_FINAL(P, File, Name, ...)    __annotation(L ## P, L"49ef1a2f-b959-3b07-8f7c-5cc8a9b5b904 serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 26 \"%0%10!s!\" //  " WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCUTILS_c1122_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 26 \"%0%10!s!\" //  " WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCUTILS_c1122
    #define WPP_ANNOTATE_QCUTILS_c1122 WPP_ANNOTATE_QCUTILS_c1122_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCUTILS_c1122 WPP_ANNOTATE_QCUTILS_c1122_FINAL("TMF:", "QCUTILS.c", "QCUTILS_c1122", L"{", L"dataBuffer, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCUTILS_c1126_FINAL(P, File, Name, ...)    __annotation(L ## P, L"49ef1a2f-b959-3b07-8f7c-5cc8a9b5b904 serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 27 \"%0\t RX_RECORD: [%10!s!] (%11!u! bytes)\" //  " WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCUTILS_c1126_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 27 \"%0\t RX_RECORD: [%10!s!] (%11!u! bytes)\" //  " WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCUTILS_c1126
    #define WPP_ANNOTATE_QCUTILS_c1126 WPP_ANNOTATE_QCUTILS_c1126_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCUTILS_c1126 WPP_ANNOTATE_QCUTILS_c1126_FINAL("TMF:", "QCUTILS.c", "QCUTILS_c1126", L"{", L"pDevExt->RxLogRec[i].TimeStamp, ItemString -- 10" , L"pDevExt->RxLogRec[i].PktLength, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCUTILS_c1139_FINAL(P, File, Name, ...)    __annotation(L ## P, L"49ef1a2f-b959-3b07-8f7c-5cc8a9b5b904 serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 28 \"%0%10!s!\" //  " WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCUTILS_c1139_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 28 \"%0%10!s!\" //  " WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCUTILS_c1139
    #define WPP_ANNOTATE_QCUTILS_c1139 WPP_ANNOTATE_QCUTILS_c1139_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCUTILS_c1139 WPP_ANNOTATE_QCUTILS_c1139_FINAL("TMF:", "QCUTILS.c", "QCUTILS_c1139", L"{", L"dataBuffer, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCUTILS_c1250_FINAL(P, File, Name, ...)    __annotation(L ## P, L"49ef1a2f-b959-3b07-8f7c-5cc8a9b5b904 serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 29 \"%0<%10!s!> CIRP (Cq 0x%11!x!) 0x%12!p! <%13!ld!/%14!ld!/%15!ld!>\" //   FLAG=QCSER_DBG_MASK_CIRP LEVEL=debugLevel" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCUTILS_c1250_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 29 \"%0<%10!s!> CIRP (Cq 0x%11!x!) 0x%12!p! <%13!ld!/%14!ld!/%15!ld!>\" //   FLAG=QCSER_DBG_MASK_CIRP LEVEL=debugLevel" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCUTILS_c1250
    #define WPP_ANNOTATE_QCUTILS_c1250 WPP_ANNOTATE_QCUTILS_c1250_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemPtr -- 12" , L"Arg, ItemLong -- 13" , L"Arg, ItemLong -- 14" , L"Arg, ItemLong -- 15" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCUTILS_c1250 WPP_ANNOTATE_QCUTILS_c1250_FINAL("TMF:", "QCUTILS.c", "QCUTILS_c1250", L"{", L"pDevExt->PortName, ItemString -- 10" , L"pIrp->IoStatus.Status, ItemLong -- 11" , L"pIrp, ItemPtr -- 12" , L"pDevExt->Sts.lRmlCount[0], ItemLong -- 13" , L"pDevExt->Sts.lAllocatedCtls, ItemLong -- 14" , L"pDevExt->Sts.lAllocatedDSPs, ItemLong -- 15" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCUTILS_c1264_FINAL(P, File, Name, ...)    __annotation(L ## P, L"49ef1a2f-b959-3b07-8f7c-5cc8a9b5b904 serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 30 \"%0<%10!s!> UTL: err - negative NumIrpsToComplete %11!d!\" //   FLAG=QCSER_DBG_MASK_READ LEVEL=QCSER_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCUTILS_c1264_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 30 \"%0<%10!s!> UTL: err - negative NumIrpsToComplete %11!d!\" //   FLAG=QCSER_DBG_MASK_READ LEVEL=QCSER_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCUTILS_c1264
    #define WPP_ANNOTATE_QCUTILS_c1264 WPP_ANNOTATE_QCUTILS_c1264_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCUTILS_c1264 WPP_ANNOTATE_QCUTILS_c1264_FINAL("TMF:", "QCUTILS.c", "QCUTILS_c1264", L"{", L"pDevExt->PortName, ItemString -- 10" , L"pDevExt->NumIrpsToComplete, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCUTILS_c1276_FINAL(P, File, Name, ...)    __annotation(L ## P, L"49ef1a2f-b959-3b07-8f7c-5cc8a9b5b904 serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 31 \"%0<%10!s!> RIRP (Cq 0x%11!x!/%12!ld!B) 0x%13!p! (%14!ld!) <%15!ld!/%16!ld!/%17!ld!>\" //   FLAG=QCSER_DBG_MASK_RIRP LEVEL=debugLevel" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCUTILS_c1276_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 31 \"%0<%10!s!> RIRP (Cq 0x%11!x!/%12!ld!B) 0x%13!p! (%14!ld!) <%15!ld!/%16!ld!/%17!ld!>\" //   FLAG=QCSER_DBG_MASK_RIRP LEVEL=debugLevel" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCUTILS_c1276
    #define WPP_ANNOTATE_QCUTILS_c1276 WPP_ANNOTATE_QCUTILS_c1276_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemLong -- 12" , L"Arg, ItemPtr -- 13" , L"Arg, ItemLong -- 14" , L"Arg, ItemLong -- 15" , L"Arg, ItemLong -- 16" , L"Arg, ItemLong -- 17" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCUTILS_c1276 WPP_ANNOTATE_QCUTILS_c1276_FINAL("TMF:", "QCUTILS.c", "QCUTILS_c1276", L"{", L"pDevExt->PortName, ItemString -- 10" , L"pIrp->IoStatus.Status, ItemLong -- 11" , L"pIrp->IoStatus.Information, ItemLong -- 12" , L"pIrp, ItemPtr -- 13" , L"pDevExt->NumIrpsToComplete, ItemLong -- 14" , L"pDevExt->Sts.lRmlCount[1], ItemLong -- 15" , L"pDevExt->Sts.lAllocatedReads, ItemLong -- 16" , L"pDevExt->Sts.lAllocatedRdMem, ItemLong -- 17" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCUTILS_c1289_FINAL(P, File, Name, ...)    __annotation(L ## P, L"49ef1a2f-b959-3b07-8f7c-5cc8a9b5b904 serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 32 \"%0<%10!s!> WIRP (Cq 0x%11!x!/%12!ld!B) 0x%13!p! <%14!ld!/%15!ld!/%16!ld!>\" //   FLAG=QCSER_DBG_MASK_WIRP LEVEL=debugLevel" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCUTILS_c1289_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 32 \"%0<%10!s!> WIRP (Cq 0x%11!x!/%12!ld!B) 0x%13!p! <%14!ld!/%15!ld!/%16!ld!>\" //   FLAG=QCSER_DBG_MASK_WIRP LEVEL=debugLevel" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCUTILS_c1289
    #define WPP_ANNOTATE_QCUTILS_c1289 WPP_ANNOTATE_QCUTILS_c1289_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemLong -- 12" , L"Arg, ItemPtr -- 13" , L"Arg, ItemLong -- 14" , L"Arg, ItemLong -- 15" , L"Arg, ItemLong -- 16" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCUTILS_c1289 WPP_ANNOTATE_QCUTILS_c1289_FINAL("TMF:", "QCUTILS.c", "QCUTILS_c1289", L"{", L"pDevExt->PortName, ItemString -- 10" , L"pIrp->IoStatus.Status, ItemLong -- 11" , L"pIrp->IoStatus.Information, ItemLong -- 12" , L"pIrp, ItemPtr -- 13" , L"pDevExt->Sts.lRmlCount[2], ItemLong -- 14" , L"pDevExt->Sts.lAllocatedWrites, ItemLong -- 15" , L"pDevExt->Sts.lAllocatedWtMem, ItemLong -- 16" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCUTILS_c1299_FINAL(P, File, Name, ...)    __annotation(L ## P, L"49ef1a2f-b959-3b07-8f7c-5cc8a9b5b904 serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 33 \"%0<%10!s!> UIRP (Cq 0x%11!x!) 0x%12!p!\" //   FLAG=QCSER_DBG_MASK_CONTROL LEVEL=debugLevel" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCUTILS_c1299_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 33 \"%0<%10!s!> UIRP (Cq 0x%11!x!) 0x%12!p!\" //   FLAG=QCSER_DBG_MASK_CONTROL LEVEL=debugLevel" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCUTILS_c1299
    #define WPP_ANNOTATE_QCUTILS_c1299 WPP_ANNOTATE_QCUTILS_c1299_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemPtr -- 12" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCUTILS_c1299 WPP_ANNOTATE_QCUTILS_c1299_FINAL("TMF:", "QCUTILS.c", "QCUTILS_c1299", L"{", L"pDevExt->PortName, ItemString -- 10" , L"pIrp->IoStatus.Status, ItemLong -- 11" , L"pIrp, ItemPtr -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCUTILS_c1325_FINAL(P, File, Name, ...)    __annotation(L ## P, L"49ef1a2f-b959-3b07-8f7c-5cc8a9b5b904 serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 34 \"%0<%10!s!> IRP 0x%11!p! (type %12!d!) boost [%13!d!,%14!d!]\" //   FLAG=(QCSER_DBG_MASK_CONTROL | QCSER_DBG_MASK_WIRP | QCSER_DBG_MASK_RIRP) LEVEL=QCSER_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCUTILS_c1325_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 34 \"%0<%10!s!> IRP 0x%11!p! (type %12!d!) boost [%13!d!,%14!d!]\" //   FLAG=(QCSER_DBG_MASK_CONTROL | QCSER_DBG_MASK_WIRP | QCSER_DBG_MASK_RIRP) LEVEL=QCSER_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCUTILS_c1325
    #define WPP_ANNOTATE_QCUTILS_c1325 WPP_ANNOTATE_QCUTILS_c1325_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemPtr -- 11" , L"Arg, ItemLong -- 12" , L"Arg, ItemLong -- 13" , L"Arg, ItemLong -- 14" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCUTILS_c1325 WPP_ANNOTATE_QCUTILS_c1325_FINAL("TMF:", "QCUTILS.c", "QCUTILS_c1325", L"{", L"pDevExt->PortName, ItemString -- 10" , L"pIrp, ItemPtr -- 11" , L"IrpType, ItemLong -- 12" , L"pDevExt->Sts.lRmlCount[IrpType], ItemLong -- 13" , L"bComListEmpty, ItemLong -- 14" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCUTILS_c1491_FINAL(P, File, Name, ...)    __annotation(L ## P, L"49ef1a2f-b959-3b07-8f7c-5cc8a9b5b904 serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 35 \"%0<%10!s!> UPM: reg srv ERR-0\" //   FLAG=QCSER_DBG_MASK_READ LEVEL=QCSER_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCUTILS_c1491_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 35 \"%0<%10!s!> UPM: reg srv ERR-0\" //   FLAG=QCSER_DBG_MASK_READ LEVEL=QCSER_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCUTILS_c1491
    #define WPP_ANNOTATE_QCUTILS_c1491 WPP_ANNOTATE_QCUTILS_c1491_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCUTILS_c1491 WPP_ANNOTATE_QCUTILS_c1491_FINAL("TMF:", "QCUTILS.c", "QCUTILS_c1491", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCUTILS_c1580_FINAL(P, File, Name, ...)    __annotation(L ## P, L"49ef1a2f-b959-3b07-8f7c-5cc8a9b5b904 serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 36 \"%0<%10!s!> UPM: reg srv ERR\" //   FLAG=QCSER_DBG_MASK_READ LEVEL=QCSER_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCUTILS_c1580_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 36 \"%0<%10!s!> UPM: reg srv ERR\" //   FLAG=QCSER_DBG_MASK_READ LEVEL=QCSER_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCUTILS_c1580
    #define WPP_ANNOTATE_QCUTILS_c1580 WPP_ANNOTATE_QCUTILS_c1580_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCUTILS_c1580 WPP_ANNOTATE_QCUTILS_c1580_FINAL("TMF:", "QCUTILS.c", "QCUTILS_c1580", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCUTILS_c172_FINAL(P, File, Name, ...)    __annotation(L ## P, L"49ef1a2f-b959-3b07-8f7c-5cc8a9b5b904 serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 11 \"%0<%10!s!> ERR: WOM null cxlRtn\" //   FLAG=QCSER_DBG_MASK_CONTROL LEVEL=QCSER_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCUTILS_c172_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 11 \"%0<%10!s!> ERR: WOM null cxlRtn\" //   FLAG=QCSER_DBG_MASK_CONTROL LEVEL=QCSER_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCUTILS_c172
    #define WPP_ANNOTATE_QCUTILS_c172 WPP_ANNOTATE_QCUTILS_c172_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCUTILS_c172 WPP_ANNOTATE_QCUTILS_c172_FINAL("TMF:", "QCUTILS.c", "QCUTILS_c172", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCUTILS_c1735_FINAL(P, File, Name, ...)    __annotation(L ## P, L"49ef1a2f-b959-3b07-8f7c-5cc8a9b5b904 serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 37 \"%0%10!s!\" //   X=x XFLAG=DbgMask XLEVEL=DbgLevel" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCUTILS_c1735_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 37 \"%0%10!s!\" //   X=x XFLAG=DbgMask XLEVEL=DbgLevel" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCUTILS_c1735
    #define WPP_ANNOTATE_QCUTILS_c1735 WPP_ANNOTATE_QCUTILS_c1735_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCUTILS_c1735 WPP_ANNOTATE_QCUTILS_c1735_FINAL("TMF:", "QCUTILS.c", "QCUTILS_c1735", L"{", L"buf, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCUTILS_c1769_FINAL(P, File, Name, ...)    __annotation(L ## P, L"49ef1a2f-b959-3b07-8f7c-5cc8a9b5b904 serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 38 \"%0%10!s!\" //   X=x XFLAG=DbgMask XLEVEL=DbgLevel" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCUTILS_c1769_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 38 \"%0%10!s!\" //   X=x XFLAG=DbgMask XLEVEL=DbgLevel" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCUTILS_c1769
    #define WPP_ANNOTATE_QCUTILS_c1769 WPP_ANNOTATE_QCUTILS_c1769_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCUTILS_c1769 WPP_ANNOTATE_QCUTILS_c1769_FINAL("TMF:", "QCUTILS.c", "QCUTILS_c1769", L"{", L"buf, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCUTILS_c1780_FINAL(P, File, Name, ...)    __annotation(L ## P, L"49ef1a2f-b959-3b07-8f7c-5cc8a9b5b904 serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 39 \"%0%10!s!\" //   X=x XFLAG=DbgMask XLEVEL=DbgLevel" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCUTILS_c1780_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 39 \"%0%10!s!\" //   X=x XFLAG=DbgMask XLEVEL=DbgLevel" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCUTILS_c1780
    #define WPP_ANNOTATE_QCUTILS_c1780 WPP_ANNOTATE_QCUTILS_c1780_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCUTILS_c1780 WPP_ANNOTATE_QCUTILS_c1780_FINAL("TMF:", "QCUTILS.c", "QCUTILS_c1780", L"{", L"buf, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCUTILS_c189_FINAL(P, File, Name, ...)    __annotation(L ## P, L"49ef1a2f-b959-3b07-8f7c-5cc8a9b5b904 serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 12 \"%0<%10!s!> ProcessNewUartState: complete WOM 0x%11!p!: 0x%12!x!(0x%13!x!, 0x%14!x!)\" //   FLAG=QCSER_DBG_MASK_CONTROL LEVEL=QCSER_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCUTILS_c189_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 12 \"%0<%10!s!> ProcessNewUartState: complete WOM 0x%11!p!: 0x%12!x!(0x%13!x!, 0x%14!x!)\" //   FLAG=QCSER_DBG_MASK_CONTROL LEVEL=QCSER_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCUTILS_c189
    #define WPP_ANNOTATE_QCUTILS_c189 WPP_ANNOTATE_QCUTILS_c189_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemPtr -- 11" , L"Arg, ItemLong -- 12" , L"Arg, ItemLong -- 13" , L"Arg, ItemLong -- 14" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCUTILS_c189 WPP_ANNOTATE_QCUTILS_c189_FINAL("TMF:", "QCUTILS.c", "QCUTILS_c189", L"{", L"pDevExt->PortName, ItemString -- 10" , L"pWOMIrp, ItemPtr -- 11" , L"(ulNewEvents & pDevExt->ulWaitMask), ItemLong -- 12" , L"ulNewEvents, ItemLong -- 13" , L"pDevExt->ulWaitMask, ItemLong -- 14" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCUTILS_c194_FINAL(P, File, Name, ...)    __annotation(L ## P, L"49ef1a2f-b959-3b07-8f7c-5cc8a9b5b904 serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 13 \"%0 pWaitOnMaskIrp: 0x%10!x!\" //  " WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCUTILS_c194_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 13 \"%0 pWaitOnMaskIrp: 0x%10!x!\" //  " WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCUTILS_c194
    #define WPP_ANNOTATE_QCUTILS_c194 WPP_ANNOTATE_QCUTILS_c194_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemLong -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCUTILS_c194 WPP_ANNOTATE_QCUTILS_c194_FINAL("TMF:", "QCUTILS.c", "QCUTILS_c194", L"{", L"(ulNewEvents & pDevExt->ulWaitMask), ItemLong -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCUTILS_c216_FINAL(P, File, Name, ...)    __annotation(L ## P, L"49ef1a2f-b959-3b07-8f7c-5cc8a9b5b904 serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 14 \"%0<%10!s!> <--ProcessNewUartState: 0x%11!x!, 0x%12!x!, %13!u!, IrpComp %14!u!\" //   FLAG=QCSER_DBG_MASK_CONTROL LEVEL=QCSER_DBG_LEVEL_TRACE" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCUTILS_c216_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 14 \"%0<%10!s!> <--ProcessNewUartState: 0x%11!x!, 0x%12!x!, %13!u!, IrpComp %14!u!\" //   FLAG=QCSER_DBG_MASK_CONTROL LEVEL=QCSER_DBG_LEVEL_TRACE" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCUTILS_c216
    #define WPP_ANNOTATE_QCUTILS_c216 WPP_ANNOTATE_QCUTILS_c216_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemLong -- 12" , L"Arg, ItemLong -- 13" , L"Arg, ItemLong -- 14" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCUTILS_c216 WPP_ANNOTATE_QCUTILS_c216_FINAL("TMF:", "QCUTILS.c", "QCUTILS_c216", L"{", L"pDevExt->PortName, ItemString -- 10" , L"usNewUartState, ItemLong -- 11" , L"usBitsMask, ItemLong -- 12" , L"bHoldWaitIrp, ItemLong -- 13" , L"bForceIrpCompletion, ItemLong -- 14" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCUTILS_c79_FINAL(P, File, Name, ...)    __annotation(L ## P, L"49ef1a2f-b959-3b07-8f7c-5cc8a9b5b904 serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 10 \"%0<%10!s!> -->ProcessNewUartState: 0x%11!x!, 0x%12!x!, %13!u!\" //   FLAG=QCSER_DBG_MASK_CONTROL LEVEL=QCSER_DBG_LEVEL_TRACE" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCUTILS_c79_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 10 \"%0<%10!s!> -->ProcessNewUartState: 0x%11!x!, 0x%12!x!, %13!u!\" //   FLAG=QCSER_DBG_MASK_CONTROL LEVEL=QCSER_DBG_LEVEL_TRACE" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCUTILS_c79
    #define WPP_ANNOTATE_QCUTILS_c79 WPP_ANNOTATE_QCUTILS_c79_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemLong -- 12" , L"Arg, ItemLong -- 13" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCUTILS_c79 WPP_ANNOTATE_QCUTILS_c79_FINAL("TMF:", "QCUTILS.c", "QCUTILS_c79", L"{", L"pDevExt->PortName, ItemString -- 10" , L"usNewUartState, ItemLong -- 11" , L"usBitsMask, ItemLong -- 12" , L"bHoldWaitIrp, ItemLong -- 13" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCUTILS_c833_FINAL(P, File, Name, ...)    __annotation(L ## P, L"49ef1a2f-b959-3b07-8f7c-5cc8a9b5b904 serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 15 \"%0<%10!s!> NO_MEM - TxFileName\" //   FLAG=QCSER_DBG_MASK_WRITE LEVEL=QCSER_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCUTILS_c833_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 15 \"%0<%10!s!> NO_MEM - TxFileName\" //   FLAG=QCSER_DBG_MASK_WRITE LEVEL=QCSER_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCUTILS_c833
    #define WPP_ANNOTATE_QCUTILS_c833 WPP_ANNOTATE_QCUTILS_c833_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCUTILS_c833 WPP_ANNOTATE_QCUTILS_c833_FINAL("TMF:", "QCUTILS.c", "QCUTILS_c833", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCUTILS_c850_FINAL(P, File, Name, ...)    __annotation(L ## P, L"49ef1a2f-b959-3b07-8f7c-5cc8a9b5b904 serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 16 \"%0<%10!s!> NO_MEM - RxFileName\" //   FLAG=QCSER_DBG_MASK_READ LEVEL=QCSER_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCUTILS_c850_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 16 \"%0<%10!s!> NO_MEM - RxFileName\" //   FLAG=QCSER_DBG_MASK_READ LEVEL=QCSER_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCUTILS_c850
    #define WPP_ANNOTATE_QCUTILS_c850 WPP_ANNOTATE_QCUTILS_c850_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCUTILS_c850 WPP_ANNOTATE_QCUTILS_c850_FINAL("TMF:", "QCUTILS.c", "QCUTILS_c850", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCUTILS_c868_FINAL(P, File, Name, ...)    __annotation(L ## P, L"49ef1a2f-b959-3b07-8f7c-5cc8a9b5b904 serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 17 \"%0<%10!s!> Error - ucTxTmp\" //   FLAG=QCSER_DBG_MASK_WRITE LEVEL=QCSER_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCUTILS_c868_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 17 \"%0<%10!s!> Error - ucTxTmp\" //   FLAG=QCSER_DBG_MASK_WRITE LEVEL=QCSER_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCUTILS_c868
    #define WPP_ANNOTATE_QCUTILS_c868 WPP_ANNOTATE_QCUTILS_c868_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCUTILS_c868 WPP_ANNOTATE_QCUTILS_c868_FINAL("TMF:", "QCUTILS.c", "QCUTILS_c868", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCUTILS_c887_FINAL(P, File, Name, ...)    __annotation(L ## P, L"49ef1a2f-b959-3b07-8f7c-5cc8a9b5b904 serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 18 \"%0<%10!s!> SMALL_BUF - TxFileName\" //   FLAG=QCSER_DBG_MASK_WRITE LEVEL=QCSER_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCUTILS_c887_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 18 \"%0<%10!s!> SMALL_BUF - TxFileName\" //   FLAG=QCSER_DBG_MASK_WRITE LEVEL=QCSER_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCUTILS_c887
    #define WPP_ANNOTATE_QCUTILS_c887 WPP_ANNOTATE_QCUTILS_c887_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCUTILS_c887 WPP_ANNOTATE_QCUTILS_c887_FINAL("TMF:", "QCUTILS.c", "QCUTILS_c887", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCUTILS_c905_FINAL(P, File, Name, ...)    __annotation(L ## P, L"49ef1a2f-b959-3b07-8f7c-5cc8a9b5b904 serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 19 \"%0<%10!s!> Error - ucRxTmp\" //   FLAG=QCSER_DBG_MASK_READ LEVEL=QCSER_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCUTILS_c905_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 19 \"%0<%10!s!> Error - ucRxTmp\" //   FLAG=QCSER_DBG_MASK_READ LEVEL=QCSER_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCUTILS_c905
    #define WPP_ANNOTATE_QCUTILS_c905 WPP_ANNOTATE_QCUTILS_c905_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCUTILS_c905 WPP_ANNOTATE_QCUTILS_c905_FINAL("TMF:", "QCUTILS.c", "QCUTILS_c905", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCUTILS_c924_FINAL(P, File, Name, ...)    __annotation(L ## P, L"49ef1a2f-b959-3b07-8f7c-5cc8a9b5b904 serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 20 \"%0<%10!s!> SMALL_BUF - RxFileName\" //   FLAG=QCSER_DBG_MASK_READ LEVEL=QCSER_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCUTILS_c924_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 20 \"%0<%10!s!> SMALL_BUF - RxFileName\" //   FLAG=QCSER_DBG_MASK_READ LEVEL=QCSER_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCUTILS_c924
    #define WPP_ANNOTATE_QCUTILS_c924 WPP_ANNOTATE_QCUTILS_c924_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCUTILS_c924 WPP_ANNOTATE_QCUTILS_c924_FINAL("TMF:", "QCUTILS.c", "QCUTILS_c924", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCUTILS_c995_FINAL(P, File, Name, ...)    __annotation(L ## P, L"49ef1a2f-b959-3b07-8f7c-5cc8a9b5b904 serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 21 \"%0<%10!s!> File creation failure: TxFileName\" //   FLAG=QCSER_DBG_MASK_WRITE LEVEL=QCSER_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCUTILS_c995_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 21 \"%0<%10!s!> File creation failure: TxFileName\" //   FLAG=QCSER_DBG_MASK_WRITE LEVEL=QCSER_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCUTILS_c995
    #define WPP_ANNOTATE_QCUTILS_c995 WPP_ANNOTATE_QCUTILS_c995_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCUTILS_c995 WPP_ANNOTATE_QCUTILS_c995_FINAL("TMF:", "QCUTILS.c", "QCUTILS_c995", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
# define WPP_ANNOTATE(x) WPP_ANNOTATE_ ## x,

#else
# define WPP_ANNOTATE(x)
#endif


#if 1
#if !defined(WPP_USER_MSG_GUID)

#define WPP_LOCAL_TraceGuids WPP_49ef1a2fb9593b078f7c5cc8a9b5b904_Traceguids
extern const __declspec(selectany) GUID WPP_LOCAL_TraceGuids[] = { {0x49ef1a2f,0xb959,0x3b07,{0x8f,0x7c,0x5c,0xc8,0xa9,0xb5,0xb9,0x04}}, };

#else

#define WPP_LOCAL_MSG_VAR(Guid) WPP_XGLUE3(WPP_, WPP_GUID_NORM Guid, _Traceguids)

#define WPP_LOCAL_MSG_GUID(Guid) \
extern const __declspec(selectany) GUID WPP_LOCAL_MSG_VAR(Guid)[] = { WPP_GUID_STRUCT Guid }

WPP_LOCAL_MSG_GUID(WPP_USER_MSG_GUID);
#define WPP_LOCAL_TraceGuids WPP_LOCAL_MSG_VAR(WPP_USER_MSG_GUID)

#endif
#endif


#ifndef WPP_ALREADY_INCLUDED

#if !defined(WPP_TRACE_OPTIONS)
enum {WPP_TRACE_OPTIONS = TRACE_MESSAGE_SEQUENCE   | TRACE_MESSAGE_GUID
                        | TRACE_MESSAGE_SYSTEMINFO | TRACE_MESSAGE_TIMESTAMP };
#endif

#ifndef WPP_LOGPAIR_SEPARATOR
# define WPP_LOGPAIR_SEPARATOR ,
#endif

#ifndef WPP_LOGPAIR_SIZET
# define WPP_LOGPAIR_SIZET SIZE_T
#endif

#if !defined(WPP_LOGPAIR)
# define WPP_LOGPAIR(_Size, _Addr)     (_Addr),((WPP_LOGPAIR_SIZET)(_Size))WPP_LOGPAIR_SEPARATOR
#endif

#define WPP_LOGTYPEVAL(_Type, _Value) WPP_LOGPAIR(sizeof(_Type), &(_Value))
#define WPP_LOGTYPEPTR(_Value)        WPP_LOGPAIR(sizeof(*(_Value)), (_Value))

// Marshalling macros.

#if !defined(WPP_LOGASTR)
# if !defined(WPP_CHECK_FOR_NULL_STRING)
#  define WPP_LOGASTR(_value)  WPP_LOGPAIR(strlen(_value) + 1, _value )
# else
#  define WPP_LOGASTR(_value)  WPP_LOGPAIR( (_value)?strlen(_value) + 1:5, (_value)?(_value):"NULL" )
# endif
#endif

#if !defined(WPP_LOGWSTR)
# if !defined(WPP_CHECK_FOR_NULL_STRING)
#  define WPP_LOGWSTR(_value)  WPP_LOGPAIR( (wcslen(_value)+1) * sizeof(WCHAR), _value)
# else
#  define WPP_LOGWSTR(_value)  WPP_LOGPAIR( ((_value)?wcslen(_value) + 1:5) * sizeof(WCHAR), (_value)?(_value):L"NULL" )
# endif
#endif

#if !defined(WPP_LOGPGUID)
# define WPP_LOGPGUID(_value) WPP_LOGPAIR( sizeof(GUID), (_value) )
#endif


#if !defined(WPP_LOGPSID)
# if !defined(WPP_CHECK_FOR_NULL_STRING)
# define WPP_LOGPSID(_value)  WPP_LOGPAIR( WPP_GetLengthSid(_value), (_value) )
# else
# define WPP_LOGPSID(_value)  WPP_LOGPAIR( (_value)? (WPP_IsValidSid(_value)? \
                                                                        WPP_GetLengthSid(_value):5):5, \
                                                                        (_value)? (WPP_IsValidSid(_value)?\
                                                                        (_value):"NULL"):"NULL")
#endif
#endif

#if !defined(WPP_LOGCSTR)
# define WPP_LOGCSTR(_x) \
    WPP_LOGPAIR( sizeof((_x).Length), &(_x).Length ) WPP_LOGPAIR( (_x).Length, (_x).Buffer )
#endif

#if !defined(WPP_LOGUSTR)
# define WPP_LOGUSTR(_x) \
    WPP_LOGPAIR( sizeof((_x).Length), &(_x).Length ) WPP_LOGPAIR( (_x).Length, (_x).Buffer )
#endif

#if !defined(WPP_LOGPUSTR)
#if !defined(WPP_CHECK_FOR_NULL_STRING)
# define WPP_LOGPUSTR(_x) WPP_LOGUSTR(*(_x))
#else
# define WPP_LOGPUSTR(_x) WPP_LOGPAIR( sizeof(USHORT), (_x)?&(_x)->Length:L"\x08" ) \
                          WPP_LOGPAIR( (_x)?(_x)->Length:0x08, (_x)?(_x)->Buffer:L"NULL" )
#endif
#endif

#if !defined(WPP_LOGPCSTR)
#if !defined(WPP_CHECK_FOR_NULL_STRING)
# define WPP_LOGPCSTR(_x) WPP_LOGCSTR(*(_x))
#else
# define WPP_LOGPCSTR(_x) WPP_LOGPAIR( sizeof(USHORT), (_x)?&(_x)->Length:L"\x04" ) \
                          WPP_LOGPAIR( (_x)?(_x)->Length:0x04, (_x)?(_x)->Buffer:"NULL" )
#endif
#endif

#if !defined(WPP_LOGSTDSTR)
#define WPP_LOGSTDSTR(_value)  WPP_LOGPAIR( (_value).size()+1, (_value).c_str() )
#endif

#endif  //  #ifndef WPP_ALREADY_INCLUDED

#if !defined(WPP_CHECK_INIT)
# define WPP_CHECK_INIT (WPP_CB != (WPP_CB_TYPE*)&WPP_CB) && 
#endif


#ifndef WPP_SF_D_def
#       define WPP_SF_D_def
WPP_INLINE void WPP_SF_D(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, unsigned int _a1)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGTYPEVAL(unsigned int,_a1)  0); }
#endif  // #ifndef WPP_SF_D_def
#ifndef WPP_SF_d_def
#       define WPP_SF_d_def
WPP_INLINE void WPP_SF_d(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, signed int _a1)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGTYPEVAL(signed int,_a1)  0); }
#endif  // #ifndef WPP_SF_d_def
#ifndef WPP_SF_s_def
#       define WPP_SF_s_def
WPP_INLINE void WPP_SF_s(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, const char* _a1)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGASTR(_a1)  0); }
#endif  // #ifndef WPP_SF_s_def
#ifndef WPP_SF_sD_def
#       define WPP_SF_sD_def
WPP_INLINE void WPP_SF_sD(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, const char* _a1, unsigned int _a2)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(unsigned int,_a2)  0); }
#endif  // #ifndef WPP_SF_sD_def
#ifndef WPP_SF_sDDD_def
#       define WPP_SF_sDDD_def
WPP_INLINE void WPP_SF_sDDD(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, const char* _a1, unsigned int _a2, unsigned int _a3, unsigned int _a4)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(unsigned int,_a2) WPP_LOGTYPEVAL(unsigned int,_a3) WPP_LOGTYPEVAL(unsigned int,_a4)  0); }
#endif  // #ifndef WPP_SF_sDDD_def
#ifndef WPP_SF_sDDDD_def
#       define WPP_SF_sDDDD_def
WPP_INLINE void WPP_SF_sDDDD(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, const char* _a1, unsigned int _a2, unsigned int _a3, unsigned int _a4, unsigned int _a5)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(unsigned int,_a2) WPP_LOGTYPEVAL(unsigned int,_a3) WPP_LOGTYPEVAL(unsigned int,_a4) WPP_LOGTYPEVAL(unsigned int,_a5)  0); }
#endif  // #ifndef WPP_SF_sDDDD_def
#ifndef WPP_SF_sDlqlll_def
#       define WPP_SF_sDlqlll_def
WPP_INLINE void WPP_SF_sDlqlll(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, const char* _a1, unsigned int _a2, signed long _a3, const void* _a4, signed long _a5, signed long _a6, signed long _a7)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(unsigned int,_a2) WPP_LOGTYPEVAL(signed long,_a3) WPP_LOGTYPEVAL(const void*,_a4) WPP_LOGTYPEVAL(signed long,_a5) WPP_LOGTYPEVAL(signed long,_a6) WPP_LOGTYPEVAL(signed long,_a7)  0); }
#endif  // #ifndef WPP_SF_sDlqlll_def
#ifndef WPP_SF_sDlqllll_def
#       define WPP_SF_sDlqllll_def
WPP_INLINE void WPP_SF_sDlqllll(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, const char* _a1, unsigned int _a2, signed long _a3, const void* _a4, signed long _a5, signed long _a6, signed long _a7, signed long _a8)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(unsigned int,_a2) WPP_LOGTYPEVAL(signed long,_a3) WPP_LOGTYPEVAL(const void*,_a4) WPP_LOGTYPEVAL(signed long,_a5) WPP_LOGTYPEVAL(signed long,_a6) WPP_LOGTYPEVAL(signed long,_a7) WPP_LOGTYPEVAL(signed long,_a8)  0); }
#endif  // #ifndef WPP_SF_sDlqllll_def
#ifndef WPP_SF_sDq_def
#       define WPP_SF_sDq_def
WPP_INLINE void WPP_SF_sDq(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, const char* _a1, unsigned int _a2, const void* _a3)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(unsigned int,_a2) WPP_LOGTYPEVAL(const void*,_a3)  0); }
#endif  // #ifndef WPP_SF_sDq_def
#ifndef WPP_SF_sDqlll_def
#       define WPP_SF_sDqlll_def
WPP_INLINE void WPP_SF_sDqlll(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, const char* _a1, unsigned int _a2, const void* _a3, signed long _a4, signed long _a5, signed long _a6)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(unsigned int,_a2) WPP_LOGTYPEVAL(const void*,_a3) WPP_LOGTYPEVAL(signed long,_a4) WPP_LOGTYPEVAL(signed long,_a5) WPP_LOGTYPEVAL(signed long,_a6)  0); }
#endif  // #ifndef WPP_SF_sDqlll_def
#ifndef WPP_SF_sd_def
#       define WPP_SF_sd_def
WPP_INLINE void WPP_SF_sd(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, const char* _a1, signed int _a2)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(signed int,_a2)  0); }
#endif  // #ifndef WPP_SF_sd_def
#ifndef WPP_SF_sqDDD_def
#       define WPP_SF_sqDDD_def
WPP_INLINE void WPP_SF_sqDDD(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, const char* _a1, const void* _a2, unsigned int _a3, unsigned int _a4, unsigned int _a5)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(const void*,_a2) WPP_LOGTYPEVAL(unsigned int,_a3) WPP_LOGTYPEVAL(unsigned int,_a4) WPP_LOGTYPEVAL(unsigned int,_a5)  0); }
#endif  // #ifndef WPP_SF_sqDDD_def
#ifndef WPP_SF_sqddd_def
#       define WPP_SF_sqddd_def
WPP_INLINE void WPP_SF_sqddd(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, const char* _a1, const void* _a2, signed int _a3, signed int _a4, signed int _a5)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(const void*,_a2) WPP_LOGTYPEVAL(signed int,_a3) WPP_LOGTYPEVAL(signed int,_a4) WPP_LOGTYPEVAL(signed int,_a5)  0); }
#endif  // #ifndef WPP_SF_sqddd_def
#ifndef WPP_POST
#  define WPP_POST()
#endif

#ifndef WPP_PRE
#  define WPP_PRE()
#endif

#ifndef WPP_LOG_ALWAYS
#  define WPP_LOG_ALWAYS(...)
#endif      

#ifdef WPP_DEBUG
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_QCUTILS_c1103(MSG,a10) \
     WPP_LOG_ALWAYS(WPP_EX(),MSG,a10)\
     WPP_PRE() \
     WPP_ANNOTATE(QCUTILS_c1103) \
     ( ( \
         WPP_CHECK_INIT WPP_ENABLED() ? \
          WPP_DEBUG((MSG,a10)), \
          WPP_SF_d(WPP_LOGGER() 23, \
                             WPP_LOCAL_TraceGuids+0, a10), 1:0  \
     ) ) \
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_QCUTILS_c1106(MSG,a10) \
     WPP_LOG_ALWAYS(WPP_EX(),MSG,a10)\
     WPP_PRE() \
     WPP_ANNOTATE(QCUTILS_c1106) \
     ( ( \
         WPP_CHECK_INIT WPP_ENABLED() ? \
          WPP_DEBUG((MSG,a10)), \
          WPP_SF_d(WPP_LOGGER() 24, \
                             WPP_LOCAL_TraceGuids+0, a10), 1:0  \
     ) ) \
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_QCUTILS_c1109(MSG,a10,a11) \
     WPP_LOG_ALWAYS(WPP_EX(),MSG,a10,a11)\
     WPP_PRE() \
     WPP_ANNOTATE(QCUTILS_c1109) \
     ( ( \
         WPP_CHECK_INIT WPP_ENABLED() ? \
          WPP_DEBUG((MSG,a10,a11)), \
          WPP_SF_sD(WPP_LOGGER() 25, \
                             WPP_LOCAL_TraceGuids+0, a10, a11), 1:0  \
     ) ) \
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_QCUTILS_c1122(MSG,a10) \
     WPP_LOG_ALWAYS(WPP_EX(),MSG,a10)\
     WPP_PRE() \
     WPP_ANNOTATE(QCUTILS_c1122) \
     ( ( \
         WPP_CHECK_INIT WPP_ENABLED() ? \
          WPP_DEBUG((MSG,a10)), \
          WPP_SF_s(WPP_LOGGER() 26, \
                             WPP_LOCAL_TraceGuids+0, a10), 1:0  \
     ) ) \
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_QCUTILS_c1126(MSG,a10,a11) \
     WPP_LOG_ALWAYS(WPP_EX(),MSG,a10,a11)\
     WPP_PRE() \
     WPP_ANNOTATE(QCUTILS_c1126) \
     ( ( \
         WPP_CHECK_INIT WPP_ENABLED() ? \
          WPP_DEBUG((MSG,a10,a11)), \
          WPP_SF_sD(WPP_LOGGER() 27, \
                             WPP_LOCAL_TraceGuids+0, a10, a11), 1:0  \
     ) ) \
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_QCUTILS_c1139(MSG,a10) \
     WPP_LOG_ALWAYS(WPP_EX(),MSG,a10)\
     WPP_PRE() \
     WPP_ANNOTATE(QCUTILS_c1139) \
     ( ( \
         WPP_CHECK_INIT WPP_ENABLED() ? \
          WPP_DEBUG((MSG,a10)), \
          WPP_SF_s(WPP_LOGGER() 28, \
                             WPP_LOCAL_TraceGuids+0, a10), 1:0  \
     ) ) \
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_QCUTILS_c194(MSG,a10) \
     WPP_LOG_ALWAYS(WPP_EX(),MSG,a10)\
     WPP_PRE() \
     WPP_ANNOTATE(QCUTILS_c194) \
     ( ( \
         WPP_CHECK_INIT WPP_ENABLED() ? \
          WPP_DEBUG((MSG,a10)), \
          WPP_SF_D(WPP_LOGGER() 13, \
                             WPP_LOCAL_TraceGuids+0, a10), 1:0  \
     ) ) \
     WPP_POST()
#else
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_QCUTILS_c1103(MSG,a10) \
     WPP_LOG_ALWAYS(WPP_EX(),MSG,a10) \
     WPP_PRE() \
     WPP_ANNOTATE(QCUTILS_c1103) \
     ( ( \
         WPP_CHECK_INIT WPP_ENABLED() ? \
            WPP_SF_d(WPP_LOGGER() 23, \
                               WPP_LOCAL_TraceGuids+0, a10), 1:0  \
     ) ) \
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_QCUTILS_c1106(MSG,a10) \
     WPP_LOG_ALWAYS(WPP_EX(),MSG,a10) \
     WPP_PRE() \
     WPP_ANNOTATE(QCUTILS_c1106) \
     ( ( \
         WPP_CHECK_INIT WPP_ENABLED() ? \
            WPP_SF_d(WPP_LOGGER() 24, \
                               WPP_LOCAL_TraceGuids+0, a10), 1:0  \
     ) ) \
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_QCUTILS_c1109(MSG,a10,a11) \
     WPP_LOG_ALWAYS(WPP_EX(),MSG,a10,a11) \
     WPP_PRE() \
     WPP_ANNOTATE(QCUTILS_c1109) \
     ( ( \
         WPP_CHECK_INIT WPP_ENABLED() ? \
            WPP_SF_sD(WPP_LOGGER() 25, \
                               WPP_LOCAL_TraceGuids+0, a10, a11), 1:0  \
     ) ) \
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_QCUTILS_c1122(MSG,a10) \
     WPP_LOG_ALWAYS(WPP_EX(),MSG,a10) \
     WPP_PRE() \
     WPP_ANNOTATE(QCUTILS_c1122) \
     ( ( \
         WPP_CHECK_INIT WPP_ENABLED() ? \
            WPP_SF_s(WPP_LOGGER() 26, \
                               WPP_LOCAL_TraceGuids+0, a10), 1:0  \
     ) ) \
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_QCUTILS_c1126(MSG,a10,a11) \
     WPP_LOG_ALWAYS(WPP_EX(),MSG,a10,a11) \
     WPP_PRE() \
     WPP_ANNOTATE(QCUTILS_c1126) \
     ( ( \
         WPP_CHECK_INIT WPP_ENABLED() ? \
            WPP_SF_sD(WPP_LOGGER() 27, \
                               WPP_LOCAL_TraceGuids+0, a10, a11), 1:0  \
     ) ) \
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_QCUTILS_c1139(MSG,a10) \
     WPP_LOG_ALWAYS(WPP_EX(),MSG,a10) \
     WPP_PRE() \
     WPP_ANNOTATE(QCUTILS_c1139) \
     ( ( \
         WPP_CHECK_INIT WPP_ENABLED() ? \
            WPP_SF_s(WPP_LOGGER() 28, \
                               WPP_LOCAL_TraceGuids+0, a10), 1:0  \
     ) ) \
     WPP_POST()
#ifndef WPP_POST
#  define WPP_POST()
#endif
#ifndef WPP_PRE
#  define WPP_PRE()
#endif
#define WPP_CALL_QCUTILS_c194(MSG,a10) \
     WPP_LOG_ALWAYS(WPP_EX(),MSG,a10) \
     WPP_PRE() \
     WPP_ANNOTATE(QCUTILS_c194) \
     ( ( \
         WPP_CHECK_INIT WPP_ENABLED() ? \
            WPP_SF_D(WPP_LOGGER() 13, \
                               WPP_LOCAL_TraceGuids+0, a10), 1:0  \
     ) ) \
     WPP_POST()
#endif


#ifdef WPP_DEBUG
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCUTILS_c1057(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCUTILS_c1057) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 22,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCUTILS_c1250(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCUTILS_c1250) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sDqlll(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 29,WPP_LOCAL_TraceGuids+0 WPP_R012345 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCUTILS_c1264(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCUTILS_c1264) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sd(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 30,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCUTILS_c1276(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCUTILS_c1276) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sDlqllll(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 31,WPP_LOCAL_TraceGuids+0 WPP_R01234567 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCUTILS_c1289(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCUTILS_c1289) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sDlqlll(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 32,WPP_LOCAL_TraceGuids+0 WPP_R0123456 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCUTILS_c1299(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCUTILS_c1299) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sDq(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 33,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCUTILS_c1325(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCUTILS_c1325) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sqddd(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 34,WPP_LOCAL_TraceGuids+0 WPP_R01234 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCUTILS_c1491(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCUTILS_c1491) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 35,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCUTILS_c1580(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCUTILS_c1580) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 36,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCUTILS_c172(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCUTILS_c172) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 11,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_X_XFLAG_XLEVEL_POST
#  define WPP_X_XFLAG_XLEVEL_POST(X,XFLAG,XLEVEL)
#endif
#ifndef WPP_X_XFLAG_XLEVEL_PRE
#  define WPP_X_XFLAG_XLEVEL_PRE(X,XFLAG,XLEVEL)
#endif
#define WPP_CALL_QCUTILS_c1735(X, XFLAG, XLEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_X_XFLAG_XLEVEL(X, XFLAG, XLEVEL),MSGARGS)\
            WPP_X_XFLAG_XLEVEL_PRE(X, XFLAG, XLEVEL) \
            WPP_ANNOTATE(QCUTILS_c1735) \
            (( \
                WPP_CHECK_INIT  WPP_X_XFLAG_XLEVEL_ENABLED(X, XFLAG, XLEVEL)? \
                WPP_SF_s(WPP_X_XFLAG_XLEVEL_LOGGER(X, XFLAG, XLEVEL) 37,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_X_XFLAG_XLEVEL_POST(X, XFLAG, XLEVEL)
#ifndef WPP_X_XFLAG_XLEVEL_POST
#  define WPP_X_XFLAG_XLEVEL_POST(X,XFLAG,XLEVEL)
#endif
#ifndef WPP_X_XFLAG_XLEVEL_PRE
#  define WPP_X_XFLAG_XLEVEL_PRE(X,XFLAG,XLEVEL)
#endif
#define WPP_CALL_QCUTILS_c1769(X, XFLAG, XLEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_X_XFLAG_XLEVEL(X, XFLAG, XLEVEL),MSGARGS)\
            WPP_X_XFLAG_XLEVEL_PRE(X, XFLAG, XLEVEL) \
            WPP_ANNOTATE(QCUTILS_c1769) \
            (( \
                WPP_CHECK_INIT  WPP_X_XFLAG_XLEVEL_ENABLED(X, XFLAG, XLEVEL)? \
                WPP_SF_s(WPP_X_XFLAG_XLEVEL_LOGGER(X, XFLAG, XLEVEL) 38,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_X_XFLAG_XLEVEL_POST(X, XFLAG, XLEVEL)
#ifndef WPP_X_XFLAG_XLEVEL_POST
#  define WPP_X_XFLAG_XLEVEL_POST(X,XFLAG,XLEVEL)
#endif
#ifndef WPP_X_XFLAG_XLEVEL_PRE
#  define WPP_X_XFLAG_XLEVEL_PRE(X,XFLAG,XLEVEL)
#endif
#define WPP_CALL_QCUTILS_c1780(X, XFLAG, XLEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_X_XFLAG_XLEVEL(X, XFLAG, XLEVEL),MSGARGS)\
            WPP_X_XFLAG_XLEVEL_PRE(X, XFLAG, XLEVEL) \
            WPP_ANNOTATE(QCUTILS_c1780) \
            (( \
                WPP_CHECK_INIT  WPP_X_XFLAG_XLEVEL_ENABLED(X, XFLAG, XLEVEL)? \
                WPP_SF_s(WPP_X_XFLAG_XLEVEL_LOGGER(X, XFLAG, XLEVEL) 39,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_X_XFLAG_XLEVEL_POST(X, XFLAG, XLEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCUTILS_c189(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCUTILS_c189) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sqDDD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 12,WPP_LOCAL_TraceGuids+0 WPP_R01234 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCUTILS_c216(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCUTILS_c216) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sDDDD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 14,WPP_LOCAL_TraceGuids+0 WPP_R01234 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCUTILS_c79(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCUTILS_c79) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sDDD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 10,WPP_LOCAL_TraceGuids+0 WPP_R0123 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCUTILS_c833(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCUTILS_c833) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 15,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCUTILS_c850(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCUTILS_c850) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 16,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCUTILS_c868(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCUTILS_c868) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 17,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCUTILS_c887(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCUTILS_c887) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 18,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCUTILS_c905(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCUTILS_c905) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 19,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCUTILS_c924(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCUTILS_c924) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 20,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCUTILS_c995(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCUTILS_c995) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 21,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#else
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCUTILS_c1057(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCUTILS_c1057) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 22,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCUTILS_c1250(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCUTILS_c1250) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sDqlll(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 29,WPP_LOCAL_TraceGuids+0 WPP_R012345 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCUTILS_c1264(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCUTILS_c1264) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sd(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 30,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCUTILS_c1276(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCUTILS_c1276) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sDlqllll(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 31,WPP_LOCAL_TraceGuids+0 WPP_R01234567 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCUTILS_c1289(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCUTILS_c1289) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sDlqlll(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 32,WPP_LOCAL_TraceGuids+0 WPP_R0123456 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCUTILS_c1299(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCUTILS_c1299) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sDq(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 33,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCUTILS_c1325(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCUTILS_c1325) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sqddd(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 34,WPP_LOCAL_TraceGuids+0 WPP_R01234 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCUTILS_c1491(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCUTILS_c1491) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 35,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCUTILS_c1580(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCUTILS_c1580) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 36,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCUTILS_c172(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCUTILS_c172) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 11,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_X_XFLAG_XLEVEL_POST
#  define WPP_X_XFLAG_XLEVEL_POST(X,XFLAG,XLEVEL)
#endif
#ifndef WPP_X_XFLAG_XLEVEL_PRE
#  define WPP_X_XFLAG_XLEVEL_PRE(X,XFLAG,XLEVEL)
#endif
#define WPP_CALL_QCUTILS_c1735(X, XFLAG, XLEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_X_XFLAG_XLEVEL(X, XFLAG, XLEVEL), MSGARGS)\
            WPP_X_XFLAG_XLEVEL_PRE(X, XFLAG, XLEVEL) \
            WPP_ANNOTATE(QCUTILS_c1735) \
            ( \
                WPP_CHECK_INIT  WPP_X_XFLAG_XLEVEL_ENABLED(X, XFLAG, XLEVEL)?\
                WPP_SF_s(WPP_X_XFLAG_XLEVEL_LOGGER(X, XFLAG, XLEVEL) 37,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS),\
                1:0 \
             ) \
             WPP_X_XFLAG_XLEVEL_POST(X, XFLAG, XLEVEL)
#ifndef WPP_X_XFLAG_XLEVEL_POST
#  define WPP_X_XFLAG_XLEVEL_POST(X,XFLAG,XLEVEL)
#endif
#ifndef WPP_X_XFLAG_XLEVEL_PRE
#  define WPP_X_XFLAG_XLEVEL_PRE(X,XFLAG,XLEVEL)
#endif
#define WPP_CALL_QCUTILS_c1769(X, XFLAG, XLEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_X_XFLAG_XLEVEL(X, XFLAG, XLEVEL), MSGARGS)\
            WPP_X_XFLAG_XLEVEL_PRE(X, XFLAG, XLEVEL) \
            WPP_ANNOTATE(QCUTILS_c1769) \
            ( \
                WPP_CHECK_INIT  WPP_X_XFLAG_XLEVEL_ENABLED(X, XFLAG, XLEVEL)?\
                WPP_SF_s(WPP_X_XFLAG_XLEVEL_LOGGER(X, XFLAG, XLEVEL) 38,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS),\
                1:0 \
             ) \
             WPP_X_XFLAG_XLEVEL_POST(X, XFLAG, XLEVEL)
#ifndef WPP_X_XFLAG_XLEVEL_POST
#  define WPP_X_XFLAG_XLEVEL_POST(X,XFLAG,XLEVEL)
#endif
#ifndef WPP_X_XFLAG_XLEVEL_PRE
#  define WPP_X_XFLAG_XLEVEL_PRE(X,XFLAG,XLEVEL)
#endif
#define WPP_CALL_QCUTILS_c1780(X, XFLAG, XLEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_X_XFLAG_XLEVEL(X, XFLAG, XLEVEL), MSGARGS)\
            WPP_X_XFLAG_XLEVEL_PRE(X, XFLAG, XLEVEL) \
            WPP_ANNOTATE(QCUTILS_c1780) \
            ( \
                WPP_CHECK_INIT  WPP_X_XFLAG_XLEVEL_ENABLED(X, XFLAG, XLEVEL)?\
                WPP_SF_s(WPP_X_XFLAG_XLEVEL_LOGGER(X, XFLAG, XLEVEL) 39,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS),\
                1:0 \
             ) \
             WPP_X_XFLAG_XLEVEL_POST(X, XFLAG, XLEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCUTILS_c189(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCUTILS_c189) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sqDDD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 12,WPP_LOCAL_TraceGuids+0 WPP_R01234 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCUTILS_c216(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCUTILS_c216) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sDDDD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 14,WPP_LOCAL_TraceGuids+0 WPP_R01234 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCUTILS_c79(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCUTILS_c79) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sDDD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 10,WPP_LOCAL_TraceGuids+0 WPP_R0123 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCUTILS_c833(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCUTILS_c833) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 15,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCUTILS_c850(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCUTILS_c850) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 16,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCUTILS_c868(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCUTILS_c868) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 17,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCUTILS_c887(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCUTILS_c887) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 18,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCUTILS_c905(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCUTILS_c905) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 19,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCUTILS_c924(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCUTILS_c924) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 20,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCUTILS_c995(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCUTILS_c995) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 21,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#endif



#if defined(__cplusplus)
};
#endif

#endif

//
// Tracing Macro name redefinition
//

// NoMsgArgs

#undef DbgPrint
#define DbgPrint WPP_(CALL)
#undef DoDebugTrace
#define DoDebugTrace WPP_(CALL)
#undef DoTraceMessage
#define DoTraceMessage WPP_(CALL)
#undef KdPrint
#define KdPrint(ARGS) WPP_(CALL) ARGS
// MsgArgs

#undef QCSER_DbgPrint
#define QCSER_DbgPrint(FLAG, LEVEL,  MSGARGS) WPP_(CALL)(FLAG, LEVEL,  MSGARGS)
#undef QCSER_DbgPrintG
#define QCSER_DbgPrintG(GFLAG, GLEVEL,  MSGARGS) WPP_(CALL)(GFLAG, GLEVEL,  MSGARGS)
#undef QCSER_DbgPrintX
#define QCSER_DbgPrintX(X, XFLAG, XLEVEL,  MSGARGS) WPP_(CALL)(X, XFLAG, XLEVEL,  MSGARGS)
#undef  WPP_R
#define WPP_R(MSG) 
#undef  WPP_R0
#define WPP_R0(MSG, a0) , a0
#undef  WPP_R01
#define WPP_R01(MSG, a0, a1) , a0, a1
#undef  WPP_R012
#define WPP_R012(MSG, a0, a1, a2) , a0, a1, a2
#undef  WPP_R0123
#define WPP_R0123(MSG, a0, a1, a2, a3) , a0, a1, a2, a3
#undef  WPP_R01234
#define WPP_R01234(MSG, a0, a1, a2, a3, a4) , a0, a1, a2, a3, a4
#undef  WPP_R012345
#define WPP_R012345(MSG, a0, a1, a2, a3, a4, a5) , a0, a1, a2, a3, a4, a5
#undef  WPP_R0123456
#define WPP_R0123456(MSG, a0, a1, a2, a3, a4, a5, a6) , a0, a1, a2, a3, a4, a5, a6
#undef  WPP_R01234567
#define WPP_R01234567(MSG, a0, a1, a2, a3, a4, a5, a6, a7) , a0, a1, a2, a3, a4, a5, a6, a7
#undef  WPP_R012345678
#define WPP_R012345678(MSG, a0, a1, a2, a3, a4, a5, a6, a7, a8) , a0, a1, a2, a3, a4, a5, a6, a7, a8
#undef  WPP_R0123456789
#define WPP_R0123456789(MSG, a0, a1, a2, a3, a4, a5, a6, a7, a8, a9) , a0, a1, a2, a3, a4, a5, a6, a7, a8, a9
#undef  WPP_R0123456789a
#define WPP_R0123456789a(MSG, a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10) , a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10
#undef  WPP_R0123456789ab
#define WPP_R0123456789ab(MSG, a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11) , a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11
#undef  WPP_R0123456789abc
#define WPP_R0123456789abc(MSG, a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12) , a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12
#undef  WPP_R0123456789abcd
#define WPP_R0123456789abcd(MSG, a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13) , a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13
#undef  WPP_R0a0b0c0d0e0f000102030405060708090a0b
#define WPP_R0a0b0c0d0e0f000102030405060708090a0b(MSG, a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17) , a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17
