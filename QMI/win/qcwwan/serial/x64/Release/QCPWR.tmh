// 773f743695bf2169c72646dd484aa783 Generated file. Do not edit.
// File created by WPP compiler version 10.0.15063-Wed Feb 18 19:04:42 2037
// from template km-default.tpl

//
// Define anything which is needed but missing from 
// older versions of the DDK.
//
#include <evntrace.h>
#include <stddef.h>
#include <stdarg.h>
#include <wmistr.h>

#if !defined(TRACE_LEVEL_NONE)
  #define TRACE_LEVEL_NONE        0  
  #define TRACE_LEVEL_CRITICAL    1  
  #define TRACE_LEVEL_FATAL       1  
  #define TRACE_LEVEL_ERROR       2  
  #define TRACE_LEVEL_WARNING     3  
  #define TRACE_LEVEL_INFORMATION 4  
  #define TRACE_LEVEL_VERBOSE     5  
  #define TRACE_LEVEL_RESERVED6   6
  #define TRACE_LEVEL_RESERVED7   7
  #define TRACE_LEVEL_RESERVED8   8
  #define TRACE_LEVEL_RESERVED9   9
#endif
    
#if !defined(TRACE_INFORMATION_CLASS_DEFINE)
typedef enum _TRACE_INFORMATION_CLASS {
    TraceIdClass,
    TraceHandleClass,
    TraceEnableFlagsClass,
    TraceEnableLevelClass,
    GlobalLoggerHandleClass,
    EventLoggerHandleClass,
    AllLoggerHandlesClass,
    TraceHandleByNameClass
} TRACE_INFORMATION_CLASS;
  
#define TRACE_MESSAGE_SEQUENCE               1
#define TRACE_MESSAGE_GUID                   2         
#define TRACE_MESSAGE_COMPONENTID            4           
#define TRACE_MESSAGE_TIMESTAMP              8         
#define TRACE_MESSAGE_PERFORMANCE_TIMESTAMP 16  
#define TRACE_MESSAGE_SYSTEMINFO            32          

#endif // !defined(TRACE_INFORMATION_CLASS_DEFINE)


//
// Advanced tracing APIs (XP and later) will be indirectly called.
//
typedef
LONG
(*PFN_WPPQUERYTRACEINFORMATION) (
    IN  TRACE_INFORMATION_CLASS TraceInformationClass,
    OUT PVOID  TraceInformation,
    IN  ULONG  TraceInformationLength,
    OUT PULONG RequiredLength OPTIONAL,
    IN  PVOID  Buffer OPTIONAL
    );

typedef
LONG
(*PFN_WPPTRACEMESSAGE)(
    IN ULONG64  LoggerHandle,
    IN ULONG   MessageFlags,
    IN LPCGUID MessageGuid,
    IN USHORT  MessageNumber,
    IN ...
    );

// template km-header.tpl

#ifdef  WPP_THIS_FILE
// included twice
#       define  WPP_ALREADY_INCLUDED
#       undef   WPP_THIS_FILE
#endif  // #ifdef WPP_THIS_FILE

#define WPP_THIS_FILE QCPWR_c

#ifndef WPP_ALREADY_INCLUDED

#define WPP_KERNEL_MODE 
#define WPP_THIS_FILE QCPWR_c

#if defined(__cplusplus)
extern "C" {
#endif


typedef enum _WPP_TRACE_API_SUITE {
    WppTraceDisabledSuite,
    WppTraceWin2K,
    WppTraceWinXP,
    WppTraceTraceLH,
    WppTraceServer08,
    WppTraceMaxSuite
} WPP_TRACE_API_SUITE;

_IRQL_requires_same_
typedef
VOID
(NTAPI *PETW_CLASSIC_CALLBACK)(
    _In_ LPCGUID Guid,
    _In_ UCHAR ControlCode,
    _In_ PVOID EnableContext, 
    _In_opt_ PVOID CallbackContext
    );

_IRQL_requires_same_
typedef
NTSTATUS
NTKERNELAPI
(FN_ETWREGISTERCLASSICPROVIDER)(
    _In_ LPCGUID ProviderGuid,
    _In_ ULONG Type,
    _In_ PETW_CLASSIC_CALLBACK EnableCallback,
    _In_opt_ PVOID CallbackContext,
    _Out_ PREGHANDLE RegHandle
    );

typedef FN_ETWREGISTERCLASSICPROVIDER *PFN_ETWREGISTERCLASSICPROVIDER;

typedef
BOOLEAN
NTKERNELAPI
(FN_WPPGETVERSION)(
    _Out_opt_ PULONG MajorVersion,
    _Out_opt_ PULONG MinorVersion,
    _Out_opt_ PULONG BuildNumber,
    _Out_opt_ PUNICODE_STRING CSDVersion
    );

typedef FN_WPPGETVERSION *PFN_WPPGETVERSION;

typedef
NTSTATUS
NTKERNELAPI
(FN_ETWUNREGISTER)(
    _In_ REGHANDLE RegHandle
    );

typedef FN_ETWUNREGISTER *PFN_ETWUNREGISTER;

#pragma prefast(suppress:__WARNING_ENCODE_GLOBAL_FUNCTION_POINTER, "this pointer can not be encoded");
__declspec(selectany) PFN_WPPQUERYTRACEINFORMATION   pfnWppQueryTraceInformation = NULL;

#pragma prefast(suppress:__WARNING_ENCODE_GLOBAL_FUNCTION_POINTER, "this pointer can not be encoded");
__declspec(selectany) PFN_WPPTRACEMESSAGE            pfnWppTraceMessage = NULL;

#pragma prefast(suppress:__WARNING_ENCODE_GLOBAL_FUNCTION_POINTER, "this pointer can not be encoded");
__declspec(selectany) PFN_ETWUNREGISTER              pfnEtwUnregister = NULL;

#pragma prefast(suppress:__WARNING_ENCODE_GLOBAL_FUNCTION_POINTER, "this pointer can not be encoded");
__declspec(selectany) PFN_ETWREGISTERCLASSICPROVIDER pfnEtwRegisterClassicProvider = NULL;

#pragma prefast(suppress:__WARNING_ENCODE_GLOBAL_FUNCTION_POINTER, "this pointer can not be encoded");
__declspec(selectany) PFN_WPPGETVERSION              pfnWppGetVersion = NULL;


__declspec(selectany) WPP_TRACE_API_SUITE            WPPTraceSuite = WppTraceDisabledSuite;


#if !defined(_NTRTL_)
#if !defined(_NTHAL_) 
      // fake RTL_TIME_ZONE_INFORMATION //
    typedef int RTL_TIME_ZONE_INFORMATION;
#endif
#   define _WMIKM_  
#endif
#ifndef WPP_TRACE
#define WPP_TRACE pfnWppTraceMessage
#endif

#if ENABLE_WPP_RECORDER

#define _ENABLE_WPP_RECORDER TRUE

#ifndef WPP_RECORDER
#define WPP_RECORDER WppAutoLogTrace
#endif

#if !defined(WPP_RECORDER_LEVEL_FLAGS_ARGS)
#define WPP_RECORDER_LEVEL_FLAGS_ARGS(lvl, flags) WPP_CONTROL(WPP_BIT_ ## flags).AutoLogContext, lvl, WPP_BIT_ ## flags
#define WPP_RECORDER_LEVEL_FLAGS_FILTER(lvl,flags) (lvl < TRACE_LEVEL_VERBOSE || WPP_CONTROL(WPP_BIT_ ## flags).AutoLogVerboseEnabled)
#endif


#if !defined(WPP_RECORDER_LEVEL_ARGS)
#define WPP_RECORDER_LEVEL_ARGS(lvl) WPP_CONTROL(WPP_BIT_ ## lvl).AutoLogContext, 0, WPP_BIT_ ## lvl
#define WPP_RECORDER_LEVEL_FILTER(lvl) (WPP_CONTROL(WPP_BIT_ ## lvl).AutoLogVerboseEnabled)
#endif

NTSTATUS
WppAutoLogTrace(
    IN PVOID              AutoLogContext,
    IN UCHAR              MessageLevel,
    IN ULONG              MessageFlags,
    IN LPGUID             MessageGuid,
    IN USHORT             MessageNumber,
    IN ...
    );

#else
#define _ENABLE_WPP_RECORDER FALSE
#endif

VOID
WppLoadTracingSupport(
    VOID
    );

NTSTATUS
WppTraceCallback(
    _In_ UCHAR MinorFunction,
    _In_opt_ PVOID DataPath,
    _In_ ULONG BufferLength,
    _Inout_updates_bytes_(BufferLength) PVOID Buffer,
    _Inout_ PVOID Context,
    _Out_ PULONG Size
    );
#if !defined(WPP_TRACE_CONTROL_NULL_GUID)
DEFINE_GUID(WPP_TRACE_CONTROL_NULL_GUID, 0x00000000L, 0x0000, 0x0000, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00);
#endif
#define WPP_TRACE_CONTROL(Function,Buffer,BufferSize,ReturnSize) WppTraceCallback(Function,NULL,BufferSize,Buffer,&WPP_CB[0],&ReturnSize);
    

__inline ULONG64 WppQueryLogger(_In_opt_ PCWSTR LoggerName)
{

    if (WppTraceWinXP == WPPTraceSuite) {

        ULONG ReturnLength ;
        LONG Status ;
        ULONG64 TraceHandle ;
        UNICODE_STRING  Buffer  ;
           
        RtlInitUnicodeString(&Buffer, LoggerName ? LoggerName : L"stdout");

        Status = pfnWppQueryTraceInformation(
                                            TraceHandleByNameClass,
                                            (PVOID)&TraceHandle,
                                            sizeof(TraceHandle),
                                            &ReturnLength,
                                            (PVOID)&Buffer
                                            );
        if (Status != STATUS_SUCCESS) {
           return (ULONG64)0 ;
        }
        
        return TraceHandle ;
    } else {
        return (ULONG64) 0 ;
    }
}

typedef LONG (*WMIENTRY_NEW)(
    _In_ UCHAR MinorFunction,
    _In_opt_ PVOID DataPath,
    _In_ ULONG BufferLength,
    _Inout_updates_bytes_(BufferLength) PVOID Buffer,
    _In_ PVOID Context,
    _Out_ PULONG Size
    );

typedef struct _WPP_TRACE_CONTROL_BLOCK
{
    WMIENTRY_NEW                        Callback;
    LPCGUID                             ControlGuid;
    struct _WPP_TRACE_CONTROL_BLOCK    *Next;
    __int64                             Logger;
    PUNICODE_STRING                     RegistryPath;
    UCHAR                               FlagsLen; 
    UCHAR                               Level; 
    USHORT                              Reserved;
    ULONG                               Flags[1];
    ULONG                               ReservedFlags;
    REGHANDLE                           RegHandle;
#if ENABLE_WPP_RECORDER    
    PVOID                               AutoLogContext;
    USHORT                              AutoLogVerboseEnabled;
    USHORT                              AutoLogAttachToMiniDump;
#endif    
} WPP_TRACE_CONTROL_BLOCK, *PWPP_TRACE_CONTROL_BLOCK;

VOID WppCleanupKm(_When_(_ENABLE_WPP_RECORDER, _In_) _When_(!_ENABLE_WPP_RECORDER, _In_opt_) PDRIVER_OBJECT DriverObject);

#define WPP_CLEANUP(DriverObject) WppCleanupKm((PDRIVER_OBJECT)DriverObject)

#define WPP_IsValidSid RtlValidSid
#define WPP_GetLengthSid RtlLengthSid

//
// Callback routine to be defined by the driver, which will be called from WPP callback
// WPP will pass current valued of : GUID, Logger, Enable, Flags, and Level
// 
// To activate driver must define WPP_PRIVATE_ENABLE_CALLBACK in their code, sample below 
// #define WPP_PRIVATE_ENABLE_CALLBACK MyPrivateCallback;
//
typedef
VOID
(*PFN_WPP_PRIVATE_ENABLE_CALLBACK)(
    _In_ LPCGUID Guid,   
    _In_ __int64 Logger, 
    _In_ BOOLEAN Enable, 
    _In_ ULONG Flags,    
    _In_ UCHAR Level);   

#if defined(__cplusplus)
};
#endif

#endif  // #ifndef WPP_ALREADY_INCLUDED


 
// template control.tpl

//
//     Defines a set of macro that expand control model specified
//     with WPP_CONTROL_GUIDS (example shown below)
//     into an enum of trace levels and required structures that
//     contain the mask of levels, logger handle and some information
//     required for registration.
//

#ifndef WPP_ALREADY_INCLUDED

#define WPP_EVAL(x) x
#define WPP_STR(x)  #x
#define WPP_STRINGIZE(x) WPP_STR(x)
#define WPP_GLUE(a, b)  a ## b
#define WPP_GLUE3(a, b, c)  a ## b ## c
#define WPP_GLUE4(a, b, c, d)  a ## b ## c ## d
#define WPP_XGLUE(a, b) WPP_GLUE(a, b)
#define WPP_XGLUE3(a, b, c) WPP_GLUE3(a, b, c)
#define WPP_XGLUE4(a, b, c, d) WPP_GLUE4(a, b, c, d)

///////////////////////////////////////////////////////////////////////////////////
//
// #define WPP_CONTROL_GUIDS \
//     WPP_DEFINE_CONTROL_GUID(Regular,(81b20fea,73a8,4b62,95bc,354477c97a6f), \
//       WPP_DEFINE_BIT(Error)      \
//       WPP_DEFINE_BIT(Unusual)    \
//       WPP_DEFINE_BIT(Noise)      \
//    )        \
//    WPP_DEFINE_CONTROL_GUID(HiFreq,(91b20fea,73a8,4b62,95bc,354477c97a6f), \
//       WPP_DEFINE_BIT(Entry)      \
//       WPP_DEFINE_BIT(Exit)       \
//       WPP_DEFINE_BIT(ApiCalls)   \
//       WPP_DEFINE_BIT(RandomJunk) \
//       WPP_DEFINE_BIT(LovePoem)   \
//    )        

#if defined(__cplusplus)
extern "C" {
#endif

#if !defined(WPP_CONTROL_GUIDS)  && defined(WPP_ETW_PROVIDER)
#define WPP_NO_CONTROL_GUIDS
#endif

#if !defined(WPP_NO_CONTROL_GUIDS)

#if defined(WPP_DEFAULT_CONTROL_GUID)
#  if defined(WPP_CONTROL_GUIDS)
#     pragma message(__FILE__ " : error : WPP_DEFAULT_CONTROL_GUID cannot be used together with WPP_CONTROL_GUIDS")
#     stop
#  else
#     define WPP_CONTROL_GUIDS \
         WPP_DEFINE_CONTROL_GUID(Default,(WPP_DEFAULT_CONTROL_GUID), \
         WPP_DEFINE_BIT(Error)   \
         WPP_DEFINE_BIT(Unusual) \
         WPP_DEFINE_BIT(Noise)   \
      )
#  endif      
#endif

#if !defined(WPP_CONTROL_GUIDS)
#  pragma message(__FILE__ " : error : Please define control model via WPP_CONTROL_GUIDS or WPP_DEFAULT_CONTROL_GUID macros")
#  pragma message(__FILE__ " : error : don't forget to call WPP_INIT_TRACING and WPP_CLEANUP in your main, DriverEntry or DllInit")
#  pragma message(__FILE__ " : error : see tracewpp.doc for further information")
stop.
#endif
// a set of macro to convert a guid in a form x(81b20fea,73a8,4b62,95bc,354477c97a6f)
// into either a a struct or text string

#define _WPPW(x) WPP_GLUE(L, x)

#define WPP_GUID_NORM(l,w1,w2,w3,ll) l ## w1 ## w2 ## w3 ## ll
#define WPP_GUID_TEXT(l,w1,w2,w3,ll) #l "-" #w1 "-" #w2 "-" #w3 "-" #ll
#define WPP_GUID_WTEXT(l,w1,w2,w3,ll) _WPPW(#l) L"-" _WPPW(#w1) L"-" _WPPW(#w2) L"-" _WPPW(#w3) L"-" _WPPW(#ll)
#define WPP_EXTRACT_BYTE(val,n) (((ULONGLONG)(0x ## val) >> (8 * n)) & 0xFF)
#define WPP_GUID_STRUCT(l,w1,w2,w3,ll) {0x ## l, 0x ## w1, 0x ## w2,\
     {WPP_EXTRACT_BYTE(w3, 1), WPP_EXTRACT_BYTE(w3, 0),\
      WPP_EXTRACT_BYTE(ll, 5), WPP_EXTRACT_BYTE(ll, 4),\
      WPP_EXTRACT_BYTE(ll, 3), WPP_EXTRACT_BYTE(ll, 2),\
      WPP_EXTRACT_BYTE(ll, 1), WPP_EXTRACT_BYTE(ll, 0)} }

#ifndef WPP_FORCEINLINE
#if !defined(WPP_OLDCC)
#define WPP_FORCEINLINE __forceinline
#else
#define WPP_FORCEINLINE __inline
#endif
#endif


// define an enum of control block names
//////
#define WPP_DEFINE_CONTROL_GUID(Name,Guid,Bits) WPP_XGLUE(WPP_CTL_, WPP_EVAL(Name)),
enum WPP_CTL_NAMES { WPP_CONTROL_GUIDS WPP_LAST_CTL};
#undef WPP_DEFINE_CONTROL_GUID

// define control guids
//////
#define WPP_DEFINE_CONTROL_GUID(Name,Guid,Bits) \
extern __declspec(selectany) const GUID WPP_XGLUE4(WPP_, ThisDir, _CTLGUID_, WPP_EVAL(Name)) = WPP_GUID_STRUCT Guid;
WPP_CONTROL_GUIDS
#undef WPP_DEFINE_CONTROL_GUID

// define enums of individual bits
/////
#define WPP_DEFINE_CONTROL_GUID(Name,Guid,Bits) \
    WPP_XGLUE(WPP_BLOCK_START_, WPP_EVAL(Name)) = WPP_XGLUE(WPP_CTL_, WPP_EVAL(Name)) * 0x10000, Bits WPP_XGLUE(WPP_BLOCK_END_, WPP_EVAL(Name)), 
# define WPP_DEFINE_BIT(Name) WPP_BIT_ ## Name,
enum WPP_DEFINE_BIT_NAMES { WPP_CONTROL_GUIDS };
# undef WPP_DEFINE_BIT
#undef WPP_DEFINE_CONTROL_GUID

#define WPP_MASK(CTL)    (1 << ( ((CTL)-1) & 31 ))
#define WPP_FLAG_NO(CTL) ( (0xFFFF & ((CTL)-1) ) / 32)
#define WPP_CTRL_NO(CTL) ((CTL) >> 16)

// calculate how many DWORDs we need to get the required number of bits
// upper estimate. Sometimes will be off by one
#define WPP_DEFINE_CONTROL_GUID(Name,Guid,Bits) | WPP_XGLUE(WPP_BLOCK_END_, WPP_EVAL(Name))
enum _WPP_FLAG_LEN_ENUM { WPP_FLAG_LEN = 1 | ((0 WPP_CONTROL_GUIDS) & 0xFFFF) / 32 };
#undef WPP_DEFINE_CONTROL_GUID

//
// Check that maximum number of flags does not exceed 32
//
#ifndef C_ASSERT
#define C_ASSERT(e) typedef char __C_ASSERT__[(e)?1:-1]
#endif

#define MAX_NUMBER_OF_ETW_FLAGS 34 // 32 flags plus 2 separators
#define WPP_DEFINE_CONTROL_GUID(Name,Guid,Bits) && ((WPP_XGLUE(WPP_BLOCK_END_, WPP_EVAL(Name) & 0xFFFF)) < MAX_NUMBER_OF_ETW_FLAGS)
enum _WPP_FLAG_LEN_ENUM_MAX { WPP_MAX_FLAG_LEN_CHECK = (1 WPP_CONTROL_GUIDS) }; 
#undef WPP_DEFINE_CONTROL_GUID

#ifndef WPP_CB
#  define WPP_CB      WPP_GLOBAL_Control
#endif
#ifndef WPP_CB_TYPE
#define WPP_CB_TYPE WPP_PROJECT_CONTROL_BLOCK
#endif

typedef union {
    WPP_TRACE_CONTROL_BLOCK Control;      
    UCHAR ReserveSpace[ sizeof(WPP_TRACE_CONTROL_BLOCK) + sizeof(ULONG) * (WPP_FLAG_LEN - 1) ];
} WPP_CB_TYPE ;

 
extern __declspec(selectany) WPP_CB_TYPE *WPP_CB = (WPP_CB_TYPE*)&WPP_CB;

#define WPP_CONTROL(CTL) (WPP_CB[WPP_CTRL_NO(CTL)].Control)

#ifndef WPP_USE_TRACE_LEVELS
// For historical reasons the use of LEVEL could imply flags, this was a bad choice but very difficult
// to undo.
#if !defined(WPP_LEVEL_LOGGER)
#  define WPP_LEVEL_LOGGER(CTL)  (WPP_CONTROL(WPP_BIT_ ## CTL).Logger), 
#endif

#if !defined(WPP_LEVEL_ENABLED)
#  define WPP_LEVEL_ENABLED(CTL) (WPP_CONTROL(WPP_BIT_ ## CTL).Flags[WPP_FLAG_NO(WPP_BIT_ ## CTL)] & WPP_MASK(WPP_BIT_ ## CTL)) 
#endif
#else  //  #ifndef WPP_USE_TRACE_LEVELS
#if !defined(WPP_LEVEL_LOGGER)
#define WPP_LEVEL_LOGGER(lvl) (WPP_CONTROL(WPP_BIT_ ## DUMMY).Logger),
#endif

#if !defined(WPP_LEVEL_ENABLED)
#define WPP_LEVEL_ENABLED(lvl) (WPP_CONTROL(WPP_BIT_ ## DUMMY).Level >= lvl)
#endif
#endif  // #ifndef WPP_USE_TRACE_LEVELS

#if !defined(WPP_FLAG_LOGGER)
#  define WPP_FLAG_LOGGER(CTL)  (WPP_CONTROL(WPP_BIT_ ## CTL).Logger), 
#endif


#if !defined(WPP_FLAG_ENABLED)
#  define WPP_FLAG_ENABLED(CTL) (WPP_CONTROL(WPP_BIT_ ## CTL).Flags[WPP_FLAG_NO(WPP_BIT_ ## CTL)] & WPP_MASK(WPP_BIT_ ## CTL)) 
#endif


#ifndef WPP_ENABLED
#  define WPP_ENABLED() 1
#endif
#ifndef WPP_LOGGER
#  define WPP_LOGGER() (WPP_CB[0].Control.Logger),
#endif

#endif // WPP_NO_CONTROL_GUIDS

#if !defined(WPP_GET_LOGGER)
#  define WPP_GET_LOGGER Logger
#endif

#if !defined(WPP_LOGGER_ARG)
#  define WPP_LOGGER_ARG TRACEHANDLE Logger,
#endif

#if defined(__cplusplus)
};
#endif

#endif  // #ifndef WPP_ALREADY_INCLUDED


#if ENABLE_WPP_RECORDER
// template tracemacro-ifr.tpl

// This template expects:
//      WPP_THIS_FILE defined (see header.tpl)
//      WPP_LOGGER_ARG  defined
//      WPP_GET_LOGGER  defined
//      WPP_ENABLED() defined

#if defined(__cplusplus)
extern "C" {
#endif

#ifndef WPP_ALREADY_INCLUDED

#ifndef NO_CHECK_FOR_NULL_STRING
#ifndef WPP_CHECK_FOR_NULL_STRING
#define WPP_CHECK_FOR_NULL_STRING 1
#endif
#endif

#define WPP_EVAL(_value_) _value_
#define WPP_(Id) WPP_EVAL(WPP_) ## WPP_EVAL(Id) ## WPP_EVAL(_) ## WPP_EVAL(WPP_THIS_FILE) ## WPP_EVAL(__LINE__)

#if !defined(WPP_INLINE)
#define WPP_INLINE DECLSPEC_NOINLINE __inline
#endif

#else   // #ifndef WPP_ALREADY_INCLUDED

#undef WPP_LOCAL_TraceGuids

#endif  // #ifndef WPP_ALREADY_INCLUDED

#if !defined(WPP_NO_ANNOTATIONS)

#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c1018
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c1032
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c1052
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c1077
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c1102
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c1136
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c115
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c1169
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c1181
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c1190
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c1211
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c1238
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c1270
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c1287
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c129
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c1307
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c1354
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c1363
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c1375
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c1387
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c1399
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c1411
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c1430
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c1446
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c1471
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c1481
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c1510
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c1527
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c1542
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c1571
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c1580
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c1592
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c1605
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c1617
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c162
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c1631
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c1658
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c1720
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c1730
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c1742
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c1757
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c1769
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c1778
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c1792
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c1809
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c1818
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c1830
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c1842
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c1866
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c1882
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c1898
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c190
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c1909
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c1931
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c1958
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c1967
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c1977
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c1996
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c2024
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c2058
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c2074
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c2099
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c2140
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c2171
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c2205
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c2214
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c222
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c2223
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c2245
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c2256
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c2278
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c2296
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c2313
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c2341
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c2369
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c2379
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c238
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c2398
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c2416
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c2431
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c2464
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c2495
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c2504
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c2525
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c2534
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c2550
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c2564
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c2586
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c2635
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c2649
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c266
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c2663
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c2676
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c2687
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c2700
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c2722
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c2753
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c2778
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c282
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c2820
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c2848
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c293
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c2959
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c2972
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c2999
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c3018
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c302
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c3039
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c3048
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c3060
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c3093
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c3110
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c3134
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c3151
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c316
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c3167
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c3183
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c3206
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c3227
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c3237
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c3253
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c3281
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c3314
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c3325
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c3341
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c3357
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c337
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c3383
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c3424
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c3440
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c3469
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c3505
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c352
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c3521
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c3538
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c3577
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c3595
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c3634
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c3670
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c3684
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c3698
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c3712
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c3746
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c3769
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c3786
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c379
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c3821
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c3841
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c3851
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c3862
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c3874
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c3889
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c3923
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c3978
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c423
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c447
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c459
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c481
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c511
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c524
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c558
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c581
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c606
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c642
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c673
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c711
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c72
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c740
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c769
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c782
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c805
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c825
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c852
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c877
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c88
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c902
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c930
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c951
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c98
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c988
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c1018_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 50 \"%0<%10!s!> DevicePowerUpIrpCompletion: 0x%11!p!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_DETAIL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c1018_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 50 \"%0<%10!s!> DevicePowerUpIrpCompletion: 0x%11!p!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_DETAIL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c1018
    #define WPP_ANNOTATE_QCPWR_c1018 WPP_ANNOTATE_QCPWR_c1018_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemPtr -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c1018 WPP_ANNOTATE_QCPWR_c1018_FINAL("TMF:", "QCPWR.c", "QCPWR_c1018", L"{", L"pDevExt->PortName, ItemString -- 10" , L"Irp, ItemPtr -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c1032_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 51 \"%0<%10!s!> DevicePowerUpIrpCompletion failure 0x%11!x!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR", __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c1032_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 51 \"%0<%10!s!> DevicePowerUpIrpCompletion failure 0x%11!x!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c1032
    #define WPP_ANNOTATE_QCPWR_c1032 WPP_ANNOTATE_QCPWR_c1032_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c1032 WPP_ANNOTATE_QCPWR_c1032_FINAL("TMF:", "QCPWR.c", "QCPWR_c1032", L"{", L"pDevExt->PortName, ItemString -- 10" , L"ntStatus, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c1052_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 52 \"%0<%10!s!> PIRP (Cdev-s0 0x%11!x!) 0x%12!p!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_DETAIL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c1052_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 52 \"%0<%10!s!> PIRP (Cdev-s0 0x%11!x!) 0x%12!p!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_DETAIL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c1052
    #define WPP_ANNOTATE_QCPWR_c1052 WPP_ANNOTATE_QCPWR_c1052_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemPtr -- 12" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c1052 WPP_ANNOTATE_QCPWR_c1052_FINAL("TMF:", "QCPWR.c", "QCPWR_c1052", L"{", L"pDevExt->PortName, ItemString -- 10" , L"Irp->IoStatus.Status, ItemLong -- 11" , L"Irp, ItemPtr -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c1077_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 53 \"%0<%10!s!> DecreaseDevicePower: IRP 0x%11!p!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_DETAIL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c1077_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 53 \"%0<%10!s!> DecreaseDevicePower: IRP 0x%11!p!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_DETAIL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c1077
    #define WPP_ANNOTATE_QCPWR_c1077 WPP_ANNOTATE_QCPWR_c1077_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemPtr -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c1077 WPP_ANNOTATE_QCPWR_c1077_FINAL("TMF:", "QCPWR.c", "QCPWR_c1077", L"{", L"pDevExt->PortName, ItemString -- 10" , L"Irp, ItemPtr -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c1102_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 54 \"%0<%10!s!> DecreaseDevicePower: not in D0, no act(0x%11!p!)\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR", __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c1102_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 54 \"%0<%10!s!> DecreaseDevicePower: not in D0, no act(0x%11!p!)\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c1102
    #define WPP_ANNOTATE_QCPWR_c1102 WPP_ANNOTATE_QCPWR_c1102_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemPtr -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c1102 WPP_ANNOTATE_QCPWR_c1102_FINAL("TMF:", "QCPWR.c", "QCPWR_c1102", L"{", L"pDevExt->PortName, ItemString -- 10" , L"Irp, ItemPtr -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c1136_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 55 \"%0<%10!s!> -->ScheduleDevicePowerUp: 0x%11!p!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_DETAIL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c1136_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 55 \"%0<%10!s!> -->ScheduleDevicePowerUp: 0x%11!p!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_DETAIL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c1136
    #define WPP_ANNOTATE_QCPWR_c1136 WPP_ANNOTATE_QCPWR_c1136_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemPtr -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c1136 WPP_ANNOTATE_QCPWR_c1136_FINAL("TMF:", "QCPWR.c", "QCPWR_c1136", L"{", L"pDevExt->PortName, ItemString -- 10" , L"Irp, ItemPtr -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c115_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 13 \"%0<%10!s!> _PowrerManagement: _QuerySystemPowerState 0x%11!X!, start next Po\" //   FLAG=QCSER_DBG_MASK_POWER LEVEL=QCSER_DBG_LEVEL_DETAIL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c115_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 13 \"%0<%10!s!> _PowrerManagement: _QuerySystemPowerState 0x%11!X!, start next Po\" //   FLAG=QCSER_DBG_MASK_POWER LEVEL=QCSER_DBG_LEVEL_DETAIL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c115
    #define WPP_ANNOTATE_QCPWR_c115 WPP_ANNOTATE_QCPWR_c115_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c115 WPP_ANNOTATE_QCPWR_c115_FINAL("TMF:", "QCPWR.c", "QCPWR_c115", L"{", L"pDevExt->PortName, ItemString -- 10" , L"nts, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c1169_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 56 \"%0<%10!s!> ScheduleDevicePowerUp: Out of mem 1\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR", __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c1169_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 56 \"%0<%10!s!> ScheduleDevicePowerUp: Out of mem 1\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c1169
    #define WPP_ANNOTATE_QCPWR_c1169 WPP_ANNOTATE_QCPWR_c1169_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c1169 WPP_ANNOTATE_QCPWR_c1169_FINAL("TMF:", "QCPWR.c", "QCPWR_c1169", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c1181_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 57 \"%0<%10!s!> ScheduleDevicePowerUp: Out of mem 2\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR", __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c1181_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 57 \"%0<%10!s!> ScheduleDevicePowerUp: Out of mem 2\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c1181
    #define WPP_ANNOTATE_QCPWR_c1181 WPP_ANNOTATE_QCPWR_c1181_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c1181 WPP_ANNOTATE_QCPWR_c1181_FINAL("TMF:", "QCPWR.c", "QCPWR_c1181", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c1190_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 58 \"%0<%10!s!> <--ScheduleDevicePowerUp: 0x%11!p! ST 0x%12!x!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_DETAIL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c1190_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 58 \"%0<%10!s!> <--ScheduleDevicePowerUp: 0x%11!p! ST 0x%12!x!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_DETAIL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c1190
    #define WPP_ANNOTATE_QCPWR_c1190 WPP_ANNOTATE_QCPWR_c1190_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemPtr -- 11" , L"Arg, ItemLong -- 12" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c1190 WPP_ANNOTATE_QCPWR_c1190_FINAL("TMF:", "QCPWR.c", "QCPWR_c1190", L"{", L"pDevExt->PortName, ItemString -- 10" , L"Irp, ItemPtr -- 11" , L"ntStatus, ItemLong -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c1211_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 59 \"%0<%10!s!> PowerUpDevice: 0x%11!p!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_DETAIL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c1211_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 59 \"%0<%10!s!> PowerUpDevice: 0x%11!p!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_DETAIL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c1211
    #define WPP_ANNOTATE_QCPWR_c1211 WPP_ANNOTATE_QCPWR_c1211_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemPtr -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c1211 WPP_ANNOTATE_QCPWR_c1211_FINAL("TMF:", "QCPWR.c", "QCPWR_c1211", L"{", L"pDevExt->PortName, ItemString -- 10" , L"irp, ItemPtr -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c1238_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 60 \"%0<%10!s!> PIRP (Cdev-s 0x%11!x!) 0x%12!p!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_DETAIL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c1238_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 60 \"%0<%10!s!> PIRP (Cdev-s 0x%11!x!) 0x%12!p!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_DETAIL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c1238
    #define WPP_ANNOTATE_QCPWR_c1238 WPP_ANNOTATE_QCPWR_c1238_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemPtr -- 12" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c1238 WPP_ANNOTATE_QCPWR_c1238_FINAL("TMF:", "QCPWR.c", "QCPWR_c1238", L"{", L"pDevExt->PortName, ItemString -- 10" , L"irp->IoStatus.Status, ItemLong -- 11" , L"irp, ItemPtr -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c1270_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 61 \"%0<%10!s!> -->CancelIdleTimer(%11!u!): BusyMask 0x%12!x! RM[0] %13!d!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_DETAIL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c1270_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 61 \"%0<%10!s!> -->CancelIdleTimer(%11!u!): BusyMask 0x%12!x! RM[0] %13!d!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_DETAIL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c1270
    #define WPP_ANNOTATE_QCPWR_c1270 WPP_ANNOTATE_QCPWR_c1270_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemLong -- 12" , L"Arg, ItemLong -- 13" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c1270 WPP_ANNOTATE_QCPWR_c1270_FINAL("TMF:", "QCPWR.c", "QCPWR_c1270", L"{", L"pDevExt->PortName, ItemString -- 10" , L"Cookie, ItemLong -- 11" , L"BusyMask, ItemLong -- 12" , L"pDevExt->Sts.lRmlCount[0], ItemLong -- 13" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c1287_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 62 \"%0<%10!s!> CancelIdleTimer(deQ) - RML %11!d!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_DETAIL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c1287_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 62 \"%0<%10!s!> CancelIdleTimer(deQ) - RML %11!d!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_DETAIL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c1287
    #define WPP_ANNOTATE_QCPWR_c1287 WPP_ANNOTATE_QCPWR_c1287_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c1287 WPP_ANNOTATE_QCPWR_c1287_FINAL("TMF:", "QCPWR.c", "QCPWR_c1287", L"{", L"pDevExt->PortName, ItemString -- 10" , L"pDevExt->Sts.lRmlCount[3], ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c129_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 14 \"%0<%10!s!> IRP_MN_QUERY_POWER: DevicePowerState D%11!d!\" //   FLAG=QCSER_DBG_MASK_POWER LEVEL=QCSER_DBG_LEVEL_DETAIL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c129_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 14 \"%0<%10!s!> IRP_MN_QUERY_POWER: DevicePowerState D%11!d!\" //   FLAG=QCSER_DBG_MASK_POWER LEVEL=QCSER_DBG_LEVEL_DETAIL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c129
    #define WPP_ANNOTATE_QCPWR_c129 WPP_ANNOTATE_QCPWR_c129_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c129 WPP_ANNOTATE_QCPWR_c129_FINAL("TMF:", "QCPWR.c", "QCPWR_c129", L"{", L"pDevExt->PortName, ItemString -- 10" , L"pwrState-1, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c1307_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 63 \"%0<%10!s!> <--CancelIdleTimer(%11!u!): BusyMask 0x%12!x! RM[0] %13!d!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_DETAIL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c1307_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 63 \"%0<%10!s!> <--CancelIdleTimer(%11!u!): BusyMask 0x%12!x! RM[0] %13!d!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_DETAIL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c1307
    #define WPP_ANNOTATE_QCPWR_c1307 WPP_ANNOTATE_QCPWR_c1307_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemLong -- 12" , L"Arg, ItemLong -- 13" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c1307 WPP_ANNOTATE_QCPWR_c1307_FINAL("TMF:", "QCPWR.c", "QCPWR_c1307", L"{", L"pDevExt->PortName, ItemString -- 10" , L"Cookie, ItemLong -- 11" , L"BusyMask, ItemLong -- 12" , L"pDevExt->Sts.lRmlCount[0], ItemLong -- 13" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c1354_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 64 \"%0<%10!s!> -->SetIdleTimer(%11!u!): BusyMask 0x%12!x! IRQL %13!u! Idle %14!u!s RM %15!d!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_DETAIL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c1354_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 64 \"%0<%10!s!> -->SetIdleTimer(%11!u!): BusyMask 0x%12!x! IRQL %13!u! Idle %14!u!s RM %15!d!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_DETAIL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c1354
    #define WPP_ANNOTATE_QCPWR_c1354 WPP_ANNOTATE_QCPWR_c1354_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemLong -- 12" , L"Arg, ItemLong -- 13" , L"Arg, ItemLong -- 14" , L"Arg, ItemLong -- 15" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c1354 WPP_ANNOTATE_QCPWR_c1354_FINAL("TMF:", "QCPWR.c", "QCPWR_c1354", L"{", L"pDevExt->PortName, ItemString -- 10" , L"Cookie, ItemLong -- 11" , L"BusyMask, ItemLong -- 12" , L"irql, ItemLong -- 13" , L"pDevExt->SelectiveSuspendIdleTime, ItemLong -- 14" , L"pDevExt->Sts.lRmlCount[3], ItemLong -- 15" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c1363_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 65 \"%0<%10!s!> <--SetIdleTimer(%11!u!): Suspended, no act\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_DETAIL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c1363_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 65 \"%0<%10!s!> <--SetIdleTimer(%11!u!): Suspended, no act\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_DETAIL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c1363
    #define WPP_ANNOTATE_QCPWR_c1363 WPP_ANNOTATE_QCPWR_c1363_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c1363 WPP_ANNOTATE_QCPWR_c1363_FINAL("TMF:", "QCPWR.c", "QCPWR_c1363", L"{", L"pDevExt->PortName, ItemString -- 10" , L"Cookie, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c1375_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 66 \"%0<%10!s!> <--SetIdleTimer(%11!u!): dev not in working state\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR", __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c1375_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 66 \"%0<%10!s!> <--SetIdleTimer(%11!u!): dev not in working state\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c1375
    #define WPP_ANNOTATE_QCPWR_c1375 WPP_ANNOTATE_QCPWR_c1375_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c1375 WPP_ANNOTATE_QCPWR_c1375_FINAL("TMF:", "QCPWR.c", "QCPWR_c1375", L"{", L"pDevExt->PortName, ItemString -- 10" , L"Cookie, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c1387_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 67 \"%0<%10!s!> <--SetIdleTimer(%11!u!): dev in query-removal\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR", __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c1387_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 67 \"%0<%10!s!> <--SetIdleTimer(%11!u!): dev in query-removal\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c1387
    #define WPP_ANNOTATE_QCPWR_c1387 WPP_ANNOTATE_QCPWR_c1387_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c1387 WPP_ANNOTATE_QCPWR_c1387_FINAL("TMF:", "QCPWR.c", "QCPWR_c1387", L"{", L"pDevExt->PortName, ItemString -- 10" , L"Cookie, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c1399_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 68 \"%0<%10!s!> <--SetIdleTimer(%11!u!): Idle req pending, no act\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_DETAIL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c1399_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 68 \"%0<%10!s!> <--SetIdleTimer(%11!u!): Idle req pending, no act\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_DETAIL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c1399
    #define WPP_ANNOTATE_QCPWR_c1399 WPP_ANNOTATE_QCPWR_c1399_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c1399 WPP_ANNOTATE_QCPWR_c1399_FINAL("TMF:", "QCPWR.c", "QCPWR_c1399", L"{", L"pDevExt->PortName, ItemString -- 10" , L"Cookie, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c1411_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 69 \"%0<%10!s!> <--SetIdleTimer(%11!u!): powering down, no act\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_DETAIL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c1411_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 69 \"%0<%10!s!> <--SetIdleTimer(%11!u!): powering down, no act\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_DETAIL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c1411
    #define WPP_ANNOTATE_QCPWR_c1411 WPP_ANNOTATE_QCPWR_c1411_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c1411 WPP_ANNOTATE_QCPWR_c1411_FINAL("TMF:", "QCPWR.c", "QCPWR_c1411", L"{", L"pDevExt->PortName, ItemString -- 10" , L"Cookie, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c1430_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 70 \"%0<%10!s!> SetIdleTimer: re-start RM %11!d!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_DETAIL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c1430_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 70 \"%0<%10!s!> SetIdleTimer: re-start RM %11!d!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_DETAIL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c1430
    #define WPP_ANNOTATE_QCPWR_c1430 WPP_ANNOTATE_QCPWR_c1430_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c1430 WPP_ANNOTATE_QCPWR_c1430_FINAL("TMF:", "QCPWR.c", "QCPWR_c1430", L"{", L"pDevExt->PortName, ItemString -- 10" , L"pDevExt->Sts.lRmlCount[3], ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c1446_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 71 \"%0<%10!s!> SetIdleTimer: no reset RM %11!d!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_DETAIL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c1446_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 71 \"%0<%10!s!> SetIdleTimer: no reset RM %11!d!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_DETAIL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c1446
    #define WPP_ANNOTATE_QCPWR_c1446 WPP_ANNOTATE_QCPWR_c1446_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c1446 WPP_ANNOTATE_QCPWR_c1446_FINAL("TMF:", "QCPWR.c", "QCPWR_c1446", L"{", L"pDevExt->PortName, ItemString -- 10" , L"pDevExt->Sts.lRmlCount[3], ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c1471_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 72 \"%0<%10!s!> <--SetIdleTimer: ST 0x%11!x! RM %12!d!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_DETAIL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c1471_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 72 \"%0<%10!s!> <--SetIdleTimer: ST 0x%11!x! RM %12!d!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_DETAIL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c1471
    #define WPP_ANNOTATE_QCPWR_c1471 WPP_ANNOTATE_QCPWR_c1471_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemLong -- 12" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c1471 WPP_ANNOTATE_QCPWR_c1471_FINAL("TMF:", "QCPWR.c", "QCPWR_c1471", L"{", L"pDevExt->PortName, ItemString -- 10" , L"ntStatus, ItemLong -- 11" , L"pDevExt->Sts.lRmlCount[3], ItemLong -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c1481_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 73 \"%0<%10!s!> <--SetIdleTimer: err - IoBusyMask 0x%11!x! (not 0) (RML %12!d!)\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR", __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c1481_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 73 \"%0<%10!s!> <--SetIdleTimer: err - IoBusyMask 0x%11!x! (not 0) (RML %12!d!)\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c1481
    #define WPP_ANNOTATE_QCPWR_c1481 WPP_ANNOTATE_QCPWR_c1481_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemLong -- 12" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c1481 WPP_ANNOTATE_QCPWR_c1481_FINAL("TMF:", "QCPWR.c", "QCPWR_c1481", L"{", L"pDevExt->PortName, ItemString -- 10" , L"pDevExt->IoBusyMask, ItemLong -- 11" , L"pDevExt->Sts.lRmlCount[3], ItemLong -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c1510_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 74 \"%0<%10!s!> -->IdleDpcRoutine: context 0x%11!p!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_DETAIL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c1510_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 74 \"%0<%10!s!> -->IdleDpcRoutine: context 0x%11!p!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_DETAIL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c1510
    #define WPP_ANNOTATE_QCPWR_c1510 WPP_ANNOTATE_QCPWR_c1510_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemPtr -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c1510 WPP_ANNOTATE_QCPWR_c1510_FINAL("TMF:", "QCPWR.c", "QCPWR_c1510", L"{", L"pDevExt->PortName, ItemString -- 10" , L"DeferredContext, ItemPtr -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c1527_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 75 \"%0<%10!s!> IdleDpc: request idle IRP\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_DETAIL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c1527_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 75 \"%0<%10!s!> IdleDpc: request idle IRP\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_DETAIL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c1527
    #define WPP_ANNOTATE_QCPWR_c1527 WPP_ANNOTATE_QCPWR_c1527_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c1527 WPP_ANNOTATE_QCPWR_c1527_FINAL("TMF:", "QCPWR.c", "QCPWR_c1527", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c1542_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 76 \"%0<%10!s!> IdleDpc: SystemPower low, not to send idle req\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR", __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c1542_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 76 \"%0<%10!s!> IdleDpc: SystemPower low, not to send idle req\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c1542
    #define WPP_ANNOTATE_QCPWR_c1542 WPP_ANNOTATE_QCPWR_c1542_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c1542 WPP_ANNOTATE_QCPWR_c1542_FINAL("TMF:", "QCPWR.c", "QCPWR_c1542", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c1571_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 77 \"%0<%10!s!> -->RegisterIdleNotification\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_DETAIL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c1571_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 77 \"%0<%10!s!> -->RegisterIdleNotification\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_DETAIL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c1571
    #define WPP_ANNOTATE_QCPWR_c1571 WPP_ANNOTATE_QCPWR_c1571_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c1571 WPP_ANNOTATE_QCPWR_c1571_FINAL("TMF:", "QCPWR.c", "QCPWR_c1571", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c1580_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 78 \"%0<%10!s!> RegisterIdleNotification: selective suspension disabled\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR", __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c1580_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 78 \"%0<%10!s!> RegisterIdleNotification: selective suspension disabled\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c1580
    #define WPP_ANNOTATE_QCPWR_c1580 WPP_ANNOTATE_QCPWR_c1580_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c1580 WPP_ANNOTATE_QCPWR_c1580_FINAL("TMF:", "QCPWR.c", "QCPWR_c1580", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c1592_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 79 \"%0<%10!s!> <--RegisterIdleNotification: powering down, no act\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR", __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c1592_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 79 \"%0<%10!s!> <--RegisterIdleNotification: powering down, no act\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c1592
    #define WPP_ANNOTATE_QCPWR_c1592 WPP_ANNOTATE_QCPWR_c1592_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c1592 WPP_ANNOTATE_QCPWR_c1592_FINAL("TMF:", "QCPWR.c", "QCPWR_c1592", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c1605_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 80 \"%0<%10!s!> RegisterIdleNotification: wrong dev power state: D%11!u!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR", __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c1605_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 80 \"%0<%10!s!> RegisterIdleNotification: wrong dev power state: D%11!u!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c1605
    #define WPP_ANNOTATE_QCPWR_c1605 WPP_ANNOTATE_QCPWR_c1605_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c1605 WPP_ANNOTATE_QCPWR_c1605_FINAL("TMF:", "QCPWR.c", "QCPWR_c1605", L"{", L"pDevExt->PortName, ItemString -- 10" , L"pDevExt->DevicePower-1, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c1617_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 81 \"%0<%10!s!> RegisterIdleNotification: in query-removal\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR", __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c1617_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 81 \"%0<%10!s!> RegisterIdleNotification: in query-removal\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c1617
    #define WPP_ANNOTATE_QCPWR_c1617 WPP_ANNOTATE_QCPWR_c1617_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c1617 WPP_ANNOTATE_QCPWR_c1617_FINAL("TMF:", "QCPWR.c", "QCPWR_c1617", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c162_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 15 \"%0<%10!s!> IRP_MN_QUERY_POWER: unknown pwr type %11!u!\" //   FLAG=QCSER_DBG_MASK_POWER LEVEL=QCSER_DBG_LEVEL_ERROR", __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c162_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 15 \"%0<%10!s!> IRP_MN_QUERY_POWER: unknown pwr type %11!u!\" //   FLAG=QCSER_DBG_MASK_POWER LEVEL=QCSER_DBG_LEVEL_ERROR", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c162
    #define WPP_ANNOTATE_QCPWR_c162 WPP_ANNOTATE_QCPWR_c162_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c162 WPP_ANNOTATE_QCPWR_c162_FINAL("TMF:", "QCPWR.c", "QCPWR_c162", L"{", L"pDevExt->PortName, ItemString -- 10" , L"IrpStack->Parameters.Power.Type, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c1631_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 82 \"%0<%10!s!> RegisterIdleNotification: dev busy, abort (0x%11!p!, 0x%12!x!)\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR", __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c1631_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 82 \"%0<%10!s!> RegisterIdleNotification: dev busy, abort (0x%11!p!, 0x%12!x!)\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c1631
    #define WPP_ANNOTATE_QCPWR_c1631 WPP_ANNOTATE_QCPWR_c1631_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemPtr -- 11" , L"Arg, ItemLong -- 12" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c1631 WPP_ANNOTATE_QCPWR_c1631_FINAL("TMF:", "QCPWR.c", "QCPWR_c1631", L"{", L"pDevExt->PortName, ItemString -- 10" , L"pDevExt->IdleNotificationIrp, ItemPtr -- 11" , L"pDevExt->IoBusyMask, ItemLong -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c1658_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 83 \"%0<%10!s!> RegisterIdleNotification: no mem-0\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR", __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c1658_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 83 \"%0<%10!s!> RegisterIdleNotification: no mem-0\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c1658
    #define WPP_ANNOTATE_QCPWR_c1658 WPP_ANNOTATE_QCPWR_c1658_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c1658 WPP_ANNOTATE_QCPWR_c1658_FINAL("TMF:", "QCPWR.c", "QCPWR_c1658", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c1720_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 84 \"%0<%10!s!> RegisterIdleNotification: rm lock failrue\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR", __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c1720_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 84 \"%0<%10!s!> RegisterIdleNotification: rm lock failrue\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c1720
    #define WPP_ANNOTATE_QCPWR_c1720 WPP_ANNOTATE_QCPWR_c1720_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c1720 WPP_ANNOTATE_QCPWR_c1720_FINAL("TMF:", "QCPWR.c", "QCPWR_c1720", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c1730_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 85 \"%0<%10!s!> RegisterIdleNotification: Submit idle req 0x%11!p! at D%12!u!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR", __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c1730_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 85 \"%0<%10!s!> RegisterIdleNotification: Submit idle req 0x%11!p! at D%12!u!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c1730
    #define WPP_ANNOTATE_QCPWR_c1730 WPP_ANNOTATE_QCPWR_c1730_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemPtr -- 11" , L"Arg, ItemLong -- 12" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c1730 WPP_ANNOTATE_QCPWR_c1730_FINAL("TMF:", "QCPWR.c", "QCPWR_c1730", L"{", L"pDevExt->PortName, ItemString -- 10" , L"irp, ItemPtr -- 11" , L"pDevExt->DevicePower-1, ItemLong -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c1742_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 86 \"%0<%10!s!> RegisterIdleNotification: no mem\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR", __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c1742_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 86 \"%0<%10!s!> RegisterIdleNotification: no mem\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c1742
    #define WPP_ANNOTATE_QCPWR_c1742 WPP_ANNOTATE_QCPWR_c1742_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c1742 WPP_ANNOTATE_QCPWR_c1742_FINAL("TMF:", "QCPWR.c", "QCPWR_c1742", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c1757_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 87 \"%0<%10!s!> <--RegisterIdleNotification: ST 0x%11!x!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_DETAIL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c1757_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 87 \"%0<%10!s!> <--RegisterIdleNotification: ST 0x%11!x!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_DETAIL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c1757
    #define WPP_ANNOTATE_QCPWR_c1757 WPP_ANNOTATE_QCPWR_c1757_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c1757 WPP_ANNOTATE_QCPWR_c1757_FINAL("TMF:", "QCPWR.c", "QCPWR_c1757", L"{", L"pDevExt->PortName, ItemString -- 10" , L"ntStatus, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c1769_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 88 \"%0<%10!s!> -->IdleNotificationCallback\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_DETAIL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c1769_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 88 \"%0<%10!s!> -->IdleNotificationCallback\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_DETAIL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c1769
    #define WPP_ANNOTATE_QCPWR_c1769 WPP_ANNOTATE_QCPWR_c1769_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c1769 WPP_ANNOTATE_QCPWR_c1769_FINAL("TMF:", "QCPWR.c", "QCPWR_c1769", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c1778_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 89 \"%0<%10!s!> IdleNotificationCallback: err-dev not ready\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR", __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c1778_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 89 \"%0<%10!s!> IdleNotificationCallback: err-dev not ready\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c1778
    #define WPP_ANNOTATE_QCPWR_c1778 WPP_ANNOTATE_QCPWR_c1778_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c1778 WPP_ANNOTATE_QCPWR_c1778_FINAL("TMF:", "QCPWR.c", "QCPWR_c1778", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c1792_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 90 \"%0<%10!s!> <--IdleNotificationCallback\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_DETAIL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c1792_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 90 \"%0<%10!s!> <--IdleNotificationCallback\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_DETAIL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c1792
    #define WPP_ANNOTATE_QCPWR_c1792 WPP_ANNOTATE_QCPWR_c1792_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c1792 WPP_ANNOTATE_QCPWR_c1792_FINAL("TMF:", "QCPWR.c", "QCPWR_c1792", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c1809_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 91 \"%0<%10!s!> -->IdleNotificationCallbackEpisode\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_DETAIL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c1809_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 91 \"%0<%10!s!> -->IdleNotificationCallbackEpisode\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_DETAIL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c1809
    #define WPP_ANNOTATE_QCPWR_c1809 WPP_ANNOTATE_QCPWR_c1809_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c1809 WPP_ANNOTATE_QCPWR_c1809_FINAL("TMF:", "QCPWR.c", "QCPWR_c1809", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c1818_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 92 \"%0<%10!s!> IdleNotificationCallbackEpisode: err-dev not ready\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR", __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c1818_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 92 \"%0<%10!s!> IdleNotificationCallbackEpisode: err-dev not ready\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c1818
    #define WPP_ANNOTATE_QCPWR_c1818 WPP_ANNOTATE_QCPWR_c1818_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c1818 WPP_ANNOTATE_QCPWR_c1818_FINAL("TMF:", "QCPWR.c", "QCPWR_c1818", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c1830_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 93 \"%0<%10!s!> <--IdleNotificationCallbackEpisode: dev in query-removal\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR", __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c1830_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 93 \"%0<%10!s!> <--IdleNotificationCallbackEpisode: dev in query-removal\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c1830
    #define WPP_ANNOTATE_QCPWR_c1830 WPP_ANNOTATE_QCPWR_c1830_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c1830 WPP_ANNOTATE_QCPWR_c1830_FINAL("TMF:", "QCPWR.c", "QCPWR_c1830", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c1842_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 94 \"%0<%10!s!> <--IdleNotificationCallbackEpisode: powering down, no act\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR", __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c1842_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 94 \"%0<%10!s!> <--IdleNotificationCallbackEpisode: powering down, no act\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c1842
    #define WPP_ANNOTATE_QCPWR_c1842 WPP_ANNOTATE_QCPWR_c1842_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c1842 WPP_ANNOTATE_QCPWR_c1842_FINAL("TMF:", "QCPWR.c", "QCPWR_c1842", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c1866_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 95 \"%0<%10!s!> IdleNotificationCallbackEpisode: Out of mem 1\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR", __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c1866_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 95 \"%0<%10!s!> IdleNotificationCallbackEpisode: Out of mem 1\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c1866
    #define WPP_ANNOTATE_QCPWR_c1866 WPP_ANNOTATE_QCPWR_c1866_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c1866 WPP_ANNOTATE_QCPWR_c1866_FINAL("TMF:", "QCPWR.c", "QCPWR_c1866", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c1882_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 96 \"%0<%10!s!> IdleNotificationCallbackEpisode: Sending PWR req for D%11!u!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR", __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c1882_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 96 \"%0<%10!s!> IdleNotificationCallbackEpisode: Sending PWR req for D%11!u!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c1882
    #define WPP_ANNOTATE_QCPWR_c1882 WPP_ANNOTATE_QCPWR_c1882_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c1882 WPP_ANNOTATE_QCPWR_c1882_FINAL("TMF:", "QCPWR.c", "QCPWR_c1882", L"{", L"pDevExt->PortName, ItemString -- 10" , L"powerState.DeviceState-1, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c1898_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 97 \"%0<%10!s!> IdleNotificationCallbackEpisode: rm lock failure\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR", __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c1898_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 97 \"%0<%10!s!> IdleNotificationCallbackEpisode: rm lock failure\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c1898
    #define WPP_ANNOTATE_QCPWR_c1898 WPP_ANNOTATE_QCPWR_c1898_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c1898 WPP_ANNOTATE_QCPWR_c1898_FINAL("TMF:", "QCPWR.c", "QCPWR_c1898", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c190_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 16 \"%0<%10!s!> IRP_MN_SET_POWER: SystemPowerState %11!d!\" //   FLAG=QCSER_DBG_MASK_POWER LEVEL=QCSER_DBG_LEVEL_DETAIL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c190_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 16 \"%0<%10!s!> IRP_MN_SET_POWER: SystemPowerState %11!d!\" //   FLAG=QCSER_DBG_MASK_POWER LEVEL=QCSER_DBG_LEVEL_DETAIL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c190
    #define WPP_ANNOTATE_QCPWR_c190 WPP_ANNOTATE_QCPWR_c190_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c190 WPP_ANNOTATE_QCPWR_c190_FINAL("TMF:", "QCPWR.c", "QCPWR_c190", L"{", L"pDevExt->PortName, ItemString -- 10" , L"pwrState, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c1909_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 98 \"%0<%10!s!> IdleNotificationCallbackEpisode(DPWR): No dev req\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR", __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c1909_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 98 \"%0<%10!s!> IdleNotificationCallbackEpisode(DPWR): No dev req\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c1909
    #define WPP_ANNOTATE_QCPWR_c1909 WPP_ANNOTATE_QCPWR_c1909_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c1909 WPP_ANNOTATE_QCPWR_c1909_FINAL("TMF:", "QCPWR.c", "QCPWR_c1909", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c1931_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 99 \"%0<%10!s!> IdleNotificationCallbackEpisode: PWR req for D%11!u! sent, status 0x%12!x!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR", __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c1931_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 99 \"%0<%10!s!> IdleNotificationCallbackEpisode: PWR req for D%11!u! sent, status 0x%12!x!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c1931
    #define WPP_ANNOTATE_QCPWR_c1931 WPP_ANNOTATE_QCPWR_c1931_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemLong -- 12" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c1931 WPP_ANNOTATE_QCPWR_c1931_FINAL("TMF:", "QCPWR.c", "QCPWR_c1931", L"{", L"pDevExt->PortName, ItemString -- 10" , L"powerState.DeviceState-1, ItemLong -- 11" , L"ntStatus, ItemLong -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c1958_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 100 \"%0<%10!s!> WTO-2 (%11!d!)\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR", __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c1958_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 100 \"%0<%10!s!> WTO-2 (%11!d!)\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c1958
    #define WPP_ANNOTATE_QCPWR_c1958 WPP_ANNOTATE_QCPWR_c1958_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c1958 WPP_ANNOTATE_QCPWR_c1958_FINAL("TMF:", "QCPWR.c", "QCPWR_c1958", L"{", L"pDevExt->PortName, ItemString -- 10" , L"++i, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c1967_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 101 \"%0<%10!s!> Got IRP completion event (%11!d!)\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_DETAIL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c1967_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 101 \"%0<%10!s!> Got IRP completion event (%11!d!)\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_DETAIL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c1967
    #define WPP_ANNOTATE_QCPWR_c1967 WPP_ANNOTATE_QCPWR_c1967_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c1967 WPP_ANNOTATE_QCPWR_c1967_FINAL("TMF:", "QCPWR.c", "QCPWR_c1967", L"{", L"pDevExt->PortName, ItemString -- 10" , L"++i, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c1977_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 102 \"%0<%10!s!> IdleNotificationCallbackEpisode: powered down\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_DETAIL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c1977_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 102 \"%0<%10!s!> IdleNotificationCallbackEpisode: powered down\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_DETAIL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c1977
    #define WPP_ANNOTATE_QCPWR_c1977 WPP_ANNOTATE_QCPWR_c1977_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c1977 WPP_ANNOTATE_QCPWR_c1977_FINAL("TMF:", "QCPWR.c", "QCPWR_c1977", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c1996_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 103 \"%0<%10!s!> <--IdleNotificationCallbackEpisode 0x%11!x!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_DETAIL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c1996_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 103 \"%0<%10!s!> <--IdleNotificationCallbackEpisode 0x%11!x!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_DETAIL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c1996
    #define WPP_ANNOTATE_QCPWR_c1996 WPP_ANNOTATE_QCPWR_c1996_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c1996 WPP_ANNOTATE_QCPWR_c1996_FINAL("TMF:", "QCPWR.c", "QCPWR_c1996", L"{", L"pDevExt->PortName, ItemString -- 10" , L"ntStatus, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c2024_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 104 \"%0<%10!s!> TopDevSetPowerIrpComp: ST 0x%11!x!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_DETAIL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c2024_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 104 \"%0<%10!s!> TopDevSetPowerIrpComp: ST 0x%11!x!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_DETAIL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c2024
    #define WPP_ANNOTATE_QCPWR_c2024 WPP_ANNOTATE_QCPWR_c2024_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c2024 WPP_ANNOTATE_QCPWR_c2024_FINAL("TMF:", "QCPWR.c", "QCPWR_c2024", L"{", L"pDevExt->PortName, ItemString -- 10" , L"IoStatus->Status, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c2058_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 105 \"%0<%10!s!> -->IdleNotificationIrpCompletion: IRP 0x%11!p!/0x%12!p! st 0x%13!x!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_DETAIL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c2058_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 105 \"%0<%10!s!> -->IdleNotificationIrpCompletion: IRP 0x%11!p!/0x%12!p! st 0x%13!x!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_DETAIL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c2058
    #define WPP_ANNOTATE_QCPWR_c2058 WPP_ANNOTATE_QCPWR_c2058_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemPtr -- 11" , L"Arg, ItemPtr -- 12" , L"Arg, ItemLong -- 13" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c2058 WPP_ANNOTATE_QCPWR_c2058_FINAL("TMF:", "QCPWR.c", "QCPWR_c2058", L"{", L"pDevExt->PortName, ItemString -- 10" , L"Irp, ItemPtr -- 11" , L"pDevExt->IdleNotificationIrp, ItemPtr -- 12" , L"ntStatus, ItemLong -- 13" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c2074_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 106 \"%0<%10!s!> IdleNotificationIrpCompletion: NO_MEM, best effort\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_DETAIL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c2074_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 106 \"%0<%10!s!> IdleNotificationIrpCompletion: NO_MEM, best effort\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_DETAIL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c2074
    #define WPP_ANNOTATE_QCPWR_c2074 WPP_ANNOTATE_QCPWR_c2074_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c2074 WPP_ANNOTATE_QCPWR_c2074_FINAL("TMF:", "QCPWR.c", "QCPWR_c2074", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c2099_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 107 \"%0<%10!s!> <--IdleNotificationIrpCompletion [PrepareToPowerDown %11!d!]\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_DETAIL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c2099_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 107 \"%0<%10!s!> <--IdleNotificationIrpCompletion [PrepareToPowerDown %11!d!]\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_DETAIL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c2099
    #define WPP_ANNOTATE_QCPWR_c2099 WPP_ANNOTATE_QCPWR_c2099_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c2099 WPP_ANNOTATE_QCPWR_c2099_FINAL("TMF:", "QCPWR.c", "QCPWR_c2099", L"{", L"pDevExt->PortName, ItemString -- 10" , L"pDevExt->PrepareToPowerDown, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c2140_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 108 \"%0<%10!s!> _GetOutOfIdleState: no param\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR", __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c2140_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 108 \"%0<%10!s!> _GetOutOfIdleState: no param\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c2140
    #define WPP_ANNOTATE_QCPWR_c2140 WPP_ANNOTATE_QCPWR_c2140_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c2140 WPP_ANNOTATE_QCPWR_c2140_FINAL("TMF:", "QCPWR.c", "QCPWR_c2140", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c2171_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 109 \"%0<%10!s!> -->IdleNotificationIrpCompletionEpisode: IRP 0x%11!p!/0x%12!p! st 0x%13!x!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_DETAIL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c2171_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 109 \"%0<%10!s!> -->IdleNotificationIrpCompletionEpisode: IRP 0x%11!p!/0x%12!p! st 0x%13!x!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_DETAIL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c2171
    #define WPP_ANNOTATE_QCPWR_c2171 WPP_ANNOTATE_QCPWR_c2171_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemPtr -- 11" , L"Arg, ItemPtr -- 12" , L"Arg, ItemLong -- 13" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c2171 WPP_ANNOTATE_QCPWR_c2171_FINAL("TMF:", "QCPWR.c", "QCPWR_c2171", L"{", L"pDevExt->PortName, ItemString -- 10" , L"Irp, ItemPtr -- 11" , L"pDevExt->IdleNotificationIrp, ItemPtr -- 12" , L"ntStatus, ItemLong -- 13" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c2205_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 110 \"%0<%10!s!> IdleNotificationIrpCompletionEpisode: err 0x%11!x!, powering down-no act\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR", __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c2205_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 110 \"%0<%10!s!> IdleNotificationIrpCompletionEpisode: err 0x%11!x!, powering down-no act\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c2205
    #define WPP_ANNOTATE_QCPWR_c2205 WPP_ANNOTATE_QCPWR_c2205_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c2205 WPP_ANNOTATE_QCPWR_c2205_FINAL("TMF:", "QCPWR.c", "QCPWR_c2205", L"{", L"pDevExt->PortName, ItemString -- 10" , L"ntStatus, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c2214_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 111 \"%0<%10!s!> IdleNotificationIrpCompletionEpisode: err 0x%11!x!, requesting D0\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR", __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c2214_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 111 \"%0<%10!s!> IdleNotificationIrpCompletionEpisode: err 0x%11!x!, requesting D0\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c2214
    #define WPP_ANNOTATE_QCPWR_c2214 WPP_ANNOTATE_QCPWR_c2214_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c2214 WPP_ANNOTATE_QCPWR_c2214_FINAL("TMF:", "QCPWR.c", "QCPWR_c2214", L"{", L"pDevExt->PortName, ItemString -- 10" , L"ntStatus, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c222_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 17 \"%0<%10!s!> IRP_MN_SET_POWER: D%11!d!\" //   FLAG=QCSER_DBG_MASK_POWER LEVEL=QCSER_DBG_LEVEL_DETAIL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c222_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 17 \"%0<%10!s!> IRP_MN_SET_POWER: D%11!d!\" //   FLAG=QCSER_DBG_MASK_POWER LEVEL=QCSER_DBG_LEVEL_DETAIL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c222
    #define WPP_ANNOTATE_QCPWR_c222 WPP_ANNOTATE_QCPWR_c222_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c222 WPP_ANNOTATE_QCPWR_c222_FINAL("TMF:", "QCPWR.c", "QCPWR_c222", L"{", L"pDevExt->PortName, ItemString -- 10" , L"pwrState-1, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c2223_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 112 \"%0<%10!s!> IdleNotificationIrpCompletionEpisode: in D0, no act\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR", __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c2223_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 112 \"%0<%10!s!> IdleNotificationIrpCompletionEpisode: in D0, no act\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c2223
    #define WPP_ANNOTATE_QCPWR_c2223 WPP_ANNOTATE_QCPWR_c2223_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c2223 WPP_ANNOTATE_QCPWR_c2223_FINAL("TMF:", "QCPWR.c", "QCPWR_c2223", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c2245_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 113 \"%0<%10!s!> IdleNotificationIrpCompletionEpisode: rm lock failure 0x%11!x!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR", __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c2245_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 113 \"%0<%10!s!> IdleNotificationIrpCompletionEpisode: rm lock failure 0x%11!x!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c2245
    #define WPP_ANNOTATE_QCPWR_c2245 WPP_ANNOTATE_QCPWR_c2245_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c2245 WPP_ANNOTATE_QCPWR_c2245_FINAL("TMF:", "QCPWR.c", "QCPWR_c2245", L"{", L"pDevExt->PortName, ItemString -- 10" , L"ntStatus, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c2256_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 114 \"%0<%10!s!> IdleNotificationIrpCompletionEpisode(DPWR): No dev req\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR", __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c2256_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 114 \"%0<%10!s!> IdleNotificationIrpCompletionEpisode(DPWR): No dev req\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c2256
    #define WPP_ANNOTATE_QCPWR_c2256 WPP_ANNOTATE_QCPWR_c2256_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c2256 WPP_ANNOTATE_QCPWR_c2256_FINAL("TMF:", "QCPWR.c", "QCPWR_c2256", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c2278_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 115 \"%0<%10!s!> IdleNotificationIrpCompletionEpisode: err req D0 0x%11!x!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR", __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c2278_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 115 \"%0<%10!s!> IdleNotificationIrpCompletionEpisode: err req D0 0x%11!x!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c2278
    #define WPP_ANNOTATE_QCPWR_c2278 WPP_ANNOTATE_QCPWR_c2278_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c2278 WPP_ANNOTATE_QCPWR_c2278_FINAL("TMF:", "QCPWR.c", "QCPWR_c2278", L"{", L"pDevExt->PortName, ItemString -- 10" , L"ntStatus, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c2296_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 116 \"%0<%10!s!> IdleNotificationIrpCompletionEpisode: IRP was cancelled\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR", __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c2296_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 116 \"%0<%10!s!> IdleNotificationIrpCompletionEpisode: IRP was cancelled\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c2296
    #define WPP_ANNOTATE_QCPWR_c2296 WPP_ANNOTATE_QCPWR_c2296_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c2296 WPP_ANNOTATE_QCPWR_c2296_FINAL("TMF:", "QCPWR.c", "QCPWR_c2296", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c2313_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 117 \"%0<%10!s!> <--IdleNotificationIrpCompletionEpisode\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_DETAIL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c2313_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 117 \"%0<%10!s!> <--IdleNotificationIrpCompletionEpisode\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_DETAIL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c2313
    #define WPP_ANNOTATE_QCPWR_c2313 WPP_ANNOTATE_QCPWR_c2313_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c2313 WPP_ANNOTATE_QCPWR_c2313_FINAL("TMF:", "QCPWR.c", "QCPWR_c2313", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c2341_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 118 \"%0<%10!s!> TopIdlePowerUpCompletionRoutine: 0x%11!x!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_DETAIL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c2341_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 118 \"%0<%10!s!> TopIdlePowerUpCompletionRoutine: 0x%11!x!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_DETAIL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c2341
    #define WPP_ANNOTATE_QCPWR_c2341 WPP_ANNOTATE_QCPWR_c2341_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c2341 WPP_ANNOTATE_QCPWR_c2341_FINAL("TMF:", "QCPWR.c", "QCPWR_c2341", L"{", L"pDevExt->PortName, ItemString -- 10" , L"IoStatus->Status, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c2369_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 119 \"%0<%10!s!> -->CancelIdleNotificationIrp(%11!u!): 0x%12!p! RM[0] %13!d!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_TRACE", __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c2369_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 119 \"%0<%10!s!> -->CancelIdleNotificationIrp(%11!u!): 0x%12!p! RM[0] %13!d!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_TRACE", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c2369
    #define WPP_ANNOTATE_QCPWR_c2369 WPP_ANNOTATE_QCPWR_c2369_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemPtr -- 12" , L"Arg, ItemLong -- 13" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c2369 WPP_ANNOTATE_QCPWR_c2369_FINAL("TMF:", "QCPWR.c", "QCPWR_c2369", L"{", L"pDevExt->PortName, ItemString -- 10" , L"Cookie, ItemLong -- 11" , L"pDevExt->IdleNotificationIrp, ItemPtr -- 12" , L"pDevExt->Sts.lRmlCount[0], ItemLong -- 13" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c2379_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 120 \"%0<%10!s!> CancelIdleNotificationIrp: req D0 (MgrId %11!d!)\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_DETAIL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c2379_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 120 \"%0<%10!s!> CancelIdleNotificationIrp: req D0 (MgrId %11!d!)\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_DETAIL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c2379
    #define WPP_ANNOTATE_QCPWR_c2379 WPP_ANNOTATE_QCPWR_c2379_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c2379 WPP_ANNOTATE_QCPWR_c2379_FINAL("TMF:", "QCPWR.c", "QCPWR_c2379", L"{", L"pDevExt->PortName, ItemString -- 10" , L"pDevExt->MgrId, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c238_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 18 \"%0<%10!s!> IRP_MN_SET_POWER: unknown pwr type %11!u!\" //   FLAG=QCSER_DBG_MASK_POWER LEVEL=QCSER_DBG_LEVEL_ERROR", __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c238_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 18 \"%0<%10!s!> IRP_MN_SET_POWER: unknown pwr type %11!u!\" //   FLAG=QCSER_DBG_MASK_POWER LEVEL=QCSER_DBG_LEVEL_ERROR", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c238
    #define WPP_ANNOTATE_QCPWR_c238 WPP_ANNOTATE_QCPWR_c238_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c238 WPP_ANNOTATE_QCPWR_c238_FINAL("TMF:", "QCPWR.c", "QCPWR_c238", L"{", L"pDevExt->PortName, ItemString -- 10" , L"IrpStack->Parameters.Power.Type, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c2398_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 121 \"%0<%10!s!> CancelIdleNotificationIrp: not pending, no act\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_DETAIL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c2398_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 121 \"%0<%10!s!> CancelIdleNotificationIrp: not pending, no act\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_DETAIL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c2398
    #define WPP_ANNOTATE_QCPWR_c2398 WPP_ANNOTATE_QCPWR_c2398_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c2398 WPP_ANNOTATE_QCPWR_c2398_FINAL("TMF:", "QCPWR.c", "QCPWR_c2398", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c2416_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 122 \"%0<%10!s!> <--CancelIdleNotificationIrp(%11!u!): 0x%12!p! RM[0] %13!d!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_TRACE", __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c2416_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 122 \"%0<%10!s!> <--CancelIdleNotificationIrp(%11!u!): 0x%12!p! RM[0] %13!d!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_TRACE", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c2416
    #define WPP_ANNOTATE_QCPWR_c2416 WPP_ANNOTATE_QCPWR_c2416_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemPtr -- 12" , L"Arg, ItemLong -- 13" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c2416 WPP_ANNOTATE_QCPWR_c2416_FINAL("TMF:", "QCPWR.c", "QCPWR_c2416", L"{", L"pDevExt->PortName, ItemString -- 10" , L"Cookie, ItemLong -- 11" , L"pDevExt->IdleNotificationIrp, ItemPtr -- 12" , L"pDevExt->Sts.lRmlCount[0], ItemLong -- 13" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c2431_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 123 \"%0<%10!s!> ProcessWaitWake: IRP 0x%11!p!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_DETAIL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c2431_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 123 \"%0<%10!s!> ProcessWaitWake: IRP 0x%11!p!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_DETAIL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c2431
    #define WPP_ANNOTATE_QCPWR_c2431 WPP_ANNOTATE_QCPWR_c2431_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemPtr -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c2431 WPP_ANNOTATE_QCPWR_c2431_FINAL("TMF:", "QCPWR.c", "QCPWR_c2431", L"{", L"pDevExt->PortName, ItemString -- 10" , L"Irp, ItemPtr -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c2464_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 124 \"%0<%10!s!> -->WaitWakeCompletion: 0x%11!p!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_TRACE", __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c2464_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 124 \"%0<%10!s!> -->WaitWakeCompletion: 0x%11!p!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_TRACE", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c2464
    #define WPP_ANNOTATE_QCPWR_c2464 WPP_ANNOTATE_QCPWR_c2464_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemPtr -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c2464 WPP_ANNOTATE_QCPWR_c2464_FINAL("TMF:", "QCPWR.c", "QCPWR_c2464", L"{", L"pDevExt->PortName, ItemString -- 10" , L"Irp, ItemPtr -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c2495_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 125 \"%0<%10!s!> PIRP (Cww 0x%11!x!/0x%12!x!) 0x%13!p!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_DETAIL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c2495_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 125 \"%0<%10!s!> PIRP (Cww 0x%11!x!/0x%12!x!) 0x%13!p!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_DETAIL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c2495
    #define WPP_ANNOTATE_QCPWR_c2495 WPP_ANNOTATE_QCPWR_c2495_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemLong -- 12" , L"Arg, ItemPtr -- 13" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c2495 WPP_ANNOTATE_QCPWR_c2495_FINAL("TMF:", "QCPWR.c", "QCPWR_c2495", L"{", L"pDevExt->PortName, ItemString -- 10" , L"Irp->IoStatus.Status, ItemLong -- 11" , L"ntStatus, ItemLong -- 12" , L"Irp, ItemPtr -- 13" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c2504_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 126 \"%0<%10!s!> <--WaitWakeCompletion: 0x%11!p!(0x%12!x!)\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_TRACE", __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c2504_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 126 \"%0<%10!s!> <--WaitWakeCompletion: 0x%11!p!(0x%12!x!)\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_TRACE", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c2504
    #define WPP_ANNOTATE_QCPWR_c2504 WPP_ANNOTATE_QCPWR_c2504_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemPtr -- 11" , L"Arg, ItemLong -- 12" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c2504 WPP_ANNOTATE_QCPWR_c2504_FINAL("TMF:", "QCPWR.c", "QCPWR_c2504", L"{", L"pDevExt->PortName, ItemString -- 10" , L"Irp, ItemPtr -- 11" , L"ntStatus, ItemLong -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c2525_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 127 \"%0<%10!s!> RegisterWaitWake: %11!u!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_DETAIL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c2525_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 127 \"%0<%10!s!> RegisterWaitWake: %11!u!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_DETAIL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c2525
    #define WPP_ANNOTATE_QCPWR_c2525 WPP_ANNOTATE_QCPWR_c2525_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c2525 WPP_ANNOTATE_QCPWR_c2525_FINAL("TMF:", "QCPWR.c", "QCPWR_c2525", L"{", L"pDevExt->PortName, ItemString -- 10" , L"Cookie, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c2534_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 128 \"%0<%10!s!> RegisterWaitWake(%11!u!): feature disabled\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR", __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c2534_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 128 \"%0<%10!s!> RegisterWaitWake(%11!u!): feature disabled\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c2534
    #define WPP_ANNOTATE_QCPWR_c2534 WPP_ANNOTATE_QCPWR_c2534_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c2534 WPP_ANNOTATE_QCPWR_c2534_FINAL("TMF:", "QCPWR.c", "QCPWR_c2534", L"{", L"pDevExt->PortName, ItemString -- 10" , L"Cookie, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c2550_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 129 \"%0<%10!s!> RegisterWaitWake: already pending(%11!u!)\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR", __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c2550_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 129 \"%0<%10!s!> RegisterWaitWake: already pending(%11!u!)\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c2550
    #define WPP_ANNOTATE_QCPWR_c2550 WPP_ANNOTATE_QCPWR_c2550_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c2550 WPP_ANNOTATE_QCPWR_c2550_FINAL("TMF:", "QCPWR.c", "QCPWR_c2550", L"{", L"pDevExt->PortName, ItemString -- 10" , L"Cookie, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c2564_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 130 \"%0<%10!s!> <--RegisterWaitWake(%11!u!): dev in query-removal\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR", __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c2564_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 130 \"%0<%10!s!> <--RegisterWaitWake(%11!u!): dev in query-removal\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c2564
    #define WPP_ANNOTATE_QCPWR_c2564 WPP_ANNOTATE_QCPWR_c2564_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c2564 WPP_ANNOTATE_QCPWR_c2564_FINAL("TMF:", "QCPWR.c", "QCPWR_c2564", L"{", L"pDevExt->PortName, ItemString -- 10" , L"Cookie, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c2586_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 131 \"%0<%10!s!> RegisterWaitWake: rm lock failure(0x%11!x!)\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR", __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c2586_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 131 \"%0<%10!s!> RegisterWaitWake: rm lock failure(0x%11!x!)\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c2586
    #define WPP_ANNOTATE_QCPWR_c2586 WPP_ANNOTATE_QCPWR_c2586_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c2586 WPP_ANNOTATE_QCPWR_c2586_FINAL("TMF:", "QCPWR.c", "QCPWR_c2586", L"{", L"pDevExt->PortName, ItemString -- 10" , L"ntStatus, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c2635_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 132 \"%0<%10!s!> TopWaitWakeCompletion: IRP 0x%11!p! MN 0x%12!x!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_DETAIL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c2635_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 132 \"%0<%10!s!> TopWaitWakeCompletion: IRP 0x%11!p! MN 0x%12!x!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_DETAIL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c2635
    #define WPP_ANNOTATE_QCPWR_c2635 WPP_ANNOTATE_QCPWR_c2635_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemPtr -- 11" , L"Arg, ItemLong -- 12" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c2635 WPP_ANNOTATE_QCPWR_c2635_FINAL("TMF:", "QCPWR.c", "QCPWR_c2635", L"{", L"pDevExt->PortName, ItemString -- 10" , L"pDevExt->WaitWakeIrp, ItemPtr -- 11" , L"MinorFunction, ItemLong -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c2649_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 133 \"%0<%10!s!> TopWaitWakeCompletion failure: IRP 0x%11!p!(0x%12!x!)\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR", __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c2649_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 133 \"%0<%10!s!> TopWaitWakeCompletion failure: IRP 0x%11!p!(0x%12!x!)\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c2649
    #define WPP_ANNOTATE_QCPWR_c2649 WPP_ANNOTATE_QCPWR_c2649_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemPtr -- 11" , L"Arg, ItemLong -- 12" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c2649 WPP_ANNOTATE_QCPWR_c2649_FINAL("TMF:", "QCPWR.c", "QCPWR_c2649", L"{", L"pDevExt->PortName, ItemString -- 10" , L"pDevExt->WaitWakeIrp, ItemPtr -- 11" , L"IoStatus->Status, ItemLong -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c266_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 19 \"%0<%10!s!> PowerManagement: Unkown MN 0x%11!x!\" //   FLAG=QCSER_DBG_MASK_POWER LEVEL=QCSER_DBG_LEVEL_ERROR", __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c266_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 19 \"%0<%10!s!> PowerManagement: Unkown MN 0x%11!x!\" //   FLAG=QCSER_DBG_MASK_POWER LEVEL=QCSER_DBG_LEVEL_ERROR", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c266
    #define WPP_ANNOTATE_QCPWR_c266 WPP_ANNOTATE_QCPWR_c266_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c266 WPP_ANNOTATE_QCPWR_c266_FINAL("TMF:", "QCPWR.c", "QCPWR_c266", L"{", L"pDevExt->PortName, ItemString -- 10" , L"IrpStack->MinorFunction, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c2663_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 134 \"%0<%10!s!> TopWaitWakeCompletion: device up running\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR", __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c2663_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 134 \"%0<%10!s!> TopWaitWakeCompletion: device up running\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c2663
    #define WPP_ANNOTATE_QCPWR_c2663 WPP_ANNOTATE_QCPWR_c2663_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c2663 WPP_ANNOTATE_QCPWR_c2663_FINAL("TMF:", "QCPWR.c", "QCPWR_c2663", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c2676_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 135 \"%0<%10!s!> TopWaitWakeCompletion: powering down-no act\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR", __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c2676_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 135 \"%0<%10!s!> TopWaitWakeCompletion: powering down-no act\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c2676
    #define WPP_ANNOTATE_QCPWR_c2676 WPP_ANNOTATE_QCPWR_c2676_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c2676 WPP_ANNOTATE_QCPWR_c2676_FINAL("TMF:", "QCPWR.c", "QCPWR_c2676", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c2687_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 136 \"%0<%10!s!> TopWaitWakeCompletion: requesting D0\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR", __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c2687_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 136 \"%0<%10!s!> TopWaitWakeCompletion: requesting D0\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c2687
    #define WPP_ANNOTATE_QCPWR_c2687 WPP_ANNOTATE_QCPWR_c2687_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c2687 WPP_ANNOTATE_QCPWR_c2687_FINAL("TMF:", "QCPWR.c", "QCPWR_c2687", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c2700_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 137 \"%0<%10!s!> TopWaitWakeCompletion(DPWR): No dev req\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR", __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c2700_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 137 \"%0<%10!s!> TopWaitWakeCompletion(DPWR): No dev req\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c2700
    #define WPP_ANNOTATE_QCPWR_c2700 WPP_ANNOTATE_QCPWR_c2700_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c2700 WPP_ANNOTATE_QCPWR_c2700_FINAL("TMF:", "QCPWR.c", "QCPWR_c2700", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c2722_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 138 \"%0<%10!s!> TopWaitWakeCompletion: pwr IRP req failure 0x%11!x!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR", __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c2722_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 138 \"%0<%10!s!> TopWaitWakeCompletion: pwr IRP req failure 0x%11!x!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c2722
    #define WPP_ANNOTATE_QCPWR_c2722 WPP_ANNOTATE_QCPWR_c2722_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c2722 WPP_ANNOTATE_QCPWR_c2722_FINAL("TMF:", "QCPWR.c", "QCPWR_c2722", L"{", L"pDevExt->PortName, ItemString -- 10" , L"ntStatus, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c2753_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 139 \"%0<%10!s!> TopDeviceWakeUpCompletionRoutine: MN 0x%11!x! st 0x%12!x!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_DETAIL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c2753_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 139 \"%0<%10!s!> TopDeviceWakeUpCompletionRoutine: MN 0x%11!x! st 0x%12!x!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_DETAIL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c2753
    #define WPP_ANNOTATE_QCPWR_c2753 WPP_ANNOTATE_QCPWR_c2753_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemLong -- 12" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c2753 WPP_ANNOTATE_QCPWR_c2753_FINAL("TMF:", "QCPWR.c", "QCPWR_c2753", L"{", L"pDevExt->PortName, ItemString -- 10" , L"MinorFunction, ItemLong -- 11" , L"IoStatus->Status, ItemLong -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c2778_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 140 \"%0<%10!s!> CancelWaitWakeIrp(%11!u!) \" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_DETAIL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c2778_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 140 \"%0<%10!s!> CancelWaitWakeIrp(%11!u!) \" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_DETAIL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c2778
    #define WPP_ANNOTATE_QCPWR_c2778 WPP_ANNOTATE_QCPWR_c2778_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c2778 WPP_ANNOTATE_QCPWR_c2778_FINAL("TMF:", "QCPWR.c", "QCPWR_c2778", L"{", L"pDevExt->PortName, ItemString -- 10" , L"Cookie, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c282_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 20 \"%0<%10!s!> PIRP: (Ce 0x%11!x!) 0x%12!p!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_DETAIL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c282_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 20 \"%0<%10!s!> PIRP: (Ce 0x%11!x!) 0x%12!p!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_DETAIL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c282
    #define WPP_ANNOTATE_QCPWR_c282 WPP_ANNOTATE_QCPWR_c282_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemPtr -- 12" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c282 WPP_ANNOTATE_QCPWR_c282_FINAL("TMF:", "QCPWR.c", "QCPWR_c282", L"{", L"pDevExt->PortName, ItemString -- 10" , L"nts, ItemLong -- 11" , L"Irp, ItemPtr -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c2820_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 141 \"%0<%10!s!> WdmVersionIdx: %11!d!\" //   FLAG=(QCSER_DBG_MASK_CONTROL | QCSER_DBG_MASK_POWER) LEVEL=QCSER_DBG_LEVEL_CRITICAL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c2820_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 141 \"%0<%10!s!> WdmVersionIdx: %11!d!\" //   FLAG=(QCSER_DBG_MASK_CONTROL | QCSER_DBG_MASK_POWER) LEVEL=QCSER_DBG_LEVEL_CRITICAL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c2820
    #define WPP_ANNOTATE_QCPWR_c2820 WPP_ANNOTATE_QCPWR_c2820_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c2820 WPP_ANNOTATE_QCPWR_c2820_FINAL("TMF:", "QCPWR.c", "QCPWR_c2820", L"{", L"pDevExt->PortName, ItemString -- 10" , L"pDevExt->WdmVersion, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c2848_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 142 \"%0<%10!s!> -->CheckToWakeup(%11!u!) IRQL(%12!u!): IRP 0x%13!p! Susp %14!u!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_TRACE", __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c2848_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 142 \"%0<%10!s!> -->CheckToWakeup(%11!u!) IRQL(%12!u!): IRP 0x%13!p! Susp %14!u!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_TRACE", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c2848
    #define WPP_ANNOTATE_QCPWR_c2848 WPP_ANNOTATE_QCPWR_c2848_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemLong -- 12" , L"Arg, ItemPtr -- 13" , L"Arg, ItemLong -- 14" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c2848 WPP_ANNOTATE_QCPWR_c2848_FINAL("TMF:", "QCPWR.c", "QCPWR_c2848", L"{", L"pDevExt->PortName, ItemString -- 10" , L"Cookie, ItemLong -- 11" , L"KeGetCurrentIrql(), ItemLong -- 12" , L"Irp, ItemPtr -- 13" , L"pDevExt->PowerSuspended, ItemLong -- 14" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c293_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 21 \"%0<%10!s!> PIRP: (C FWD) 0x%11!p!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_DETAIL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c293_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 21 \"%0<%10!s!> PIRP: (C FWD) 0x%11!p!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_DETAIL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c293
    #define WPP_ANNOTATE_QCPWR_c293 WPP_ANNOTATE_QCPWR_c293_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemPtr -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c293 WPP_ANNOTATE_QCPWR_c293_FINAL("TMF:", "QCPWR.c", "QCPWR_c293", L"{", L"pDevExt->PortName, ItemString -- 10" , L"Irp, ItemPtr -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c2959_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 143 \"%0<%10!s!> <--CheckToWakeup(%11!u!): IRP 0x%12!p! Susp %13!u! hold %14!u! RM[0] %15!d!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_TRACE", __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c2959_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 143 \"%0<%10!s!> <--CheckToWakeup(%11!u!): IRP 0x%12!p! Susp %13!u! hold %14!u! RM[0] %15!d!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_TRACE", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c2959
    #define WPP_ANNOTATE_QCPWR_c2959 WPP_ANNOTATE_QCPWR_c2959_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemPtr -- 12" , L"Arg, ItemLong -- 13" , L"Arg, ItemLong -- 14" , L"Arg, ItemLong -- 15" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c2959 WPP_ANNOTATE_QCPWR_c2959_FINAL("TMF:", "QCPWR.c", "QCPWR_c2959", L"{", L"pDevExt->PortName, ItemString -- 10" , L"Cookie, ItemLong -- 11" , L"Irp, ItemPtr -- 12" , L"pDevExt->PowerSuspended, ItemLong -- 13" , L"holdRequest, ItemLong -- 14" , L"pDevExt->Sts.lRmlCount[0], ItemLong -- 15" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c2972_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 144 \"%0<%10!s!> -->ResumeDataThreads\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_DETAIL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c2972_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 144 \"%0<%10!s!> -->ResumeDataThreads\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_DETAIL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c2972
    #define WPP_ANNOTATE_QCPWR_c2972 WPP_ANNOTATE_QCPWR_c2972_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c2972 WPP_ANNOTATE_QCPWR_c2972_FINAL("TMF:", "QCPWR.c", "QCPWR_c2972", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c2999_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 145 \"%0<%10!s!> WTO-4\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR", __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c2999_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 145 \"%0<%10!s!> WTO-4\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c2999
    #define WPP_ANNOTATE_QCPWR_c2999 WPP_ANNOTATE_QCPWR_c2999_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c2999 WPP_ANNOTATE_QCPWR_c2999_FINAL("TMF:", "QCPWR.c", "QCPWR_c2999", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c3018_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 146 \"%0<%10!s!> <--ResumeDataThreads\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_DETAIL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c3018_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 146 \"%0<%10!s!> <--ResumeDataThreads\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_DETAIL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c3018
    #define WPP_ANNOTATE_QCPWR_c3018 WPP_ANNOTATE_QCPWR_c3018_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c3018 WPP_ANNOTATE_QCPWR_c3018_FINAL("TMF:", "QCPWR.c", "QCPWR_c3018", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c302_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 22 \"%0<%10!s!> PoCallDriver failure: IRP 0x%11!p!(0x%12!x!)\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_DETAIL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c302_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 22 \"%0<%10!s!> PoCallDriver failure: IRP 0x%11!p!(0x%12!x!)\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_DETAIL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c302
    #define WPP_ANNOTATE_QCPWR_c302 WPP_ANNOTATE_QCPWR_c302_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemPtr -- 11" , L"Arg, ItemLong -- 12" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c302 WPP_ANNOTATE_QCPWR_c302_FINAL("TMF:", "QCPWR.c", "QCPWR_c302", L"{", L"pDevExt->PortName, ItemString -- 10" , L"Irp, ItemPtr -- 11" , L"nts, ItemLong -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c3039_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 147 \"%0<%10!s!> -->RegisterWmiPowerGuids\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_TRACE", __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c3039_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 147 \"%0<%10!s!> -->RegisterWmiPowerGuids\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_TRACE", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c3039
    #define WPP_ANNOTATE_QCPWR_c3039 WPP_ANNOTATE_QCPWR_c3039_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c3039 WPP_ANNOTATE_QCPWR_c3039_FINAL("TMF:", "QCPWR.c", "QCPWR_c3039", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c3048_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 148 \"%0<%10!s!> <--RegisterWmiPowerGuids: dev not init\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_TRACE", __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c3048_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 148 \"%0<%10!s!> <--RegisterWmiPowerGuids: dev not init\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_TRACE", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c3048
    #define WPP_ANNOTATE_QCPWR_c3048 WPP_ANNOTATE_QCPWR_c3048_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c3048 WPP_ANNOTATE_QCPWR_c3048_FINAL("TMF:", "QCPWR.c", "QCPWR_c3048", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c3060_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 149 \"%0<%10!s!> RegisterWmiPowerGuids: dup req\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR", __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c3060_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 149 \"%0<%10!s!> RegisterWmiPowerGuids: dup req\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c3060
    #define WPP_ANNOTATE_QCPWR_c3060 WPP_ANNOTATE_QCPWR_c3060_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c3060 WPP_ANNOTATE_QCPWR_c3060_FINAL("TMF:", "QCPWR.c", "QCPWR_c3060", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c3093_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 150 \"%0<%10!s!> <--RegisterWmiPowerGuids ST 0x%11!x!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_TRACE", __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c3093_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 150 \"%0<%10!s!> <--RegisterWmiPowerGuids ST 0x%11!x!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_TRACE", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c3093
    #define WPP_ANNOTATE_QCPWR_c3093 WPP_ANNOTATE_QCPWR_c3093_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c3093 WPP_ANNOTATE_QCPWR_c3093_FINAL("TMF:", "QCPWR.c", "QCPWR_c3093", L"{", L"pDevExt->PortName, ItemString -- 10" , L"ntStatus, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c3110_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 151 \"%0<%10!s!> -->DeregisterWmiPowerGuids\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_TRACE", __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c3110_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 151 \"%0<%10!s!> -->DeregisterWmiPowerGuids\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_TRACE", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c3110
    #define WPP_ANNOTATE_QCPWR_c3110 WPP_ANNOTATE_QCPWR_c3110_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c3110 WPP_ANNOTATE_QCPWR_c3110_FINAL("TMF:", "QCPWR.c", "QCPWR_c3110", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c3134_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 152 \"%0<%10!s!> <--DeregisterWmiPowerGuids ST 0x%11!x!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_TRACE", __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c3134_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 152 \"%0<%10!s!> <--DeregisterWmiPowerGuids ST 0x%11!x!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_TRACE", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c3134
    #define WPP_ANNOTATE_QCPWR_c3134 WPP_ANNOTATE_QCPWR_c3134_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c3134 WPP_ANNOTATE_QCPWR_c3134_FINAL("TMF:", "QCPWR.c", "QCPWR_c3134", L"{", L"pDevExt->PortName, ItemString -- 10" , L"ntStatus, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c3151_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 153 \"%0<%10!s!> -->ProcessSystemControlIrps IRP 0x%11!p!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_TRACE", __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c3151_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 153 \"%0<%10!s!> -->ProcessSystemControlIrps IRP 0x%11!p!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_TRACE", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c3151
    #define WPP_ANNOTATE_QCPWR_c3151 WPP_ANNOTATE_QCPWR_c3151_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemPtr -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c3151 WPP_ANNOTATE_QCPWR_c3151_FINAL("TMF:", "QCPWR.c", "QCPWR_c3151", L"{", L"pDevExt->PortName, ItemString -- 10" , L"Irp, ItemPtr -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c316_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 23 \"%0<%10!s!> <--QCPWR_PowrerManagement (0x%11!x!): PIRP 0x%12!p!\" //   FLAG=QCSER_DBG_MASK_POWER LEVEL=QCSER_DBG_LEVEL_DETAIL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c316_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 23 \"%0<%10!s!> <--QCPWR_PowrerManagement (0x%11!x!): PIRP 0x%12!p!\" //   FLAG=QCSER_DBG_MASK_POWER LEVEL=QCSER_DBG_LEVEL_DETAIL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c316
    #define WPP_ANNOTATE_QCPWR_c316 WPP_ANNOTATE_QCPWR_c316_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemPtr -- 12" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c316 WPP_ANNOTATE_QCPWR_c316_FINAL("TMF:", "QCPWR.c", "QCPWR_c316", L"{", L"pDevExt->PortName, ItemString -- 10" , L"nts, ItemLong -- 11" , L"Irp, ItemPtr -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c3167_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 154 \"%0<%10!s!> ProcessSystemControlIrps: WmiSystemControl IRP 0x%11!p! ST 0x%12!x! (0x%13!x!)\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_DETAIL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c3167_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 154 \"%0<%10!s!> ProcessSystemControlIrps: WmiSystemControl IRP 0x%11!p! ST 0x%12!x! (0x%13!x!)\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_DETAIL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c3167
    #define WPP_ANNOTATE_QCPWR_c3167 WPP_ANNOTATE_QCPWR_c3167_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemPtr -- 11" , L"Arg, ItemLong -- 12" , L"Arg, ItemLong -- 13" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c3167 WPP_ANNOTATE_QCPWR_c3167_FINAL("TMF:", "QCPWR.c", "QCPWR_c3167", L"{", L"pDevExt->PortName, ItemString -- 10" , L"Irp, ItemPtr -- 11" , L"ntStatus, ItemLong -- 12" , L"irpDisposition, ItemLong -- 13" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c3183_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 155 \"%0<%10!s!> CIRP (C 0x%11!x!) 0x%12!p!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_DETAIL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c3183_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 155 \"%0<%10!s!> CIRP (C 0x%11!x!) 0x%12!p!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_DETAIL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c3183
    #define WPP_ANNOTATE_QCPWR_c3183 WPP_ANNOTATE_QCPWR_c3183_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemPtr -- 12" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c3183 WPP_ANNOTATE_QCPWR_c3183_FINAL("TMF:", "QCPWR.c", "QCPWR_c3183", L"{", L"pDevExt->PortName, ItemString -- 10" , L"Irp->IoStatus.Status, ItemLong -- 11" , L"Irp, ItemPtr -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c3206_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 156 \"%0<%10!s!> <--ProcessSystemControlIrps IRP 0x%11!p! (0x%12!x!)\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_TRACE", __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c3206_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 156 \"%0<%10!s!> <--ProcessSystemControlIrps IRP 0x%11!p! (0x%12!x!)\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_TRACE", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c3206
    #define WPP_ANNOTATE_QCPWR_c3206 WPP_ANNOTATE_QCPWR_c3206_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemPtr -- 11" , L"Arg, ItemLong -- 12" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c3206 WPP_ANNOTATE_QCPWR_c3206_FINAL("TMF:", "QCPWR.c", "QCPWR_c3206", L"{", L"pDevExt->PortName, ItemString -- 10" , L"Irp, ItemPtr -- 11" , L"ntStatus, ItemLong -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c3227_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 157 \"%0<%10!s!> -->PMQueryWmiRegInfo\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_TRACE", __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c3227_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 157 \"%0<%10!s!> -->PMQueryWmiRegInfo\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_TRACE", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c3227
    #define WPP_ANNOTATE_QCPWR_c3227 WPP_ANNOTATE_QCPWR_c3227_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c3227 WPP_ANNOTATE_QCPWR_c3227_FINAL("TMF:", "QCPWR.c", "QCPWR_c3227", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c3237_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 158 \"%0<%10!s!> PMQueryWmiRegInfo: no PDO\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR", __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c3237_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 158 \"%0<%10!s!> PMQueryWmiRegInfo: no PDO\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c3237
    #define WPP_ANNOTATE_QCPWR_c3237 WPP_ANNOTATE_QCPWR_c3237_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c3237 WPP_ANNOTATE_QCPWR_c3237_FINAL("TMF:", "QCPWR.c", "QCPWR_c3237", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c3253_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 159 \"%0<%10!s!> <--PMQueryWmiRegInfo\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_TRACE", __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c3253_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 159 \"%0<%10!s!> <--PMQueryWmiRegInfo\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_TRACE", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c3253
    #define WPP_ANNOTATE_QCPWR_c3253 WPP_ANNOTATE_QCPWR_c3253_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c3253 WPP_ANNOTATE_QCPWR_c3253_FINAL("TMF:", "QCPWR.c", "QCPWR_c3253", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c3281_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 160 \"%0<%10!s!> -->PMQueryWmiDataBlock: IRP 0x%11!p! GIDX %12!u! InsIdx %13!u! InsCnt %14!u!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_TRACE", __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c3281_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 160 \"%0<%10!s!> -->PMQueryWmiDataBlock: IRP 0x%11!p! GIDX %12!u! InsIdx %13!u! InsCnt %14!u!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_TRACE", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c3281
    #define WPP_ANNOTATE_QCPWR_c3281 WPP_ANNOTATE_QCPWR_c3281_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemPtr -- 11" , L"Arg, ItemLong -- 12" , L"Arg, ItemLong -- 13" , L"Arg, ItemLong -- 14" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c3281 WPP_ANNOTATE_QCPWR_c3281_FINAL("TMF:", "QCPWR.c", "QCPWR_c3281", L"{", L"pDevExt->PortName, ItemString -- 10" , L"Irp, ItemPtr -- 11" , L"GuidIndex, ItemLong -- 12" , L"InstanceIndex, ItemLong -- 13" , L"InstanceCount, ItemLong -- 14" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c3314_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 161 \"%0<%10!s!> PMQueryWmiDataBlock: IRP 0x%11!p! buf too small %12!u!B\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR", __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c3314_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 161 \"%0<%10!s!> PMQueryWmiDataBlock: IRP 0x%11!p! buf too small %12!u!B\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c3314
    #define WPP_ANNOTATE_QCPWR_c3314 WPP_ANNOTATE_QCPWR_c3314_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemPtr -- 11" , L"Arg, ItemLong -- 12" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c3314 WPP_ANNOTATE_QCPWR_c3314_FINAL("TMF:", "QCPWR.c", "QCPWR_c3314", L"{", L"pDevExt->PortName, ItemString -- 10" , L"Irp, ItemPtr -- 11" , L"BufferAvail, ItemLong -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c3325_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 162 \"%0<%10!s!> PMQueryWmiDataBlock: IRP 0x%11!p! WaitWakeEnabled %12!u!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR", __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c3325_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 162 \"%0<%10!s!> PMQueryWmiDataBlock: IRP 0x%11!p! WaitWakeEnabled %12!u!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c3325
    #define WPP_ANNOTATE_QCPWR_c3325 WPP_ANNOTATE_QCPWR_c3325_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemPtr -- 11" , L"Arg, ItemLong -- 12" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c3325 WPP_ANNOTATE_QCPWR_c3325_FINAL("TMF:", "QCPWR.c", "QCPWR_c3325", L"{", L"pDevExt->PortName, ItemString -- 10" , L"Irp, ItemPtr -- 11" , L"pDevExt->WaitWakeEnabled, ItemLong -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c3341_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 163 \"%0<%10!s!> CIRP (Cw0 0x%11!x!/0x%12!x!) 0x%13!p!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_DETAIL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c3341_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 163 \"%0<%10!s!> CIRP (Cw0 0x%11!x!/0x%12!x!) 0x%13!p!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_DETAIL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c3341
    #define WPP_ANNOTATE_QCPWR_c3341 WPP_ANNOTATE_QCPWR_c3341_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemLong -- 12" , L"Arg, ItemPtr -- 13" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c3341 WPP_ANNOTATE_QCPWR_c3341_FINAL("TMF:", "QCPWR.c", "QCPWR_c3341", L"{", L"pDevExt->PortName, ItemString -- 10" , L"Irp->IoStatus.Status, ItemLong -- 11" , L"ntStatus, ItemLong -- 12" , L"Irp, ItemPtr -- 13" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c3357_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 164 \"%0<%10!s!> <--PMQueryWmiDataBlock: IRP 0x%11!p!(ST 0x%12!x!) GIDX %13!u! InsIdx %14!u! InsCnt %15!u!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_TRACE", __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c3357_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 164 \"%0<%10!s!> <--PMQueryWmiDataBlock: IRP 0x%11!p!(ST 0x%12!x!) GIDX %13!u! InsIdx %14!u! InsCnt %15!u!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_TRACE", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c3357
    #define WPP_ANNOTATE_QCPWR_c3357 WPP_ANNOTATE_QCPWR_c3357_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemPtr -- 11" , L"Arg, ItemLong -- 12" , L"Arg, ItemLong -- 13" , L"Arg, ItemLong -- 14" , L"Arg, ItemLong -- 15" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c3357 WPP_ANNOTATE_QCPWR_c3357_FINAL("TMF:", "QCPWR.c", "QCPWR_c3357", L"{", L"pDevExt->PortName, ItemString -- 10" , L"Irp, ItemPtr -- 11" , L"ntStatus, ItemLong -- 12" , L"GuidIndex, ItemLong -- 13" , L"InstanceIndex, ItemLong -- 14" , L"InstanceCount, ItemLong -- 15" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c337_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 24 \"%0<%10!s!> PIRP: (Cdp) 0x%11!p!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR", __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c337_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 24 \"%0<%10!s!> PIRP: (Cdp) 0x%11!p!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c337
    #define WPP_ANNOTATE_QCPWR_c337 WPP_ANNOTATE_QCPWR_c337_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemPtr -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c337 WPP_ANNOTATE_QCPWR_c337_FINAL("TMF:", "QCPWR.c", "QCPWR_c337", L"{", L"pDevExt->PortName, ItemString -- 10" , L"Irp, ItemPtr -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c3383_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 165 \"%0<%10!s!> -->PMSetWmiDataBlock: IRP 0x%11!p! GIDX %12!u! InsIdx %13!u!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_TRACE", __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c3383_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 165 \"%0<%10!s!> -->PMSetWmiDataBlock: IRP 0x%11!p! GIDX %12!u! InsIdx %13!u!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_TRACE", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c3383
    #define WPP_ANNOTATE_QCPWR_c3383 WPP_ANNOTATE_QCPWR_c3383_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemPtr -- 11" , L"Arg, ItemLong -- 12" , L"Arg, ItemLong -- 13" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c3383 WPP_ANNOTATE_QCPWR_c3383_FINAL("TMF:", "QCPWR.c", "QCPWR_c3383", L"{", L"pDevExt->PortName, ItemString -- 10" , L"Irp, ItemPtr -- 11" , L"GuidIndex, ItemLong -- 12" , L"InstanceIndex, ItemLong -- 13" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c3424_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 166 \"%0<%10!s!> CIRP (Cw1 0x%11!x!/0x%12!x!) 0x%13!p!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_DETAIL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c3424_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 166 \"%0<%10!s!> CIRP (Cw1 0x%11!x!/0x%12!x!) 0x%13!p!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_DETAIL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c3424
    #define WPP_ANNOTATE_QCPWR_c3424 WPP_ANNOTATE_QCPWR_c3424_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemLong -- 12" , L"Arg, ItemPtr -- 13" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c3424 WPP_ANNOTATE_QCPWR_c3424_FINAL("TMF:", "QCPWR.c", "QCPWR_c3424", L"{", L"pDevExt->PortName, ItemString -- 10" , L"Irp->IoStatus.Status, ItemLong -- 11" , L"ntStatus, ItemLong -- 12" , L"Irp, ItemPtr -- 13" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c3440_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 167 \"%0<%10!s!> <--PMSetWmiDataBlock: IRP 0x%11!p! (ST 0x%12!x!) GIDX %13!u! InsIdx %14!u!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_TRACE", __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c3440_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 167 \"%0<%10!s!> <--PMSetWmiDataBlock: IRP 0x%11!p! (ST 0x%12!x!) GIDX %13!u! InsIdx %14!u!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_TRACE", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c3440
    #define WPP_ANNOTATE_QCPWR_c3440 WPP_ANNOTATE_QCPWR_c3440_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemPtr -- 11" , L"Arg, ItemLong -- 12" , L"Arg, ItemLong -- 13" , L"Arg, ItemLong -- 14" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c3440 WPP_ANNOTATE_QCPWR_c3440_FINAL("TMF:", "QCPWR.c", "QCPWR_c3440", L"{", L"pDevExt->PortName, ItemString -- 10" , L"Irp, ItemPtr -- 11" , L"ntStatus, ItemLong -- 12" , L"GuidIndex, ItemLong -- 13" , L"InstanceIndex, ItemLong -- 14" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c3469_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 168 \"%0<%10!s!> -->PMSetWmiDataItem: IRP 0x%11!p! GIDX %12!u! InsIdx %13!u! ItmId %14!u!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_TRACE", __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c3469_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 168 \"%0<%10!s!> -->PMSetWmiDataItem: IRP 0x%11!p! GIDX %12!u! InsIdx %13!u! ItmId %14!u!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_TRACE", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c3469
    #define WPP_ANNOTATE_QCPWR_c3469 WPP_ANNOTATE_QCPWR_c3469_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemPtr -- 11" , L"Arg, ItemLong -- 12" , L"Arg, ItemLong -- 13" , L"Arg, ItemLong -- 14" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c3469 WPP_ANNOTATE_QCPWR_c3469_FINAL("TMF:", "QCPWR.c", "QCPWR_c3469", L"{", L"pDevExt->PortName, ItemString -- 10" , L"Irp, ItemPtr -- 11" , L"GuidIndex, ItemLong -- 12" , L"InstanceIndex, ItemLong -- 13" , L"DataItemId, ItemLong -- 14" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c3505_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 169 \"%0<%10!s!> CIRP (Cw2 0x%11!x!/0x%12!x!) 0x%13!p!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_DETAIL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c3505_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 169 \"%0<%10!s!> CIRP (Cw2 0x%11!x!/0x%12!x!) 0x%13!p!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_DETAIL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c3505
    #define WPP_ANNOTATE_QCPWR_c3505 WPP_ANNOTATE_QCPWR_c3505_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemLong -- 12" , L"Arg, ItemPtr -- 13" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c3505 WPP_ANNOTATE_QCPWR_c3505_FINAL("TMF:", "QCPWR.c", "QCPWR_c3505", L"{", L"pDevExt->PortName, ItemString -- 10" , L"Irp->IoStatus.Status, ItemLong -- 11" , L"ntStatus, ItemLong -- 12" , L"Irp, ItemPtr -- 13" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c352_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 25 \"%0<%10!s!> PIRP (FWDi 0x%11!x!) 0x%12!p!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR", __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c352_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 25 \"%0<%10!s!> PIRP (FWDi 0x%11!x!) 0x%12!p!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c352
    #define WPP_ANNOTATE_QCPWR_c352 WPP_ANNOTATE_QCPWR_c352_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemPtr -- 12" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c352 WPP_ANNOTATE_QCPWR_c352_FINAL("TMF:", "QCPWR.c", "QCPWR_c352", L"{", L"pDevExt->PortName, ItemString -- 10" , L"*pNtStatus, ItemLong -- 11" , L"Irp, ItemPtr -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c3521_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 170 \"%0<%10!s!> <--PMSetWmiDataItem: IRP 0x%11!p! (ST 0x%12!x!) GIDX %13!u! InsIdx %14!u! ItmId %15!u!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_TRACE", __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c3521_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 170 \"%0<%10!s!> <--PMSetWmiDataItem: IRP 0x%11!p! (ST 0x%12!x!) GIDX %13!u! InsIdx %14!u! ItmId %15!u!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_TRACE", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c3521
    #define WPP_ANNOTATE_QCPWR_c3521 WPP_ANNOTATE_QCPWR_c3521_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemPtr -- 11" , L"Arg, ItemLong -- 12" , L"Arg, ItemLong -- 13" , L"Arg, ItemLong -- 14" , L"Arg, ItemLong -- 15" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c3521 WPP_ANNOTATE_QCPWR_c3521_FINAL("TMF:", "QCPWR.c", "QCPWR_c3521", L"{", L"pDevExt->PortName, ItemString -- 10" , L"Irp, ItemPtr -- 11" , L"ntStatus, ItemLong -- 12" , L"GuidIndex, ItemLong -- 13" , L"InstanceIndex, ItemLong -- 14" , L"DataItemId, ItemLong -- 15" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c3538_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 171 \"%0<%10!s!> -->SetPMState: %11!u!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_TRACE", __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c3538_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 171 \"%0<%10!s!> -->SetPMState: %11!u!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_TRACE", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c3538
    #define WPP_ANNOTATE_QCPWR_c3538 WPP_ANNOTATE_QCPWR_c3538_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c3538 WPP_ANNOTATE_QCPWR_c3538_FINAL("TMF:", "QCPWR.c", "QCPWR_c3538", L"{", L"pDevExt->PortName, ItemString -- 10" , L"IsEnabled, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c3577_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 172 \"%0<%10!s!> <--SetPMState: %11!u! (ST 0x%12!x!)\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_TRACE", __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c3577_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 172 \"%0<%10!s!> <--SetPMState: %11!u! (ST 0x%12!x!)\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_TRACE", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c3577
    #define WPP_ANNOTATE_QCPWR_c3577 WPP_ANNOTATE_QCPWR_c3577_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemLong -- 12" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c3577 WPP_ANNOTATE_QCPWR_c3577_FINAL("TMF:", "QCPWR.c", "QCPWR_c3577", L"{", L"pDevExt->PortName, ItemString -- 10" , L"IsEnabled, ItemLong -- 11" , L"ntStatus, ItemLong -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c3595_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 173 \"%0<%10!s!> -->SetWaitWakeState: %11!u!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_TRACE", __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c3595_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 173 \"%0<%10!s!> -->SetWaitWakeState: %11!u!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_TRACE", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c3595
    #define WPP_ANNOTATE_QCPWR_c3595 WPP_ANNOTATE_QCPWR_c3595_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c3595 WPP_ANNOTATE_QCPWR_c3595_FINAL("TMF:", "QCPWR.c", "QCPWR_c3595", L"{", L"pDevExt->PortName, ItemString -- 10" , L"IsEnabled, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c3634_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 174 \"%0<%10!s!> <--SetWaitWakeState: %11!u! (ST 0x%12!x!)\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_TRACE", __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c3634_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 174 \"%0<%10!s!> <--SetWaitWakeState: %11!u! (ST 0x%12!x!)\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_TRACE", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c3634
    #define WPP_ANNOTATE_QCPWR_c3634 WPP_ANNOTATE_QCPWR_c3634_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemLong -- 12" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c3634 WPP_ANNOTATE_QCPWR_c3634_FINAL("TMF:", "QCPWR.c", "QCPWR_c3634", L"{", L"pDevExt->PortName, ItemString -- 10" , L"IsEnabled, ItemLong -- 11" , L"ntStatus, ItemLong -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c3670_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 175 \"%0<%10!s!> VerifyDeviceCapabilities: S0 maps to D%11!u!, use D0\" //   FLAG=QCSER_DBG_MASK_CONTROL LEVEL=QCSER_DBG_LEVEL_ERROR", __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c3670_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 175 \"%0<%10!s!> VerifyDeviceCapabilities: S0 maps to D%11!u!, use D0\" //   FLAG=QCSER_DBG_MASK_CONTROL LEVEL=QCSER_DBG_LEVEL_ERROR", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c3670
    #define WPP_ANNOTATE_QCPWR_c3670 WPP_ANNOTATE_QCPWR_c3670_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c3670 WPP_ANNOTATE_QCPWR_c3670_FINAL("TMF:", "QCPWR.c", "QCPWR_c3670", L"{", L"pDevExt->PortName, ItemString -- 10" , L"pDevExt->DeviceCapabilities.DeviceState[PowerSystemWorking]-1, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c3684_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 176 \"%0<%10!s!> VerifyDeviceCapabilities: S1 maps to D%11!u!, use D3\" //   FLAG=QCSER_DBG_MASK_CONTROL LEVEL=QCSER_DBG_LEVEL_ERROR", __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c3684_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 176 \"%0<%10!s!> VerifyDeviceCapabilities: S1 maps to D%11!u!, use D3\" //   FLAG=QCSER_DBG_MASK_CONTROL LEVEL=QCSER_DBG_LEVEL_ERROR", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c3684
    #define WPP_ANNOTATE_QCPWR_c3684 WPP_ANNOTATE_QCPWR_c3684_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c3684 WPP_ANNOTATE_QCPWR_c3684_FINAL("TMF:", "QCPWR.c", "QCPWR_c3684", L"{", L"pDevExt->PortName, ItemString -- 10" , L"pDevExt->DeviceCapabilities.DeviceState[PowerSystemSleeping1]-1, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c3698_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 177 \"%0<%10!s!> VerifyDeviceCapabilities: S2 maps to D%11!u!, use D3\" //   FLAG=QCSER_DBG_MASK_CONTROL LEVEL=QCSER_DBG_LEVEL_ERROR", __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c3698_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 177 \"%0<%10!s!> VerifyDeviceCapabilities: S2 maps to D%11!u!, use D3\" //   FLAG=QCSER_DBG_MASK_CONTROL LEVEL=QCSER_DBG_LEVEL_ERROR", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c3698
    #define WPP_ANNOTATE_QCPWR_c3698 WPP_ANNOTATE_QCPWR_c3698_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c3698 WPP_ANNOTATE_QCPWR_c3698_FINAL("TMF:", "QCPWR.c", "QCPWR_c3698", L"{", L"pDevExt->PortName, ItemString -- 10" , L"pDevExt->DeviceCapabilities.DeviceState[PowerSystemSleeping2]-1, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c3712_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 178 \"%0<%10!s!> VerifyDeviceCapabilities: S3 maps to D%11!u!, use D3\" //   FLAG=QCSER_DBG_MASK_CONTROL LEVEL=QCSER_DBG_LEVEL_ERROR", __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c3712_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 178 \"%0<%10!s!> VerifyDeviceCapabilities: S3 maps to D%11!u!, use D3\" //   FLAG=QCSER_DBG_MASK_CONTROL LEVEL=QCSER_DBG_LEVEL_ERROR", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c3712
    #define WPP_ANNOTATE_QCPWR_c3712 WPP_ANNOTATE_QCPWR_c3712_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c3712 WPP_ANNOTATE_QCPWR_c3712_FINAL("TMF:", "QCPWR.c", "QCPWR_c3712", L"{", L"pDevExt->PortName, ItemString -- 10" , L"pDevExt->DeviceCapabilities.DeviceState[PowerSystemSleeping3]-1, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c3746_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 179 \"%0<%10!s!> DSP: PWR IRP 0x%11!p!/0x%12!p! to front-A\" //   FLAG=QCSER_DBG_MASK_POWER LEVEL=QCSER_DBG_LEVEL_DETAIL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c3746_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 179 \"%0<%10!s!> DSP: PWR IRP 0x%11!p!/0x%12!p! to front-A\" //   FLAG=QCSER_DBG_MASK_POWER LEVEL=QCSER_DBG_LEVEL_DETAIL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c3746
    #define WPP_ANNOTATE_QCPWR_c3746 WPP_ANNOTATE_QCPWR_c3746_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemPtr -- 11" , L"Arg, ItemPtr -- 12" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c3746 WPP_ANNOTATE_QCPWR_c3746_FINAL("TMF:", "QCPWR.c", "QCPWR_c3746", L"{", L"pDevExt->PortName, ItemString -- 10" , L"DspIoBlock->Irp, ItemPtr -- 11" , L"DspIoBlock, ItemPtr -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c3769_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 180 \"%0<%10!s!> DSP: PWR IRP 0x%11!p!/0x%12!p! before 0x%13!x! CNT %14!d!\" //   FLAG=QCSER_DBG_MASK_POWER LEVEL=QCSER_DBG_LEVEL_DETAIL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c3769_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 180 \"%0<%10!s!> DSP: PWR IRP 0x%11!p!/0x%12!p! before 0x%13!x! CNT %14!d!\" //   FLAG=QCSER_DBG_MASK_POWER LEVEL=QCSER_DBG_LEVEL_DETAIL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c3769
    #define WPP_ANNOTATE_QCPWR_c3769 WPP_ANNOTATE_QCPWR_c3769_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemPtr -- 11" , L"Arg, ItemPtr -- 12" , L"Arg, ItemLong -- 13" , L"Arg, ItemLong -- 14" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c3769 WPP_ANNOTATE_QCPWR_c3769_FINAL("TMF:", "QCPWR.c", "QCPWR_c3769", L"{", L"pDevExt->PortName, ItemString -- 10" , L"DspIoBlock->Irp, ItemPtr -- 11" , L"DspIoBlock, ItemPtr -- 12" , L"irpStack->MajorFunction, ItemLong -- 13" , L"cnt, ItemLong -- 14" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c3786_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 181 \"%0<%10!s!> DSP: PWR IRP 0x%11!p!/0x%12!p! to front-B CNT %13!d!\" //   FLAG=QCSER_DBG_MASK_POWER LEVEL=QCSER_DBG_LEVEL_DETAIL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c3786_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 181 \"%0<%10!s!> DSP: PWR IRP 0x%11!p!/0x%12!p! to front-B CNT %13!d!\" //   FLAG=QCSER_DBG_MASK_POWER LEVEL=QCSER_DBG_LEVEL_DETAIL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c3786
    #define WPP_ANNOTATE_QCPWR_c3786 WPP_ANNOTATE_QCPWR_c3786_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemPtr -- 11" , L"Arg, ItemPtr -- 12" , L"Arg, ItemLong -- 13" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c3786 WPP_ANNOTATE_QCPWR_c3786_FINAL("TMF:", "QCPWR.c", "QCPWR_c3786", L"{", L"pDevExt->PortName, ItemString -- 10" , L"DspIoBlock->Irp, ItemPtr -- 11" , L"DspIoBlock, ItemPtr -- 12" , L"cnt, ItemLong -- 13" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c379_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 26 \"%0<%10!s!> QuerySystemPowerState: dev in service, reject.\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR", __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c379_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 26 \"%0<%10!s!> QuerySystemPowerState: dev in service, reject.\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c379
    #define WPP_ANNOTATE_QCPWR_c379 WPP_ANNOTATE_QCPWR_c379_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c379 WPP_ANNOTATE_QCPWR_c379_FINAL("TMF:", "QCPWR.c", "QCPWR_c379", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c3821_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 182 \"%0<%10!s!> -->EnqueueDevicePowerRequest(DPWR): %11!u!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_TRACE", __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c3821_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 182 \"%0<%10!s!> -->EnqueueDevicePowerRequest(DPWR): %11!u!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_TRACE", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c3821
    #define WPP_ANNOTATE_QCPWR_c3821 WPP_ANNOTATE_QCPWR_c3821_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c3821 WPP_ANNOTATE_QCPWR_c3821_FINAL("TMF:", "QCPWR.c", "QCPWR_c3821", L"{", L"pDevExt->PortName, ItemString -- 10" , L"PowerState, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c3841_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 183 \"%0<%10!s!> <--EnqueueDevicePowerRequest(DPWR): already in D%11!u!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR", __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c3841_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 183 \"%0<%10!s!> <--EnqueueDevicePowerRequest(DPWR): already in D%11!u!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c3841
    #define WPP_ANNOTATE_QCPWR_c3841 WPP_ANNOTATE_QCPWR_c3841_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c3841 WPP_ANNOTATE_QCPWR_c3841_FINAL("TMF:", "QCPWR.c", "QCPWR_c3841", L"{", L"pDevExt->PortName, ItemString -- 10" , L"PowerState-1, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c3851_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 184 \"%0<%10!s!> EnqueueDevicePowerRequest(DPWR): in D%11!u!, req again\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR", __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c3851_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 184 \"%0<%10!s!> EnqueueDevicePowerRequest(DPWR): in D%11!u!, req again\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c3851
    #define WPP_ANNOTATE_QCPWR_c3851 WPP_ANNOTATE_QCPWR_c3851_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c3851 WPP_ANNOTATE_QCPWR_c3851_FINAL("TMF:", "QCPWR.c", "QCPWR_c3851", L"{", L"pDevExt->PortName, ItemString -- 10" , L"PowerState-1, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c3862_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 185 \"%0<%10!s!> <--EnqueueDevicePowerRequest(DPWR): DUP D%11!u!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR", __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c3862_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 185 \"%0<%10!s!> <--EnqueueDevicePowerRequest(DPWR): DUP D%11!u!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c3862
    #define WPP_ANNOTATE_QCPWR_c3862 WPP_ANNOTATE_QCPWR_c3862_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c3862 WPP_ANNOTATE_QCPWR_c3862_FINAL("TMF:", "QCPWR.c", "QCPWR_c3862", L"{", L"pDevExt->PortName, ItemString -- 10" , L"PowerState-1, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c3874_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 186 \"%0<%10!s!> <--EnqueueDevicePowerRequest(DPWR): NO_MEM\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR", __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c3874_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 186 \"%0<%10!s!> <--EnqueueDevicePowerRequest(DPWR): NO_MEM\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c3874
    #define WPP_ANNOTATE_QCPWR_c3874 WPP_ANNOTATE_QCPWR_c3874_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c3874 WPP_ANNOTATE_QCPWR_c3874_FINAL("TMF:", "QCPWR.c", "QCPWR_c3874", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c3889_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 187 \"%0<%10!s!> <--EnqueueDevicePowerRequest(DPWR): %11!u!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_TRACE", __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c3889_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 187 \"%0<%10!s!> <--EnqueueDevicePowerRequest(DPWR): %11!u!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_TRACE", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c3889
    #define WPP_ANNOTATE_QCPWR_c3889 WPP_ANNOTATE_QCPWR_c3889_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c3889 WPP_ANNOTATE_QCPWR_c3889_FINAL("TMF:", "QCPWR.c", "QCPWR_c3889", L"{", L"pDevExt->PortName, ItemString -- 10" , L"PowerState, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c3923_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 188 \"%0<%10!s!> DequeueDevicePowerRequest(DPWR): error (no req)\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR", __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c3923_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 188 \"%0<%10!s!> DequeueDevicePowerRequest(DPWR): error (no req)\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c3923
    #define WPP_ANNOTATE_QCPWR_c3923 WPP_ANNOTATE_QCPWR_c3923_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c3923 WPP_ANNOTATE_QCPWR_c3923_FINAL("TMF:", "QCPWR.c", "QCPWR_c3923", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c3978_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 189 \"%0<%10!s!> PurgeDevicePowerQueue(DPWR): not empty!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR", __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c3978_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 189 \"%0<%10!s!> PurgeDevicePowerQueue(DPWR): not empty!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c3978
    #define WPP_ANNOTATE_QCPWR_c3978 WPP_ANNOTATE_QCPWR_c3978_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c3978 WPP_ANNOTATE_QCPWR_c3978_FINAL("TMF:", "QCPWR.c", "QCPWR_c3978", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c423_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 27 \"%0<%10!s!> QuerySystemPowerState: invalid state req1 - %11!u!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR", __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c423_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 27 \"%0<%10!s!> QuerySystemPowerState: invalid state req1 - %11!u!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c423
    #define WPP_ANNOTATE_QCPWR_c423 WPP_ANNOTATE_QCPWR_c423_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c423 WPP_ANNOTATE_QCPWR_c423_FINAL("TMF:", "QCPWR.c", "QCPWR_c423", L"{", L"pDevExt->PortName, ItemString -- 10" , L"PowerState, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c447_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 28 \"%0<%10!s!> SystemPowerRequestCompletion: IRP 0x%11!p!(0x%12!x!)\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_DETAIL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c447_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 28 \"%0<%10!s!> SystemPowerRequestCompletion: IRP 0x%11!p!(0x%12!x!)\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_DETAIL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c447
    #define WPP_ANNOTATE_QCPWR_c447 WPP_ANNOTATE_QCPWR_c447_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemPtr -- 11" , L"Arg, ItemLong -- 12" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c447 WPP_ANNOTATE_QCPWR_c447_FINAL("TMF:", "QCPWR.c", "QCPWR_c447", L"{", L"pDevExt->PortName, ItemString -- 10" , L"Irp, ItemPtr -- 11" , L"ntStatus, ItemLong -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c459_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 29 \"%0<%10!s!> PIRP (Ce 0x%11!x!) 0x%12!p!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR", __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c459_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 29 \"%0<%10!s!> PIRP (Ce 0x%11!x!) 0x%12!p!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c459
    #define WPP_ANNOTATE_QCPWR_c459 WPP_ANNOTATE_QCPWR_c459_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemPtr -- 12" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c459 WPP_ANNOTATE_QCPWR_c459_FINAL("TMF:", "QCPWR.c", "QCPWR_c459", L"{", L"pDevExt->PortName, ItemString -- 10" , L"ntStatus, ItemLong -- 11" , L"Irp, ItemPtr -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c481_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 30 \"%0<%10!s!> SysPwrReqCompletion: 0x%11!p! [PrepareToPowerDown 0]\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_DETAIL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c481_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 30 \"%0<%10!s!> SysPwrReqCompletion: 0x%11!p! [PrepareToPowerDown 0]\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_DETAIL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c481
    #define WPP_ANNOTATE_QCPWR_c481 WPP_ANNOTATE_QCPWR_c481_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemPtr -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c481 WPP_ANNOTATE_QCPWR_c481_FINAL("TMF:", "QCPWR.c", "QCPWR_c481", L"{", L"pDevExt->PortName, ItemString -- 10" , L"Irp, ItemPtr -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c511_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 31 \"%0<%10!s!> ReqDevicePowerIrp: SysPwrIRP 0x%11!p!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_DETAIL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c511_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 31 \"%0<%10!s!> ReqDevicePowerIrp: SysPwrIRP 0x%11!p!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_DETAIL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c511
    #define WPP_ANNOTATE_QCPWR_c511 WPP_ANNOTATE_QCPWR_c511_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemPtr -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c511 WPP_ANNOTATE_QCPWR_c511_FINAL("TMF:", "QCPWR.c", "QCPWR_c511", L"{", L"pDevExt->PortName, ItemString -- 10" , L"Irp, ItemPtr -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c524_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 32 \"%0<%10!s!> ReqDevicePowerIrp: unexpected pwr map (sys[%11!u!]<->dev[%12!u!])\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR", __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c524_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 32 \"%0<%10!s!> ReqDevicePowerIrp: unexpected pwr map (sys[%11!u!]<->dev[%12!u!])\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c524
    #define WPP_ANNOTATE_QCPWR_c524 WPP_ANNOTATE_QCPWR_c524_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemLong -- 12" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c524 WPP_ANNOTATE_QCPWR_c524_FINAL("TMF:", "QCPWR.c", "QCPWR_c524", L"{", L"pDevExt->PortName, ItemString -- 10" , L"systemState, ItemLong -- 11" , L"devState, ItemLong -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c558_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 33 \"%0<%10!s!> LONGHORN fast resume: to complete SysIrp 0x%11!p!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_DETAIL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c558_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 33 \"%0<%10!s!> LONGHORN fast resume: to complete SysIrp 0x%11!p!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_DETAIL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c558
    #define WPP_ANNOTATE_QCPWR_c558 WPP_ANNOTATE_QCPWR_c558_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemPtr -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c558 WPP_ANNOTATE_QCPWR_c558_FINAL("TMF:", "QCPWR.c", "QCPWR_c558", L"{", L"pDevExt->PortName, ItemString -- 10" , L"Irp, ItemPtr -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c581_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 34 \"%0<%10!s!> PIRP (Csys 0) 0x%11!p! dev req2 0x%12!x!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR", __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c581_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 34 \"%0<%10!s!> PIRP (Csys 0) 0x%11!p! dev req2 0x%12!x!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c581
    #define WPP_ANNOTATE_QCPWR_c581 WPP_ANNOTATE_QCPWR_c581_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemPtr -- 11" , L"Arg, ItemLong -- 12" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c581 WPP_ANNOTATE_QCPWR_c581_FINAL("TMF:", "QCPWR.c", "QCPWR_c581", L"{", L"pDevExt->PortName, ItemString -- 10" , L"Irp, ItemPtr -- 11" , L"ntStatus, ItemLong -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c606_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 35 \"%0<%10!s!> PIRP (Csys 0) 0x%11!p! (DPWR) No dev req [PrepareToPowerDown %12!d!]\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR", __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c606_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 35 \"%0<%10!s!> PIRP (Csys 0) 0x%11!p! (DPWR) No dev req [PrepareToPowerDown %12!d!]\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c606
    #define WPP_ANNOTATE_QCPWR_c606 WPP_ANNOTATE_QCPWR_c606_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemPtr -- 11" , L"Arg, ItemLong -- 12" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c606 WPP_ANNOTATE_QCPWR_c606_FINAL("TMF:", "QCPWR.c", "QCPWR_c606", L"{", L"pDevExt->PortName, ItemString -- 10" , L"Irp, ItemPtr -- 11" , L"pDevExt->PrepareToPowerDown, ItemLong -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c642_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 36 \"%0<%10!s!> PIRP (Csys 0) 0x%11!p! dev req 0x%12!x!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR", __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c642_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 36 \"%0<%10!s!> PIRP (Csys 0) 0x%11!p! dev req 0x%12!x!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c642
    #define WPP_ANNOTATE_QCPWR_c642 WPP_ANNOTATE_QCPWR_c642_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemPtr -- 11" , L"Arg, ItemLong -- 12" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c642 WPP_ANNOTATE_QCPWR_c642_FINAL("TMF:", "QCPWR.c", "QCPWR_c642", L"{", L"pDevExt->PortName, ItemString -- 10" , L"Irp, ItemPtr -- 11" , L"ntStatus, ItemLong -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c673_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 37 \"%0<%10!s!> TopDevicePowerIrpCompletion: sIRP 0x%11!p! DevObj 0x%12!p!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_DETAIL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c673_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 37 \"%0<%10!s!> TopDevicePowerIrpCompletion: sIRP 0x%11!p! DevObj 0x%12!p!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_DETAIL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c673
    #define WPP_ANNOTATE_QCPWR_c673 WPP_ANNOTATE_QCPWR_c673_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemPtr -- 11" , L"Arg, ItemPtr -- 12" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c673 WPP_ANNOTATE_QCPWR_c673_FINAL("TMF:", "QCPWR.c", "QCPWR_c673", L"{", L"pDevExt->PortName, ItemString -- 10" , L"systemPwrIrp, ItemPtr -- 11" , L"DeviceObject, ItemPtr -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c711_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 38 \"%0<%10!s!> PIRP (Csys 0x%11!x!) 0x%12!p! [PrepareToPowerDown %13!u!]\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_DETAIL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c711_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 38 \"%0<%10!s!> PIRP (Csys 0x%11!x!) 0x%12!p! [PrepareToPowerDown %13!u!]\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_DETAIL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c711
    #define WPP_ANNOTATE_QCPWR_c711 WPP_ANNOTATE_QCPWR_c711_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemPtr -- 12" , L"Arg, ItemLong -- 13" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c711 WPP_ANNOTATE_QCPWR_c711_FINAL("TMF:", "QCPWR.c", "QCPWR_c711", L"{", L"pDevExt->PortName, ItemString -- 10" , L"IoStatus->Status, ItemLong -- 11" , L"systemPwrIrp, ItemPtr -- 12" , L"pDevExt->PrepareToPowerDown, ItemLong -- 13" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c72_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 10 \"%0<%10!s!> -->QCPWR_PowrerManagement: PIRP 0x%11!p!\" //   FLAG=QCSER_DBG_MASK_POWER LEVEL=QCSER_DBG_LEVEL_DETAIL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c72_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 10 \"%0<%10!s!> -->QCPWR_PowrerManagement: PIRP 0x%11!p!\" //   FLAG=QCSER_DBG_MASK_POWER LEVEL=QCSER_DBG_LEVEL_DETAIL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c72
    #define WPP_ANNOTATE_QCPWR_c72 WPP_ANNOTATE_QCPWR_c72_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemPtr -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c72 WPP_ANNOTATE_QCPWR_c72_FINAL("TMF:", "QCPWR.c", "QCPWR_c72", L"{", L"pDevExt->PortName, ItemString -- 10" , L"Irp, ItemPtr -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c740_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 39 \"%0<%10!s!> QueryDevicePowerState: dev in service, reject.\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR", __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c740_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 39 \"%0<%10!s!> QueryDevicePowerState: dev in service, reject.\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c740
    #define WPP_ANNOTATE_QCPWR_c740 WPP_ANNOTATE_QCPWR_c740_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c740 WPP_ANNOTATE_QCPWR_c740_FINAL("TMF:", "QCPWR.c", "QCPWR_c740", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c769_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 40 \"%0<%10!s!> QueryDevicePowerState: D%11!u!, no action\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR", __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c769_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 40 \"%0<%10!s!> QueryDevicePowerState: D%11!u!, no action\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c769
    #define WPP_ANNOTATE_QCPWR_c769 WPP_ANNOTATE_QCPWR_c769_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c769 WPP_ANNOTATE_QCPWR_c769_FINAL("TMF:", "QCPWR.c", "QCPWR_c769", L"{", L"pDevExt->PortName, ItemString -- 10" , L"PowerState-1, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c782_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 41 \"%0<%10!s!> QueryDevicePowerState: invalid state req1 - D%11!u!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR", __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c782_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 41 \"%0<%10!s!> QueryDevicePowerState: invalid state req1 - D%11!u!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c782
    #define WPP_ANNOTATE_QCPWR_c782 WPP_ANNOTATE_QCPWR_c782_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c782 WPP_ANNOTATE_QCPWR_c782_FINAL("TMF:", "QCPWR.c", "QCPWR_c782", L"{", L"pDevExt->PortName, ItemString -- 10" , L"PowerState-1, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c805_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 42 \"%0<%10!s!> DevicePowerDownIrpCompletion: IRP 0x%11!p!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_DETAIL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c805_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 42 \"%0<%10!s!> DevicePowerDownIrpCompletion: IRP 0x%11!p!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_DETAIL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c805
    #define WPP_ANNOTATE_QCPWR_c805 WPP_ANNOTATE_QCPWR_c805_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemPtr -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c805 WPP_ANNOTATE_QCPWR_c805_FINAL("TMF:", "QCPWR.c", "QCPWR_c805", L"{", L"pDevExt->PortName, ItemString -- 10" , L"Irp, ItemPtr -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c825_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 43 \"%0<%10!s!> PIRP (Cdev 0x%11!x!) 0x%12!p!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_DETAIL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c825_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 43 \"%0<%10!s!> PIRP (Cdev 0x%11!x!) 0x%12!p!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_DETAIL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c825
    #define WPP_ANNOTATE_QCPWR_c825 WPP_ANNOTATE_QCPWR_c825_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemPtr -- 12" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c825 WPP_ANNOTATE_QCPWR_c825_FINAL("TMF:", "QCPWR.c", "QCPWR_c825", L"{", L"pDevExt->PortName, ItemString -- 10" , L"Irp->IoStatus.Status, ItemLong -- 11" , L"Irp, ItemPtr -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c852_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 44 \"%0<%10!s!> -->SetSystemPowerState: %11!u!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_TRACE", __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c852_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 44 \"%0<%10!s!> -->SetSystemPowerState: %11!u!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_TRACE", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c852
    #define WPP_ANNOTATE_QCPWR_c852 WPP_ANNOTATE_QCPWR_c852_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c852 WPP_ANNOTATE_QCPWR_c852_FINAL("TMF:", "QCPWR.c", "QCPWR_c852", L"{", L"pDevExt->PortName, ItemString -- 10" , L"PowerState, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c877_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 45 \"%0<%10!s!> <--SetSystemPowerState: %11!u!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_TRACE", __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c877_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 45 \"%0<%10!s!> <--SetSystemPowerState: %11!u!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_TRACE", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c877
    #define WPP_ANNOTATE_QCPWR_c877 WPP_ANNOTATE_QCPWR_c877_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c877 WPP_ANNOTATE_QCPWR_c877_FINAL("TMF:", "QCPWR.c", "QCPWR_c877", L"{", L"pDevExt->PortName, ItemString -- 10" , L"PowerState, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c88_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 11 \"%0<%10!s!> IRP_MN_QUERY_POWER: SystemPowerState %11!d!\" //   FLAG=QCSER_DBG_MASK_POWER LEVEL=QCSER_DBG_LEVEL_DETAIL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c88_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 11 \"%0<%10!s!> IRP_MN_QUERY_POWER: SystemPowerState %11!d!\" //   FLAG=QCSER_DBG_MASK_POWER LEVEL=QCSER_DBG_LEVEL_DETAIL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c88
    #define WPP_ANNOTATE_QCPWR_c88 WPP_ANNOTATE_QCPWR_c88_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c88 WPP_ANNOTATE_QCPWR_c88_FINAL("TMF:", "QCPWR.c", "QCPWR_c88", L"{", L"pDevExt->PortName, ItemString -- 10" , L"pwrState, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c902_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 46 \"%0<%10!s!> -->CancelPendingIrps: %11!u!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_TRACE", __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c902_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 46 \"%0<%10!s!> -->CancelPendingIrps: %11!u!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_TRACE", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c902
    #define WPP_ANNOTATE_QCPWR_c902 WPP_ANNOTATE_QCPWR_c902_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c902 WPP_ANNOTATE_QCPWR_c902_FINAL("TMF:", "QCPWR.c", "QCPWR_c902", L"{", L"pDevExt->PortName, ItemString -- 10" , L"PowerState, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c930_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 47 \"%0<%10!s!> WTO-a\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR", __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c930_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 47 \"%0<%10!s!> WTO-a\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c930
    #define WPP_ANNOTATE_QCPWR_c930 WPP_ANNOTATE_QCPWR_c930_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c930 WPP_ANNOTATE_QCPWR_c930_FINAL("TMF:", "QCPWR.c", "QCPWR_c930", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c951_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 48 \"%0<%10!s!> <--CancelPendingIrps: %11!u!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_TRACE", __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c951_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 48 \"%0<%10!s!> <--CancelPendingIrps: %11!u!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_TRACE", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c951
    #define WPP_ANNOTATE_QCPWR_c951 WPP_ANNOTATE_QCPWR_c951_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c951 WPP_ANNOTATE_QCPWR_c951_FINAL("TMF:", "QCPWR.c", "QCPWR_c951", L"{", L"pDevExt->PortName, ItemString -- 10" , L"PowerState, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c98_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 12 \"%0<%10!s!> _PowrerManagement: _QuerySystemPowerState 0x%11!X!, set ComplRtn\" //   FLAG=QCSER_DBG_MASK_POWER LEVEL=QCSER_DBG_LEVEL_DETAIL", __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c98_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 12 \"%0<%10!s!> _PowrerManagement: _QuerySystemPowerState 0x%11!X!, set ComplRtn\" //   FLAG=QCSER_DBG_MASK_POWER LEVEL=QCSER_DBG_LEVEL_DETAIL", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c98
    #define WPP_ANNOTATE_QCPWR_c98 WPP_ANNOTATE_QCPWR_c98_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c98 WPP_ANNOTATE_QCPWR_c98_FINAL("TMF:", "QCPWR.c", "QCPWR_c98", L"{", L"pDevExt->PortName, ItemString -- 10" , L"nts, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c988_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 49 \"%0<%10!s!> SetDevicePowerState: already in D0, no act(0x%11!p!)\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR", __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c988_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 49 \"%0<%10!s!> SetDevicePowerState: already in D0, no act(0x%11!p!)\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR", __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c988
    #define WPP_ANNOTATE_QCPWR_c988 WPP_ANNOTATE_QCPWR_c988_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemPtr -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c988 WPP_ANNOTATE_QCPWR_c988_FINAL("TMF:", "QCPWR.c", "QCPWR_c988", L"{", L"pDevExt->PortName, ItemString -- 10" , L"Irp, ItemPtr -- 11" , L"}")
#endif
# define WPP_ANNOTATE(x) WPP_ANNOTATE_ ## x,

#else
# define WPP_ANNOTATE(x)
#endif

#define WPP_LOCAL_TraceGuids WPP_f0f80aef19be3867ee73c72acdc8ab6c_Traceguids

#if 1
extern const __declspec(selectany) GUID WPP_LOCAL_TraceGuids[] = { {0xf0f80aef,0x19be,0x3867,{0xee,0x73,0xc7,0x2a,0xcd,0xc8,0xab,0x6c}}, };
#endif

#ifndef WPP_ALREADY_INCLUDED

#if !defined(WPP_TRACE_OPTIONS)
enum {WPP_TRACE_OPTIONS = TRACE_MESSAGE_SEQUENCE   | TRACE_MESSAGE_GUID
                        | TRACE_MESSAGE_SYSTEMINFO | TRACE_MESSAGE_TIMESTAMP };
#endif

#if !defined(WPP_LOGPAIR)
# define WPP_LOGPAIR(_Size, _Addr)     (_Addr),((SIZE_T)(_Size)),
#endif

#define WPP_LOGTYPEVAL(_Type, _Value) WPP_LOGPAIR(sizeof(_Type), &(_Value))
#define WPP_LOGTYPEPTR(_Value)        WPP_LOGPAIR(sizeof(*(_Value)), (_Value))

// Marshalling macros.

#if !defined(WPP_LOGASTR)
# if !defined(WPP_CHECK_FOR_NULL_STRING)
#  define WPP_LOGASTR(_value)  WPP_LOGPAIR(strlen(_value) + 1, _value )
# else
#  define WPP_LOGASTR(_value)  WPP_LOGPAIR( (_value)?strlen(_value) + 1:5, (_value)?(_value):"NULL" )
# endif
#endif

#if !defined(WPP_LOGWSTR)
# if !defined(WPP_CHECK_FOR_NULL_STRING)
#  define WPP_LOGWSTR(_value)  WPP_LOGPAIR( (wcslen(_value)+1) * sizeof(WCHAR), _value)
# else
#  define WPP_LOGWSTR(_value)  WPP_LOGPAIR( ((_value)?wcslen(_value) + 1:5) * sizeof(WCHAR), (_value)?(_value):L"NULL" )
# endif
#endif

#if !defined(WPP_LOGPGUID)
# define WPP_LOGPGUID(_value) WPP_LOGPAIR( sizeof(GUID), (_value) )
#endif


#if !defined(WPP_LOGPSID)
# if !defined(WPP_CHECK_FOR_NULL_STRING)
# define WPP_LOGPSID(_value)  WPP_LOGPAIR( WPP_GetLengthSid(_value), (_value) )
# else
# define WPP_LOGPSID(_value)  WPP_LOGPAIR( (_value)? (WPP_IsValidSid(_value)? \
                                                                        WPP_GetLengthSid(_value):5):5, \
                                                                        (_value)? (WPP_IsValidSid(_value)?\
                                                                        (_value):"NULL"):"NULL")
#endif
#endif

#if !defined(WPP_LOGCSTR)
# define WPP_LOGCSTR(_x) \
    WPP_LOGPAIR( sizeof((_x).Length), &(_x).Length ) WPP_LOGPAIR( (_x).Length, (_x).Buffer )
#endif

#if !defined(WPP_LOGUSTR)
# define WPP_LOGUSTR(_x) \
    WPP_LOGPAIR( sizeof((_x).Length), &(_x).Length ) WPP_LOGPAIR( (_x).Length, (_x).Buffer )
#endif

#if !defined(WPP_LOGPUSTR)
#if !defined(WPP_CHECK_FOR_NULL_STRING)
# define WPP_LOGPUSTR(_x) WPP_LOGUSTR(*(_x))
#else
# define WPP_LOGPUSTR(_x) WPP_LOGPAIR( sizeof(USHORT), (_x)?&(_x)->Length:L"\x08" ) \
                          WPP_LOGPAIR( (_x)?(_x)->Length:0x08, (_x)?(_x)->Buffer:L"NULL" )
#endif
#endif

#if !defined(WPP_LOGPCSTR)
#if !defined(WPP_CHECK_FOR_NULL_STRING)
# define WPP_LOGPCSTR(_x) WPP_LOGCSTR(*(_x))
#else
# define WPP_LOGPCSTR(_x) WPP_LOGPAIR( sizeof(USHORT), (_x)?&(_x)->Length:L"\x04" ) \
                          WPP_LOGPAIR( (_x)?(_x)->Length:0x04, (_x)?(_x)->Buffer:"NULL" )
#endif
#endif

#if !defined(WPP_LOGSTDSTR)
#define WPP_LOGSTDSTR(_value)  WPP_LOGPAIR( (_value).size()+1, (_value).c_str() )
#endif

#endif  //  #ifndef WPP_ALREADY_INCLUDED

#if !defined(WPP_ENABLE_FLAG_BIT)
#define WPP_ENABLE_FLAG_BIT(flag) (WPP_CB[((flag) >> 16)].Control).Flags[( (0xFFFF & ((flag)-1) ) / 32)] & (1 << ( ((flag)-1) & 31 )) 
#endif

#ifndef WPP_SF_s_def
#       define WPP_SF_s_def
WPP_INLINE void WPP_SF_s(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, const char* _a1)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGASTR(_a1)  0); }
#endif  // #ifndef WPP_SF_s_def


//
// Generate the WPP_RECORDER_SP_s function    2
//
#ifndef WPP_RECORDER_SF_s_def
#       define WPP_RECORDER_SF_s_def
WPP_INLINE
VOID
WPP_RECORDER_SF_s(
    PVOID    AutoLogContext,
    UCHAR    level,
    ULONG    flags,
    USHORT   id,
    LPCGUID  traceGuid
    , const char* _a1
    )
{
    if (WPP_ENABLE_FLAG_BIT(flags) && 
       (WPP_CONTROL(flags).Level >= level)) {
        WPP_TRACE( WPP_CONTROL(flags).Logger,
                   WPP_TRACE_OPTIONS,
                   (LPGUID)traceGuid,
                   id,
                   WPP_LOGASTR(_a1)  0);

    }
    
    WPP_RECORDER( AutoLogContext, level, flags, (LPGUID) traceGuid, id, WPP_LOGASTR(_a1)  0);
}
#endif  // #ifndef WPP_RECORDER_SF_s_def


#ifndef WPP_SF_sD_def
#       define WPP_SF_sD_def
WPP_INLINE void WPP_SF_sD(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, const char* _a1, unsigned int _a2)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(unsigned int,_a2)  0); }
#endif  // #ifndef WPP_SF_sD_def


//
// Generate the WPP_RECORDER_SP_sD function    2
//
#ifndef WPP_RECORDER_SF_sD_def
#       define WPP_RECORDER_SF_sD_def
WPP_INLINE
VOID
WPP_RECORDER_SF_sD(
    PVOID    AutoLogContext,
    UCHAR    level,
    ULONG    flags,
    USHORT   id,
    LPCGUID  traceGuid
    , const char* _a1, unsigned int _a2
    )
{
    if (WPP_ENABLE_FLAG_BIT(flags) && 
       (WPP_CONTROL(flags).Level >= level)) {
        WPP_TRACE( WPP_CONTROL(flags).Logger,
                   WPP_TRACE_OPTIONS,
                   (LPGUID)traceGuid,
                   id,
                   WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(unsigned int,_a2)  0);

    }
    
    WPP_RECORDER( AutoLogContext, level, flags, (LPGUID) traceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(unsigned int,_a2)  0);
}
#endif  // #ifndef WPP_RECORDER_SF_sD_def


#ifndef WPP_SF_sDD_def
#       define WPP_SF_sDD_def
WPP_INLINE void WPP_SF_sDD(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, const char* _a1, unsigned int _a2, unsigned int _a3)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(unsigned int,_a2) WPP_LOGTYPEVAL(unsigned int,_a3)  0); }
#endif  // #ifndef WPP_SF_sDD_def


//
// Generate the WPP_RECORDER_SP_sDD function    2
//
#ifndef WPP_RECORDER_SF_sDD_def
#       define WPP_RECORDER_SF_sDD_def
WPP_INLINE
VOID
WPP_RECORDER_SF_sDD(
    PVOID    AutoLogContext,
    UCHAR    level,
    ULONG    flags,
    USHORT   id,
    LPCGUID  traceGuid
    , const char* _a1, unsigned int _a2, unsigned int _a3
    )
{
    if (WPP_ENABLE_FLAG_BIT(flags) && 
       (WPP_CONTROL(flags).Level >= level)) {
        WPP_TRACE( WPP_CONTROL(flags).Logger,
                   WPP_TRACE_OPTIONS,
                   (LPGUID)traceGuid,
                   id,
                   WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(unsigned int,_a2) WPP_LOGTYPEVAL(unsigned int,_a3)  0);

    }
    
    WPP_RECORDER( AutoLogContext, level, flags, (LPGUID) traceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(unsigned int,_a2) WPP_LOGTYPEVAL(unsigned int,_a3)  0);
}
#endif  // #ifndef WPP_RECORDER_SF_sDD_def


#ifndef WPP_SF_sDDDDd_def
#       define WPP_SF_sDDDDd_def
WPP_INLINE void WPP_SF_sDDDDd(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, const char* _a1, unsigned int _a2, unsigned int _a3, unsigned int _a4, unsigned int _a5, signed int _a6)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(unsigned int,_a2) WPP_LOGTYPEVAL(unsigned int,_a3) WPP_LOGTYPEVAL(unsigned int,_a4) WPP_LOGTYPEVAL(unsigned int,_a5) WPP_LOGTYPEVAL(signed int,_a6)  0); }
#endif  // #ifndef WPP_SF_sDDDDd_def


//
// Generate the WPP_RECORDER_SP_sDDDDd function    2
//
#ifndef WPP_RECORDER_SF_sDDDDd_def
#       define WPP_RECORDER_SF_sDDDDd_def
WPP_INLINE
VOID
WPP_RECORDER_SF_sDDDDd(
    PVOID    AutoLogContext,
    UCHAR    level,
    ULONG    flags,
    USHORT   id,
    LPCGUID  traceGuid
    , const char* _a1, unsigned int _a2, unsigned int _a3, unsigned int _a4, unsigned int _a5, signed int _a6
    )
{
    if (WPP_ENABLE_FLAG_BIT(flags) && 
       (WPP_CONTROL(flags).Level >= level)) {
        WPP_TRACE( WPP_CONTROL(flags).Logger,
                   WPP_TRACE_OPTIONS,
                   (LPGUID)traceGuid,
                   id,
                   WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(unsigned int,_a2) WPP_LOGTYPEVAL(unsigned int,_a3) WPP_LOGTYPEVAL(unsigned int,_a4) WPP_LOGTYPEVAL(unsigned int,_a5) WPP_LOGTYPEVAL(signed int,_a6)  0);

    }
    
    WPP_RECORDER( AutoLogContext, level, flags, (LPGUID) traceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(unsigned int,_a2) WPP_LOGTYPEVAL(unsigned int,_a3) WPP_LOGTYPEVAL(unsigned int,_a4) WPP_LOGTYPEVAL(unsigned int,_a5) WPP_LOGTYPEVAL(signed int,_a6)  0);
}
#endif  // #ifndef WPP_RECORDER_SF_sDDDDd_def


#ifndef WPP_SF_sDDd_def
#       define WPP_SF_sDDd_def
WPP_INLINE void WPP_SF_sDDd(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, const char* _a1, unsigned int _a2, unsigned int _a3, signed int _a4)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(unsigned int,_a2) WPP_LOGTYPEVAL(unsigned int,_a3) WPP_LOGTYPEVAL(signed int,_a4)  0); }
#endif  // #ifndef WPP_SF_sDDd_def


//
// Generate the WPP_RECORDER_SP_sDDd function    2
//
#ifndef WPP_RECORDER_SF_sDDd_def
#       define WPP_RECORDER_SF_sDDd_def
WPP_INLINE
VOID
WPP_RECORDER_SF_sDDd(
    PVOID    AutoLogContext,
    UCHAR    level,
    ULONG    flags,
    USHORT   id,
    LPCGUID  traceGuid
    , const char* _a1, unsigned int _a2, unsigned int _a3, signed int _a4
    )
{
    if (WPP_ENABLE_FLAG_BIT(flags) && 
       (WPP_CONTROL(flags).Level >= level)) {
        WPP_TRACE( WPP_CONTROL(flags).Logger,
                   WPP_TRACE_OPTIONS,
                   (LPGUID)traceGuid,
                   id,
                   WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(unsigned int,_a2) WPP_LOGTYPEVAL(unsigned int,_a3) WPP_LOGTYPEVAL(signed int,_a4)  0);

    }
    
    WPP_RECORDER( AutoLogContext, level, flags, (LPGUID) traceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(unsigned int,_a2) WPP_LOGTYPEVAL(unsigned int,_a3) WPP_LOGTYPEVAL(signed int,_a4)  0);
}
#endif  // #ifndef WPP_RECORDER_SF_sDDd_def


#ifndef WPP_SF_sDDq_def
#       define WPP_SF_sDDq_def
WPP_INLINE void WPP_SF_sDDq(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, const char* _a1, unsigned int _a2, unsigned int _a3, const void* _a4)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(unsigned int,_a2) WPP_LOGTYPEVAL(unsigned int,_a3) WPP_LOGTYPEVAL(const void*,_a4)  0); }
#endif  // #ifndef WPP_SF_sDDq_def


//
// Generate the WPP_RECORDER_SP_sDDq function    2
//
#ifndef WPP_RECORDER_SF_sDDq_def
#       define WPP_RECORDER_SF_sDDq_def
WPP_INLINE
VOID
WPP_RECORDER_SF_sDDq(
    PVOID    AutoLogContext,
    UCHAR    level,
    ULONG    flags,
    USHORT   id,
    LPCGUID  traceGuid
    , const char* _a1, unsigned int _a2, unsigned int _a3, const void* _a4
    )
{
    if (WPP_ENABLE_FLAG_BIT(flags) && 
       (WPP_CONTROL(flags).Level >= level)) {
        WPP_TRACE( WPP_CONTROL(flags).Logger,
                   WPP_TRACE_OPTIONS,
                   (LPGUID)traceGuid,
                   id,
                   WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(unsigned int,_a2) WPP_LOGTYPEVAL(unsigned int,_a3) WPP_LOGTYPEVAL(const void*,_a4)  0);

    }
    
    WPP_RECORDER( AutoLogContext, level, flags, (LPGUID) traceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(unsigned int,_a2) WPP_LOGTYPEVAL(unsigned int,_a3) WPP_LOGTYPEVAL(const void*,_a4)  0);
}
#endif  // #ifndef WPP_RECORDER_SF_sDDq_def


#ifndef WPP_SF_sDDqD_def
#       define WPP_SF_sDDqD_def
WPP_INLINE void WPP_SF_sDDqD(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, const char* _a1, unsigned int _a2, unsigned int _a3, const void* _a4, unsigned int _a5)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(unsigned int,_a2) WPP_LOGTYPEVAL(unsigned int,_a3) WPP_LOGTYPEVAL(const void*,_a4) WPP_LOGTYPEVAL(unsigned int,_a5)  0); }
#endif  // #ifndef WPP_SF_sDDqD_def


//
// Generate the WPP_RECORDER_SP_sDDqD function    2
//
#ifndef WPP_RECORDER_SF_sDDqD_def
#       define WPP_RECORDER_SF_sDDqD_def
WPP_INLINE
VOID
WPP_RECORDER_SF_sDDqD(
    PVOID    AutoLogContext,
    UCHAR    level,
    ULONG    flags,
    USHORT   id,
    LPCGUID  traceGuid
    , const char* _a1, unsigned int _a2, unsigned int _a3, const void* _a4, unsigned int _a5
    )
{
    if (WPP_ENABLE_FLAG_BIT(flags) && 
       (WPP_CONTROL(flags).Level >= level)) {
        WPP_TRACE( WPP_CONTROL(flags).Logger,
                   WPP_TRACE_OPTIONS,
                   (LPGUID)traceGuid,
                   id,
                   WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(unsigned int,_a2) WPP_LOGTYPEVAL(unsigned int,_a3) WPP_LOGTYPEVAL(const void*,_a4) WPP_LOGTYPEVAL(unsigned int,_a5)  0);

    }
    
    WPP_RECORDER( AutoLogContext, level, flags, (LPGUID) traceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(unsigned int,_a2) WPP_LOGTYPEVAL(unsigned int,_a3) WPP_LOGTYPEVAL(const void*,_a4) WPP_LOGTYPEVAL(unsigned int,_a5)  0);
}
#endif  // #ifndef WPP_RECORDER_SF_sDDqD_def


#ifndef WPP_SF_sDd_def
#       define WPP_SF_sDd_def
WPP_INLINE void WPP_SF_sDd(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, const char* _a1, unsigned int _a2, signed int _a3)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(unsigned int,_a2) WPP_LOGTYPEVAL(signed int,_a3)  0); }
#endif  // #ifndef WPP_SF_sDd_def


//
// Generate the WPP_RECORDER_SP_sDd function    2
//
#ifndef WPP_RECORDER_SF_sDd_def
#       define WPP_RECORDER_SF_sDd_def
WPP_INLINE
VOID
WPP_RECORDER_SF_sDd(
    PVOID    AutoLogContext,
    UCHAR    level,
    ULONG    flags,
    USHORT   id,
    LPCGUID  traceGuid
    , const char* _a1, unsigned int _a2, signed int _a3
    )
{
    if (WPP_ENABLE_FLAG_BIT(flags) && 
       (WPP_CONTROL(flags).Level >= level)) {
        WPP_TRACE( WPP_CONTROL(flags).Logger,
                   WPP_TRACE_OPTIONS,
                   (LPGUID)traceGuid,
                   id,
                   WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(unsigned int,_a2) WPP_LOGTYPEVAL(signed int,_a3)  0);

    }
    
    WPP_RECORDER( AutoLogContext, level, flags, (LPGUID) traceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(unsigned int,_a2) WPP_LOGTYPEVAL(signed int,_a3)  0);
}
#endif  // #ifndef WPP_RECORDER_SF_sDd_def


#ifndef WPP_SF_sDq_def
#       define WPP_SF_sDq_def
WPP_INLINE void WPP_SF_sDq(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, const char* _a1, unsigned int _a2, const void* _a3)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(unsigned int,_a2) WPP_LOGTYPEVAL(const void*,_a3)  0); }
#endif  // #ifndef WPP_SF_sDq_def


//
// Generate the WPP_RECORDER_SP_sDq function    2
//
#ifndef WPP_RECORDER_SF_sDq_def
#       define WPP_RECORDER_SF_sDq_def
WPP_INLINE
VOID
WPP_RECORDER_SF_sDq(
    PVOID    AutoLogContext,
    UCHAR    level,
    ULONG    flags,
    USHORT   id,
    LPCGUID  traceGuid
    , const char* _a1, unsigned int _a2, const void* _a3
    )
{
    if (WPP_ENABLE_FLAG_BIT(flags) && 
       (WPP_CONTROL(flags).Level >= level)) {
        WPP_TRACE( WPP_CONTROL(flags).Logger,
                   WPP_TRACE_OPTIONS,
                   (LPGUID)traceGuid,
                   id,
                   WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(unsigned int,_a2) WPP_LOGTYPEVAL(const void*,_a3)  0);

    }
    
    WPP_RECORDER( AutoLogContext, level, flags, (LPGUID) traceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(unsigned int,_a2) WPP_LOGTYPEVAL(const void*,_a3)  0);
}
#endif  // #ifndef WPP_RECORDER_SF_sDq_def


#ifndef WPP_SF_sDqD_def
#       define WPP_SF_sDqD_def
WPP_INLINE void WPP_SF_sDqD(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, const char* _a1, unsigned int _a2, const void* _a3, unsigned int _a4)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(unsigned int,_a2) WPP_LOGTYPEVAL(const void*,_a3) WPP_LOGTYPEVAL(unsigned int,_a4)  0); }
#endif  // #ifndef WPP_SF_sDqD_def


//
// Generate the WPP_RECORDER_SP_sDqD function    2
//
#ifndef WPP_RECORDER_SF_sDqD_def
#       define WPP_RECORDER_SF_sDqD_def
WPP_INLINE
VOID
WPP_RECORDER_SF_sDqD(
    PVOID    AutoLogContext,
    UCHAR    level,
    ULONG    flags,
    USHORT   id,
    LPCGUID  traceGuid
    , const char* _a1, unsigned int _a2, const void* _a3, unsigned int _a4
    )
{
    if (WPP_ENABLE_FLAG_BIT(flags) && 
       (WPP_CONTROL(flags).Level >= level)) {
        WPP_TRACE( WPP_CONTROL(flags).Logger,
                   WPP_TRACE_OPTIONS,
                   (LPGUID)traceGuid,
                   id,
                   WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(unsigned int,_a2) WPP_LOGTYPEVAL(const void*,_a3) WPP_LOGTYPEVAL(unsigned int,_a4)  0);

    }
    
    WPP_RECORDER( AutoLogContext, level, flags, (LPGUID) traceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(unsigned int,_a2) WPP_LOGTYPEVAL(const void*,_a3) WPP_LOGTYPEVAL(unsigned int,_a4)  0);
}
#endif  // #ifndef WPP_RECORDER_SF_sDqD_def


#ifndef WPP_SF_sDqDDd_def
#       define WPP_SF_sDqDDd_def
WPP_INLINE void WPP_SF_sDqDDd(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, const char* _a1, unsigned int _a2, const void* _a3, unsigned int _a4, unsigned int _a5, signed int _a6)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(unsigned int,_a2) WPP_LOGTYPEVAL(const void*,_a3) WPP_LOGTYPEVAL(unsigned int,_a4) WPP_LOGTYPEVAL(unsigned int,_a5) WPP_LOGTYPEVAL(signed int,_a6)  0); }
#endif  // #ifndef WPP_SF_sDqDDd_def


//
// Generate the WPP_RECORDER_SP_sDqDDd function    2
//
#ifndef WPP_RECORDER_SF_sDqDDd_def
#       define WPP_RECORDER_SF_sDqDDd_def
WPP_INLINE
VOID
WPP_RECORDER_SF_sDqDDd(
    PVOID    AutoLogContext,
    UCHAR    level,
    ULONG    flags,
    USHORT   id,
    LPCGUID  traceGuid
    , const char* _a1, unsigned int _a2, const void* _a3, unsigned int _a4, unsigned int _a5, signed int _a6
    )
{
    if (WPP_ENABLE_FLAG_BIT(flags) && 
       (WPP_CONTROL(flags).Level >= level)) {
        WPP_TRACE( WPP_CONTROL(flags).Logger,
                   WPP_TRACE_OPTIONS,
                   (LPGUID)traceGuid,
                   id,
                   WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(unsigned int,_a2) WPP_LOGTYPEVAL(const void*,_a3) WPP_LOGTYPEVAL(unsigned int,_a4) WPP_LOGTYPEVAL(unsigned int,_a5) WPP_LOGTYPEVAL(signed int,_a6)  0);

    }
    
    WPP_RECORDER( AutoLogContext, level, flags, (LPGUID) traceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(unsigned int,_a2) WPP_LOGTYPEVAL(const void*,_a3) WPP_LOGTYPEVAL(unsigned int,_a4) WPP_LOGTYPEVAL(unsigned int,_a5) WPP_LOGTYPEVAL(signed int,_a6)  0);
}
#endif  // #ifndef WPP_RECORDER_SF_sDqDDd_def


#ifndef WPP_SF_sDqd_def
#       define WPP_SF_sDqd_def
WPP_INLINE void WPP_SF_sDqd(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, const char* _a1, unsigned int _a2, const void* _a3, signed int _a4)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(unsigned int,_a2) WPP_LOGTYPEVAL(const void*,_a3) WPP_LOGTYPEVAL(signed int,_a4)  0); }
#endif  // #ifndef WPP_SF_sDqd_def


//
// Generate the WPP_RECORDER_SP_sDqd function    2
//
#ifndef WPP_RECORDER_SF_sDqd_def
#       define WPP_RECORDER_SF_sDqd_def
WPP_INLINE
VOID
WPP_RECORDER_SF_sDqd(
    PVOID    AutoLogContext,
    UCHAR    level,
    ULONG    flags,
    USHORT   id,
    LPCGUID  traceGuid
    , const char* _a1, unsigned int _a2, const void* _a3, signed int _a4
    )
{
    if (WPP_ENABLE_FLAG_BIT(flags) && 
       (WPP_CONTROL(flags).Level >= level)) {
        WPP_TRACE( WPP_CONTROL(flags).Logger,
                   WPP_TRACE_OPTIONS,
                   (LPGUID)traceGuid,
                   id,
                   WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(unsigned int,_a2) WPP_LOGTYPEVAL(const void*,_a3) WPP_LOGTYPEVAL(signed int,_a4)  0);

    }
    
    WPP_RECORDER( AutoLogContext, level, flags, (LPGUID) traceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(unsigned int,_a2) WPP_LOGTYPEVAL(const void*,_a3) WPP_LOGTYPEVAL(signed int,_a4)  0);
}
#endif  // #ifndef WPP_RECORDER_SF_sDqd_def


#ifndef WPP_SF_sd_def
#       define WPP_SF_sd_def
WPP_INLINE void WPP_SF_sd(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, const char* _a1, signed int _a2)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(signed int,_a2)  0); }
#endif  // #ifndef WPP_SF_sd_def


//
// Generate the WPP_RECORDER_SP_sd function    2
//
#ifndef WPP_RECORDER_SF_sd_def
#       define WPP_RECORDER_SF_sd_def
WPP_INLINE
VOID
WPP_RECORDER_SF_sd(
    PVOID    AutoLogContext,
    UCHAR    level,
    ULONG    flags,
    USHORT   id,
    LPCGUID  traceGuid
    , const char* _a1, signed int _a2
    )
{
    if (WPP_ENABLE_FLAG_BIT(flags) && 
       (WPP_CONTROL(flags).Level >= level)) {
        WPP_TRACE( WPP_CONTROL(flags).Logger,
                   WPP_TRACE_OPTIONS,
                   (LPGUID)traceGuid,
                   id,
                   WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(signed int,_a2)  0);

    }
    
    WPP_RECORDER( AutoLogContext, level, flags, (LPGUID) traceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(signed int,_a2)  0);
}
#endif  // #ifndef WPP_RECORDER_SF_sd_def


#ifndef WPP_SF_sq_def
#       define WPP_SF_sq_def
WPP_INLINE void WPP_SF_sq(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, const char* _a1, const void* _a2)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(const void*,_a2)  0); }
#endif  // #ifndef WPP_SF_sq_def


//
// Generate the WPP_RECORDER_SP_sq function    2
//
#ifndef WPP_RECORDER_SF_sq_def
#       define WPP_RECORDER_SF_sq_def
WPP_INLINE
VOID
WPP_RECORDER_SF_sq(
    PVOID    AutoLogContext,
    UCHAR    level,
    ULONG    flags,
    USHORT   id,
    LPCGUID  traceGuid
    , const char* _a1, const void* _a2
    )
{
    if (WPP_ENABLE_FLAG_BIT(flags) && 
       (WPP_CONTROL(flags).Level >= level)) {
        WPP_TRACE( WPP_CONTROL(flags).Logger,
                   WPP_TRACE_OPTIONS,
                   (LPGUID)traceGuid,
                   id,
                   WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(const void*,_a2)  0);

    }
    
    WPP_RECORDER( AutoLogContext, level, flags, (LPGUID) traceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(const void*,_a2)  0);
}
#endif  // #ifndef WPP_RECORDER_SF_sq_def


#ifndef WPP_SF_sqD_def
#       define WPP_SF_sqD_def
WPP_INLINE void WPP_SF_sqD(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, const char* _a1, const void* _a2, unsigned int _a3)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(const void*,_a2) WPP_LOGTYPEVAL(unsigned int,_a3)  0); }
#endif  // #ifndef WPP_SF_sqD_def


//
// Generate the WPP_RECORDER_SP_sqD function    2
//
#ifndef WPP_RECORDER_SF_sqD_def
#       define WPP_RECORDER_SF_sqD_def
WPP_INLINE
VOID
WPP_RECORDER_SF_sqD(
    PVOID    AutoLogContext,
    UCHAR    level,
    ULONG    flags,
    USHORT   id,
    LPCGUID  traceGuid
    , const char* _a1, const void* _a2, unsigned int _a3
    )
{
    if (WPP_ENABLE_FLAG_BIT(flags) && 
       (WPP_CONTROL(flags).Level >= level)) {
        WPP_TRACE( WPP_CONTROL(flags).Logger,
                   WPP_TRACE_OPTIONS,
                   (LPGUID)traceGuid,
                   id,
                   WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(const void*,_a2) WPP_LOGTYPEVAL(unsigned int,_a3)  0);

    }
    
    WPP_RECORDER( AutoLogContext, level, flags, (LPGUID) traceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(const void*,_a2) WPP_LOGTYPEVAL(unsigned int,_a3)  0);
}
#endif  // #ifndef WPP_RECORDER_SF_sqD_def


#ifndef WPP_SF_sqDD_def
#       define WPP_SF_sqDD_def
WPP_INLINE void WPP_SF_sqDD(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, const char* _a1, const void* _a2, unsigned int _a3, unsigned int _a4)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(const void*,_a2) WPP_LOGTYPEVAL(unsigned int,_a3) WPP_LOGTYPEVAL(unsigned int,_a4)  0); }
#endif  // #ifndef WPP_SF_sqDD_def


//
// Generate the WPP_RECORDER_SP_sqDD function    2
//
#ifndef WPP_RECORDER_SF_sqDD_def
#       define WPP_RECORDER_SF_sqDD_def
WPP_INLINE
VOID
WPP_RECORDER_SF_sqDD(
    PVOID    AutoLogContext,
    UCHAR    level,
    ULONG    flags,
    USHORT   id,
    LPCGUID  traceGuid
    , const char* _a1, const void* _a2, unsigned int _a3, unsigned int _a4
    )
{
    if (WPP_ENABLE_FLAG_BIT(flags) && 
       (WPP_CONTROL(flags).Level >= level)) {
        WPP_TRACE( WPP_CONTROL(flags).Logger,
                   WPP_TRACE_OPTIONS,
                   (LPGUID)traceGuid,
                   id,
                   WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(const void*,_a2) WPP_LOGTYPEVAL(unsigned int,_a3) WPP_LOGTYPEVAL(unsigned int,_a4)  0);

    }
    
    WPP_RECORDER( AutoLogContext, level, flags, (LPGUID) traceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(const void*,_a2) WPP_LOGTYPEVAL(unsigned int,_a3) WPP_LOGTYPEVAL(unsigned int,_a4)  0);
}
#endif  // #ifndef WPP_RECORDER_SF_sqDD_def


#ifndef WPP_SF_sqDDD_def
#       define WPP_SF_sqDDD_def
WPP_INLINE void WPP_SF_sqDDD(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, const char* _a1, const void* _a2, unsigned int _a3, unsigned int _a4, unsigned int _a5)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(const void*,_a2) WPP_LOGTYPEVAL(unsigned int,_a3) WPP_LOGTYPEVAL(unsigned int,_a4) WPP_LOGTYPEVAL(unsigned int,_a5)  0); }
#endif  // #ifndef WPP_SF_sqDDD_def


//
// Generate the WPP_RECORDER_SP_sqDDD function    2
//
#ifndef WPP_RECORDER_SF_sqDDD_def
#       define WPP_RECORDER_SF_sqDDD_def
WPP_INLINE
VOID
WPP_RECORDER_SF_sqDDD(
    PVOID    AutoLogContext,
    UCHAR    level,
    ULONG    flags,
    USHORT   id,
    LPCGUID  traceGuid
    , const char* _a1, const void* _a2, unsigned int _a3, unsigned int _a4, unsigned int _a5
    )
{
    if (WPP_ENABLE_FLAG_BIT(flags) && 
       (WPP_CONTROL(flags).Level >= level)) {
        WPP_TRACE( WPP_CONTROL(flags).Logger,
                   WPP_TRACE_OPTIONS,
                   (LPGUID)traceGuid,
                   id,
                   WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(const void*,_a2) WPP_LOGTYPEVAL(unsigned int,_a3) WPP_LOGTYPEVAL(unsigned int,_a4) WPP_LOGTYPEVAL(unsigned int,_a5)  0);

    }
    
    WPP_RECORDER( AutoLogContext, level, flags, (LPGUID) traceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(const void*,_a2) WPP_LOGTYPEVAL(unsigned int,_a3) WPP_LOGTYPEVAL(unsigned int,_a4) WPP_LOGTYPEVAL(unsigned int,_a5)  0);
}
#endif  // #ifndef WPP_RECORDER_SF_sqDDD_def


#ifndef WPP_SF_sqDDDD_def
#       define WPP_SF_sqDDDD_def
WPP_INLINE void WPP_SF_sqDDDD(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, const char* _a1, const void* _a2, unsigned int _a3, unsigned int _a4, unsigned int _a5, unsigned int _a6)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(const void*,_a2) WPP_LOGTYPEVAL(unsigned int,_a3) WPP_LOGTYPEVAL(unsigned int,_a4) WPP_LOGTYPEVAL(unsigned int,_a5) WPP_LOGTYPEVAL(unsigned int,_a6)  0); }
#endif  // #ifndef WPP_SF_sqDDDD_def


//
// Generate the WPP_RECORDER_SP_sqDDDD function    2
//
#ifndef WPP_RECORDER_SF_sqDDDD_def
#       define WPP_RECORDER_SF_sqDDDD_def
WPP_INLINE
VOID
WPP_RECORDER_SF_sqDDDD(
    PVOID    AutoLogContext,
    UCHAR    level,
    ULONG    flags,
    USHORT   id,
    LPCGUID  traceGuid
    , const char* _a1, const void* _a2, unsigned int _a3, unsigned int _a4, unsigned int _a5, unsigned int _a6
    )
{
    if (WPP_ENABLE_FLAG_BIT(flags) && 
       (WPP_CONTROL(flags).Level >= level)) {
        WPP_TRACE( WPP_CONTROL(flags).Logger,
                   WPP_TRACE_OPTIONS,
                   (LPGUID)traceGuid,
                   id,
                   WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(const void*,_a2) WPP_LOGTYPEVAL(unsigned int,_a3) WPP_LOGTYPEVAL(unsigned int,_a4) WPP_LOGTYPEVAL(unsigned int,_a5) WPP_LOGTYPEVAL(unsigned int,_a6)  0);

    }
    
    WPP_RECORDER( AutoLogContext, level, flags, (LPGUID) traceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(const void*,_a2) WPP_LOGTYPEVAL(unsigned int,_a3) WPP_LOGTYPEVAL(unsigned int,_a4) WPP_LOGTYPEVAL(unsigned int,_a5) WPP_LOGTYPEVAL(unsigned int,_a6)  0);
}
#endif  // #ifndef WPP_RECORDER_SF_sqDDDD_def


#ifndef WPP_SF_sqd_def
#       define WPP_SF_sqd_def
WPP_INLINE void WPP_SF_sqd(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, const char* _a1, const void* _a2, signed int _a3)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(const void*,_a2) WPP_LOGTYPEVAL(signed int,_a3)  0); }
#endif  // #ifndef WPP_SF_sqd_def


//
// Generate the WPP_RECORDER_SP_sqd function    2
//
#ifndef WPP_RECORDER_SF_sqd_def
#       define WPP_RECORDER_SF_sqd_def
WPP_INLINE
VOID
WPP_RECORDER_SF_sqd(
    PVOID    AutoLogContext,
    UCHAR    level,
    ULONG    flags,
    USHORT   id,
    LPCGUID  traceGuid
    , const char* _a1, const void* _a2, signed int _a3
    )
{
    if (WPP_ENABLE_FLAG_BIT(flags) && 
       (WPP_CONTROL(flags).Level >= level)) {
        WPP_TRACE( WPP_CONTROL(flags).Logger,
                   WPP_TRACE_OPTIONS,
                   (LPGUID)traceGuid,
                   id,
                   WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(const void*,_a2) WPP_LOGTYPEVAL(signed int,_a3)  0);

    }
    
    WPP_RECORDER( AutoLogContext, level, flags, (LPGUID) traceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(const void*,_a2) WPP_LOGTYPEVAL(signed int,_a3)  0);
}
#endif  // #ifndef WPP_RECORDER_SF_sqd_def


#ifndef WPP_SF_sqq_def
#       define WPP_SF_sqq_def
WPP_INLINE void WPP_SF_sqq(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, const char* _a1, const void* _a2, const void* _a3)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(const void*,_a2) WPP_LOGTYPEVAL(const void*,_a3)  0); }
#endif  // #ifndef WPP_SF_sqq_def


//
// Generate the WPP_RECORDER_SP_sqq function    2
//
#ifndef WPP_RECORDER_SF_sqq_def
#       define WPP_RECORDER_SF_sqq_def
WPP_INLINE
VOID
WPP_RECORDER_SF_sqq(
    PVOID    AutoLogContext,
    UCHAR    level,
    ULONG    flags,
    USHORT   id,
    LPCGUID  traceGuid
    , const char* _a1, const void* _a2, const void* _a3
    )
{
    if (WPP_ENABLE_FLAG_BIT(flags) && 
       (WPP_CONTROL(flags).Level >= level)) {
        WPP_TRACE( WPP_CONTROL(flags).Logger,
                   WPP_TRACE_OPTIONS,
                   (LPGUID)traceGuid,
                   id,
                   WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(const void*,_a2) WPP_LOGTYPEVAL(const void*,_a3)  0);

    }
    
    WPP_RECORDER( AutoLogContext, level, flags, (LPGUID) traceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(const void*,_a2) WPP_LOGTYPEVAL(const void*,_a3)  0);
}
#endif  // #ifndef WPP_RECORDER_SF_sqq_def


#ifndef WPP_SF_sqqD_def
#       define WPP_SF_sqqD_def
WPP_INLINE void WPP_SF_sqqD(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, const char* _a1, const void* _a2, const void* _a3, unsigned int _a4)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(const void*,_a2) WPP_LOGTYPEVAL(const void*,_a3) WPP_LOGTYPEVAL(unsigned int,_a4)  0); }
#endif  // #ifndef WPP_SF_sqqD_def


//
// Generate the WPP_RECORDER_SP_sqqD function    2
//
#ifndef WPP_RECORDER_SF_sqqD_def
#       define WPP_RECORDER_SF_sqqD_def
WPP_INLINE
VOID
WPP_RECORDER_SF_sqqD(
    PVOID    AutoLogContext,
    UCHAR    level,
    ULONG    flags,
    USHORT   id,
    LPCGUID  traceGuid
    , const char* _a1, const void* _a2, const void* _a3, unsigned int _a4
    )
{
    if (WPP_ENABLE_FLAG_BIT(flags) && 
       (WPP_CONTROL(flags).Level >= level)) {
        WPP_TRACE( WPP_CONTROL(flags).Logger,
                   WPP_TRACE_OPTIONS,
                   (LPGUID)traceGuid,
                   id,
                   WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(const void*,_a2) WPP_LOGTYPEVAL(const void*,_a3) WPP_LOGTYPEVAL(unsigned int,_a4)  0);

    }
    
    WPP_RECORDER( AutoLogContext, level, flags, (LPGUID) traceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(const void*,_a2) WPP_LOGTYPEVAL(const void*,_a3) WPP_LOGTYPEVAL(unsigned int,_a4)  0);
}
#endif  // #ifndef WPP_RECORDER_SF_sqqD_def


#ifndef WPP_SF_sqqDd_def
#       define WPP_SF_sqqDd_def
WPP_INLINE void WPP_SF_sqqDd(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, const char* _a1, const void* _a2, const void* _a3, unsigned int _a4, signed int _a5)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(const void*,_a2) WPP_LOGTYPEVAL(const void*,_a3) WPP_LOGTYPEVAL(unsigned int,_a4) WPP_LOGTYPEVAL(signed int,_a5)  0); }
#endif  // #ifndef WPP_SF_sqqDd_def


//
// Generate the WPP_RECORDER_SP_sqqDd function    2
//
#ifndef WPP_RECORDER_SF_sqqDd_def
#       define WPP_RECORDER_SF_sqqDd_def
WPP_INLINE
VOID
WPP_RECORDER_SF_sqqDd(
    PVOID    AutoLogContext,
    UCHAR    level,
    ULONG    flags,
    USHORT   id,
    LPCGUID  traceGuid
    , const char* _a1, const void* _a2, const void* _a3, unsigned int _a4, signed int _a5
    )
{
    if (WPP_ENABLE_FLAG_BIT(flags) && 
       (WPP_CONTROL(flags).Level >= level)) {
        WPP_TRACE( WPP_CONTROL(flags).Logger,
                   WPP_TRACE_OPTIONS,
                   (LPGUID)traceGuid,
                   id,
                   WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(const void*,_a2) WPP_LOGTYPEVAL(const void*,_a3) WPP_LOGTYPEVAL(unsigned int,_a4) WPP_LOGTYPEVAL(signed int,_a5)  0);

    }
    
    WPP_RECORDER( AutoLogContext, level, flags, (LPGUID) traceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(const void*,_a2) WPP_LOGTYPEVAL(const void*,_a3) WPP_LOGTYPEVAL(unsigned int,_a4) WPP_LOGTYPEVAL(signed int,_a5)  0);
}
#endif  // #ifndef WPP_RECORDER_SF_sqqDd_def


#ifndef WPP_SF_sqqd_def
#       define WPP_SF_sqqd_def
WPP_INLINE void WPP_SF_sqqd(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, const char* _a1, const void* _a2, const void* _a3, signed int _a4)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(const void*,_a2) WPP_LOGTYPEVAL(const void*,_a3) WPP_LOGTYPEVAL(signed int,_a4)  0); }
#endif  // #ifndef WPP_SF_sqqd_def


//
// Generate the WPP_RECORDER_SP_sqqd function    2
//
#ifndef WPP_RECORDER_SF_sqqd_def
#       define WPP_RECORDER_SF_sqqd_def
WPP_INLINE
VOID
WPP_RECORDER_SF_sqqd(
    PVOID    AutoLogContext,
    UCHAR    level,
    ULONG    flags,
    USHORT   id,
    LPCGUID  traceGuid
    , const char* _a1, const void* _a2, const void* _a3, signed int _a4
    )
{
    if (WPP_ENABLE_FLAG_BIT(flags) && 
       (WPP_CONTROL(flags).Level >= level)) {
        WPP_TRACE( WPP_CONTROL(flags).Logger,
                   WPP_TRACE_OPTIONS,
                   (LPGUID)traceGuid,
                   id,
                   WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(const void*,_a2) WPP_LOGTYPEVAL(const void*,_a3) WPP_LOGTYPEVAL(signed int,_a4)  0);

    }
    
    WPP_RECORDER( AutoLogContext, level, flags, (LPGUID) traceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(const void*,_a2) WPP_LOGTYPEVAL(const void*,_a3) WPP_LOGTYPEVAL(signed int,_a4)  0);
}
#endif  // #ifndef WPP_RECORDER_SF_sqqd_def


#ifndef WPP_POST
#  define WPP_POST()
#endif

#ifndef WPP_PRE
#  define WPP_PRE()
#endif


#ifdef WPP_DEBUG
#else
#endif


#ifdef WPP_DEBUG
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c1018(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c1018) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sq(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 50,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c1032(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c1032) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 51,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c1052(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c1052) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sDq(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 52,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c1077(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c1077) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sq(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 53,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c1102(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c1102) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sq(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 54,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c1136(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c1136) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sq(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 55,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c115(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c115) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 13,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c1169(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c1169) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 56,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c1181(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c1181) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 57,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c1190(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c1190) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sqD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 58,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c1211(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c1211) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sq(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 59,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c1238(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c1238) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sDq(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 60,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c1270(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c1270) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sDDd(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 61,WPP_LOCAL_TraceGuids+0 WPP_R0123 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c1287(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c1287) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sd(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 62,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c129(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c129) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sd(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 14,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c1307(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c1307) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sDDd(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 63,WPP_LOCAL_TraceGuids+0 WPP_R0123 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c1354(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c1354) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sDDDDd(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 64,WPP_LOCAL_TraceGuids+0 WPP_R012345 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c1363(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c1363) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 65,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c1375(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c1375) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 66,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c1387(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c1387) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 67,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c1399(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c1399) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 68,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c1411(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c1411) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 69,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c1430(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c1430) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sd(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 70,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c1446(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c1446) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sd(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 71,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c1471(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c1471) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sDd(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 72,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c1481(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c1481) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sDd(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 73,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c1510(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c1510) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sq(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 74,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c1527(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c1527) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 75,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c1542(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c1542) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 76,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c1571(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c1571) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 77,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c1580(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c1580) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 78,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c1592(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c1592) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 79,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c1605(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c1605) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 80,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c1617(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c1617) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 81,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c162(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c162) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 15,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c1631(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c1631) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sqD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 82,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c1658(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c1658) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 83,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c1720(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c1720) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 84,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c1730(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c1730) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sqD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 85,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c1742(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c1742) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 86,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c1757(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c1757) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 87,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c1769(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c1769) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 88,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c1778(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c1778) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 89,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c1792(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c1792) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 90,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c1809(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c1809) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 91,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c1818(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c1818) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 92,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c1830(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c1830) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 93,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c1842(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c1842) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 94,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c1866(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c1866) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 95,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c1882(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c1882) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 96,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c1898(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c1898) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 97,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c190(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c190) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sd(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 16,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c1909(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c1909) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 98,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c1931(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c1931) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sDD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 99,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c1958(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c1958) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sd(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 100,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c1967(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c1967) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sd(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 101,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c1977(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c1977) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 102,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c1996(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c1996) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 103,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c2024(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c2024) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 104,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c2058(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c2058) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sqqD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 105,WPP_LOCAL_TraceGuids+0 WPP_R0123 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c2074(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c2074) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 106,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c2099(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c2099) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sd(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 107,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c2140(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c2140) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 108,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c2171(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c2171) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sqqD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 109,WPP_LOCAL_TraceGuids+0 WPP_R0123 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c2205(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c2205) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 110,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c2214(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c2214) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 111,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c222(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c222) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sd(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 17,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c2223(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c2223) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 112,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c2245(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c2245) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 113,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c2256(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c2256) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 114,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c2278(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c2278) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 115,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c2296(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c2296) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 116,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c2313(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c2313) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 117,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c2341(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c2341) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 118,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c2369(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c2369) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sDqd(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 119,WPP_LOCAL_TraceGuids+0 WPP_R0123 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c2379(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c2379) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sd(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 120,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c238(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c238) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 18,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c2398(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c2398) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 121,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c2416(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c2416) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sDqd(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 122,WPP_LOCAL_TraceGuids+0 WPP_R0123 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c2431(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c2431) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sq(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 123,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c2464(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c2464) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sq(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 124,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c2495(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c2495) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sDDq(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 125,WPP_LOCAL_TraceGuids+0 WPP_R0123 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c2504(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c2504) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sqD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 126,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c2525(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c2525) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 127,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c2534(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c2534) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 128,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c2550(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c2550) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 129,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c2564(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c2564) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 130,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c2586(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c2586) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 131,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c2635(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c2635) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sqD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 132,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c2649(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c2649) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sqD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 133,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c266(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c266) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 19,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c2663(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c2663) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 134,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c2676(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c2676) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 135,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c2687(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c2687) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 136,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c2700(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c2700) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 137,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c2722(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c2722) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 138,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c2753(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c2753) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sDD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 139,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c2778(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c2778) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 140,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c282(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c282) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sDq(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 20,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c2820(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c2820) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sd(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 141,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c2848(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c2848) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sDDqD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 142,WPP_LOCAL_TraceGuids+0 WPP_R01234 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c293(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c293) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sq(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 21,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c2959(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c2959) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sDqDDd(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 143,WPP_LOCAL_TraceGuids+0 WPP_R012345 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c2972(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c2972) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 144,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c2999(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c2999) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 145,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c3018(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c3018) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 146,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c302(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c302) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sqD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 22,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c3039(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c3039) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 147,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c3048(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c3048) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 148,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c3060(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c3060) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 149,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c3093(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c3093) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 150,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c3110(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c3110) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 151,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c3134(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c3134) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 152,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c3151(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c3151) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sq(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 153,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c316(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c316) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sDq(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 23,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c3167(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c3167) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sqDD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 154,WPP_LOCAL_TraceGuids+0 WPP_R0123 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c3183(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c3183) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sDq(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 155,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c3206(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c3206) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sqD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 156,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c3227(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c3227) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 157,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c3237(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c3237) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 158,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c3253(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c3253) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 159,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c3281(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c3281) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sqDDD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 160,WPP_LOCAL_TraceGuids+0 WPP_R01234 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c3314(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c3314) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sqD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 161,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c3325(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c3325) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sqD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 162,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c3341(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c3341) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sDDq(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 163,WPP_LOCAL_TraceGuids+0 WPP_R0123 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c3357(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c3357) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sqDDDD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 164,WPP_LOCAL_TraceGuids+0 WPP_R012345 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c337(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c337) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sq(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 24,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c3383(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c3383) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sqDD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 165,WPP_LOCAL_TraceGuids+0 WPP_R0123 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c3424(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c3424) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sDDq(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 166,WPP_LOCAL_TraceGuids+0 WPP_R0123 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c3440(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c3440) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sqDDD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 167,WPP_LOCAL_TraceGuids+0 WPP_R01234 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c3469(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c3469) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sqDDD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 168,WPP_LOCAL_TraceGuids+0 WPP_R01234 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c3505(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c3505) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sDDq(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 169,WPP_LOCAL_TraceGuids+0 WPP_R0123 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c352(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c352) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sDq(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 25,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c3521(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c3521) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sqDDDD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 170,WPP_LOCAL_TraceGuids+0 WPP_R012345 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c3538(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c3538) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 171,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c3577(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c3577) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sDD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 172,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c3595(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c3595) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 173,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c3634(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c3634) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sDD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 174,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c3670(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c3670) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 175,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c3684(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c3684) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 176,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c3698(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c3698) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 177,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c3712(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c3712) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 178,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c3746(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c3746) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sqq(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 179,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c3769(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c3769) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sqqDd(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 180,WPP_LOCAL_TraceGuids+0 WPP_R01234 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c3786(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c3786) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sqqd(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 181,WPP_LOCAL_TraceGuids+0 WPP_R0123 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c379(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c379) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 26,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c3821(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c3821) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 182,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c3841(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c3841) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 183,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c3851(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c3851) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 184,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c3862(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c3862) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 185,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c3874(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c3874) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 186,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c3889(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c3889) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 187,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c3923(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c3923) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 188,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c3978(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c3978) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 189,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c423(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c423) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 27,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c447(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c447) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sqD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 28,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c459(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c459) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sDq(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 29,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c481(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c481) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sq(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 30,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c511(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c511) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sq(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 31,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c524(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c524) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sDD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 32,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c558(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c558) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sq(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 33,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c581(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c581) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sqD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 34,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c606(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c606) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sqd(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 35,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c642(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c642) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sqD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 36,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c673(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c673) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sqq(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 37,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c711(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c711) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sDqD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 38,WPP_LOCAL_TraceGuids+0 WPP_R0123 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c72(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c72) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sq(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 10,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c740(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c740) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 39,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c769(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c769) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 40,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c782(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c782) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 41,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c805(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c805) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sq(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 42,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c825(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c825) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sDq(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 43,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c852(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c852) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 44,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c877(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c877) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 45,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c88(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c88) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sd(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 11,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c902(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c902) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 46,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c930(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c930) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 47,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c951(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c951) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 48,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c98(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c98) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 12,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c988(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c988) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sq(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 49,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#else
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c1018(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c1018) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sq(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 50,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c1032(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c1032) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 51,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c1052(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c1052) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sDq(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 52,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c1077(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c1077) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sq(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 53,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c1102(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c1102) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sq(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 54,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c1136(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c1136) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sq(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 55,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c115(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c115) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 13,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c1169(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c1169) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 56,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c1181(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c1181) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 57,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c1190(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c1190) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sqD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 58,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c1211(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c1211) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sq(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 59,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c1238(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c1238) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sDq(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 60,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c1270(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c1270) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sDDd(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 61,WPP_LOCAL_TraceGuids+0 WPP_R0123 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c1287(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c1287) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sd(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 62,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c129(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c129) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sd(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 14,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c1307(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c1307) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sDDd(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 63,WPP_LOCAL_TraceGuids+0 WPP_R0123 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c1354(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c1354) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sDDDDd(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 64,WPP_LOCAL_TraceGuids+0 WPP_R012345 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c1363(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c1363) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 65,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c1375(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c1375) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 66,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c1387(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c1387) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 67,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c1399(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c1399) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 68,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c1411(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c1411) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 69,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c1430(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c1430) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sd(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 70,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c1446(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c1446) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sd(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 71,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c1471(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c1471) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sDd(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 72,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c1481(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c1481) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sDd(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 73,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c1510(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c1510) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sq(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 74,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c1527(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c1527) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 75,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c1542(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c1542) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 76,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c1571(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c1571) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 77,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c1580(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c1580) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 78,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c1592(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c1592) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 79,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c1605(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c1605) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 80,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c1617(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c1617) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 81,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c162(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c162) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 15,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c1631(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c1631) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sqD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 82,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c1658(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c1658) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 83,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c1720(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c1720) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 84,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c1730(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c1730) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sqD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 85,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c1742(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c1742) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 86,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c1757(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c1757) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 87,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c1769(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c1769) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 88,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c1778(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c1778) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 89,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c1792(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c1792) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 90,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c1809(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c1809) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 91,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c1818(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c1818) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 92,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c1830(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c1830) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 93,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c1842(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c1842) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 94,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c1866(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c1866) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 95,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c1882(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c1882) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 96,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c1898(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c1898) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 97,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c190(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c190) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sd(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 16,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c1909(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c1909) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 98,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c1931(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c1931) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sDD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 99,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c1958(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c1958) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sd(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 100,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c1967(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c1967) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sd(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 101,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c1977(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c1977) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 102,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c1996(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c1996) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 103,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c2024(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c2024) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 104,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c2058(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c2058) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sqqD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 105,WPP_LOCAL_TraceGuids+0 WPP_R0123 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c2074(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c2074) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 106,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c2099(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c2099) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sd(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 107,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c2140(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c2140) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 108,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c2171(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c2171) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sqqD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 109,WPP_LOCAL_TraceGuids+0 WPP_R0123 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c2205(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c2205) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 110,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c2214(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c2214) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 111,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c222(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c222) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sd(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 17,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c2223(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c2223) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 112,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c2245(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c2245) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 113,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c2256(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c2256) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 114,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c2278(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c2278) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 115,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c2296(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c2296) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 116,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c2313(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c2313) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 117,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c2341(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c2341) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 118,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c2369(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c2369) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sDqd(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 119,WPP_LOCAL_TraceGuids+0 WPP_R0123 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c2379(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c2379) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sd(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 120,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c238(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c238) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 18,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c2398(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c2398) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 121,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c2416(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c2416) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sDqd(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 122,WPP_LOCAL_TraceGuids+0 WPP_R0123 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c2431(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c2431) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sq(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 123,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c2464(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c2464) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sq(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 124,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c2495(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c2495) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sDDq(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 125,WPP_LOCAL_TraceGuids+0 WPP_R0123 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c2504(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c2504) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sqD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 126,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c2525(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c2525) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 127,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c2534(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c2534) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 128,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c2550(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c2550) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 129,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c2564(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c2564) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 130,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c2586(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c2586) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 131,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c2635(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c2635) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sqD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 132,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c2649(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c2649) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sqD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 133,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c266(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c266) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 19,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c2663(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c2663) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 134,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c2676(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c2676) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 135,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c2687(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c2687) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 136,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c2700(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c2700) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 137,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c2722(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c2722) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 138,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c2753(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c2753) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sDD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 139,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c2778(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c2778) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 140,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c282(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c282) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sDq(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 20,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c2820(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c2820) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sd(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 141,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c2848(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c2848) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sDDqD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 142,WPP_LOCAL_TraceGuids+0 WPP_R01234 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c293(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c293) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sq(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 21,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c2959(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c2959) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sDqDDd(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 143,WPP_LOCAL_TraceGuids+0 WPP_R012345 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c2972(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c2972) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 144,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c2999(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c2999) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 145,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c3018(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c3018) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 146,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c302(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c302) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sqD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 22,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c3039(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c3039) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 147,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c3048(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c3048) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 148,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c3060(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c3060) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 149,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c3093(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c3093) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 150,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c3110(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c3110) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 151,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c3134(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c3134) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 152,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c3151(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c3151) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sq(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 153,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c316(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c316) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sDq(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 23,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c3167(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c3167) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sqDD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 154,WPP_LOCAL_TraceGuids+0 WPP_R0123 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c3183(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c3183) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sDq(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 155,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c3206(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c3206) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sqD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 156,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c3227(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c3227) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 157,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c3237(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c3237) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 158,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c3253(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c3253) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 159,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c3281(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c3281) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sqDDD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 160,WPP_LOCAL_TraceGuids+0 WPP_R01234 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c3314(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c3314) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sqD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 161,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c3325(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c3325) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sqD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 162,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c3341(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c3341) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sDDq(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 163,WPP_LOCAL_TraceGuids+0 WPP_R0123 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c3357(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c3357) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sqDDDD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 164,WPP_LOCAL_TraceGuids+0 WPP_R012345 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c337(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c337) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sq(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 24,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c3383(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c3383) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sqDD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 165,WPP_LOCAL_TraceGuids+0 WPP_R0123 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c3424(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c3424) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sDDq(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 166,WPP_LOCAL_TraceGuids+0 WPP_R0123 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c3440(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c3440) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sqDDD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 167,WPP_LOCAL_TraceGuids+0 WPP_R01234 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c3469(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c3469) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sqDDD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 168,WPP_LOCAL_TraceGuids+0 WPP_R01234 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c3505(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c3505) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sDDq(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 169,WPP_LOCAL_TraceGuids+0 WPP_R0123 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c352(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c352) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sDq(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 25,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c3521(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c3521) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sqDDDD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 170,WPP_LOCAL_TraceGuids+0 WPP_R012345 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c3538(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c3538) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 171,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c3577(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c3577) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sDD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 172,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c3595(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c3595) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 173,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c3634(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c3634) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sDD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 174,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c3670(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c3670) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 175,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c3684(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c3684) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 176,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c3698(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c3698) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 177,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c3712(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c3712) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 178,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c3746(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c3746) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sqq(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 179,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c3769(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c3769) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sqqDd(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 180,WPP_LOCAL_TraceGuids+0 WPP_R01234 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c3786(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c3786) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sqqd(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 181,WPP_LOCAL_TraceGuids+0 WPP_R0123 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c379(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c379) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 26,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c3821(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c3821) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 182,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c3841(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c3841) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 183,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c3851(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c3851) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 184,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c3862(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c3862) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 185,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c3874(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c3874) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 186,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c3889(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c3889) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 187,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c3923(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c3923) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 188,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c3978(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c3978) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 189,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c423(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c423) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 27,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c447(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c447) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sqD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 28,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c459(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c459) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sDq(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 29,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c481(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c481) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sq(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 30,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c511(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c511) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sq(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 31,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c524(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c524) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sDD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 32,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c558(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c558) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sq(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 33,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c581(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c581) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sqD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 34,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c606(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c606) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sqd(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 35,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c642(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c642) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sqD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 36,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c673(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c673) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sqq(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 37,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c711(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c711) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sDqD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 38,WPP_LOCAL_TraceGuids+0 WPP_R0123 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c72(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c72) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sq(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 10,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c740(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c740) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 39,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c769(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c769) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 40,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c782(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c782) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 41,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c805(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c805) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sq(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 42,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c825(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c825) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sDq(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 43,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c852(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c852) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 44,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c877(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c877) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 45,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c88(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c88) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sd(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 11,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c902(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c902) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 46,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c930(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c930) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_s(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 47,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c951(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c951) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 48,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c98(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c98) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sD(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 12,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c988(FLAG, LEVEL,  MSGARGS) \
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c988) \
            (( \
                WPP_RECORDER_FLAG_LEVEL_FILTER(FLAG, LEVEL) ? \
                WPP_RECORDER_SF_sq(WPP_RECORDER_FLAG_LEVEL_ARGS(FLAG, LEVEL), \
                                 49,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), 1:0  \
            )) \
            WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#endif



#if defined(__cplusplus)
};
#endif


#else
// template tracemacro.tpl

// This template expects:
//      WPP_THIS_FILE defined (see header.tpl)
//      WPP_LOGGER_ARG  defined
//      WPP_GET_LOGGER  defined
//      WPP_ENABLED() defined

#if defined(__cplusplus)
extern "C" {
#endif

#ifndef WPP_ALREADY_INCLUDED

#ifndef NO_CHECK_FOR_NULL_STRING
#ifndef WPP_CHECK_FOR_NULL_STRING
#define WPP_CHECK_FOR_NULL_STRING 1
#endif
#endif

#define WPP_EVAL(_value_) _value_
#define WPP_(Id) WPP_EVAL(WPP_) ## WPP_EVAL(Id) ## WPP_EVAL(_) ## WPP_EVAL(WPP_THIS_FILE) ## WPP_EVAL(__LINE__)

#if !defined(WPP_INLINE)
#define WPP_INLINE DECLSPEC_NOINLINE __inline
#endif

#else   // #ifndef WPP_ALREADY_INCLUDED

#undef WPP_LOCAL_TraceGuids

#endif  // #ifndef WPP_ALREADY_INCLUDED

#if !defined(WPP_NO_ANNOTATIONS)

#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c1018
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c1032
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c1052
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c1077
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c1102
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c1136
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c115
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c1169
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c1181
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c1190
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c1211
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c1238
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c1270
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c1287
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c129
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c1307
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c1354
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c1363
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c1375
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c1387
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c1399
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c1411
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c1430
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c1446
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c1471
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c1481
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c1510
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c1527
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c1542
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c1571
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c1580
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c1592
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c1605
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c1617
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c162
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c1631
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c1658
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c1720
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c1730
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c1742
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c1757
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c1769
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c1778
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c1792
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c1809
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c1818
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c1830
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c1842
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c1866
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c1882
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c1898
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c190
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c1909
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c1931
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c1958
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c1967
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c1977
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c1996
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c2024
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c2058
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c2074
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c2099
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c2140
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c2171
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c2205
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c2214
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c222
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c2223
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c2245
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c2256
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c2278
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c2296
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c2313
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c2341
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c2369
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c2379
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c238
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c2398
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c2416
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c2431
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c2464
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c2495
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c2504
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c2525
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c2534
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c2550
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c2564
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c2586
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c2635
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c2649
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c266
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c2663
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c2676
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c2687
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c2700
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c2722
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c2753
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c2778
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c282
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c2820
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c2848
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c293
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c2959
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c2972
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c2999
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c3018
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c302
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c3039
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c3048
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c3060
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c3093
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c3110
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c3134
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c3151
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c316
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c3167
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c3183
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c3206
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c3227
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c3237
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c3253
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c3281
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c3314
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c3325
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c3341
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c3357
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c337
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c3383
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c3424
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c3440
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c3469
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c3505
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c352
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c3521
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c3538
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c3577
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c3595
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c3634
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c3670
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c3684
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c3698
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c3712
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c3746
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c3769
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c3786
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c379
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c3821
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c3841
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c3851
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c3862
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c3874
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c3889
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c3923
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c3978
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c423
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c447
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c459
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c481
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c511
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c524
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c558
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c581
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c606
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c642
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c673
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c711
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c72
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c740
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c769
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c782
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c805
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c825
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c852
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c877
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c88
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c902
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c930
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c951
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c98
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_QCPWR_c988
#endif
#ifdef WPP_EMIT_FUNC_NAME
#define WPP_FUNC_NAME L" FUNC=" _WPPW(__FUNCTION__)
#else
#define WPP_FUNC_NAME
#endif

#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c1018_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 50 \"%0<%10!s!> DevicePowerUpIrpCompletion: 0x%11!p!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c1018_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 50 \"%0<%10!s!> DevicePowerUpIrpCompletion: 0x%11!p!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c1018
    #define WPP_ANNOTATE_QCPWR_c1018 WPP_ANNOTATE_QCPWR_c1018_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemPtr -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c1018 WPP_ANNOTATE_QCPWR_c1018_FINAL("TMF:", "QCPWR.c", "QCPWR_c1018", L"{", L"pDevExt->PortName, ItemString -- 10" , L"Irp, ItemPtr -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c1032_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 51 \"%0<%10!s!> DevicePowerUpIrpCompletion failure 0x%11!x!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c1032_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 51 \"%0<%10!s!> DevicePowerUpIrpCompletion failure 0x%11!x!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c1032
    #define WPP_ANNOTATE_QCPWR_c1032 WPP_ANNOTATE_QCPWR_c1032_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c1032 WPP_ANNOTATE_QCPWR_c1032_FINAL("TMF:", "QCPWR.c", "QCPWR_c1032", L"{", L"pDevExt->PortName, ItemString -- 10" , L"ntStatus, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c1052_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 52 \"%0<%10!s!> PIRP (Cdev-s0 0x%11!x!) 0x%12!p!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c1052_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 52 \"%0<%10!s!> PIRP (Cdev-s0 0x%11!x!) 0x%12!p!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c1052
    #define WPP_ANNOTATE_QCPWR_c1052 WPP_ANNOTATE_QCPWR_c1052_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemPtr -- 12" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c1052 WPP_ANNOTATE_QCPWR_c1052_FINAL("TMF:", "QCPWR.c", "QCPWR_c1052", L"{", L"pDevExt->PortName, ItemString -- 10" , L"Irp->IoStatus.Status, ItemLong -- 11" , L"Irp, ItemPtr -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c1077_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 53 \"%0<%10!s!> DecreaseDevicePower: IRP 0x%11!p!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c1077_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 53 \"%0<%10!s!> DecreaseDevicePower: IRP 0x%11!p!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c1077
    #define WPP_ANNOTATE_QCPWR_c1077 WPP_ANNOTATE_QCPWR_c1077_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemPtr -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c1077 WPP_ANNOTATE_QCPWR_c1077_FINAL("TMF:", "QCPWR.c", "QCPWR_c1077", L"{", L"pDevExt->PortName, ItemString -- 10" , L"Irp, ItemPtr -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c1102_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 54 \"%0<%10!s!> DecreaseDevicePower: not in D0, no act(0x%11!p!)\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c1102_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 54 \"%0<%10!s!> DecreaseDevicePower: not in D0, no act(0x%11!p!)\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c1102
    #define WPP_ANNOTATE_QCPWR_c1102 WPP_ANNOTATE_QCPWR_c1102_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemPtr -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c1102 WPP_ANNOTATE_QCPWR_c1102_FINAL("TMF:", "QCPWR.c", "QCPWR_c1102", L"{", L"pDevExt->PortName, ItemString -- 10" , L"Irp, ItemPtr -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c1136_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 55 \"%0<%10!s!> -->ScheduleDevicePowerUp: 0x%11!p!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c1136_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 55 \"%0<%10!s!> -->ScheduleDevicePowerUp: 0x%11!p!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c1136
    #define WPP_ANNOTATE_QCPWR_c1136 WPP_ANNOTATE_QCPWR_c1136_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemPtr -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c1136 WPP_ANNOTATE_QCPWR_c1136_FINAL("TMF:", "QCPWR.c", "QCPWR_c1136", L"{", L"pDevExt->PortName, ItemString -- 10" , L"Irp, ItemPtr -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c115_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 13 \"%0<%10!s!> _PowrerManagement: _QuerySystemPowerState 0x%11!X!, start next Po\" //   FLAG=QCSER_DBG_MASK_POWER LEVEL=QCSER_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c115_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 13 \"%0<%10!s!> _PowrerManagement: _QuerySystemPowerState 0x%11!X!, start next Po\" //   FLAG=QCSER_DBG_MASK_POWER LEVEL=QCSER_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c115
    #define WPP_ANNOTATE_QCPWR_c115 WPP_ANNOTATE_QCPWR_c115_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c115 WPP_ANNOTATE_QCPWR_c115_FINAL("TMF:", "QCPWR.c", "QCPWR_c115", L"{", L"pDevExt->PortName, ItemString -- 10" , L"nts, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c1169_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 56 \"%0<%10!s!> ScheduleDevicePowerUp: Out of mem 1\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c1169_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 56 \"%0<%10!s!> ScheduleDevicePowerUp: Out of mem 1\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c1169
    #define WPP_ANNOTATE_QCPWR_c1169 WPP_ANNOTATE_QCPWR_c1169_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c1169 WPP_ANNOTATE_QCPWR_c1169_FINAL("TMF:", "QCPWR.c", "QCPWR_c1169", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c1181_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 57 \"%0<%10!s!> ScheduleDevicePowerUp: Out of mem 2\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c1181_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 57 \"%0<%10!s!> ScheduleDevicePowerUp: Out of mem 2\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c1181
    #define WPP_ANNOTATE_QCPWR_c1181 WPP_ANNOTATE_QCPWR_c1181_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c1181 WPP_ANNOTATE_QCPWR_c1181_FINAL("TMF:", "QCPWR.c", "QCPWR_c1181", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c1190_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 58 \"%0<%10!s!> <--ScheduleDevicePowerUp: 0x%11!p! ST 0x%12!x!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c1190_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 58 \"%0<%10!s!> <--ScheduleDevicePowerUp: 0x%11!p! ST 0x%12!x!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c1190
    #define WPP_ANNOTATE_QCPWR_c1190 WPP_ANNOTATE_QCPWR_c1190_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemPtr -- 11" , L"Arg, ItemLong -- 12" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c1190 WPP_ANNOTATE_QCPWR_c1190_FINAL("TMF:", "QCPWR.c", "QCPWR_c1190", L"{", L"pDevExt->PortName, ItemString -- 10" , L"Irp, ItemPtr -- 11" , L"ntStatus, ItemLong -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c1211_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 59 \"%0<%10!s!> PowerUpDevice: 0x%11!p!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c1211_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 59 \"%0<%10!s!> PowerUpDevice: 0x%11!p!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c1211
    #define WPP_ANNOTATE_QCPWR_c1211 WPP_ANNOTATE_QCPWR_c1211_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemPtr -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c1211 WPP_ANNOTATE_QCPWR_c1211_FINAL("TMF:", "QCPWR.c", "QCPWR_c1211", L"{", L"pDevExt->PortName, ItemString -- 10" , L"irp, ItemPtr -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c1238_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 60 \"%0<%10!s!> PIRP (Cdev-s 0x%11!x!) 0x%12!p!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c1238_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 60 \"%0<%10!s!> PIRP (Cdev-s 0x%11!x!) 0x%12!p!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c1238
    #define WPP_ANNOTATE_QCPWR_c1238 WPP_ANNOTATE_QCPWR_c1238_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemPtr -- 12" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c1238 WPP_ANNOTATE_QCPWR_c1238_FINAL("TMF:", "QCPWR.c", "QCPWR_c1238", L"{", L"pDevExt->PortName, ItemString -- 10" , L"irp->IoStatus.Status, ItemLong -- 11" , L"irp, ItemPtr -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c1270_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 61 \"%0<%10!s!> -->CancelIdleTimer(%11!u!): BusyMask 0x%12!x! RM[0] %13!d!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c1270_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 61 \"%0<%10!s!> -->CancelIdleTimer(%11!u!): BusyMask 0x%12!x! RM[0] %13!d!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c1270
    #define WPP_ANNOTATE_QCPWR_c1270 WPP_ANNOTATE_QCPWR_c1270_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemLong -- 12" , L"Arg, ItemLong -- 13" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c1270 WPP_ANNOTATE_QCPWR_c1270_FINAL("TMF:", "QCPWR.c", "QCPWR_c1270", L"{", L"pDevExt->PortName, ItemString -- 10" , L"Cookie, ItemLong -- 11" , L"BusyMask, ItemLong -- 12" , L"pDevExt->Sts.lRmlCount[0], ItemLong -- 13" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c1287_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 62 \"%0<%10!s!> CancelIdleTimer(deQ) - RML %11!d!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c1287_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 62 \"%0<%10!s!> CancelIdleTimer(deQ) - RML %11!d!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c1287
    #define WPP_ANNOTATE_QCPWR_c1287 WPP_ANNOTATE_QCPWR_c1287_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c1287 WPP_ANNOTATE_QCPWR_c1287_FINAL("TMF:", "QCPWR.c", "QCPWR_c1287", L"{", L"pDevExt->PortName, ItemString -- 10" , L"pDevExt->Sts.lRmlCount[3], ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c129_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 14 \"%0<%10!s!> IRP_MN_QUERY_POWER: DevicePowerState D%11!d!\" //   FLAG=QCSER_DBG_MASK_POWER LEVEL=QCSER_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c129_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 14 \"%0<%10!s!> IRP_MN_QUERY_POWER: DevicePowerState D%11!d!\" //   FLAG=QCSER_DBG_MASK_POWER LEVEL=QCSER_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c129
    #define WPP_ANNOTATE_QCPWR_c129 WPP_ANNOTATE_QCPWR_c129_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c129 WPP_ANNOTATE_QCPWR_c129_FINAL("TMF:", "QCPWR.c", "QCPWR_c129", L"{", L"pDevExt->PortName, ItemString -- 10" , L"pwrState-1, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c1307_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 63 \"%0<%10!s!> <--CancelIdleTimer(%11!u!): BusyMask 0x%12!x! RM[0] %13!d!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c1307_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 63 \"%0<%10!s!> <--CancelIdleTimer(%11!u!): BusyMask 0x%12!x! RM[0] %13!d!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c1307
    #define WPP_ANNOTATE_QCPWR_c1307 WPP_ANNOTATE_QCPWR_c1307_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemLong -- 12" , L"Arg, ItemLong -- 13" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c1307 WPP_ANNOTATE_QCPWR_c1307_FINAL("TMF:", "QCPWR.c", "QCPWR_c1307", L"{", L"pDevExt->PortName, ItemString -- 10" , L"Cookie, ItemLong -- 11" , L"BusyMask, ItemLong -- 12" , L"pDevExt->Sts.lRmlCount[0], ItemLong -- 13" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c1354_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 64 \"%0<%10!s!> -->SetIdleTimer(%11!u!): BusyMask 0x%12!x! IRQL %13!u! Idle %14!u!s RM %15!d!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c1354_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 64 \"%0<%10!s!> -->SetIdleTimer(%11!u!): BusyMask 0x%12!x! IRQL %13!u! Idle %14!u!s RM %15!d!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c1354
    #define WPP_ANNOTATE_QCPWR_c1354 WPP_ANNOTATE_QCPWR_c1354_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemLong -- 12" , L"Arg, ItemLong -- 13" , L"Arg, ItemLong -- 14" , L"Arg, ItemLong -- 15" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c1354 WPP_ANNOTATE_QCPWR_c1354_FINAL("TMF:", "QCPWR.c", "QCPWR_c1354", L"{", L"pDevExt->PortName, ItemString -- 10" , L"Cookie, ItemLong -- 11" , L"BusyMask, ItemLong -- 12" , L"irql, ItemLong -- 13" , L"pDevExt->SelectiveSuspendIdleTime, ItemLong -- 14" , L"pDevExt->Sts.lRmlCount[3], ItemLong -- 15" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c1363_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 65 \"%0<%10!s!> <--SetIdleTimer(%11!u!): Suspended, no act\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c1363_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 65 \"%0<%10!s!> <--SetIdleTimer(%11!u!): Suspended, no act\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c1363
    #define WPP_ANNOTATE_QCPWR_c1363 WPP_ANNOTATE_QCPWR_c1363_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c1363 WPP_ANNOTATE_QCPWR_c1363_FINAL("TMF:", "QCPWR.c", "QCPWR_c1363", L"{", L"pDevExt->PortName, ItemString -- 10" , L"Cookie, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c1375_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 66 \"%0<%10!s!> <--SetIdleTimer(%11!u!): dev not in working state\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c1375_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 66 \"%0<%10!s!> <--SetIdleTimer(%11!u!): dev not in working state\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c1375
    #define WPP_ANNOTATE_QCPWR_c1375 WPP_ANNOTATE_QCPWR_c1375_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c1375 WPP_ANNOTATE_QCPWR_c1375_FINAL("TMF:", "QCPWR.c", "QCPWR_c1375", L"{", L"pDevExt->PortName, ItemString -- 10" , L"Cookie, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c1387_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 67 \"%0<%10!s!> <--SetIdleTimer(%11!u!): dev in query-removal\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c1387_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 67 \"%0<%10!s!> <--SetIdleTimer(%11!u!): dev in query-removal\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c1387
    #define WPP_ANNOTATE_QCPWR_c1387 WPP_ANNOTATE_QCPWR_c1387_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c1387 WPP_ANNOTATE_QCPWR_c1387_FINAL("TMF:", "QCPWR.c", "QCPWR_c1387", L"{", L"pDevExt->PortName, ItemString -- 10" , L"Cookie, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c1399_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 68 \"%0<%10!s!> <--SetIdleTimer(%11!u!): Idle req pending, no act\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c1399_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 68 \"%0<%10!s!> <--SetIdleTimer(%11!u!): Idle req pending, no act\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c1399
    #define WPP_ANNOTATE_QCPWR_c1399 WPP_ANNOTATE_QCPWR_c1399_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c1399 WPP_ANNOTATE_QCPWR_c1399_FINAL("TMF:", "QCPWR.c", "QCPWR_c1399", L"{", L"pDevExt->PortName, ItemString -- 10" , L"Cookie, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c1411_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 69 \"%0<%10!s!> <--SetIdleTimer(%11!u!): powering down, no act\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c1411_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 69 \"%0<%10!s!> <--SetIdleTimer(%11!u!): powering down, no act\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c1411
    #define WPP_ANNOTATE_QCPWR_c1411 WPP_ANNOTATE_QCPWR_c1411_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c1411 WPP_ANNOTATE_QCPWR_c1411_FINAL("TMF:", "QCPWR.c", "QCPWR_c1411", L"{", L"pDevExt->PortName, ItemString -- 10" , L"Cookie, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c1430_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 70 \"%0<%10!s!> SetIdleTimer: re-start RM %11!d!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c1430_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 70 \"%0<%10!s!> SetIdleTimer: re-start RM %11!d!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c1430
    #define WPP_ANNOTATE_QCPWR_c1430 WPP_ANNOTATE_QCPWR_c1430_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c1430 WPP_ANNOTATE_QCPWR_c1430_FINAL("TMF:", "QCPWR.c", "QCPWR_c1430", L"{", L"pDevExt->PortName, ItemString -- 10" , L"pDevExt->Sts.lRmlCount[3], ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c1446_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 71 \"%0<%10!s!> SetIdleTimer: no reset RM %11!d!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c1446_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 71 \"%0<%10!s!> SetIdleTimer: no reset RM %11!d!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c1446
    #define WPP_ANNOTATE_QCPWR_c1446 WPP_ANNOTATE_QCPWR_c1446_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c1446 WPP_ANNOTATE_QCPWR_c1446_FINAL("TMF:", "QCPWR.c", "QCPWR_c1446", L"{", L"pDevExt->PortName, ItemString -- 10" , L"pDevExt->Sts.lRmlCount[3], ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c1471_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 72 \"%0<%10!s!> <--SetIdleTimer: ST 0x%11!x! RM %12!d!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c1471_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 72 \"%0<%10!s!> <--SetIdleTimer: ST 0x%11!x! RM %12!d!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c1471
    #define WPP_ANNOTATE_QCPWR_c1471 WPP_ANNOTATE_QCPWR_c1471_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemLong -- 12" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c1471 WPP_ANNOTATE_QCPWR_c1471_FINAL("TMF:", "QCPWR.c", "QCPWR_c1471", L"{", L"pDevExt->PortName, ItemString -- 10" , L"ntStatus, ItemLong -- 11" , L"pDevExt->Sts.lRmlCount[3], ItemLong -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c1481_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 73 \"%0<%10!s!> <--SetIdleTimer: err - IoBusyMask 0x%11!x! (not 0) (RML %12!d!)\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c1481_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 73 \"%0<%10!s!> <--SetIdleTimer: err - IoBusyMask 0x%11!x! (not 0) (RML %12!d!)\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c1481
    #define WPP_ANNOTATE_QCPWR_c1481 WPP_ANNOTATE_QCPWR_c1481_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemLong -- 12" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c1481 WPP_ANNOTATE_QCPWR_c1481_FINAL("TMF:", "QCPWR.c", "QCPWR_c1481", L"{", L"pDevExt->PortName, ItemString -- 10" , L"pDevExt->IoBusyMask, ItemLong -- 11" , L"pDevExt->Sts.lRmlCount[3], ItemLong -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c1510_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 74 \"%0<%10!s!> -->IdleDpcRoutine: context 0x%11!p!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c1510_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 74 \"%0<%10!s!> -->IdleDpcRoutine: context 0x%11!p!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c1510
    #define WPP_ANNOTATE_QCPWR_c1510 WPP_ANNOTATE_QCPWR_c1510_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemPtr -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c1510 WPP_ANNOTATE_QCPWR_c1510_FINAL("TMF:", "QCPWR.c", "QCPWR_c1510", L"{", L"pDevExt->PortName, ItemString -- 10" , L"DeferredContext, ItemPtr -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c1527_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 75 \"%0<%10!s!> IdleDpc: request idle IRP\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c1527_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 75 \"%0<%10!s!> IdleDpc: request idle IRP\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c1527
    #define WPP_ANNOTATE_QCPWR_c1527 WPP_ANNOTATE_QCPWR_c1527_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c1527 WPP_ANNOTATE_QCPWR_c1527_FINAL("TMF:", "QCPWR.c", "QCPWR_c1527", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c1542_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 76 \"%0<%10!s!> IdleDpc: SystemPower low, not to send idle req\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c1542_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 76 \"%0<%10!s!> IdleDpc: SystemPower low, not to send idle req\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c1542
    #define WPP_ANNOTATE_QCPWR_c1542 WPP_ANNOTATE_QCPWR_c1542_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c1542 WPP_ANNOTATE_QCPWR_c1542_FINAL("TMF:", "QCPWR.c", "QCPWR_c1542", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c1571_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 77 \"%0<%10!s!> -->RegisterIdleNotification\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c1571_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 77 \"%0<%10!s!> -->RegisterIdleNotification\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c1571
    #define WPP_ANNOTATE_QCPWR_c1571 WPP_ANNOTATE_QCPWR_c1571_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c1571 WPP_ANNOTATE_QCPWR_c1571_FINAL("TMF:", "QCPWR.c", "QCPWR_c1571", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c1580_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 78 \"%0<%10!s!> RegisterIdleNotification: selective suspension disabled\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c1580_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 78 \"%0<%10!s!> RegisterIdleNotification: selective suspension disabled\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c1580
    #define WPP_ANNOTATE_QCPWR_c1580 WPP_ANNOTATE_QCPWR_c1580_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c1580 WPP_ANNOTATE_QCPWR_c1580_FINAL("TMF:", "QCPWR.c", "QCPWR_c1580", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c1592_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 79 \"%0<%10!s!> <--RegisterIdleNotification: powering down, no act\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c1592_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 79 \"%0<%10!s!> <--RegisterIdleNotification: powering down, no act\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c1592
    #define WPP_ANNOTATE_QCPWR_c1592 WPP_ANNOTATE_QCPWR_c1592_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c1592 WPP_ANNOTATE_QCPWR_c1592_FINAL("TMF:", "QCPWR.c", "QCPWR_c1592", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c1605_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 80 \"%0<%10!s!> RegisterIdleNotification: wrong dev power state: D%11!u!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c1605_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 80 \"%0<%10!s!> RegisterIdleNotification: wrong dev power state: D%11!u!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c1605
    #define WPP_ANNOTATE_QCPWR_c1605 WPP_ANNOTATE_QCPWR_c1605_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c1605 WPP_ANNOTATE_QCPWR_c1605_FINAL("TMF:", "QCPWR.c", "QCPWR_c1605", L"{", L"pDevExt->PortName, ItemString -- 10" , L"pDevExt->DevicePower-1, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c1617_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 81 \"%0<%10!s!> RegisterIdleNotification: in query-removal\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c1617_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 81 \"%0<%10!s!> RegisterIdleNotification: in query-removal\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c1617
    #define WPP_ANNOTATE_QCPWR_c1617 WPP_ANNOTATE_QCPWR_c1617_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c1617 WPP_ANNOTATE_QCPWR_c1617_FINAL("TMF:", "QCPWR.c", "QCPWR_c1617", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c162_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 15 \"%0<%10!s!> IRP_MN_QUERY_POWER: unknown pwr type %11!u!\" //   FLAG=QCSER_DBG_MASK_POWER LEVEL=QCSER_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c162_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 15 \"%0<%10!s!> IRP_MN_QUERY_POWER: unknown pwr type %11!u!\" //   FLAG=QCSER_DBG_MASK_POWER LEVEL=QCSER_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c162
    #define WPP_ANNOTATE_QCPWR_c162 WPP_ANNOTATE_QCPWR_c162_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c162 WPP_ANNOTATE_QCPWR_c162_FINAL("TMF:", "QCPWR.c", "QCPWR_c162", L"{", L"pDevExt->PortName, ItemString -- 10" , L"IrpStack->Parameters.Power.Type, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c1631_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 82 \"%0<%10!s!> RegisterIdleNotification: dev busy, abort (0x%11!p!, 0x%12!x!)\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c1631_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 82 \"%0<%10!s!> RegisterIdleNotification: dev busy, abort (0x%11!p!, 0x%12!x!)\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c1631
    #define WPP_ANNOTATE_QCPWR_c1631 WPP_ANNOTATE_QCPWR_c1631_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemPtr -- 11" , L"Arg, ItemLong -- 12" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c1631 WPP_ANNOTATE_QCPWR_c1631_FINAL("TMF:", "QCPWR.c", "QCPWR_c1631", L"{", L"pDevExt->PortName, ItemString -- 10" , L"pDevExt->IdleNotificationIrp, ItemPtr -- 11" , L"pDevExt->IoBusyMask, ItemLong -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c1658_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 83 \"%0<%10!s!> RegisterIdleNotification: no mem-0\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c1658_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 83 \"%0<%10!s!> RegisterIdleNotification: no mem-0\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c1658
    #define WPP_ANNOTATE_QCPWR_c1658 WPP_ANNOTATE_QCPWR_c1658_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c1658 WPP_ANNOTATE_QCPWR_c1658_FINAL("TMF:", "QCPWR.c", "QCPWR_c1658", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c1720_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 84 \"%0<%10!s!> RegisterIdleNotification: rm lock failrue\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c1720_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 84 \"%0<%10!s!> RegisterIdleNotification: rm lock failrue\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c1720
    #define WPP_ANNOTATE_QCPWR_c1720 WPP_ANNOTATE_QCPWR_c1720_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c1720 WPP_ANNOTATE_QCPWR_c1720_FINAL("TMF:", "QCPWR.c", "QCPWR_c1720", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c1730_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 85 \"%0<%10!s!> RegisterIdleNotification: Submit idle req 0x%11!p! at D%12!u!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c1730_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 85 \"%0<%10!s!> RegisterIdleNotification: Submit idle req 0x%11!p! at D%12!u!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c1730
    #define WPP_ANNOTATE_QCPWR_c1730 WPP_ANNOTATE_QCPWR_c1730_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemPtr -- 11" , L"Arg, ItemLong -- 12" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c1730 WPP_ANNOTATE_QCPWR_c1730_FINAL("TMF:", "QCPWR.c", "QCPWR_c1730", L"{", L"pDevExt->PortName, ItemString -- 10" , L"irp, ItemPtr -- 11" , L"pDevExt->DevicePower-1, ItemLong -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c1742_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 86 \"%0<%10!s!> RegisterIdleNotification: no mem\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c1742_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 86 \"%0<%10!s!> RegisterIdleNotification: no mem\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c1742
    #define WPP_ANNOTATE_QCPWR_c1742 WPP_ANNOTATE_QCPWR_c1742_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c1742 WPP_ANNOTATE_QCPWR_c1742_FINAL("TMF:", "QCPWR.c", "QCPWR_c1742", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c1757_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 87 \"%0<%10!s!> <--RegisterIdleNotification: ST 0x%11!x!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c1757_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 87 \"%0<%10!s!> <--RegisterIdleNotification: ST 0x%11!x!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c1757
    #define WPP_ANNOTATE_QCPWR_c1757 WPP_ANNOTATE_QCPWR_c1757_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c1757 WPP_ANNOTATE_QCPWR_c1757_FINAL("TMF:", "QCPWR.c", "QCPWR_c1757", L"{", L"pDevExt->PortName, ItemString -- 10" , L"ntStatus, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c1769_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 88 \"%0<%10!s!> -->IdleNotificationCallback\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c1769_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 88 \"%0<%10!s!> -->IdleNotificationCallback\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c1769
    #define WPP_ANNOTATE_QCPWR_c1769 WPP_ANNOTATE_QCPWR_c1769_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c1769 WPP_ANNOTATE_QCPWR_c1769_FINAL("TMF:", "QCPWR.c", "QCPWR_c1769", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c1778_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 89 \"%0<%10!s!> IdleNotificationCallback: err-dev not ready\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c1778_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 89 \"%0<%10!s!> IdleNotificationCallback: err-dev not ready\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c1778
    #define WPP_ANNOTATE_QCPWR_c1778 WPP_ANNOTATE_QCPWR_c1778_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c1778 WPP_ANNOTATE_QCPWR_c1778_FINAL("TMF:", "QCPWR.c", "QCPWR_c1778", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c1792_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 90 \"%0<%10!s!> <--IdleNotificationCallback\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c1792_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 90 \"%0<%10!s!> <--IdleNotificationCallback\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c1792
    #define WPP_ANNOTATE_QCPWR_c1792 WPP_ANNOTATE_QCPWR_c1792_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c1792 WPP_ANNOTATE_QCPWR_c1792_FINAL("TMF:", "QCPWR.c", "QCPWR_c1792", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c1809_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 91 \"%0<%10!s!> -->IdleNotificationCallbackEpisode\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c1809_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 91 \"%0<%10!s!> -->IdleNotificationCallbackEpisode\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c1809
    #define WPP_ANNOTATE_QCPWR_c1809 WPP_ANNOTATE_QCPWR_c1809_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c1809 WPP_ANNOTATE_QCPWR_c1809_FINAL("TMF:", "QCPWR.c", "QCPWR_c1809", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c1818_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 92 \"%0<%10!s!> IdleNotificationCallbackEpisode: err-dev not ready\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c1818_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 92 \"%0<%10!s!> IdleNotificationCallbackEpisode: err-dev not ready\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c1818
    #define WPP_ANNOTATE_QCPWR_c1818 WPP_ANNOTATE_QCPWR_c1818_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c1818 WPP_ANNOTATE_QCPWR_c1818_FINAL("TMF:", "QCPWR.c", "QCPWR_c1818", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c1830_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 93 \"%0<%10!s!> <--IdleNotificationCallbackEpisode: dev in query-removal\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c1830_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 93 \"%0<%10!s!> <--IdleNotificationCallbackEpisode: dev in query-removal\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c1830
    #define WPP_ANNOTATE_QCPWR_c1830 WPP_ANNOTATE_QCPWR_c1830_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c1830 WPP_ANNOTATE_QCPWR_c1830_FINAL("TMF:", "QCPWR.c", "QCPWR_c1830", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c1842_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 94 \"%0<%10!s!> <--IdleNotificationCallbackEpisode: powering down, no act\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c1842_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 94 \"%0<%10!s!> <--IdleNotificationCallbackEpisode: powering down, no act\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c1842
    #define WPP_ANNOTATE_QCPWR_c1842 WPP_ANNOTATE_QCPWR_c1842_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c1842 WPP_ANNOTATE_QCPWR_c1842_FINAL("TMF:", "QCPWR.c", "QCPWR_c1842", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c1866_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 95 \"%0<%10!s!> IdleNotificationCallbackEpisode: Out of mem 1\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c1866_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 95 \"%0<%10!s!> IdleNotificationCallbackEpisode: Out of mem 1\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c1866
    #define WPP_ANNOTATE_QCPWR_c1866 WPP_ANNOTATE_QCPWR_c1866_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c1866 WPP_ANNOTATE_QCPWR_c1866_FINAL("TMF:", "QCPWR.c", "QCPWR_c1866", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c1882_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 96 \"%0<%10!s!> IdleNotificationCallbackEpisode: Sending PWR req for D%11!u!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c1882_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 96 \"%0<%10!s!> IdleNotificationCallbackEpisode: Sending PWR req for D%11!u!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c1882
    #define WPP_ANNOTATE_QCPWR_c1882 WPP_ANNOTATE_QCPWR_c1882_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c1882 WPP_ANNOTATE_QCPWR_c1882_FINAL("TMF:", "QCPWR.c", "QCPWR_c1882", L"{", L"pDevExt->PortName, ItemString -- 10" , L"powerState.DeviceState-1, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c1898_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 97 \"%0<%10!s!> IdleNotificationCallbackEpisode: rm lock failure\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c1898_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 97 \"%0<%10!s!> IdleNotificationCallbackEpisode: rm lock failure\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c1898
    #define WPP_ANNOTATE_QCPWR_c1898 WPP_ANNOTATE_QCPWR_c1898_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c1898 WPP_ANNOTATE_QCPWR_c1898_FINAL("TMF:", "QCPWR.c", "QCPWR_c1898", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c190_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 16 \"%0<%10!s!> IRP_MN_SET_POWER: SystemPowerState %11!d!\" //   FLAG=QCSER_DBG_MASK_POWER LEVEL=QCSER_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c190_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 16 \"%0<%10!s!> IRP_MN_SET_POWER: SystemPowerState %11!d!\" //   FLAG=QCSER_DBG_MASK_POWER LEVEL=QCSER_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c190
    #define WPP_ANNOTATE_QCPWR_c190 WPP_ANNOTATE_QCPWR_c190_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c190 WPP_ANNOTATE_QCPWR_c190_FINAL("TMF:", "QCPWR.c", "QCPWR_c190", L"{", L"pDevExt->PortName, ItemString -- 10" , L"pwrState, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c1909_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 98 \"%0<%10!s!> IdleNotificationCallbackEpisode(DPWR): No dev req\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c1909_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 98 \"%0<%10!s!> IdleNotificationCallbackEpisode(DPWR): No dev req\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c1909
    #define WPP_ANNOTATE_QCPWR_c1909 WPP_ANNOTATE_QCPWR_c1909_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c1909 WPP_ANNOTATE_QCPWR_c1909_FINAL("TMF:", "QCPWR.c", "QCPWR_c1909", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c1931_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 99 \"%0<%10!s!> IdleNotificationCallbackEpisode: PWR req for D%11!u! sent, status 0x%12!x!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c1931_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 99 \"%0<%10!s!> IdleNotificationCallbackEpisode: PWR req for D%11!u! sent, status 0x%12!x!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c1931
    #define WPP_ANNOTATE_QCPWR_c1931 WPP_ANNOTATE_QCPWR_c1931_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemLong -- 12" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c1931 WPP_ANNOTATE_QCPWR_c1931_FINAL("TMF:", "QCPWR.c", "QCPWR_c1931", L"{", L"pDevExt->PortName, ItemString -- 10" , L"powerState.DeviceState-1, ItemLong -- 11" , L"ntStatus, ItemLong -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c1958_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 100 \"%0<%10!s!> WTO-2 (%11!d!)\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c1958_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 100 \"%0<%10!s!> WTO-2 (%11!d!)\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c1958
    #define WPP_ANNOTATE_QCPWR_c1958 WPP_ANNOTATE_QCPWR_c1958_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c1958 WPP_ANNOTATE_QCPWR_c1958_FINAL("TMF:", "QCPWR.c", "QCPWR_c1958", L"{", L"pDevExt->PortName, ItemString -- 10" , L"++i, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c1967_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 101 \"%0<%10!s!> Got IRP completion event (%11!d!)\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c1967_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 101 \"%0<%10!s!> Got IRP completion event (%11!d!)\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c1967
    #define WPP_ANNOTATE_QCPWR_c1967 WPP_ANNOTATE_QCPWR_c1967_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c1967 WPP_ANNOTATE_QCPWR_c1967_FINAL("TMF:", "QCPWR.c", "QCPWR_c1967", L"{", L"pDevExt->PortName, ItemString -- 10" , L"++i, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c1977_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 102 \"%0<%10!s!> IdleNotificationCallbackEpisode: powered down\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c1977_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 102 \"%0<%10!s!> IdleNotificationCallbackEpisode: powered down\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c1977
    #define WPP_ANNOTATE_QCPWR_c1977 WPP_ANNOTATE_QCPWR_c1977_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c1977 WPP_ANNOTATE_QCPWR_c1977_FINAL("TMF:", "QCPWR.c", "QCPWR_c1977", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c1996_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 103 \"%0<%10!s!> <--IdleNotificationCallbackEpisode 0x%11!x!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c1996_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 103 \"%0<%10!s!> <--IdleNotificationCallbackEpisode 0x%11!x!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c1996
    #define WPP_ANNOTATE_QCPWR_c1996 WPP_ANNOTATE_QCPWR_c1996_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c1996 WPP_ANNOTATE_QCPWR_c1996_FINAL("TMF:", "QCPWR.c", "QCPWR_c1996", L"{", L"pDevExt->PortName, ItemString -- 10" , L"ntStatus, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c2024_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 104 \"%0<%10!s!> TopDevSetPowerIrpComp: ST 0x%11!x!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c2024_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 104 \"%0<%10!s!> TopDevSetPowerIrpComp: ST 0x%11!x!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c2024
    #define WPP_ANNOTATE_QCPWR_c2024 WPP_ANNOTATE_QCPWR_c2024_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c2024 WPP_ANNOTATE_QCPWR_c2024_FINAL("TMF:", "QCPWR.c", "QCPWR_c2024", L"{", L"pDevExt->PortName, ItemString -- 10" , L"IoStatus->Status, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c2058_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 105 \"%0<%10!s!> -->IdleNotificationIrpCompletion: IRP 0x%11!p!/0x%12!p! st 0x%13!x!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c2058_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 105 \"%0<%10!s!> -->IdleNotificationIrpCompletion: IRP 0x%11!p!/0x%12!p! st 0x%13!x!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c2058
    #define WPP_ANNOTATE_QCPWR_c2058 WPP_ANNOTATE_QCPWR_c2058_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemPtr -- 11" , L"Arg, ItemPtr -- 12" , L"Arg, ItemLong -- 13" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c2058 WPP_ANNOTATE_QCPWR_c2058_FINAL("TMF:", "QCPWR.c", "QCPWR_c2058", L"{", L"pDevExt->PortName, ItemString -- 10" , L"Irp, ItemPtr -- 11" , L"pDevExt->IdleNotificationIrp, ItemPtr -- 12" , L"ntStatus, ItemLong -- 13" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c2074_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 106 \"%0<%10!s!> IdleNotificationIrpCompletion: NO_MEM, best effort\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c2074_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 106 \"%0<%10!s!> IdleNotificationIrpCompletion: NO_MEM, best effort\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c2074
    #define WPP_ANNOTATE_QCPWR_c2074 WPP_ANNOTATE_QCPWR_c2074_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c2074 WPP_ANNOTATE_QCPWR_c2074_FINAL("TMF:", "QCPWR.c", "QCPWR_c2074", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c2099_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 107 \"%0<%10!s!> <--IdleNotificationIrpCompletion [PrepareToPowerDown %11!d!]\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c2099_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 107 \"%0<%10!s!> <--IdleNotificationIrpCompletion [PrepareToPowerDown %11!d!]\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c2099
    #define WPP_ANNOTATE_QCPWR_c2099 WPP_ANNOTATE_QCPWR_c2099_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c2099 WPP_ANNOTATE_QCPWR_c2099_FINAL("TMF:", "QCPWR.c", "QCPWR_c2099", L"{", L"pDevExt->PortName, ItemString -- 10" , L"pDevExt->PrepareToPowerDown, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c2140_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 108 \"%0<%10!s!> _GetOutOfIdleState: no param\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c2140_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 108 \"%0<%10!s!> _GetOutOfIdleState: no param\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c2140
    #define WPP_ANNOTATE_QCPWR_c2140 WPP_ANNOTATE_QCPWR_c2140_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c2140 WPP_ANNOTATE_QCPWR_c2140_FINAL("TMF:", "QCPWR.c", "QCPWR_c2140", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c2171_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 109 \"%0<%10!s!> -->IdleNotificationIrpCompletionEpisode: IRP 0x%11!p!/0x%12!p! st 0x%13!x!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c2171_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 109 \"%0<%10!s!> -->IdleNotificationIrpCompletionEpisode: IRP 0x%11!p!/0x%12!p! st 0x%13!x!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c2171
    #define WPP_ANNOTATE_QCPWR_c2171 WPP_ANNOTATE_QCPWR_c2171_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemPtr -- 11" , L"Arg, ItemPtr -- 12" , L"Arg, ItemLong -- 13" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c2171 WPP_ANNOTATE_QCPWR_c2171_FINAL("TMF:", "QCPWR.c", "QCPWR_c2171", L"{", L"pDevExt->PortName, ItemString -- 10" , L"Irp, ItemPtr -- 11" , L"pDevExt->IdleNotificationIrp, ItemPtr -- 12" , L"ntStatus, ItemLong -- 13" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c2205_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 110 \"%0<%10!s!> IdleNotificationIrpCompletionEpisode: err 0x%11!x!, powering down-no act\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c2205_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 110 \"%0<%10!s!> IdleNotificationIrpCompletionEpisode: err 0x%11!x!, powering down-no act\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c2205
    #define WPP_ANNOTATE_QCPWR_c2205 WPP_ANNOTATE_QCPWR_c2205_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c2205 WPP_ANNOTATE_QCPWR_c2205_FINAL("TMF:", "QCPWR.c", "QCPWR_c2205", L"{", L"pDevExt->PortName, ItemString -- 10" , L"ntStatus, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c2214_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 111 \"%0<%10!s!> IdleNotificationIrpCompletionEpisode: err 0x%11!x!, requesting D0\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c2214_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 111 \"%0<%10!s!> IdleNotificationIrpCompletionEpisode: err 0x%11!x!, requesting D0\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c2214
    #define WPP_ANNOTATE_QCPWR_c2214 WPP_ANNOTATE_QCPWR_c2214_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c2214 WPP_ANNOTATE_QCPWR_c2214_FINAL("TMF:", "QCPWR.c", "QCPWR_c2214", L"{", L"pDevExt->PortName, ItemString -- 10" , L"ntStatus, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c222_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 17 \"%0<%10!s!> IRP_MN_SET_POWER: D%11!d!\" //   FLAG=QCSER_DBG_MASK_POWER LEVEL=QCSER_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c222_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 17 \"%0<%10!s!> IRP_MN_SET_POWER: D%11!d!\" //   FLAG=QCSER_DBG_MASK_POWER LEVEL=QCSER_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c222
    #define WPP_ANNOTATE_QCPWR_c222 WPP_ANNOTATE_QCPWR_c222_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c222 WPP_ANNOTATE_QCPWR_c222_FINAL("TMF:", "QCPWR.c", "QCPWR_c222", L"{", L"pDevExt->PortName, ItemString -- 10" , L"pwrState-1, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c2223_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 112 \"%0<%10!s!> IdleNotificationIrpCompletionEpisode: in D0, no act\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c2223_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 112 \"%0<%10!s!> IdleNotificationIrpCompletionEpisode: in D0, no act\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c2223
    #define WPP_ANNOTATE_QCPWR_c2223 WPP_ANNOTATE_QCPWR_c2223_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c2223 WPP_ANNOTATE_QCPWR_c2223_FINAL("TMF:", "QCPWR.c", "QCPWR_c2223", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c2245_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 113 \"%0<%10!s!> IdleNotificationIrpCompletionEpisode: rm lock failure 0x%11!x!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c2245_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 113 \"%0<%10!s!> IdleNotificationIrpCompletionEpisode: rm lock failure 0x%11!x!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c2245
    #define WPP_ANNOTATE_QCPWR_c2245 WPP_ANNOTATE_QCPWR_c2245_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c2245 WPP_ANNOTATE_QCPWR_c2245_FINAL("TMF:", "QCPWR.c", "QCPWR_c2245", L"{", L"pDevExt->PortName, ItemString -- 10" , L"ntStatus, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c2256_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 114 \"%0<%10!s!> IdleNotificationIrpCompletionEpisode(DPWR): No dev req\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c2256_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 114 \"%0<%10!s!> IdleNotificationIrpCompletionEpisode(DPWR): No dev req\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c2256
    #define WPP_ANNOTATE_QCPWR_c2256 WPP_ANNOTATE_QCPWR_c2256_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c2256 WPP_ANNOTATE_QCPWR_c2256_FINAL("TMF:", "QCPWR.c", "QCPWR_c2256", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c2278_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 115 \"%0<%10!s!> IdleNotificationIrpCompletionEpisode: err req D0 0x%11!x!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c2278_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 115 \"%0<%10!s!> IdleNotificationIrpCompletionEpisode: err req D0 0x%11!x!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c2278
    #define WPP_ANNOTATE_QCPWR_c2278 WPP_ANNOTATE_QCPWR_c2278_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c2278 WPP_ANNOTATE_QCPWR_c2278_FINAL("TMF:", "QCPWR.c", "QCPWR_c2278", L"{", L"pDevExt->PortName, ItemString -- 10" , L"ntStatus, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c2296_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 116 \"%0<%10!s!> IdleNotificationIrpCompletionEpisode: IRP was cancelled\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c2296_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 116 \"%0<%10!s!> IdleNotificationIrpCompletionEpisode: IRP was cancelled\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c2296
    #define WPP_ANNOTATE_QCPWR_c2296 WPP_ANNOTATE_QCPWR_c2296_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c2296 WPP_ANNOTATE_QCPWR_c2296_FINAL("TMF:", "QCPWR.c", "QCPWR_c2296", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c2313_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 117 \"%0<%10!s!> <--IdleNotificationIrpCompletionEpisode\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c2313_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 117 \"%0<%10!s!> <--IdleNotificationIrpCompletionEpisode\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c2313
    #define WPP_ANNOTATE_QCPWR_c2313 WPP_ANNOTATE_QCPWR_c2313_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c2313 WPP_ANNOTATE_QCPWR_c2313_FINAL("TMF:", "QCPWR.c", "QCPWR_c2313", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c2341_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 118 \"%0<%10!s!> TopIdlePowerUpCompletionRoutine: 0x%11!x!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c2341_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 118 \"%0<%10!s!> TopIdlePowerUpCompletionRoutine: 0x%11!x!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c2341
    #define WPP_ANNOTATE_QCPWR_c2341 WPP_ANNOTATE_QCPWR_c2341_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c2341 WPP_ANNOTATE_QCPWR_c2341_FINAL("TMF:", "QCPWR.c", "QCPWR_c2341", L"{", L"pDevExt->PortName, ItemString -- 10" , L"IoStatus->Status, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c2369_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 119 \"%0<%10!s!> -->CancelIdleNotificationIrp(%11!u!): 0x%12!p! RM[0] %13!d!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_TRACE" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c2369_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 119 \"%0<%10!s!> -->CancelIdleNotificationIrp(%11!u!): 0x%12!p! RM[0] %13!d!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_TRACE" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c2369
    #define WPP_ANNOTATE_QCPWR_c2369 WPP_ANNOTATE_QCPWR_c2369_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemPtr -- 12" , L"Arg, ItemLong -- 13" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c2369 WPP_ANNOTATE_QCPWR_c2369_FINAL("TMF:", "QCPWR.c", "QCPWR_c2369", L"{", L"pDevExt->PortName, ItemString -- 10" , L"Cookie, ItemLong -- 11" , L"pDevExt->IdleNotificationIrp, ItemPtr -- 12" , L"pDevExt->Sts.lRmlCount[0], ItemLong -- 13" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c2379_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 120 \"%0<%10!s!> CancelIdleNotificationIrp: req D0 (MgrId %11!d!)\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c2379_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 120 \"%0<%10!s!> CancelIdleNotificationIrp: req D0 (MgrId %11!d!)\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c2379
    #define WPP_ANNOTATE_QCPWR_c2379 WPP_ANNOTATE_QCPWR_c2379_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c2379 WPP_ANNOTATE_QCPWR_c2379_FINAL("TMF:", "QCPWR.c", "QCPWR_c2379", L"{", L"pDevExt->PortName, ItemString -- 10" , L"pDevExt->MgrId, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c238_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 18 \"%0<%10!s!> IRP_MN_SET_POWER: unknown pwr type %11!u!\" //   FLAG=QCSER_DBG_MASK_POWER LEVEL=QCSER_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c238_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 18 \"%0<%10!s!> IRP_MN_SET_POWER: unknown pwr type %11!u!\" //   FLAG=QCSER_DBG_MASK_POWER LEVEL=QCSER_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c238
    #define WPP_ANNOTATE_QCPWR_c238 WPP_ANNOTATE_QCPWR_c238_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c238 WPP_ANNOTATE_QCPWR_c238_FINAL("TMF:", "QCPWR.c", "QCPWR_c238", L"{", L"pDevExt->PortName, ItemString -- 10" , L"IrpStack->Parameters.Power.Type, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c2398_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 121 \"%0<%10!s!> CancelIdleNotificationIrp: not pending, no act\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c2398_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 121 \"%0<%10!s!> CancelIdleNotificationIrp: not pending, no act\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c2398
    #define WPP_ANNOTATE_QCPWR_c2398 WPP_ANNOTATE_QCPWR_c2398_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c2398 WPP_ANNOTATE_QCPWR_c2398_FINAL("TMF:", "QCPWR.c", "QCPWR_c2398", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c2416_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 122 \"%0<%10!s!> <--CancelIdleNotificationIrp(%11!u!): 0x%12!p! RM[0] %13!d!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_TRACE" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c2416_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 122 \"%0<%10!s!> <--CancelIdleNotificationIrp(%11!u!): 0x%12!p! RM[0] %13!d!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_TRACE" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c2416
    #define WPP_ANNOTATE_QCPWR_c2416 WPP_ANNOTATE_QCPWR_c2416_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemPtr -- 12" , L"Arg, ItemLong -- 13" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c2416 WPP_ANNOTATE_QCPWR_c2416_FINAL("TMF:", "QCPWR.c", "QCPWR_c2416", L"{", L"pDevExt->PortName, ItemString -- 10" , L"Cookie, ItemLong -- 11" , L"pDevExt->IdleNotificationIrp, ItemPtr -- 12" , L"pDevExt->Sts.lRmlCount[0], ItemLong -- 13" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c2431_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 123 \"%0<%10!s!> ProcessWaitWake: IRP 0x%11!p!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c2431_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 123 \"%0<%10!s!> ProcessWaitWake: IRP 0x%11!p!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c2431
    #define WPP_ANNOTATE_QCPWR_c2431 WPP_ANNOTATE_QCPWR_c2431_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemPtr -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c2431 WPP_ANNOTATE_QCPWR_c2431_FINAL("TMF:", "QCPWR.c", "QCPWR_c2431", L"{", L"pDevExt->PortName, ItemString -- 10" , L"Irp, ItemPtr -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c2464_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 124 \"%0<%10!s!> -->WaitWakeCompletion: 0x%11!p!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_TRACE" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c2464_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 124 \"%0<%10!s!> -->WaitWakeCompletion: 0x%11!p!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_TRACE" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c2464
    #define WPP_ANNOTATE_QCPWR_c2464 WPP_ANNOTATE_QCPWR_c2464_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemPtr -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c2464 WPP_ANNOTATE_QCPWR_c2464_FINAL("TMF:", "QCPWR.c", "QCPWR_c2464", L"{", L"pDevExt->PortName, ItemString -- 10" , L"Irp, ItemPtr -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c2495_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 125 \"%0<%10!s!> PIRP (Cww 0x%11!x!/0x%12!x!) 0x%13!p!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c2495_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 125 \"%0<%10!s!> PIRP (Cww 0x%11!x!/0x%12!x!) 0x%13!p!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c2495
    #define WPP_ANNOTATE_QCPWR_c2495 WPP_ANNOTATE_QCPWR_c2495_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemLong -- 12" , L"Arg, ItemPtr -- 13" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c2495 WPP_ANNOTATE_QCPWR_c2495_FINAL("TMF:", "QCPWR.c", "QCPWR_c2495", L"{", L"pDevExt->PortName, ItemString -- 10" , L"Irp->IoStatus.Status, ItemLong -- 11" , L"ntStatus, ItemLong -- 12" , L"Irp, ItemPtr -- 13" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c2504_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 126 \"%0<%10!s!> <--WaitWakeCompletion: 0x%11!p!(0x%12!x!)\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_TRACE" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c2504_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 126 \"%0<%10!s!> <--WaitWakeCompletion: 0x%11!p!(0x%12!x!)\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_TRACE" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c2504
    #define WPP_ANNOTATE_QCPWR_c2504 WPP_ANNOTATE_QCPWR_c2504_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemPtr -- 11" , L"Arg, ItemLong -- 12" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c2504 WPP_ANNOTATE_QCPWR_c2504_FINAL("TMF:", "QCPWR.c", "QCPWR_c2504", L"{", L"pDevExt->PortName, ItemString -- 10" , L"Irp, ItemPtr -- 11" , L"ntStatus, ItemLong -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c2525_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 127 \"%0<%10!s!> RegisterWaitWake: %11!u!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c2525_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 127 \"%0<%10!s!> RegisterWaitWake: %11!u!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c2525
    #define WPP_ANNOTATE_QCPWR_c2525 WPP_ANNOTATE_QCPWR_c2525_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c2525 WPP_ANNOTATE_QCPWR_c2525_FINAL("TMF:", "QCPWR.c", "QCPWR_c2525", L"{", L"pDevExt->PortName, ItemString -- 10" , L"Cookie, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c2534_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 128 \"%0<%10!s!> RegisterWaitWake(%11!u!): feature disabled\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c2534_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 128 \"%0<%10!s!> RegisterWaitWake(%11!u!): feature disabled\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c2534
    #define WPP_ANNOTATE_QCPWR_c2534 WPP_ANNOTATE_QCPWR_c2534_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c2534 WPP_ANNOTATE_QCPWR_c2534_FINAL("TMF:", "QCPWR.c", "QCPWR_c2534", L"{", L"pDevExt->PortName, ItemString -- 10" , L"Cookie, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c2550_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 129 \"%0<%10!s!> RegisterWaitWake: already pending(%11!u!)\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c2550_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 129 \"%0<%10!s!> RegisterWaitWake: already pending(%11!u!)\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c2550
    #define WPP_ANNOTATE_QCPWR_c2550 WPP_ANNOTATE_QCPWR_c2550_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c2550 WPP_ANNOTATE_QCPWR_c2550_FINAL("TMF:", "QCPWR.c", "QCPWR_c2550", L"{", L"pDevExt->PortName, ItemString -- 10" , L"Cookie, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c2564_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 130 \"%0<%10!s!> <--RegisterWaitWake(%11!u!): dev in query-removal\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c2564_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 130 \"%0<%10!s!> <--RegisterWaitWake(%11!u!): dev in query-removal\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c2564
    #define WPP_ANNOTATE_QCPWR_c2564 WPP_ANNOTATE_QCPWR_c2564_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c2564 WPP_ANNOTATE_QCPWR_c2564_FINAL("TMF:", "QCPWR.c", "QCPWR_c2564", L"{", L"pDevExt->PortName, ItemString -- 10" , L"Cookie, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c2586_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 131 \"%0<%10!s!> RegisterWaitWake: rm lock failure(0x%11!x!)\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c2586_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 131 \"%0<%10!s!> RegisterWaitWake: rm lock failure(0x%11!x!)\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c2586
    #define WPP_ANNOTATE_QCPWR_c2586 WPP_ANNOTATE_QCPWR_c2586_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c2586 WPP_ANNOTATE_QCPWR_c2586_FINAL("TMF:", "QCPWR.c", "QCPWR_c2586", L"{", L"pDevExt->PortName, ItemString -- 10" , L"ntStatus, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c2635_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 132 \"%0<%10!s!> TopWaitWakeCompletion: IRP 0x%11!p! MN 0x%12!x!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c2635_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 132 \"%0<%10!s!> TopWaitWakeCompletion: IRP 0x%11!p! MN 0x%12!x!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c2635
    #define WPP_ANNOTATE_QCPWR_c2635 WPP_ANNOTATE_QCPWR_c2635_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemPtr -- 11" , L"Arg, ItemLong -- 12" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c2635 WPP_ANNOTATE_QCPWR_c2635_FINAL("TMF:", "QCPWR.c", "QCPWR_c2635", L"{", L"pDevExt->PortName, ItemString -- 10" , L"pDevExt->WaitWakeIrp, ItemPtr -- 11" , L"MinorFunction, ItemLong -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c2649_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 133 \"%0<%10!s!> TopWaitWakeCompletion failure: IRP 0x%11!p!(0x%12!x!)\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c2649_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 133 \"%0<%10!s!> TopWaitWakeCompletion failure: IRP 0x%11!p!(0x%12!x!)\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c2649
    #define WPP_ANNOTATE_QCPWR_c2649 WPP_ANNOTATE_QCPWR_c2649_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemPtr -- 11" , L"Arg, ItemLong -- 12" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c2649 WPP_ANNOTATE_QCPWR_c2649_FINAL("TMF:", "QCPWR.c", "QCPWR_c2649", L"{", L"pDevExt->PortName, ItemString -- 10" , L"pDevExt->WaitWakeIrp, ItemPtr -- 11" , L"IoStatus->Status, ItemLong -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c266_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 19 \"%0<%10!s!> PowerManagement: Unkown MN 0x%11!x!\" //   FLAG=QCSER_DBG_MASK_POWER LEVEL=QCSER_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c266_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 19 \"%0<%10!s!> PowerManagement: Unkown MN 0x%11!x!\" //   FLAG=QCSER_DBG_MASK_POWER LEVEL=QCSER_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c266
    #define WPP_ANNOTATE_QCPWR_c266 WPP_ANNOTATE_QCPWR_c266_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c266 WPP_ANNOTATE_QCPWR_c266_FINAL("TMF:", "QCPWR.c", "QCPWR_c266", L"{", L"pDevExt->PortName, ItemString -- 10" , L"IrpStack->MinorFunction, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c2663_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 134 \"%0<%10!s!> TopWaitWakeCompletion: device up running\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c2663_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 134 \"%0<%10!s!> TopWaitWakeCompletion: device up running\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c2663
    #define WPP_ANNOTATE_QCPWR_c2663 WPP_ANNOTATE_QCPWR_c2663_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c2663 WPP_ANNOTATE_QCPWR_c2663_FINAL("TMF:", "QCPWR.c", "QCPWR_c2663", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c2676_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 135 \"%0<%10!s!> TopWaitWakeCompletion: powering down-no act\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c2676_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 135 \"%0<%10!s!> TopWaitWakeCompletion: powering down-no act\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c2676
    #define WPP_ANNOTATE_QCPWR_c2676 WPP_ANNOTATE_QCPWR_c2676_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c2676 WPP_ANNOTATE_QCPWR_c2676_FINAL("TMF:", "QCPWR.c", "QCPWR_c2676", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c2687_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 136 \"%0<%10!s!> TopWaitWakeCompletion: requesting D0\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c2687_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 136 \"%0<%10!s!> TopWaitWakeCompletion: requesting D0\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c2687
    #define WPP_ANNOTATE_QCPWR_c2687 WPP_ANNOTATE_QCPWR_c2687_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c2687 WPP_ANNOTATE_QCPWR_c2687_FINAL("TMF:", "QCPWR.c", "QCPWR_c2687", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c2700_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 137 \"%0<%10!s!> TopWaitWakeCompletion(DPWR): No dev req\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c2700_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 137 \"%0<%10!s!> TopWaitWakeCompletion(DPWR): No dev req\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c2700
    #define WPP_ANNOTATE_QCPWR_c2700 WPP_ANNOTATE_QCPWR_c2700_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c2700 WPP_ANNOTATE_QCPWR_c2700_FINAL("TMF:", "QCPWR.c", "QCPWR_c2700", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c2722_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 138 \"%0<%10!s!> TopWaitWakeCompletion: pwr IRP req failure 0x%11!x!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c2722_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 138 \"%0<%10!s!> TopWaitWakeCompletion: pwr IRP req failure 0x%11!x!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c2722
    #define WPP_ANNOTATE_QCPWR_c2722 WPP_ANNOTATE_QCPWR_c2722_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c2722 WPP_ANNOTATE_QCPWR_c2722_FINAL("TMF:", "QCPWR.c", "QCPWR_c2722", L"{", L"pDevExt->PortName, ItemString -- 10" , L"ntStatus, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c2753_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 139 \"%0<%10!s!> TopDeviceWakeUpCompletionRoutine: MN 0x%11!x! st 0x%12!x!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c2753_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 139 \"%0<%10!s!> TopDeviceWakeUpCompletionRoutine: MN 0x%11!x! st 0x%12!x!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c2753
    #define WPP_ANNOTATE_QCPWR_c2753 WPP_ANNOTATE_QCPWR_c2753_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemLong -- 12" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c2753 WPP_ANNOTATE_QCPWR_c2753_FINAL("TMF:", "QCPWR.c", "QCPWR_c2753", L"{", L"pDevExt->PortName, ItemString -- 10" , L"MinorFunction, ItemLong -- 11" , L"IoStatus->Status, ItemLong -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c2778_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 140 \"%0<%10!s!> CancelWaitWakeIrp(%11!u!) \" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c2778_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 140 \"%0<%10!s!> CancelWaitWakeIrp(%11!u!) \" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c2778
    #define WPP_ANNOTATE_QCPWR_c2778 WPP_ANNOTATE_QCPWR_c2778_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c2778 WPP_ANNOTATE_QCPWR_c2778_FINAL("TMF:", "QCPWR.c", "QCPWR_c2778", L"{", L"pDevExt->PortName, ItemString -- 10" , L"Cookie, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c282_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 20 \"%0<%10!s!> PIRP: (Ce 0x%11!x!) 0x%12!p!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c282_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 20 \"%0<%10!s!> PIRP: (Ce 0x%11!x!) 0x%12!p!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c282
    #define WPP_ANNOTATE_QCPWR_c282 WPP_ANNOTATE_QCPWR_c282_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemPtr -- 12" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c282 WPP_ANNOTATE_QCPWR_c282_FINAL("TMF:", "QCPWR.c", "QCPWR_c282", L"{", L"pDevExt->PortName, ItemString -- 10" , L"nts, ItemLong -- 11" , L"Irp, ItemPtr -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c2820_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 141 \"%0<%10!s!> WdmVersionIdx: %11!d!\" //   FLAG=(QCSER_DBG_MASK_CONTROL | QCSER_DBG_MASK_POWER) LEVEL=QCSER_DBG_LEVEL_CRITICAL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c2820_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 141 \"%0<%10!s!> WdmVersionIdx: %11!d!\" //   FLAG=(QCSER_DBG_MASK_CONTROL | QCSER_DBG_MASK_POWER) LEVEL=QCSER_DBG_LEVEL_CRITICAL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c2820
    #define WPP_ANNOTATE_QCPWR_c2820 WPP_ANNOTATE_QCPWR_c2820_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c2820 WPP_ANNOTATE_QCPWR_c2820_FINAL("TMF:", "QCPWR.c", "QCPWR_c2820", L"{", L"pDevExt->PortName, ItemString -- 10" , L"pDevExt->WdmVersion, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c2848_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 142 \"%0<%10!s!> -->CheckToWakeup(%11!u!) IRQL(%12!u!): IRP 0x%13!p! Susp %14!u!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_TRACE" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c2848_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 142 \"%0<%10!s!> -->CheckToWakeup(%11!u!) IRQL(%12!u!): IRP 0x%13!p! Susp %14!u!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_TRACE" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c2848
    #define WPP_ANNOTATE_QCPWR_c2848 WPP_ANNOTATE_QCPWR_c2848_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemLong -- 12" , L"Arg, ItemPtr -- 13" , L"Arg, ItemLong -- 14" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c2848 WPP_ANNOTATE_QCPWR_c2848_FINAL("TMF:", "QCPWR.c", "QCPWR_c2848", L"{", L"pDevExt->PortName, ItemString -- 10" , L"Cookie, ItemLong -- 11" , L"KeGetCurrentIrql(), ItemLong -- 12" , L"Irp, ItemPtr -- 13" , L"pDevExt->PowerSuspended, ItemLong -- 14" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c293_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 21 \"%0<%10!s!> PIRP: (C FWD) 0x%11!p!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c293_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 21 \"%0<%10!s!> PIRP: (C FWD) 0x%11!p!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c293
    #define WPP_ANNOTATE_QCPWR_c293 WPP_ANNOTATE_QCPWR_c293_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemPtr -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c293 WPP_ANNOTATE_QCPWR_c293_FINAL("TMF:", "QCPWR.c", "QCPWR_c293", L"{", L"pDevExt->PortName, ItemString -- 10" , L"Irp, ItemPtr -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c2959_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 143 \"%0<%10!s!> <--CheckToWakeup(%11!u!): IRP 0x%12!p! Susp %13!u! hold %14!u! RM[0] %15!d!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_TRACE" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c2959_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 143 \"%0<%10!s!> <--CheckToWakeup(%11!u!): IRP 0x%12!p! Susp %13!u! hold %14!u! RM[0] %15!d!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_TRACE" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c2959
    #define WPP_ANNOTATE_QCPWR_c2959 WPP_ANNOTATE_QCPWR_c2959_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemPtr -- 12" , L"Arg, ItemLong -- 13" , L"Arg, ItemLong -- 14" , L"Arg, ItemLong -- 15" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c2959 WPP_ANNOTATE_QCPWR_c2959_FINAL("TMF:", "QCPWR.c", "QCPWR_c2959", L"{", L"pDevExt->PortName, ItemString -- 10" , L"Cookie, ItemLong -- 11" , L"Irp, ItemPtr -- 12" , L"pDevExt->PowerSuspended, ItemLong -- 13" , L"holdRequest, ItemLong -- 14" , L"pDevExt->Sts.lRmlCount[0], ItemLong -- 15" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c2972_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 144 \"%0<%10!s!> -->ResumeDataThreads\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c2972_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 144 \"%0<%10!s!> -->ResumeDataThreads\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c2972
    #define WPP_ANNOTATE_QCPWR_c2972 WPP_ANNOTATE_QCPWR_c2972_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c2972 WPP_ANNOTATE_QCPWR_c2972_FINAL("TMF:", "QCPWR.c", "QCPWR_c2972", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c2999_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 145 \"%0<%10!s!> WTO-4\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c2999_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 145 \"%0<%10!s!> WTO-4\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c2999
    #define WPP_ANNOTATE_QCPWR_c2999 WPP_ANNOTATE_QCPWR_c2999_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c2999 WPP_ANNOTATE_QCPWR_c2999_FINAL("TMF:", "QCPWR.c", "QCPWR_c2999", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c3018_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 146 \"%0<%10!s!> <--ResumeDataThreads\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c3018_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 146 \"%0<%10!s!> <--ResumeDataThreads\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c3018
    #define WPP_ANNOTATE_QCPWR_c3018 WPP_ANNOTATE_QCPWR_c3018_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c3018 WPP_ANNOTATE_QCPWR_c3018_FINAL("TMF:", "QCPWR.c", "QCPWR_c3018", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c302_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 22 \"%0<%10!s!> PoCallDriver failure: IRP 0x%11!p!(0x%12!x!)\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c302_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 22 \"%0<%10!s!> PoCallDriver failure: IRP 0x%11!p!(0x%12!x!)\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c302
    #define WPP_ANNOTATE_QCPWR_c302 WPP_ANNOTATE_QCPWR_c302_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemPtr -- 11" , L"Arg, ItemLong -- 12" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c302 WPP_ANNOTATE_QCPWR_c302_FINAL("TMF:", "QCPWR.c", "QCPWR_c302", L"{", L"pDevExt->PortName, ItemString -- 10" , L"Irp, ItemPtr -- 11" , L"nts, ItemLong -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c3039_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 147 \"%0<%10!s!> -->RegisterWmiPowerGuids\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_TRACE" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c3039_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 147 \"%0<%10!s!> -->RegisterWmiPowerGuids\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_TRACE" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c3039
    #define WPP_ANNOTATE_QCPWR_c3039 WPP_ANNOTATE_QCPWR_c3039_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c3039 WPP_ANNOTATE_QCPWR_c3039_FINAL("TMF:", "QCPWR.c", "QCPWR_c3039", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c3048_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 148 \"%0<%10!s!> <--RegisterWmiPowerGuids: dev not init\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_TRACE" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c3048_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 148 \"%0<%10!s!> <--RegisterWmiPowerGuids: dev not init\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_TRACE" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c3048
    #define WPP_ANNOTATE_QCPWR_c3048 WPP_ANNOTATE_QCPWR_c3048_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c3048 WPP_ANNOTATE_QCPWR_c3048_FINAL("TMF:", "QCPWR.c", "QCPWR_c3048", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c3060_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 149 \"%0<%10!s!> RegisterWmiPowerGuids: dup req\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c3060_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 149 \"%0<%10!s!> RegisterWmiPowerGuids: dup req\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c3060
    #define WPP_ANNOTATE_QCPWR_c3060 WPP_ANNOTATE_QCPWR_c3060_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c3060 WPP_ANNOTATE_QCPWR_c3060_FINAL("TMF:", "QCPWR.c", "QCPWR_c3060", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c3093_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 150 \"%0<%10!s!> <--RegisterWmiPowerGuids ST 0x%11!x!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_TRACE" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c3093_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 150 \"%0<%10!s!> <--RegisterWmiPowerGuids ST 0x%11!x!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_TRACE" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c3093
    #define WPP_ANNOTATE_QCPWR_c3093 WPP_ANNOTATE_QCPWR_c3093_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c3093 WPP_ANNOTATE_QCPWR_c3093_FINAL("TMF:", "QCPWR.c", "QCPWR_c3093", L"{", L"pDevExt->PortName, ItemString -- 10" , L"ntStatus, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c3110_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 151 \"%0<%10!s!> -->DeregisterWmiPowerGuids\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_TRACE" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c3110_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 151 \"%0<%10!s!> -->DeregisterWmiPowerGuids\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_TRACE" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c3110
    #define WPP_ANNOTATE_QCPWR_c3110 WPP_ANNOTATE_QCPWR_c3110_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c3110 WPP_ANNOTATE_QCPWR_c3110_FINAL("TMF:", "QCPWR.c", "QCPWR_c3110", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c3134_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 152 \"%0<%10!s!> <--DeregisterWmiPowerGuids ST 0x%11!x!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_TRACE" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c3134_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 152 \"%0<%10!s!> <--DeregisterWmiPowerGuids ST 0x%11!x!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_TRACE" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c3134
    #define WPP_ANNOTATE_QCPWR_c3134 WPP_ANNOTATE_QCPWR_c3134_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c3134 WPP_ANNOTATE_QCPWR_c3134_FINAL("TMF:", "QCPWR.c", "QCPWR_c3134", L"{", L"pDevExt->PortName, ItemString -- 10" , L"ntStatus, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c3151_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 153 \"%0<%10!s!> -->ProcessSystemControlIrps IRP 0x%11!p!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_TRACE" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c3151_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 153 \"%0<%10!s!> -->ProcessSystemControlIrps IRP 0x%11!p!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_TRACE" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c3151
    #define WPP_ANNOTATE_QCPWR_c3151 WPP_ANNOTATE_QCPWR_c3151_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemPtr -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c3151 WPP_ANNOTATE_QCPWR_c3151_FINAL("TMF:", "QCPWR.c", "QCPWR_c3151", L"{", L"pDevExt->PortName, ItemString -- 10" , L"Irp, ItemPtr -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c316_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 23 \"%0<%10!s!> <--QCPWR_PowrerManagement (0x%11!x!): PIRP 0x%12!p!\" //   FLAG=QCSER_DBG_MASK_POWER LEVEL=QCSER_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c316_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 23 \"%0<%10!s!> <--QCPWR_PowrerManagement (0x%11!x!): PIRP 0x%12!p!\" //   FLAG=QCSER_DBG_MASK_POWER LEVEL=QCSER_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c316
    #define WPP_ANNOTATE_QCPWR_c316 WPP_ANNOTATE_QCPWR_c316_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemPtr -- 12" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c316 WPP_ANNOTATE_QCPWR_c316_FINAL("TMF:", "QCPWR.c", "QCPWR_c316", L"{", L"pDevExt->PortName, ItemString -- 10" , L"nts, ItemLong -- 11" , L"Irp, ItemPtr -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c3167_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 154 \"%0<%10!s!> ProcessSystemControlIrps: WmiSystemControl IRP 0x%11!p! ST 0x%12!x! (0x%13!x!)\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c3167_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 154 \"%0<%10!s!> ProcessSystemControlIrps: WmiSystemControl IRP 0x%11!p! ST 0x%12!x! (0x%13!x!)\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c3167
    #define WPP_ANNOTATE_QCPWR_c3167 WPP_ANNOTATE_QCPWR_c3167_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemPtr -- 11" , L"Arg, ItemLong -- 12" , L"Arg, ItemLong -- 13" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c3167 WPP_ANNOTATE_QCPWR_c3167_FINAL("TMF:", "QCPWR.c", "QCPWR_c3167", L"{", L"pDevExt->PortName, ItemString -- 10" , L"Irp, ItemPtr -- 11" , L"ntStatus, ItemLong -- 12" , L"irpDisposition, ItemLong -- 13" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c3183_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 155 \"%0<%10!s!> CIRP (C 0x%11!x!) 0x%12!p!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c3183_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 155 \"%0<%10!s!> CIRP (C 0x%11!x!) 0x%12!p!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c3183
    #define WPP_ANNOTATE_QCPWR_c3183 WPP_ANNOTATE_QCPWR_c3183_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemPtr -- 12" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c3183 WPP_ANNOTATE_QCPWR_c3183_FINAL("TMF:", "QCPWR.c", "QCPWR_c3183", L"{", L"pDevExt->PortName, ItemString -- 10" , L"Irp->IoStatus.Status, ItemLong -- 11" , L"Irp, ItemPtr -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c3206_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 156 \"%0<%10!s!> <--ProcessSystemControlIrps IRP 0x%11!p! (0x%12!x!)\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_TRACE" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c3206_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 156 \"%0<%10!s!> <--ProcessSystemControlIrps IRP 0x%11!p! (0x%12!x!)\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_TRACE" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c3206
    #define WPP_ANNOTATE_QCPWR_c3206 WPP_ANNOTATE_QCPWR_c3206_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemPtr -- 11" , L"Arg, ItemLong -- 12" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c3206 WPP_ANNOTATE_QCPWR_c3206_FINAL("TMF:", "QCPWR.c", "QCPWR_c3206", L"{", L"pDevExt->PortName, ItemString -- 10" , L"Irp, ItemPtr -- 11" , L"ntStatus, ItemLong -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c3227_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 157 \"%0<%10!s!> -->PMQueryWmiRegInfo\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_TRACE" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c3227_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 157 \"%0<%10!s!> -->PMQueryWmiRegInfo\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_TRACE" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c3227
    #define WPP_ANNOTATE_QCPWR_c3227 WPP_ANNOTATE_QCPWR_c3227_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c3227 WPP_ANNOTATE_QCPWR_c3227_FINAL("TMF:", "QCPWR.c", "QCPWR_c3227", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c3237_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 158 \"%0<%10!s!> PMQueryWmiRegInfo: no PDO\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c3237_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 158 \"%0<%10!s!> PMQueryWmiRegInfo: no PDO\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c3237
    #define WPP_ANNOTATE_QCPWR_c3237 WPP_ANNOTATE_QCPWR_c3237_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c3237 WPP_ANNOTATE_QCPWR_c3237_FINAL("TMF:", "QCPWR.c", "QCPWR_c3237", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c3253_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 159 \"%0<%10!s!> <--PMQueryWmiRegInfo\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_TRACE" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c3253_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 159 \"%0<%10!s!> <--PMQueryWmiRegInfo\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_TRACE" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c3253
    #define WPP_ANNOTATE_QCPWR_c3253 WPP_ANNOTATE_QCPWR_c3253_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c3253 WPP_ANNOTATE_QCPWR_c3253_FINAL("TMF:", "QCPWR.c", "QCPWR_c3253", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c3281_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 160 \"%0<%10!s!> -->PMQueryWmiDataBlock: IRP 0x%11!p! GIDX %12!u! InsIdx %13!u! InsCnt %14!u!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_TRACE" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c3281_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 160 \"%0<%10!s!> -->PMQueryWmiDataBlock: IRP 0x%11!p! GIDX %12!u! InsIdx %13!u! InsCnt %14!u!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_TRACE" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c3281
    #define WPP_ANNOTATE_QCPWR_c3281 WPP_ANNOTATE_QCPWR_c3281_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemPtr -- 11" , L"Arg, ItemLong -- 12" , L"Arg, ItemLong -- 13" , L"Arg, ItemLong -- 14" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c3281 WPP_ANNOTATE_QCPWR_c3281_FINAL("TMF:", "QCPWR.c", "QCPWR_c3281", L"{", L"pDevExt->PortName, ItemString -- 10" , L"Irp, ItemPtr -- 11" , L"GuidIndex, ItemLong -- 12" , L"InstanceIndex, ItemLong -- 13" , L"InstanceCount, ItemLong -- 14" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c3314_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 161 \"%0<%10!s!> PMQueryWmiDataBlock: IRP 0x%11!p! buf too small %12!u!B\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c3314_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 161 \"%0<%10!s!> PMQueryWmiDataBlock: IRP 0x%11!p! buf too small %12!u!B\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c3314
    #define WPP_ANNOTATE_QCPWR_c3314 WPP_ANNOTATE_QCPWR_c3314_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemPtr -- 11" , L"Arg, ItemLong -- 12" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c3314 WPP_ANNOTATE_QCPWR_c3314_FINAL("TMF:", "QCPWR.c", "QCPWR_c3314", L"{", L"pDevExt->PortName, ItemString -- 10" , L"Irp, ItemPtr -- 11" , L"BufferAvail, ItemLong -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c3325_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 162 \"%0<%10!s!> PMQueryWmiDataBlock: IRP 0x%11!p! WaitWakeEnabled %12!u!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c3325_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 162 \"%0<%10!s!> PMQueryWmiDataBlock: IRP 0x%11!p! WaitWakeEnabled %12!u!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c3325
    #define WPP_ANNOTATE_QCPWR_c3325 WPP_ANNOTATE_QCPWR_c3325_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemPtr -- 11" , L"Arg, ItemLong -- 12" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c3325 WPP_ANNOTATE_QCPWR_c3325_FINAL("TMF:", "QCPWR.c", "QCPWR_c3325", L"{", L"pDevExt->PortName, ItemString -- 10" , L"Irp, ItemPtr -- 11" , L"pDevExt->WaitWakeEnabled, ItemLong -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c3341_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 163 \"%0<%10!s!> CIRP (Cw0 0x%11!x!/0x%12!x!) 0x%13!p!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c3341_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 163 \"%0<%10!s!> CIRP (Cw0 0x%11!x!/0x%12!x!) 0x%13!p!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c3341
    #define WPP_ANNOTATE_QCPWR_c3341 WPP_ANNOTATE_QCPWR_c3341_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemLong -- 12" , L"Arg, ItemPtr -- 13" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c3341 WPP_ANNOTATE_QCPWR_c3341_FINAL("TMF:", "QCPWR.c", "QCPWR_c3341", L"{", L"pDevExt->PortName, ItemString -- 10" , L"Irp->IoStatus.Status, ItemLong -- 11" , L"ntStatus, ItemLong -- 12" , L"Irp, ItemPtr -- 13" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c3357_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 164 \"%0<%10!s!> <--PMQueryWmiDataBlock: IRP 0x%11!p!(ST 0x%12!x!) GIDX %13!u! InsIdx %14!u! InsCnt %15!u!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_TRACE" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c3357_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 164 \"%0<%10!s!> <--PMQueryWmiDataBlock: IRP 0x%11!p!(ST 0x%12!x!) GIDX %13!u! InsIdx %14!u! InsCnt %15!u!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_TRACE" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c3357
    #define WPP_ANNOTATE_QCPWR_c3357 WPP_ANNOTATE_QCPWR_c3357_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemPtr -- 11" , L"Arg, ItemLong -- 12" , L"Arg, ItemLong -- 13" , L"Arg, ItemLong -- 14" , L"Arg, ItemLong -- 15" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c3357 WPP_ANNOTATE_QCPWR_c3357_FINAL("TMF:", "QCPWR.c", "QCPWR_c3357", L"{", L"pDevExt->PortName, ItemString -- 10" , L"Irp, ItemPtr -- 11" , L"ntStatus, ItemLong -- 12" , L"GuidIndex, ItemLong -- 13" , L"InstanceIndex, ItemLong -- 14" , L"InstanceCount, ItemLong -- 15" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c337_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 24 \"%0<%10!s!> PIRP: (Cdp) 0x%11!p!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c337_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 24 \"%0<%10!s!> PIRP: (Cdp) 0x%11!p!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c337
    #define WPP_ANNOTATE_QCPWR_c337 WPP_ANNOTATE_QCPWR_c337_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemPtr -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c337 WPP_ANNOTATE_QCPWR_c337_FINAL("TMF:", "QCPWR.c", "QCPWR_c337", L"{", L"pDevExt->PortName, ItemString -- 10" , L"Irp, ItemPtr -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c3383_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 165 \"%0<%10!s!> -->PMSetWmiDataBlock: IRP 0x%11!p! GIDX %12!u! InsIdx %13!u!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_TRACE" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c3383_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 165 \"%0<%10!s!> -->PMSetWmiDataBlock: IRP 0x%11!p! GIDX %12!u! InsIdx %13!u!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_TRACE" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c3383
    #define WPP_ANNOTATE_QCPWR_c3383 WPP_ANNOTATE_QCPWR_c3383_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemPtr -- 11" , L"Arg, ItemLong -- 12" , L"Arg, ItemLong -- 13" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c3383 WPP_ANNOTATE_QCPWR_c3383_FINAL("TMF:", "QCPWR.c", "QCPWR_c3383", L"{", L"pDevExt->PortName, ItemString -- 10" , L"Irp, ItemPtr -- 11" , L"GuidIndex, ItemLong -- 12" , L"InstanceIndex, ItemLong -- 13" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c3424_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 166 \"%0<%10!s!> CIRP (Cw1 0x%11!x!/0x%12!x!) 0x%13!p!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c3424_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 166 \"%0<%10!s!> CIRP (Cw1 0x%11!x!/0x%12!x!) 0x%13!p!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c3424
    #define WPP_ANNOTATE_QCPWR_c3424 WPP_ANNOTATE_QCPWR_c3424_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemLong -- 12" , L"Arg, ItemPtr -- 13" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c3424 WPP_ANNOTATE_QCPWR_c3424_FINAL("TMF:", "QCPWR.c", "QCPWR_c3424", L"{", L"pDevExt->PortName, ItemString -- 10" , L"Irp->IoStatus.Status, ItemLong -- 11" , L"ntStatus, ItemLong -- 12" , L"Irp, ItemPtr -- 13" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c3440_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 167 \"%0<%10!s!> <--PMSetWmiDataBlock: IRP 0x%11!p! (ST 0x%12!x!) GIDX %13!u! InsIdx %14!u!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_TRACE" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c3440_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 167 \"%0<%10!s!> <--PMSetWmiDataBlock: IRP 0x%11!p! (ST 0x%12!x!) GIDX %13!u! InsIdx %14!u!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_TRACE" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c3440
    #define WPP_ANNOTATE_QCPWR_c3440 WPP_ANNOTATE_QCPWR_c3440_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemPtr -- 11" , L"Arg, ItemLong -- 12" , L"Arg, ItemLong -- 13" , L"Arg, ItemLong -- 14" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c3440 WPP_ANNOTATE_QCPWR_c3440_FINAL("TMF:", "QCPWR.c", "QCPWR_c3440", L"{", L"pDevExt->PortName, ItemString -- 10" , L"Irp, ItemPtr -- 11" , L"ntStatus, ItemLong -- 12" , L"GuidIndex, ItemLong -- 13" , L"InstanceIndex, ItemLong -- 14" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c3469_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 168 \"%0<%10!s!> -->PMSetWmiDataItem: IRP 0x%11!p! GIDX %12!u! InsIdx %13!u! ItmId %14!u!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_TRACE" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c3469_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 168 \"%0<%10!s!> -->PMSetWmiDataItem: IRP 0x%11!p! GIDX %12!u! InsIdx %13!u! ItmId %14!u!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_TRACE" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c3469
    #define WPP_ANNOTATE_QCPWR_c3469 WPP_ANNOTATE_QCPWR_c3469_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemPtr -- 11" , L"Arg, ItemLong -- 12" , L"Arg, ItemLong -- 13" , L"Arg, ItemLong -- 14" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c3469 WPP_ANNOTATE_QCPWR_c3469_FINAL("TMF:", "QCPWR.c", "QCPWR_c3469", L"{", L"pDevExt->PortName, ItemString -- 10" , L"Irp, ItemPtr -- 11" , L"GuidIndex, ItemLong -- 12" , L"InstanceIndex, ItemLong -- 13" , L"DataItemId, ItemLong -- 14" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c3505_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 169 \"%0<%10!s!> CIRP (Cw2 0x%11!x!/0x%12!x!) 0x%13!p!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c3505_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 169 \"%0<%10!s!> CIRP (Cw2 0x%11!x!/0x%12!x!) 0x%13!p!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c3505
    #define WPP_ANNOTATE_QCPWR_c3505 WPP_ANNOTATE_QCPWR_c3505_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemLong -- 12" , L"Arg, ItemPtr -- 13" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c3505 WPP_ANNOTATE_QCPWR_c3505_FINAL("TMF:", "QCPWR.c", "QCPWR_c3505", L"{", L"pDevExt->PortName, ItemString -- 10" , L"Irp->IoStatus.Status, ItemLong -- 11" , L"ntStatus, ItemLong -- 12" , L"Irp, ItemPtr -- 13" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c352_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 25 \"%0<%10!s!> PIRP (FWDi 0x%11!x!) 0x%12!p!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c352_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 25 \"%0<%10!s!> PIRP (FWDi 0x%11!x!) 0x%12!p!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c352
    #define WPP_ANNOTATE_QCPWR_c352 WPP_ANNOTATE_QCPWR_c352_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemPtr -- 12" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c352 WPP_ANNOTATE_QCPWR_c352_FINAL("TMF:", "QCPWR.c", "QCPWR_c352", L"{", L"pDevExt->PortName, ItemString -- 10" , L"*pNtStatus, ItemLong -- 11" , L"Irp, ItemPtr -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c3521_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 170 \"%0<%10!s!> <--PMSetWmiDataItem: IRP 0x%11!p! (ST 0x%12!x!) GIDX %13!u! InsIdx %14!u! ItmId %15!u!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_TRACE" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c3521_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 170 \"%0<%10!s!> <--PMSetWmiDataItem: IRP 0x%11!p! (ST 0x%12!x!) GIDX %13!u! InsIdx %14!u! ItmId %15!u!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_TRACE" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c3521
    #define WPP_ANNOTATE_QCPWR_c3521 WPP_ANNOTATE_QCPWR_c3521_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemPtr -- 11" , L"Arg, ItemLong -- 12" , L"Arg, ItemLong -- 13" , L"Arg, ItemLong -- 14" , L"Arg, ItemLong -- 15" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c3521 WPP_ANNOTATE_QCPWR_c3521_FINAL("TMF:", "QCPWR.c", "QCPWR_c3521", L"{", L"pDevExt->PortName, ItemString -- 10" , L"Irp, ItemPtr -- 11" , L"ntStatus, ItemLong -- 12" , L"GuidIndex, ItemLong -- 13" , L"InstanceIndex, ItemLong -- 14" , L"DataItemId, ItemLong -- 15" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c3538_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 171 \"%0<%10!s!> -->SetPMState: %11!u!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_TRACE" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c3538_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 171 \"%0<%10!s!> -->SetPMState: %11!u!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_TRACE" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c3538
    #define WPP_ANNOTATE_QCPWR_c3538 WPP_ANNOTATE_QCPWR_c3538_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c3538 WPP_ANNOTATE_QCPWR_c3538_FINAL("TMF:", "QCPWR.c", "QCPWR_c3538", L"{", L"pDevExt->PortName, ItemString -- 10" , L"IsEnabled, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c3577_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 172 \"%0<%10!s!> <--SetPMState: %11!u! (ST 0x%12!x!)\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_TRACE" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c3577_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 172 \"%0<%10!s!> <--SetPMState: %11!u! (ST 0x%12!x!)\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_TRACE" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c3577
    #define WPP_ANNOTATE_QCPWR_c3577 WPP_ANNOTATE_QCPWR_c3577_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemLong -- 12" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c3577 WPP_ANNOTATE_QCPWR_c3577_FINAL("TMF:", "QCPWR.c", "QCPWR_c3577", L"{", L"pDevExt->PortName, ItemString -- 10" , L"IsEnabled, ItemLong -- 11" , L"ntStatus, ItemLong -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c3595_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 173 \"%0<%10!s!> -->SetWaitWakeState: %11!u!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_TRACE" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c3595_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 173 \"%0<%10!s!> -->SetWaitWakeState: %11!u!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_TRACE" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c3595
    #define WPP_ANNOTATE_QCPWR_c3595 WPP_ANNOTATE_QCPWR_c3595_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c3595 WPP_ANNOTATE_QCPWR_c3595_FINAL("TMF:", "QCPWR.c", "QCPWR_c3595", L"{", L"pDevExt->PortName, ItemString -- 10" , L"IsEnabled, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c3634_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 174 \"%0<%10!s!> <--SetWaitWakeState: %11!u! (ST 0x%12!x!)\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_TRACE" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c3634_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 174 \"%0<%10!s!> <--SetWaitWakeState: %11!u! (ST 0x%12!x!)\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_TRACE" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c3634
    #define WPP_ANNOTATE_QCPWR_c3634 WPP_ANNOTATE_QCPWR_c3634_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemLong -- 12" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c3634 WPP_ANNOTATE_QCPWR_c3634_FINAL("TMF:", "QCPWR.c", "QCPWR_c3634", L"{", L"pDevExt->PortName, ItemString -- 10" , L"IsEnabled, ItemLong -- 11" , L"ntStatus, ItemLong -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c3670_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 175 \"%0<%10!s!> VerifyDeviceCapabilities: S0 maps to D%11!u!, use D0\" //   FLAG=QCSER_DBG_MASK_CONTROL LEVEL=QCSER_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c3670_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 175 \"%0<%10!s!> VerifyDeviceCapabilities: S0 maps to D%11!u!, use D0\" //   FLAG=QCSER_DBG_MASK_CONTROL LEVEL=QCSER_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c3670
    #define WPP_ANNOTATE_QCPWR_c3670 WPP_ANNOTATE_QCPWR_c3670_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c3670 WPP_ANNOTATE_QCPWR_c3670_FINAL("TMF:", "QCPWR.c", "QCPWR_c3670", L"{", L"pDevExt->PortName, ItemString -- 10" , L"pDevExt->DeviceCapabilities.DeviceState[PowerSystemWorking]-1, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c3684_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 176 \"%0<%10!s!> VerifyDeviceCapabilities: S1 maps to D%11!u!, use D3\" //   FLAG=QCSER_DBG_MASK_CONTROL LEVEL=QCSER_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c3684_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 176 \"%0<%10!s!> VerifyDeviceCapabilities: S1 maps to D%11!u!, use D3\" //   FLAG=QCSER_DBG_MASK_CONTROL LEVEL=QCSER_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c3684
    #define WPP_ANNOTATE_QCPWR_c3684 WPP_ANNOTATE_QCPWR_c3684_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c3684 WPP_ANNOTATE_QCPWR_c3684_FINAL("TMF:", "QCPWR.c", "QCPWR_c3684", L"{", L"pDevExt->PortName, ItemString -- 10" , L"pDevExt->DeviceCapabilities.DeviceState[PowerSystemSleeping1]-1, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c3698_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 177 \"%0<%10!s!> VerifyDeviceCapabilities: S2 maps to D%11!u!, use D3\" //   FLAG=QCSER_DBG_MASK_CONTROL LEVEL=QCSER_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c3698_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 177 \"%0<%10!s!> VerifyDeviceCapabilities: S2 maps to D%11!u!, use D3\" //   FLAG=QCSER_DBG_MASK_CONTROL LEVEL=QCSER_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c3698
    #define WPP_ANNOTATE_QCPWR_c3698 WPP_ANNOTATE_QCPWR_c3698_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c3698 WPP_ANNOTATE_QCPWR_c3698_FINAL("TMF:", "QCPWR.c", "QCPWR_c3698", L"{", L"pDevExt->PortName, ItemString -- 10" , L"pDevExt->DeviceCapabilities.DeviceState[PowerSystemSleeping2]-1, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c3712_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 178 \"%0<%10!s!> VerifyDeviceCapabilities: S3 maps to D%11!u!, use D3\" //   FLAG=QCSER_DBG_MASK_CONTROL LEVEL=QCSER_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c3712_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 178 \"%0<%10!s!> VerifyDeviceCapabilities: S3 maps to D%11!u!, use D3\" //   FLAG=QCSER_DBG_MASK_CONTROL LEVEL=QCSER_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c3712
    #define WPP_ANNOTATE_QCPWR_c3712 WPP_ANNOTATE_QCPWR_c3712_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c3712 WPP_ANNOTATE_QCPWR_c3712_FINAL("TMF:", "QCPWR.c", "QCPWR_c3712", L"{", L"pDevExt->PortName, ItemString -- 10" , L"pDevExt->DeviceCapabilities.DeviceState[PowerSystemSleeping3]-1, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c3746_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 179 \"%0<%10!s!> DSP: PWR IRP 0x%11!p!/0x%12!p! to front-A\" //   FLAG=QCSER_DBG_MASK_POWER LEVEL=QCSER_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c3746_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 179 \"%0<%10!s!> DSP: PWR IRP 0x%11!p!/0x%12!p! to front-A\" //   FLAG=QCSER_DBG_MASK_POWER LEVEL=QCSER_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c3746
    #define WPP_ANNOTATE_QCPWR_c3746 WPP_ANNOTATE_QCPWR_c3746_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemPtr -- 11" , L"Arg, ItemPtr -- 12" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c3746 WPP_ANNOTATE_QCPWR_c3746_FINAL("TMF:", "QCPWR.c", "QCPWR_c3746", L"{", L"pDevExt->PortName, ItemString -- 10" , L"DspIoBlock->Irp, ItemPtr -- 11" , L"DspIoBlock, ItemPtr -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c3769_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 180 \"%0<%10!s!> DSP: PWR IRP 0x%11!p!/0x%12!p! before 0x%13!x! CNT %14!d!\" //   FLAG=QCSER_DBG_MASK_POWER LEVEL=QCSER_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c3769_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 180 \"%0<%10!s!> DSP: PWR IRP 0x%11!p!/0x%12!p! before 0x%13!x! CNT %14!d!\" //   FLAG=QCSER_DBG_MASK_POWER LEVEL=QCSER_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c3769
    #define WPP_ANNOTATE_QCPWR_c3769 WPP_ANNOTATE_QCPWR_c3769_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemPtr -- 11" , L"Arg, ItemPtr -- 12" , L"Arg, ItemLong -- 13" , L"Arg, ItemLong -- 14" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c3769 WPP_ANNOTATE_QCPWR_c3769_FINAL("TMF:", "QCPWR.c", "QCPWR_c3769", L"{", L"pDevExt->PortName, ItemString -- 10" , L"DspIoBlock->Irp, ItemPtr -- 11" , L"DspIoBlock, ItemPtr -- 12" , L"irpStack->MajorFunction, ItemLong -- 13" , L"cnt, ItemLong -- 14" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c3786_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 181 \"%0<%10!s!> DSP: PWR IRP 0x%11!p!/0x%12!p! to front-B CNT %13!d!\" //   FLAG=QCSER_DBG_MASK_POWER LEVEL=QCSER_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c3786_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 181 \"%0<%10!s!> DSP: PWR IRP 0x%11!p!/0x%12!p! to front-B CNT %13!d!\" //   FLAG=QCSER_DBG_MASK_POWER LEVEL=QCSER_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c3786
    #define WPP_ANNOTATE_QCPWR_c3786 WPP_ANNOTATE_QCPWR_c3786_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemPtr -- 11" , L"Arg, ItemPtr -- 12" , L"Arg, ItemLong -- 13" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c3786 WPP_ANNOTATE_QCPWR_c3786_FINAL("TMF:", "QCPWR.c", "QCPWR_c3786", L"{", L"pDevExt->PortName, ItemString -- 10" , L"DspIoBlock->Irp, ItemPtr -- 11" , L"DspIoBlock, ItemPtr -- 12" , L"cnt, ItemLong -- 13" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c379_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 26 \"%0<%10!s!> QuerySystemPowerState: dev in service, reject.\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c379_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 26 \"%0<%10!s!> QuerySystemPowerState: dev in service, reject.\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c379
    #define WPP_ANNOTATE_QCPWR_c379 WPP_ANNOTATE_QCPWR_c379_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c379 WPP_ANNOTATE_QCPWR_c379_FINAL("TMF:", "QCPWR.c", "QCPWR_c379", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c3821_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 182 \"%0<%10!s!> -->EnqueueDevicePowerRequest(DPWR): %11!u!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_TRACE" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c3821_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 182 \"%0<%10!s!> -->EnqueueDevicePowerRequest(DPWR): %11!u!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_TRACE" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c3821
    #define WPP_ANNOTATE_QCPWR_c3821 WPP_ANNOTATE_QCPWR_c3821_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c3821 WPP_ANNOTATE_QCPWR_c3821_FINAL("TMF:", "QCPWR.c", "QCPWR_c3821", L"{", L"pDevExt->PortName, ItemString -- 10" , L"PowerState, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c3841_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 183 \"%0<%10!s!> <--EnqueueDevicePowerRequest(DPWR): already in D%11!u!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c3841_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 183 \"%0<%10!s!> <--EnqueueDevicePowerRequest(DPWR): already in D%11!u!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c3841
    #define WPP_ANNOTATE_QCPWR_c3841 WPP_ANNOTATE_QCPWR_c3841_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c3841 WPP_ANNOTATE_QCPWR_c3841_FINAL("TMF:", "QCPWR.c", "QCPWR_c3841", L"{", L"pDevExt->PortName, ItemString -- 10" , L"PowerState-1, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c3851_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 184 \"%0<%10!s!> EnqueueDevicePowerRequest(DPWR): in D%11!u!, req again\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c3851_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 184 \"%0<%10!s!> EnqueueDevicePowerRequest(DPWR): in D%11!u!, req again\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c3851
    #define WPP_ANNOTATE_QCPWR_c3851 WPP_ANNOTATE_QCPWR_c3851_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c3851 WPP_ANNOTATE_QCPWR_c3851_FINAL("TMF:", "QCPWR.c", "QCPWR_c3851", L"{", L"pDevExt->PortName, ItemString -- 10" , L"PowerState-1, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c3862_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 185 \"%0<%10!s!> <--EnqueueDevicePowerRequest(DPWR): DUP D%11!u!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c3862_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 185 \"%0<%10!s!> <--EnqueueDevicePowerRequest(DPWR): DUP D%11!u!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c3862
    #define WPP_ANNOTATE_QCPWR_c3862 WPP_ANNOTATE_QCPWR_c3862_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c3862 WPP_ANNOTATE_QCPWR_c3862_FINAL("TMF:", "QCPWR.c", "QCPWR_c3862", L"{", L"pDevExt->PortName, ItemString -- 10" , L"PowerState-1, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c3874_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 186 \"%0<%10!s!> <--EnqueueDevicePowerRequest(DPWR): NO_MEM\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c3874_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 186 \"%0<%10!s!> <--EnqueueDevicePowerRequest(DPWR): NO_MEM\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c3874
    #define WPP_ANNOTATE_QCPWR_c3874 WPP_ANNOTATE_QCPWR_c3874_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c3874 WPP_ANNOTATE_QCPWR_c3874_FINAL("TMF:", "QCPWR.c", "QCPWR_c3874", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c3889_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 187 \"%0<%10!s!> <--EnqueueDevicePowerRequest(DPWR): %11!u!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_TRACE" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c3889_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 187 \"%0<%10!s!> <--EnqueueDevicePowerRequest(DPWR): %11!u!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_TRACE" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c3889
    #define WPP_ANNOTATE_QCPWR_c3889 WPP_ANNOTATE_QCPWR_c3889_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c3889 WPP_ANNOTATE_QCPWR_c3889_FINAL("TMF:", "QCPWR.c", "QCPWR_c3889", L"{", L"pDevExt->PortName, ItemString -- 10" , L"PowerState, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c3923_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 188 \"%0<%10!s!> DequeueDevicePowerRequest(DPWR): error (no req)\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c3923_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 188 \"%0<%10!s!> DequeueDevicePowerRequest(DPWR): error (no req)\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c3923
    #define WPP_ANNOTATE_QCPWR_c3923 WPP_ANNOTATE_QCPWR_c3923_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c3923 WPP_ANNOTATE_QCPWR_c3923_FINAL("TMF:", "QCPWR.c", "QCPWR_c3923", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c3978_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 189 \"%0<%10!s!> PurgeDevicePowerQueue(DPWR): not empty!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c3978_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 189 \"%0<%10!s!> PurgeDevicePowerQueue(DPWR): not empty!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c3978
    #define WPP_ANNOTATE_QCPWR_c3978 WPP_ANNOTATE_QCPWR_c3978_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c3978 WPP_ANNOTATE_QCPWR_c3978_FINAL("TMF:", "QCPWR.c", "QCPWR_c3978", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c423_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 27 \"%0<%10!s!> QuerySystemPowerState: invalid state req1 - %11!u!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c423_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 27 \"%0<%10!s!> QuerySystemPowerState: invalid state req1 - %11!u!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c423
    #define WPP_ANNOTATE_QCPWR_c423 WPP_ANNOTATE_QCPWR_c423_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c423 WPP_ANNOTATE_QCPWR_c423_FINAL("TMF:", "QCPWR.c", "QCPWR_c423", L"{", L"pDevExt->PortName, ItemString -- 10" , L"PowerState, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c447_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 28 \"%0<%10!s!> SystemPowerRequestCompletion: IRP 0x%11!p!(0x%12!x!)\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c447_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 28 \"%0<%10!s!> SystemPowerRequestCompletion: IRP 0x%11!p!(0x%12!x!)\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c447
    #define WPP_ANNOTATE_QCPWR_c447 WPP_ANNOTATE_QCPWR_c447_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemPtr -- 11" , L"Arg, ItemLong -- 12" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c447 WPP_ANNOTATE_QCPWR_c447_FINAL("TMF:", "QCPWR.c", "QCPWR_c447", L"{", L"pDevExt->PortName, ItemString -- 10" , L"Irp, ItemPtr -- 11" , L"ntStatus, ItemLong -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c459_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 29 \"%0<%10!s!> PIRP (Ce 0x%11!x!) 0x%12!p!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c459_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 29 \"%0<%10!s!> PIRP (Ce 0x%11!x!) 0x%12!p!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c459
    #define WPP_ANNOTATE_QCPWR_c459 WPP_ANNOTATE_QCPWR_c459_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemPtr -- 12" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c459 WPP_ANNOTATE_QCPWR_c459_FINAL("TMF:", "QCPWR.c", "QCPWR_c459", L"{", L"pDevExt->PortName, ItemString -- 10" , L"ntStatus, ItemLong -- 11" , L"Irp, ItemPtr -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c481_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 30 \"%0<%10!s!> SysPwrReqCompletion: 0x%11!p! [PrepareToPowerDown 0]\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c481_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 30 \"%0<%10!s!> SysPwrReqCompletion: 0x%11!p! [PrepareToPowerDown 0]\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c481
    #define WPP_ANNOTATE_QCPWR_c481 WPP_ANNOTATE_QCPWR_c481_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemPtr -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c481 WPP_ANNOTATE_QCPWR_c481_FINAL("TMF:", "QCPWR.c", "QCPWR_c481", L"{", L"pDevExt->PortName, ItemString -- 10" , L"Irp, ItemPtr -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c511_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 31 \"%0<%10!s!> ReqDevicePowerIrp: SysPwrIRP 0x%11!p!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c511_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 31 \"%0<%10!s!> ReqDevicePowerIrp: SysPwrIRP 0x%11!p!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c511
    #define WPP_ANNOTATE_QCPWR_c511 WPP_ANNOTATE_QCPWR_c511_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemPtr -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c511 WPP_ANNOTATE_QCPWR_c511_FINAL("TMF:", "QCPWR.c", "QCPWR_c511", L"{", L"pDevExt->PortName, ItemString -- 10" , L"Irp, ItemPtr -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c524_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 32 \"%0<%10!s!> ReqDevicePowerIrp: unexpected pwr map (sys[%11!u!]<->dev[%12!u!])\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c524_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 32 \"%0<%10!s!> ReqDevicePowerIrp: unexpected pwr map (sys[%11!u!]<->dev[%12!u!])\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c524
    #define WPP_ANNOTATE_QCPWR_c524 WPP_ANNOTATE_QCPWR_c524_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemLong -- 12" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c524 WPP_ANNOTATE_QCPWR_c524_FINAL("TMF:", "QCPWR.c", "QCPWR_c524", L"{", L"pDevExt->PortName, ItemString -- 10" , L"systemState, ItemLong -- 11" , L"devState, ItemLong -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c558_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 33 \"%0<%10!s!> LONGHORN fast resume: to complete SysIrp 0x%11!p!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c558_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 33 \"%0<%10!s!> LONGHORN fast resume: to complete SysIrp 0x%11!p!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c558
    #define WPP_ANNOTATE_QCPWR_c558 WPP_ANNOTATE_QCPWR_c558_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemPtr -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c558 WPP_ANNOTATE_QCPWR_c558_FINAL("TMF:", "QCPWR.c", "QCPWR_c558", L"{", L"pDevExt->PortName, ItemString -- 10" , L"Irp, ItemPtr -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c581_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 34 \"%0<%10!s!> PIRP (Csys 0) 0x%11!p! dev req2 0x%12!x!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c581_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 34 \"%0<%10!s!> PIRP (Csys 0) 0x%11!p! dev req2 0x%12!x!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c581
    #define WPP_ANNOTATE_QCPWR_c581 WPP_ANNOTATE_QCPWR_c581_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemPtr -- 11" , L"Arg, ItemLong -- 12" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c581 WPP_ANNOTATE_QCPWR_c581_FINAL("TMF:", "QCPWR.c", "QCPWR_c581", L"{", L"pDevExt->PortName, ItemString -- 10" , L"Irp, ItemPtr -- 11" , L"ntStatus, ItemLong -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c606_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 35 \"%0<%10!s!> PIRP (Csys 0) 0x%11!p! (DPWR) No dev req [PrepareToPowerDown %12!d!]\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c606_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 35 \"%0<%10!s!> PIRP (Csys 0) 0x%11!p! (DPWR) No dev req [PrepareToPowerDown %12!d!]\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c606
    #define WPP_ANNOTATE_QCPWR_c606 WPP_ANNOTATE_QCPWR_c606_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemPtr -- 11" , L"Arg, ItemLong -- 12" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c606 WPP_ANNOTATE_QCPWR_c606_FINAL("TMF:", "QCPWR.c", "QCPWR_c606", L"{", L"pDevExt->PortName, ItemString -- 10" , L"Irp, ItemPtr -- 11" , L"pDevExt->PrepareToPowerDown, ItemLong -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c642_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 36 \"%0<%10!s!> PIRP (Csys 0) 0x%11!p! dev req 0x%12!x!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c642_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 36 \"%0<%10!s!> PIRP (Csys 0) 0x%11!p! dev req 0x%12!x!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c642
    #define WPP_ANNOTATE_QCPWR_c642 WPP_ANNOTATE_QCPWR_c642_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemPtr -- 11" , L"Arg, ItemLong -- 12" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c642 WPP_ANNOTATE_QCPWR_c642_FINAL("TMF:", "QCPWR.c", "QCPWR_c642", L"{", L"pDevExt->PortName, ItemString -- 10" , L"Irp, ItemPtr -- 11" , L"ntStatus, ItemLong -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c673_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 37 \"%0<%10!s!> TopDevicePowerIrpCompletion: sIRP 0x%11!p! DevObj 0x%12!p!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c673_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 37 \"%0<%10!s!> TopDevicePowerIrpCompletion: sIRP 0x%11!p! DevObj 0x%12!p!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c673
    #define WPP_ANNOTATE_QCPWR_c673 WPP_ANNOTATE_QCPWR_c673_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemPtr -- 11" , L"Arg, ItemPtr -- 12" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c673 WPP_ANNOTATE_QCPWR_c673_FINAL("TMF:", "QCPWR.c", "QCPWR_c673", L"{", L"pDevExt->PortName, ItemString -- 10" , L"systemPwrIrp, ItemPtr -- 11" , L"DeviceObject, ItemPtr -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c711_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 38 \"%0<%10!s!> PIRP (Csys 0x%11!x!) 0x%12!p! [PrepareToPowerDown %13!u!]\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c711_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 38 \"%0<%10!s!> PIRP (Csys 0x%11!x!) 0x%12!p! [PrepareToPowerDown %13!u!]\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c711
    #define WPP_ANNOTATE_QCPWR_c711 WPP_ANNOTATE_QCPWR_c711_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemPtr -- 12" , L"Arg, ItemLong -- 13" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c711 WPP_ANNOTATE_QCPWR_c711_FINAL("TMF:", "QCPWR.c", "QCPWR_c711", L"{", L"pDevExt->PortName, ItemString -- 10" , L"IoStatus->Status, ItemLong -- 11" , L"systemPwrIrp, ItemPtr -- 12" , L"pDevExt->PrepareToPowerDown, ItemLong -- 13" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c72_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 10 \"%0<%10!s!> -->QCPWR_PowrerManagement: PIRP 0x%11!p!\" //   FLAG=QCSER_DBG_MASK_POWER LEVEL=QCSER_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c72_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 10 \"%0<%10!s!> -->QCPWR_PowrerManagement: PIRP 0x%11!p!\" //   FLAG=QCSER_DBG_MASK_POWER LEVEL=QCSER_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c72
    #define WPP_ANNOTATE_QCPWR_c72 WPP_ANNOTATE_QCPWR_c72_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemPtr -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c72 WPP_ANNOTATE_QCPWR_c72_FINAL("TMF:", "QCPWR.c", "QCPWR_c72", L"{", L"pDevExt->PortName, ItemString -- 10" , L"Irp, ItemPtr -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c740_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 39 \"%0<%10!s!> QueryDevicePowerState: dev in service, reject.\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c740_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 39 \"%0<%10!s!> QueryDevicePowerState: dev in service, reject.\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c740
    #define WPP_ANNOTATE_QCPWR_c740 WPP_ANNOTATE_QCPWR_c740_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c740 WPP_ANNOTATE_QCPWR_c740_FINAL("TMF:", "QCPWR.c", "QCPWR_c740", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c769_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 40 \"%0<%10!s!> QueryDevicePowerState: D%11!u!, no action\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c769_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 40 \"%0<%10!s!> QueryDevicePowerState: D%11!u!, no action\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c769
    #define WPP_ANNOTATE_QCPWR_c769 WPP_ANNOTATE_QCPWR_c769_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c769 WPP_ANNOTATE_QCPWR_c769_FINAL("TMF:", "QCPWR.c", "QCPWR_c769", L"{", L"pDevExt->PortName, ItemString -- 10" , L"PowerState-1, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c782_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 41 \"%0<%10!s!> QueryDevicePowerState: invalid state req1 - D%11!u!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c782_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 41 \"%0<%10!s!> QueryDevicePowerState: invalid state req1 - D%11!u!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c782
    #define WPP_ANNOTATE_QCPWR_c782 WPP_ANNOTATE_QCPWR_c782_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c782 WPP_ANNOTATE_QCPWR_c782_FINAL("TMF:", "QCPWR.c", "QCPWR_c782", L"{", L"pDevExt->PortName, ItemString -- 10" , L"PowerState-1, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c805_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 42 \"%0<%10!s!> DevicePowerDownIrpCompletion: IRP 0x%11!p!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c805_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 42 \"%0<%10!s!> DevicePowerDownIrpCompletion: IRP 0x%11!p!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c805
    #define WPP_ANNOTATE_QCPWR_c805 WPP_ANNOTATE_QCPWR_c805_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemPtr -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c805 WPP_ANNOTATE_QCPWR_c805_FINAL("TMF:", "QCPWR.c", "QCPWR_c805", L"{", L"pDevExt->PortName, ItemString -- 10" , L"Irp, ItemPtr -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c825_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 43 \"%0<%10!s!> PIRP (Cdev 0x%11!x!) 0x%12!p!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c825_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 43 \"%0<%10!s!> PIRP (Cdev 0x%11!x!) 0x%12!p!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c825
    #define WPP_ANNOTATE_QCPWR_c825 WPP_ANNOTATE_QCPWR_c825_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemPtr -- 12" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c825 WPP_ANNOTATE_QCPWR_c825_FINAL("TMF:", "QCPWR.c", "QCPWR_c825", L"{", L"pDevExt->PortName, ItemString -- 10" , L"Irp->IoStatus.Status, ItemLong -- 11" , L"Irp, ItemPtr -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c852_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 44 \"%0<%10!s!> -->SetSystemPowerState: %11!u!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_TRACE" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c852_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 44 \"%0<%10!s!> -->SetSystemPowerState: %11!u!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_TRACE" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c852
    #define WPP_ANNOTATE_QCPWR_c852 WPP_ANNOTATE_QCPWR_c852_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c852 WPP_ANNOTATE_QCPWR_c852_FINAL("TMF:", "QCPWR.c", "QCPWR_c852", L"{", L"pDevExt->PortName, ItemString -- 10" , L"PowerState, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c877_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 45 \"%0<%10!s!> <--SetSystemPowerState: %11!u!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_TRACE" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c877_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 45 \"%0<%10!s!> <--SetSystemPowerState: %11!u!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_TRACE" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c877
    #define WPP_ANNOTATE_QCPWR_c877 WPP_ANNOTATE_QCPWR_c877_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c877 WPP_ANNOTATE_QCPWR_c877_FINAL("TMF:", "QCPWR.c", "QCPWR_c877", L"{", L"pDevExt->PortName, ItemString -- 10" , L"PowerState, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c88_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 11 \"%0<%10!s!> IRP_MN_QUERY_POWER: SystemPowerState %11!d!\" //   FLAG=QCSER_DBG_MASK_POWER LEVEL=QCSER_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c88_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 11 \"%0<%10!s!> IRP_MN_QUERY_POWER: SystemPowerState %11!d!\" //   FLAG=QCSER_DBG_MASK_POWER LEVEL=QCSER_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c88
    #define WPP_ANNOTATE_QCPWR_c88 WPP_ANNOTATE_QCPWR_c88_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c88 WPP_ANNOTATE_QCPWR_c88_FINAL("TMF:", "QCPWR.c", "QCPWR_c88", L"{", L"pDevExt->PortName, ItemString -- 10" , L"pwrState, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c902_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 46 \"%0<%10!s!> -->CancelPendingIrps: %11!u!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_TRACE" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c902_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 46 \"%0<%10!s!> -->CancelPendingIrps: %11!u!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_TRACE" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c902
    #define WPP_ANNOTATE_QCPWR_c902 WPP_ANNOTATE_QCPWR_c902_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c902 WPP_ANNOTATE_QCPWR_c902_FINAL("TMF:", "QCPWR.c", "QCPWR_c902", L"{", L"pDevExt->PortName, ItemString -- 10" , L"PowerState, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c930_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 47 \"%0<%10!s!> WTO-a\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c930_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 47 \"%0<%10!s!> WTO-a\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c930
    #define WPP_ANNOTATE_QCPWR_c930 WPP_ANNOTATE_QCPWR_c930_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c930 WPP_ANNOTATE_QCPWR_c930_FINAL("TMF:", "QCPWR.c", "QCPWR_c930", L"{", L"pDevExt->PortName, ItemString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c951_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 48 \"%0<%10!s!> <--CancelPendingIrps: %11!u!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_TRACE" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c951_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 48 \"%0<%10!s!> <--CancelPendingIrps: %11!u!\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_TRACE" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c951
    #define WPP_ANNOTATE_QCPWR_c951 WPP_ANNOTATE_QCPWR_c951_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c951 WPP_ANNOTATE_QCPWR_c951_FINAL("TMF:", "QCPWR.c", "QCPWR_c951", L"{", L"pDevExt->PortName, ItemString -- 10" , L"PowerState, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c98_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 12 \"%0<%10!s!> _PowrerManagement: _QuerySystemPowerState 0x%11!X!, set ComplRtn\" //   FLAG=QCSER_DBG_MASK_POWER LEVEL=QCSER_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c98_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 12 \"%0<%10!s!> _PowrerManagement: _QuerySystemPowerState 0x%11!X!, set ComplRtn\" //   FLAG=QCSER_DBG_MASK_POWER LEVEL=QCSER_DBG_LEVEL_DETAIL" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c98
    #define WPP_ANNOTATE_QCPWR_c98 WPP_ANNOTATE_QCPWR_c98_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c98 WPP_ANNOTATE_QCPWR_c98_FINAL("TMF:", "QCPWR.c", "QCPWR_c98", L"{", L"pDevExt->PortName, ItemString -- 10" , L"nts, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_QCPWR_c988_FINAL(P, File, Name, ...)    __annotation(L ## P, L"f0f80aef-19be-3867-ee73-c72acdc8ab6c serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 49 \"%0<%10!s!> SetDevicePowerState: already in D0, no act(0x%11!p!)\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_QCPWR_c988_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"serial // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 49 \"%0<%10!s!> SetDevicePowerState: already in D0, no act(0x%11!p!)\" //   FLAG=QCSER_DBG_MASK_PIRP LEVEL=QCSER_DBG_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_QCPWR_c988
    #define WPP_ANNOTATE_QCPWR_c988 WPP_ANNOTATE_QCPWR_c988_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemPtr -- 11" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_QCPWR_c988 WPP_ANNOTATE_QCPWR_c988_FINAL("TMF:", "QCPWR.c", "QCPWR_c988", L"{", L"pDevExt->PortName, ItemString -- 10" , L"Irp, ItemPtr -- 11" , L"}")
#endif
# define WPP_ANNOTATE(x) WPP_ANNOTATE_ ## x,

#else
# define WPP_ANNOTATE(x)
#endif


#if 1
#if !defined(WPP_USER_MSG_GUID)

#define WPP_LOCAL_TraceGuids WPP_f0f80aef19be3867ee73c72acdc8ab6c_Traceguids
extern const __declspec(selectany) GUID WPP_LOCAL_TraceGuids[] = { {0xf0f80aef,0x19be,0x3867,{0xee,0x73,0xc7,0x2a,0xcd,0xc8,0xab,0x6c}}, };

#else

#define WPP_LOCAL_MSG_VAR(Guid) WPP_XGLUE3(WPP_, WPP_GUID_NORM Guid, _Traceguids)

#define WPP_LOCAL_MSG_GUID(Guid) \
extern const __declspec(selectany) GUID WPP_LOCAL_MSG_VAR(Guid)[] = { WPP_GUID_STRUCT Guid }

WPP_LOCAL_MSG_GUID(WPP_USER_MSG_GUID);
#define WPP_LOCAL_TraceGuids WPP_LOCAL_MSG_VAR(WPP_USER_MSG_GUID)

#endif
#endif


#ifndef WPP_ALREADY_INCLUDED

#if !defined(WPP_TRACE_OPTIONS)
enum {WPP_TRACE_OPTIONS = TRACE_MESSAGE_SEQUENCE   | TRACE_MESSAGE_GUID
                        | TRACE_MESSAGE_SYSTEMINFO | TRACE_MESSAGE_TIMESTAMP };
#endif

#ifndef WPP_LOGPAIR_SEPARATOR
# define WPP_LOGPAIR_SEPARATOR ,
#endif

#ifndef WPP_LOGPAIR_SIZET
# define WPP_LOGPAIR_SIZET SIZE_T
#endif

#if !defined(WPP_LOGPAIR)
# define WPP_LOGPAIR(_Size, _Addr)     (_Addr),((WPP_LOGPAIR_SIZET)(_Size))WPP_LOGPAIR_SEPARATOR
#endif

#define WPP_LOGTYPEVAL(_Type, _Value) WPP_LOGPAIR(sizeof(_Type), &(_Value))
#define WPP_LOGTYPEPTR(_Value)        WPP_LOGPAIR(sizeof(*(_Value)), (_Value))

// Marshalling macros.

#if !defined(WPP_LOGASTR)
# if !defined(WPP_CHECK_FOR_NULL_STRING)
#  define WPP_LOGASTR(_value)  WPP_LOGPAIR(strlen(_value) + 1, _value )
# else
#  define WPP_LOGASTR(_value)  WPP_LOGPAIR( (_value)?strlen(_value) + 1:5, (_value)?(_value):"NULL" )
# endif
#endif

#if !defined(WPP_LOGWSTR)
# if !defined(WPP_CHECK_FOR_NULL_STRING)
#  define WPP_LOGWSTR(_value)  WPP_LOGPAIR( (wcslen(_value)+1) * sizeof(WCHAR), _value)
# else
#  define WPP_LOGWSTR(_value)  WPP_LOGPAIR( ((_value)?wcslen(_value) + 1:5) * sizeof(WCHAR), (_value)?(_value):L"NULL" )
# endif
#endif

#if !defined(WPP_LOGPGUID)
# define WPP_LOGPGUID(_value) WPP_LOGPAIR( sizeof(GUID), (_value) )
#endif


#if !defined(WPP_LOGPSID)
# if !defined(WPP_CHECK_FOR_NULL_STRING)
# define WPP_LOGPSID(_value)  WPP_LOGPAIR( WPP_GetLengthSid(_value), (_value) )
# else
# define WPP_LOGPSID(_value)  WPP_LOGPAIR( (_value)? (WPP_IsValidSid(_value)? \
                                                                        WPP_GetLengthSid(_value):5):5, \
                                                                        (_value)? (WPP_IsValidSid(_value)?\
                                                                        (_value):"NULL"):"NULL")
#endif
#endif

#if !defined(WPP_LOGCSTR)
# define WPP_LOGCSTR(_x) \
    WPP_LOGPAIR( sizeof((_x).Length), &(_x).Length ) WPP_LOGPAIR( (_x).Length, (_x).Buffer )
#endif

#if !defined(WPP_LOGUSTR)
# define WPP_LOGUSTR(_x) \
    WPP_LOGPAIR( sizeof((_x).Length), &(_x).Length ) WPP_LOGPAIR( (_x).Length, (_x).Buffer )
#endif

#if !defined(WPP_LOGPUSTR)
#if !defined(WPP_CHECK_FOR_NULL_STRING)
# define WPP_LOGPUSTR(_x) WPP_LOGUSTR(*(_x))
#else
# define WPP_LOGPUSTR(_x) WPP_LOGPAIR( sizeof(USHORT), (_x)?&(_x)->Length:L"\x08" ) \
                          WPP_LOGPAIR( (_x)?(_x)->Length:0x08, (_x)?(_x)->Buffer:L"NULL" )
#endif
#endif

#if !defined(WPP_LOGPCSTR)
#if !defined(WPP_CHECK_FOR_NULL_STRING)
# define WPP_LOGPCSTR(_x) WPP_LOGCSTR(*(_x))
#else
# define WPP_LOGPCSTR(_x) WPP_LOGPAIR( sizeof(USHORT), (_x)?&(_x)->Length:L"\x04" ) \
                          WPP_LOGPAIR( (_x)?(_x)->Length:0x04, (_x)?(_x)->Buffer:"NULL" )
#endif
#endif

#if !defined(WPP_LOGSTDSTR)
#define WPP_LOGSTDSTR(_value)  WPP_LOGPAIR( (_value).size()+1, (_value).c_str() )
#endif

#endif  //  #ifndef WPP_ALREADY_INCLUDED

#if !defined(WPP_CHECK_INIT)
# define WPP_CHECK_INIT (WPP_CB != (WPP_CB_TYPE*)&WPP_CB) && 
#endif


#ifndef WPP_SF_s_def
#       define WPP_SF_s_def
WPP_INLINE void WPP_SF_s(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, const char* _a1)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGASTR(_a1)  0); }
#endif  // #ifndef WPP_SF_s_def
#ifndef WPP_SF_sD_def
#       define WPP_SF_sD_def
WPP_INLINE void WPP_SF_sD(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, const char* _a1, unsigned int _a2)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(unsigned int,_a2)  0); }
#endif  // #ifndef WPP_SF_sD_def
#ifndef WPP_SF_sDD_def
#       define WPP_SF_sDD_def
WPP_INLINE void WPP_SF_sDD(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, const char* _a1, unsigned int _a2, unsigned int _a3)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(unsigned int,_a2) WPP_LOGTYPEVAL(unsigned int,_a3)  0); }
#endif  // #ifndef WPP_SF_sDD_def
#ifndef WPP_SF_sDDDDd_def
#       define WPP_SF_sDDDDd_def
WPP_INLINE void WPP_SF_sDDDDd(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, const char* _a1, unsigned int _a2, unsigned int _a3, unsigned int _a4, unsigned int _a5, signed int _a6)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(unsigned int,_a2) WPP_LOGTYPEVAL(unsigned int,_a3) WPP_LOGTYPEVAL(unsigned int,_a4) WPP_LOGTYPEVAL(unsigned int,_a5) WPP_LOGTYPEVAL(signed int,_a6)  0); }
#endif  // #ifndef WPP_SF_sDDDDd_def
#ifndef WPP_SF_sDDd_def
#       define WPP_SF_sDDd_def
WPP_INLINE void WPP_SF_sDDd(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, const char* _a1, unsigned int _a2, unsigned int _a3, signed int _a4)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(unsigned int,_a2) WPP_LOGTYPEVAL(unsigned int,_a3) WPP_LOGTYPEVAL(signed int,_a4)  0); }
#endif  // #ifndef WPP_SF_sDDd_def
#ifndef WPP_SF_sDDq_def
#       define WPP_SF_sDDq_def
WPP_INLINE void WPP_SF_sDDq(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, const char* _a1, unsigned int _a2, unsigned int _a3, const void* _a4)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(unsigned int,_a2) WPP_LOGTYPEVAL(unsigned int,_a3) WPP_LOGTYPEVAL(const void*,_a4)  0); }
#endif  // #ifndef WPP_SF_sDDq_def
#ifndef WPP_SF_sDDqD_def
#       define WPP_SF_sDDqD_def
WPP_INLINE void WPP_SF_sDDqD(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, const char* _a1, unsigned int _a2, unsigned int _a3, const void* _a4, unsigned int _a5)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(unsigned int,_a2) WPP_LOGTYPEVAL(unsigned int,_a3) WPP_LOGTYPEVAL(const void*,_a4) WPP_LOGTYPEVAL(unsigned int,_a5)  0); }
#endif  // #ifndef WPP_SF_sDDqD_def
#ifndef WPP_SF_sDd_def
#       define WPP_SF_sDd_def
WPP_INLINE void WPP_SF_sDd(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, const char* _a1, unsigned int _a2, signed int _a3)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(unsigned int,_a2) WPP_LOGTYPEVAL(signed int,_a3)  0); }
#endif  // #ifndef WPP_SF_sDd_def
#ifndef WPP_SF_sDq_def
#       define WPP_SF_sDq_def
WPP_INLINE void WPP_SF_sDq(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, const char* _a1, unsigned int _a2, const void* _a3)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(unsigned int,_a2) WPP_LOGTYPEVAL(const void*,_a3)  0); }
#endif  // #ifndef WPP_SF_sDq_def
#ifndef WPP_SF_sDqD_def
#       define WPP_SF_sDqD_def
WPP_INLINE void WPP_SF_sDqD(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, const char* _a1, unsigned int _a2, const void* _a3, unsigned int _a4)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(unsigned int,_a2) WPP_LOGTYPEVAL(const void*,_a3) WPP_LOGTYPEVAL(unsigned int,_a4)  0); }
#endif  // #ifndef WPP_SF_sDqD_def
#ifndef WPP_SF_sDqDDd_def
#       define WPP_SF_sDqDDd_def
WPP_INLINE void WPP_SF_sDqDDd(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, const char* _a1, unsigned int _a2, const void* _a3, unsigned int _a4, unsigned int _a5, signed int _a6)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(unsigned int,_a2) WPP_LOGTYPEVAL(const void*,_a3) WPP_LOGTYPEVAL(unsigned int,_a4) WPP_LOGTYPEVAL(unsigned int,_a5) WPP_LOGTYPEVAL(signed int,_a6)  0); }
#endif  // #ifndef WPP_SF_sDqDDd_def
#ifndef WPP_SF_sDqd_def
#       define WPP_SF_sDqd_def
WPP_INLINE void WPP_SF_sDqd(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, const char* _a1, unsigned int _a2, const void* _a3, signed int _a4)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(unsigned int,_a2) WPP_LOGTYPEVAL(const void*,_a3) WPP_LOGTYPEVAL(signed int,_a4)  0); }
#endif  // #ifndef WPP_SF_sDqd_def
#ifndef WPP_SF_sd_def
#       define WPP_SF_sd_def
WPP_INLINE void WPP_SF_sd(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, const char* _a1, signed int _a2)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(signed int,_a2)  0); }
#endif  // #ifndef WPP_SF_sd_def
#ifndef WPP_SF_sq_def
#       define WPP_SF_sq_def
WPP_INLINE void WPP_SF_sq(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, const char* _a1, const void* _a2)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(const void*,_a2)  0); }
#endif  // #ifndef WPP_SF_sq_def
#ifndef WPP_SF_sqD_def
#       define WPP_SF_sqD_def
WPP_INLINE void WPP_SF_sqD(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, const char* _a1, const void* _a2, unsigned int _a3)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(const void*,_a2) WPP_LOGTYPEVAL(unsigned int,_a3)  0); }
#endif  // #ifndef WPP_SF_sqD_def
#ifndef WPP_SF_sqDD_def
#       define WPP_SF_sqDD_def
WPP_INLINE void WPP_SF_sqDD(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, const char* _a1, const void* _a2, unsigned int _a3, unsigned int _a4)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(const void*,_a2) WPP_LOGTYPEVAL(unsigned int,_a3) WPP_LOGTYPEVAL(unsigned int,_a4)  0); }
#endif  // #ifndef WPP_SF_sqDD_def
#ifndef WPP_SF_sqDDD_def
#       define WPP_SF_sqDDD_def
WPP_INLINE void WPP_SF_sqDDD(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, const char* _a1, const void* _a2, unsigned int _a3, unsigned int _a4, unsigned int _a5)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(const void*,_a2) WPP_LOGTYPEVAL(unsigned int,_a3) WPP_LOGTYPEVAL(unsigned int,_a4) WPP_LOGTYPEVAL(unsigned int,_a5)  0); }
#endif  // #ifndef WPP_SF_sqDDD_def
#ifndef WPP_SF_sqDDDD_def
#       define WPP_SF_sqDDDD_def
WPP_INLINE void WPP_SF_sqDDDD(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, const char* _a1, const void* _a2, unsigned int _a3, unsigned int _a4, unsigned int _a5, unsigned int _a6)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(const void*,_a2) WPP_LOGTYPEVAL(unsigned int,_a3) WPP_LOGTYPEVAL(unsigned int,_a4) WPP_LOGTYPEVAL(unsigned int,_a5) WPP_LOGTYPEVAL(unsigned int,_a6)  0); }
#endif  // #ifndef WPP_SF_sqDDDD_def
#ifndef WPP_SF_sqd_def
#       define WPP_SF_sqd_def
WPP_INLINE void WPP_SF_sqd(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, const char* _a1, const void* _a2, signed int _a3)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(const void*,_a2) WPP_LOGTYPEVAL(signed int,_a3)  0); }
#endif  // #ifndef WPP_SF_sqd_def
#ifndef WPP_SF_sqq_def
#       define WPP_SF_sqq_def
WPP_INLINE void WPP_SF_sqq(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, const char* _a1, const void* _a2, const void* _a3)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(const void*,_a2) WPP_LOGTYPEVAL(const void*,_a3)  0); }
#endif  // #ifndef WPP_SF_sqq_def
#ifndef WPP_SF_sqqD_def
#       define WPP_SF_sqqD_def
WPP_INLINE void WPP_SF_sqqD(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, const char* _a1, const void* _a2, const void* _a3, unsigned int _a4)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(const void*,_a2) WPP_LOGTYPEVAL(const void*,_a3) WPP_LOGTYPEVAL(unsigned int,_a4)  0); }
#endif  // #ifndef WPP_SF_sqqD_def
#ifndef WPP_SF_sqqDd_def
#       define WPP_SF_sqqDd_def
WPP_INLINE void WPP_SF_sqqDd(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, const char* _a1, const void* _a2, const void* _a3, unsigned int _a4, signed int _a5)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(const void*,_a2) WPP_LOGTYPEVAL(const void*,_a3) WPP_LOGTYPEVAL(unsigned int,_a4) WPP_LOGTYPEVAL(signed int,_a5)  0); }
#endif  // #ifndef WPP_SF_sqqDd_def
#ifndef WPP_SF_sqqd_def
#       define WPP_SF_sqqd_def
WPP_INLINE void WPP_SF_sqqd(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, const char* _a1, const void* _a2, const void* _a3, signed int _a4)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(const void*,_a2) WPP_LOGTYPEVAL(const void*,_a3) WPP_LOGTYPEVAL(signed int,_a4)  0); }
#endif  // #ifndef WPP_SF_sqqd_def
#ifndef WPP_POST
#  define WPP_POST()
#endif

#ifndef WPP_PRE
#  define WPP_PRE()
#endif

#ifndef WPP_LOG_ALWAYS
#  define WPP_LOG_ALWAYS(...)
#endif      

#ifdef WPP_DEBUG
#else
#endif


#ifdef WPP_DEBUG
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c1018(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c1018) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sq(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 50,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c1032(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c1032) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 51,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c1052(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c1052) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sDq(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 52,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c1077(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c1077) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sq(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 53,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c1102(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c1102) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sq(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 54,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c1136(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c1136) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sq(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 55,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c115(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c115) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 13,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c1169(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c1169) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 56,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c1181(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c1181) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 57,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c1190(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c1190) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sqD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 58,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c1211(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c1211) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sq(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 59,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c1238(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c1238) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sDq(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 60,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c1270(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c1270) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sDDd(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 61,WPP_LOCAL_TraceGuids+0 WPP_R0123 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c1287(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c1287) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sd(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 62,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c129(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c129) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sd(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 14,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c1307(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c1307) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sDDd(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 63,WPP_LOCAL_TraceGuids+0 WPP_R0123 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c1354(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c1354) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sDDDDd(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 64,WPP_LOCAL_TraceGuids+0 WPP_R012345 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c1363(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c1363) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 65,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c1375(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c1375) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 66,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c1387(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c1387) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 67,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c1399(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c1399) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 68,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c1411(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c1411) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 69,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c1430(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c1430) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sd(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 70,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c1446(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c1446) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sd(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 71,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c1471(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c1471) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sDd(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 72,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c1481(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c1481) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sDd(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 73,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c1510(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c1510) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sq(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 74,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c1527(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c1527) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 75,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c1542(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c1542) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 76,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c1571(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c1571) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 77,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c1580(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c1580) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 78,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c1592(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c1592) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 79,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c1605(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c1605) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 80,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c1617(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c1617) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 81,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c162(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c162) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 15,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c1631(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c1631) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sqD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 82,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c1658(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c1658) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 83,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c1720(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c1720) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 84,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c1730(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c1730) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sqD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 85,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c1742(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c1742) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 86,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c1757(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c1757) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 87,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c1769(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c1769) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 88,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c1778(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c1778) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 89,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c1792(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c1792) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 90,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c1809(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c1809) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 91,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c1818(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c1818) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 92,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c1830(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c1830) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 93,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c1842(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c1842) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 94,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c1866(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c1866) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 95,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c1882(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c1882) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 96,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c1898(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c1898) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 97,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c190(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c190) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sd(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 16,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c1909(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c1909) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 98,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c1931(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c1931) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sDD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 99,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c1958(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c1958) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sd(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 100,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c1967(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c1967) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sd(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 101,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c1977(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c1977) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 102,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c1996(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c1996) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 103,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c2024(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c2024) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 104,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c2058(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c2058) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sqqD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 105,WPP_LOCAL_TraceGuids+0 WPP_R0123 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c2074(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c2074) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 106,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c2099(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c2099) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sd(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 107,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c2140(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c2140) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 108,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c2171(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c2171) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sqqD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 109,WPP_LOCAL_TraceGuids+0 WPP_R0123 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c2205(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c2205) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 110,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c2214(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c2214) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 111,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c222(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c222) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sd(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 17,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c2223(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c2223) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 112,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c2245(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c2245) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 113,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c2256(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c2256) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 114,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c2278(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c2278) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 115,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c2296(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c2296) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 116,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c2313(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c2313) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 117,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c2341(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c2341) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 118,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c2369(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c2369) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sDqd(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 119,WPP_LOCAL_TraceGuids+0 WPP_R0123 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c2379(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c2379) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sd(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 120,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c238(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c238) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 18,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c2398(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c2398) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 121,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c2416(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c2416) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sDqd(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 122,WPP_LOCAL_TraceGuids+0 WPP_R0123 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c2431(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c2431) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sq(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 123,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c2464(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c2464) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sq(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 124,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c2495(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c2495) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sDDq(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 125,WPP_LOCAL_TraceGuids+0 WPP_R0123 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c2504(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c2504) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sqD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 126,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c2525(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c2525) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 127,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c2534(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c2534) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 128,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c2550(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c2550) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 129,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c2564(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c2564) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 130,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c2586(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c2586) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 131,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c2635(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c2635) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sqD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 132,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c2649(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c2649) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sqD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 133,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c266(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c266) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 19,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c2663(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c2663) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 134,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c2676(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c2676) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 135,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c2687(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c2687) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 136,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c2700(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c2700) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 137,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c2722(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c2722) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 138,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c2753(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c2753) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sDD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 139,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c2778(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c2778) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 140,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c282(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c282) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sDq(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 20,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c2820(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c2820) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sd(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 141,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c2848(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c2848) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sDDqD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 142,WPP_LOCAL_TraceGuids+0 WPP_R01234 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c293(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c293) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sq(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 21,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c2959(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c2959) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sDqDDd(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 143,WPP_LOCAL_TraceGuids+0 WPP_R012345 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c2972(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c2972) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 144,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c2999(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c2999) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 145,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c3018(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c3018) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 146,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c302(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c302) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sqD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 22,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c3039(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c3039) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 147,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c3048(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c3048) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 148,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c3060(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c3060) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 149,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c3093(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c3093) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 150,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c3110(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c3110) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 151,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c3134(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c3134) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 152,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c3151(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c3151) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sq(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 153,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c316(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c316) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sDq(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 23,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c3167(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c3167) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sqDD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 154,WPP_LOCAL_TraceGuids+0 WPP_R0123 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c3183(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c3183) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sDq(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 155,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c3206(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c3206) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sqD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 156,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c3227(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c3227) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 157,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c3237(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c3237) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 158,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c3253(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c3253) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 159,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c3281(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c3281) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sqDDD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 160,WPP_LOCAL_TraceGuids+0 WPP_R01234 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c3314(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c3314) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sqD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 161,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c3325(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c3325) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sqD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 162,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c3341(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c3341) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sDDq(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 163,WPP_LOCAL_TraceGuids+0 WPP_R0123 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c3357(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c3357) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sqDDDD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 164,WPP_LOCAL_TraceGuids+0 WPP_R012345 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c337(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c337) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sq(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 24,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c3383(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c3383) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sqDD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 165,WPP_LOCAL_TraceGuids+0 WPP_R0123 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c3424(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c3424) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sDDq(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 166,WPP_LOCAL_TraceGuids+0 WPP_R0123 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c3440(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c3440) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sqDDD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 167,WPP_LOCAL_TraceGuids+0 WPP_R01234 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c3469(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c3469) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sqDDD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 168,WPP_LOCAL_TraceGuids+0 WPP_R01234 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c3505(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c3505) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sDDq(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 169,WPP_LOCAL_TraceGuids+0 WPP_R0123 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c352(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c352) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sDq(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 25,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c3521(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c3521) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sqDDDD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 170,WPP_LOCAL_TraceGuids+0 WPP_R012345 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c3538(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c3538) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 171,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c3577(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c3577) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sDD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 172,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c3595(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c3595) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 173,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c3634(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c3634) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sDD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 174,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c3670(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c3670) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 175,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c3684(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c3684) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 176,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c3698(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c3698) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 177,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c3712(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c3712) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 178,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c3746(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c3746) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sqq(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 179,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c3769(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c3769) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sqqDd(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 180,WPP_LOCAL_TraceGuids+0 WPP_R01234 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c3786(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c3786) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sqqd(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 181,WPP_LOCAL_TraceGuids+0 WPP_R0123 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c379(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c379) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 26,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c3821(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c3821) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 182,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c3841(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c3841) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 183,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c3851(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c3851) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 184,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c3862(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c3862) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 185,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c3874(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c3874) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 186,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c3889(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c3889) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 187,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c3923(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c3923) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 188,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c3978(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c3978) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 189,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c423(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c423) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 27,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c447(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c447) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sqD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 28,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c459(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c459) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sDq(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 29,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c481(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c481) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sq(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 30,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c511(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c511) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sq(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 31,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c524(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c524) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sDD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 32,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c558(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c558) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sq(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 33,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c581(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c581) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sqD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 34,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c606(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c606) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sqd(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 35,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c642(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c642) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sqD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 36,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c673(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c673) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sqq(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 37,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c711(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c711) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sDqD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 38,WPP_LOCAL_TraceGuids+0 WPP_R0123 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c72(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c72) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sq(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 10,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c740(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c740) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 39,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c769(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c769) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 40,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c782(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c782) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 41,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c805(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c805) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sq(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 42,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c825(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c825) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sDq(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 43,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c852(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c852) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 44,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c877(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c877) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 45,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c88(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c88) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sd(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 11,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c902(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c902) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 46,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c930(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c930) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 47,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c951(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c951) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 48,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c98(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c98) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 12,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c988(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL),MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c988) \
            (( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)? \
                WPP_SF_sq(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 49,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS), \
                WPP_DEBUG(MSGARGS),1:0 \
             )) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#else
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c1018(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c1018) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sq(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 50,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c1032(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c1032) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 51,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c1052(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c1052) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sDq(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 52,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c1077(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c1077) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sq(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 53,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c1102(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c1102) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sq(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 54,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c1136(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c1136) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sq(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 55,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c115(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c115) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 13,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c1169(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c1169) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 56,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c1181(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c1181) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 57,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c1190(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c1190) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sqD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 58,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c1211(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c1211) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sq(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 59,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c1238(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c1238) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sDq(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 60,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c1270(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c1270) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sDDd(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 61,WPP_LOCAL_TraceGuids+0 WPP_R0123 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c1287(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c1287) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sd(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 62,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c129(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c129) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sd(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 14,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c1307(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c1307) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sDDd(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 63,WPP_LOCAL_TraceGuids+0 WPP_R0123 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c1354(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c1354) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sDDDDd(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 64,WPP_LOCAL_TraceGuids+0 WPP_R012345 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c1363(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c1363) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 65,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c1375(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c1375) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 66,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c1387(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c1387) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 67,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c1399(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c1399) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 68,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c1411(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c1411) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 69,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c1430(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c1430) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sd(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 70,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c1446(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c1446) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sd(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 71,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c1471(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c1471) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sDd(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 72,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c1481(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c1481) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sDd(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 73,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c1510(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c1510) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sq(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 74,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c1527(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c1527) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 75,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c1542(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c1542) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 76,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c1571(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c1571) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 77,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c1580(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c1580) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 78,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c1592(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c1592) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 79,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c1605(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c1605) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 80,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c1617(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c1617) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 81,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c162(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c162) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 15,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c1631(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c1631) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sqD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 82,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c1658(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c1658) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 83,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c1720(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c1720) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 84,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c1730(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c1730) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sqD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 85,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c1742(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c1742) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 86,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c1757(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c1757) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 87,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c1769(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c1769) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 88,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c1778(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c1778) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 89,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c1792(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c1792) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 90,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c1809(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c1809) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 91,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c1818(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c1818) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 92,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c1830(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c1830) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 93,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c1842(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c1842) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 94,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c1866(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c1866) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 95,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c1882(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c1882) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 96,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c1898(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c1898) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 97,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c190(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c190) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sd(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 16,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c1909(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c1909) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 98,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c1931(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c1931) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sDD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 99,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c1958(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c1958) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sd(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 100,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c1967(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c1967) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sd(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 101,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c1977(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c1977) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 102,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c1996(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c1996) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 103,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c2024(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c2024) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 104,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c2058(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c2058) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sqqD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 105,WPP_LOCAL_TraceGuids+0 WPP_R0123 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c2074(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c2074) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 106,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c2099(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c2099) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sd(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 107,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c2140(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c2140) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 108,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c2171(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c2171) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sqqD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 109,WPP_LOCAL_TraceGuids+0 WPP_R0123 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c2205(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c2205) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 110,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c2214(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c2214) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 111,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c222(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c222) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sd(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 17,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c2223(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c2223) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 112,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c2245(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c2245) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 113,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c2256(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c2256) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 114,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c2278(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c2278) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 115,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c2296(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c2296) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 116,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c2313(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c2313) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 117,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c2341(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c2341) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 118,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c2369(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c2369) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sDqd(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 119,WPP_LOCAL_TraceGuids+0 WPP_R0123 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c2379(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c2379) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sd(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 120,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c238(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c238) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 18,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c2398(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c2398) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 121,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c2416(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c2416) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sDqd(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 122,WPP_LOCAL_TraceGuids+0 WPP_R0123 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c2431(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c2431) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sq(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 123,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c2464(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c2464) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sq(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 124,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c2495(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c2495) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sDDq(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 125,WPP_LOCAL_TraceGuids+0 WPP_R0123 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c2504(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c2504) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sqD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 126,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c2525(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c2525) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 127,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c2534(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c2534) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 128,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c2550(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c2550) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 129,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c2564(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c2564) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 130,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c2586(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c2586) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 131,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c2635(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c2635) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sqD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 132,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c2649(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c2649) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sqD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 133,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c266(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c266) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 19,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c2663(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c2663) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 134,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c2676(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c2676) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 135,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c2687(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c2687) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 136,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c2700(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c2700) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 137,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c2722(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c2722) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 138,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c2753(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c2753) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sDD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 139,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c2778(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c2778) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 140,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c282(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c282) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sDq(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 20,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c2820(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c2820) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sd(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 141,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c2848(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c2848) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sDDqD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 142,WPP_LOCAL_TraceGuids+0 WPP_R01234 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c293(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c293) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sq(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 21,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c2959(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c2959) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sDqDDd(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 143,WPP_LOCAL_TraceGuids+0 WPP_R012345 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c2972(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c2972) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 144,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c2999(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c2999) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 145,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c3018(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c3018) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 146,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c302(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c302) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sqD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 22,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c3039(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c3039) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 147,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c3048(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c3048) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 148,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c3060(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c3060) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 149,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c3093(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c3093) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 150,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c3110(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c3110) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 151,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c3134(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c3134) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 152,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c3151(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c3151) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sq(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 153,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c316(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c316) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sDq(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 23,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c3167(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c3167) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sqDD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 154,WPP_LOCAL_TraceGuids+0 WPP_R0123 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c3183(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c3183) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sDq(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 155,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c3206(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c3206) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sqD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 156,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c3227(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c3227) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 157,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c3237(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c3237) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 158,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c3253(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c3253) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 159,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c3281(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c3281) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sqDDD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 160,WPP_LOCAL_TraceGuids+0 WPP_R01234 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c3314(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c3314) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sqD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 161,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c3325(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c3325) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sqD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 162,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c3341(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c3341) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sDDq(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 163,WPP_LOCAL_TraceGuids+0 WPP_R0123 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c3357(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c3357) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sqDDDD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 164,WPP_LOCAL_TraceGuids+0 WPP_R012345 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c337(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c337) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sq(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 24,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c3383(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c3383) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sqDD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 165,WPP_LOCAL_TraceGuids+0 WPP_R0123 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c3424(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c3424) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sDDq(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 166,WPP_LOCAL_TraceGuids+0 WPP_R0123 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c3440(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c3440) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sqDDD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 167,WPP_LOCAL_TraceGuids+0 WPP_R01234 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c3469(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c3469) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sqDDD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 168,WPP_LOCAL_TraceGuids+0 WPP_R01234 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c3505(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c3505) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sDDq(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 169,WPP_LOCAL_TraceGuids+0 WPP_R0123 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c352(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c352) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sDq(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 25,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c3521(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c3521) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sqDDDD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 170,WPP_LOCAL_TraceGuids+0 WPP_R012345 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c3538(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c3538) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 171,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c3577(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c3577) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sDD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 172,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c3595(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c3595) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 173,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c3634(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c3634) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sDD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 174,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c3670(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c3670) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 175,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c3684(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c3684) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 176,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c3698(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c3698) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 177,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c3712(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c3712) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 178,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c3746(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c3746) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sqq(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 179,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c3769(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c3769) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sqqDd(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 180,WPP_LOCAL_TraceGuids+0 WPP_R01234 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c3786(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c3786) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sqqd(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 181,WPP_LOCAL_TraceGuids+0 WPP_R0123 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c379(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c379) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 26,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c3821(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c3821) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 182,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c3841(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c3841) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 183,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c3851(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c3851) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 184,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c3862(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c3862) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 185,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c3874(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c3874) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 186,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c3889(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c3889) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 187,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c3923(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c3923) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 188,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c3978(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c3978) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 189,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c423(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c423) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 27,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c447(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c447) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sqD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 28,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c459(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c459) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sDq(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 29,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c481(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c481) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sq(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 30,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c511(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c511) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sq(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 31,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c524(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c524) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sDD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 32,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c558(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c558) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sq(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 33,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c581(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c581) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sqD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 34,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c606(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c606) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sqd(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 35,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c642(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c642) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sqD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 36,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c673(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c673) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sqq(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 37,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c711(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c711) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sDqD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 38,WPP_LOCAL_TraceGuids+0 WPP_R0123 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c72(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c72) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sq(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 10,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c740(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c740) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 39,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c769(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c769) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 40,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c782(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c782) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 41,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c805(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c805) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sq(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 42,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c825(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c825) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sDq(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 43,WPP_LOCAL_TraceGuids+0 WPP_R012 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c852(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c852) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 44,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c877(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c877) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 45,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c88(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c88) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sd(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 11,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c902(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c902) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 46,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c930(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c930) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_s(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 47,WPP_LOCAL_TraceGuids+0 WPP_R0 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c951(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c951) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 48,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c98(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c98) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sD(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 12,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_QCPWR_c988(FLAG, LEVEL,  MSGARGS) \
            WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(FLAG, LEVEL), MSGARGS)\
            WPP_FLAG_LEVEL_PRE(FLAG, LEVEL) \
            WPP_ANNOTATE(QCPWR_c988) \
            ( \
                WPP_CHECK_INIT  WPP_FLAG_LEVEL_ENABLED(FLAG, LEVEL)?\
                WPP_SF_sq(WPP_FLAG_LEVEL_LOGGER(FLAG, LEVEL) 49,WPP_LOCAL_TraceGuids+0 WPP_R01 MSGARGS),\
                1:0 \
             ) \
             WPP_FLAG_LEVEL_POST(FLAG, LEVEL)
#endif



#if defined(__cplusplus)
};
#endif

#endif

//
// Tracing Macro name redefinition
//

// NoMsgArgs

#undef DbgPrint
#define DbgPrint WPP_(CALL)
#undef DoDebugTrace
#define DoDebugTrace WPP_(CALL)
#undef DoTraceMessage
#define DoTraceMessage WPP_(CALL)
#undef KdPrint
#define KdPrint(ARGS) WPP_(CALL) ARGS
// MsgArgs

#undef QCSER_DbgPrint
#define QCSER_DbgPrint(FLAG, LEVEL,  MSGARGS) WPP_(CALL)(FLAG, LEVEL,  MSGARGS)
#undef QCSER_DbgPrintG
#define QCSER_DbgPrintG(GFLAG, GLEVEL,  MSGARGS) WPP_(CALL)(GFLAG, GLEVEL,  MSGARGS)
#undef QCSER_DbgPrintX
#define QCSER_DbgPrintX(X, XFLAG, XLEVEL,  MSGARGS) WPP_(CALL)(X, XFLAG, XLEVEL,  MSGARGS)
#undef  WPP_R
#define WPP_R(MSG) 
#undef  WPP_R0
#define WPP_R0(MSG, a0) , a0
#undef  WPP_R01
#define WPP_R01(MSG, a0, a1) , a0, a1
#undef  WPP_R012
#define WPP_R012(MSG, a0, a1, a2) , a0, a1, a2
#undef  WPP_R0123
#define WPP_R0123(MSG, a0, a1, a2, a3) , a0, a1, a2, a3
#undef  WPP_R01234
#define WPP_R01234(MSG, a0, a1, a2, a3, a4) , a0, a1, a2, a3, a4
#undef  WPP_R012345
#define WPP_R012345(MSG, a0, a1, a2, a3, a4, a5) , a0, a1, a2, a3, a4, a5
#undef  WPP_R0123456
#define WPP_R0123456(MSG, a0, a1, a2, a3, a4, a5, a6) , a0, a1, a2, a3, a4, a5, a6
#undef  WPP_R01234567
#define WPP_R01234567(MSG, a0, a1, a2, a3, a4, a5, a6, a7) , a0, a1, a2, a3, a4, a5, a6, a7
#undef  WPP_R012345678
#define WPP_R012345678(MSG, a0, a1, a2, a3, a4, a5, a6, a7, a8) , a0, a1, a2, a3, a4, a5, a6, a7, a8
#undef  WPP_R0123456789
#define WPP_R0123456789(MSG, a0, a1, a2, a3, a4, a5, a6, a7, a8, a9) , a0, a1, a2, a3, a4, a5, a6, a7, a8, a9
#undef  WPP_R0123456789a
#define WPP_R0123456789a(MSG, a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10) , a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10
#undef  WPP_R0123456789ab
#define WPP_R0123456789ab(MSG, a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11) , a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11
#undef  WPP_R0123456789abc
#define WPP_R0123456789abc(MSG, a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12) , a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12
#undef  WPP_R0123456789abcd
#define WPP_R0123456789abcd(MSG, a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13) , a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13
#undef  WPP_R0a0b0c0d0e0f000102030405060708090a0b
#define WPP_R0a0b0c0d0e0f000102030405060708090a0b(MSG, a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17) , a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17
